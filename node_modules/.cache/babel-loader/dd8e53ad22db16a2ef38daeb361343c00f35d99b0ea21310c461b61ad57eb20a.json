{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _classPrivateFieldInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _classPrivateFieldGet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldGet2.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BrowsingContextStorage = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\n/** Container class for browsing contexts. */\nvar _contexts = /*#__PURE__*/new WeakMap();\nclass BrowsingContextStorage {\n  constructor() {\n    /** Map from context ID to context implementation. */\n    _classPrivateFieldInitSpec(this, _contexts, new Map());\n  }\n  /** Gets all top-level contexts, i.e. those with no parent. */\n  getTopLevelContexts() {\n    return this.getAllContexts().filter(context => context.isTopLevelContext());\n  }\n  /** Gets all contexts. */\n  getAllContexts() {\n    return Array.from(_classPrivateFieldGet(_contexts, this).values());\n  }\n  /** Deletes the context with the given ID. */\n  deleteContextById(id) {\n    _classPrivateFieldGet(_contexts, this).delete(id);\n  }\n  /** Deletes the given context. */\n  deleteContext(context) {\n    _classPrivateFieldGet(_contexts, this).delete(context.id);\n  }\n  /** Tracks the given context. */\n  addContext(context) {\n    _classPrivateFieldGet(_contexts, this).set(context.id, context);\n  }\n  /** Returns true whether there is an existing context with the given ID. */\n  hasContext(id) {\n    return _classPrivateFieldGet(_contexts, this).has(id);\n  }\n  /** Gets the context with the given ID, if any. */\n  findContext(id) {\n    return _classPrivateFieldGet(_contexts, this).get(id);\n  }\n  /** Returns the top-level context ID of the given context, if any. */\n  findTopLevelContextId(id) {\n    if (id === null) {\n      return null;\n    }\n    const maybeContext = this.findContext(id);\n    const parentId = maybeContext?.parentId ?? null;\n    if (parentId === null) {\n      return id;\n    }\n    return this.findTopLevelContextId(parentId);\n  }\n  findContextBySession(sessionId) {\n    for (const context of _classPrivateFieldGet(_contexts, this).values()) {\n      if (context.cdpTarget.cdpSessionId === sessionId) {\n        return context;\n      }\n    }\n    return;\n  }\n  /** Gets the context with the given ID, if any, otherwise throws. */\n  getContext(id) {\n    const result = this.findContext(id);\n    if (result === undefined) {\n      throw new protocol_js_1.NoSuchFrameException(`Context ${id} not found`);\n    }\n    return result;\n  }\n  verifyTopLevelContextsList(contexts) {\n    const foundContexts = new Set();\n    if (!contexts) {\n      return foundContexts;\n    }\n    for (const contextId of contexts) {\n      const context = this.getContext(contextId);\n      if (context.isTopLevelContext()) {\n        foundContexts.add(context);\n      } else {\n        throw new protocol_js_1.InvalidArgumentException(`Non top-level context '${contextId}' given.`);\n      }\n    }\n    return foundContexts;\n  }\n}\nexports.BrowsingContextStorage = BrowsingContextStorage;","map":{"version":3,"names":["_classPrivateFieldInitSpec","require","default","_classPrivateFieldGet","protocol_js_1","_contexts","WeakMap","BrowsingContextStorage","constructor","Map","getTopLevelContexts","getAllContexts","filter","context","isTopLevelContext","Array","from","values","deleteContextById","id","delete","deleteContext","addContext","set","hasContext","has","findContext","get","findTopLevelContextId","maybeContext","parentId","findContextBySession","sessionId","cdpTarget","cdpSessionId","getContext","result","undefined","NoSuchFrameException","verifyTopLevelContextsList","contexts","foundContexts","Set","contextId","add","InvalidArgumentException","exports"],"sources":["../../../../../src/bidiMapper/modules/context/BrowsingContextStorage.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}