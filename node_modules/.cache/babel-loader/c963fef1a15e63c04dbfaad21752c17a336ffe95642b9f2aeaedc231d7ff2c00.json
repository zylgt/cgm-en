{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\n/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { _connectToBiDiBrowser } from '../bidi/BrowserConnector.js';\nimport { _connectToCdpBrowser } from '../cdp/BrowserConnector.js';\nimport { isNode } from '../environment.js';\nimport { assert } from '../util/assert.js';\nimport { isErrorLike } from '../util/ErrorLike.js';\nconst getWebSocketTransportClass = async () => {\n  return isNode ? (await import('../node/NodeWebSocketTransport.js')).NodeWebSocketTransport : (await import('../common/BrowserWebSocketTransport.js')).BrowserWebSocketTransport;\n};\n/**\n * Users should never call this directly; it's called when calling\n * `puppeteer.connect`. This method attaches Puppeteer to an existing browser instance.\n *\n * @internal\n */\nexport async function _connectToBrowser(options) {\n  const {\n    connectionTransport,\n    endpointUrl\n  } = await getConnectionTransport(options);\n  if (options.protocol === 'webDriverBiDi') {\n    const bidiBrowser = await _connectToBiDiBrowser(connectionTransport, endpointUrl, options);\n    return bidiBrowser;\n  } else {\n    const cdpBrowser = await _connectToCdpBrowser(connectionTransport, endpointUrl, options);\n    return cdpBrowser;\n  }\n}\n/**\n * Establishes a websocket connection by given options and returns both transport and\n * endpoint url the transport is connected to.\n */\nasync function getConnectionTransport(options) {\n  const {\n    browserWSEndpoint,\n    browserURL,\n    transport,\n    headers = {}\n  } = options;\n  assert(Number(!!browserWSEndpoint) + Number(!!browserURL) + Number(!!transport) === 1, 'Exactly one of browserWSEndpoint, browserURL or transport must be passed to puppeteer.connect');\n  if (transport) {\n    return {\n      connectionTransport: transport,\n      endpointUrl: ''\n    };\n  } else if (browserWSEndpoint) {\n    const WebSocketClass = await getWebSocketTransportClass();\n    const connectionTransport = await WebSocketClass.create(browserWSEndpoint, headers);\n    return {\n      connectionTransport: connectionTransport,\n      endpointUrl: browserWSEndpoint\n    };\n  } else if (browserURL) {\n    const connectionURL = await getWSEndpoint(browserURL);\n    const WebSocketClass = await getWebSocketTransportClass();\n    const connectionTransport = await WebSocketClass.create(connectionURL);\n    return {\n      connectionTransport: connectionTransport,\n      endpointUrl: connectionURL\n    };\n  }\n  throw new Error('Invalid connection options');\n}\nasync function getWSEndpoint(browserURL) {\n  const endpointURL = new URL('/json/version', browserURL);\n  try {\n    const result = await globalThis.fetch(endpointURL.toString(), {\n      method: 'GET'\n    });\n    if (!result.ok) {\n      throw new Error(`HTTP ${result.statusText}`);\n    }\n    const data = await result.json();\n    return data.webSocketDebuggerUrl;\n  } catch (error) {\n    if (isErrorLike(error)) {\n      error.message = `Failed to fetch browser webSocket URL from ${endpointURL}: ` + error.message;\n    }\n    throw error;\n  }\n}","map":{"version":3,"names":["_connectToBiDiBrowser","_connectToCdpBrowser","isNode","assert","isErrorLike","getWebSocketTransportClass","NodeWebSocketTransport","BrowserWebSocketTransport","_connectToBrowser","options","connectionTransport","endpointUrl","getConnectionTransport","protocol","bidiBrowser","cdpBrowser","browserWSEndpoint","browserURL","transport","headers","Number","WebSocketClass","create","connectionURL","getWSEndpoint","Error","endpointURL","URL","result","globalThis","fetch","toString","method","ok","statusText","data","json","webSocketDebuggerUrl","error","message"],"sources":["../../../../src/common/BrowserConnector.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}