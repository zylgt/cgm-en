{"ast":null,"code":"import { openProcedure } from \"@/utils/monitoringApp\";\nimport { create } from '../api/api';\nexport default {\n  data() {\n    return {};\n  },\n  create() {},\n  mounted() {},\n  methods: {\n    tab() {\n      console.log(navigator);\n      const appUri = 'postmans://'; // 应用程序的地址(注册表应用名称)\n      //    window.protocolCheck(\n      //   appUri,\n      //   (fail) => {\n      //     console.log('fail', fail)\n      //     // 没有安装 弹窗显示 引导去下载\n      //    confirm('应用程序未安装，请下载并安装。')\n      //   },\n      //   (succ) => {\n      //     // 安装则直接打开\n      //     console.log('succ', succ)\n      //   }\n      // )\n      const timeoutDuration = 1000;\n      const openAppFailure = () => {\n        const res = confirm('应用程序未安装，请下载并安装。');\n      };\n      const openAppSuccess = () => {\n        console.log('成功打开本地应用程序');\n      };\n      openProcedure(appUri, openAppFailure, openAppSuccess, timeoutDuration);\n    }\n  }\n};","map":{"version":3,"names":["openProcedure","create","data","mounted","methods","tab","console","log","navigator","appUri","timeoutDuration","openAppFailure","res","confirm","openAppSuccess"],"sources":["src/views/test.vue"],"sourcesContent":["<template>\n    <div class='test' @click='tab'>\n        测试检测应用程序是否存在并且打开\n    </div>\n</template>\n<script>\nimport { openProcedure } from \"@/utils/monitoringApp\";\nimport { create } from '../api/api';\n\nexport default {\n    data(){\n        return{\n\n        }\n    },\n    create(){\n\n    },\n    mounted(){\n\n    },\n    methods:{\n       tab(){\n        console.log(navigator)\n            const appUri = 'postmans://'; // 应用程序的地址(注册表应用名称)\n          //    window.protocolCheck(\n          //   appUri,\n          //   (fail) => {\n          //     console.log('fail', fail)\n          //     // 没有安装 弹窗显示 引导去下载\n          //    confirm('应用程序未安装，请下载并安装。')\n          //   },\n          //   (succ) => {\n          //     // 安装则直接打开\n          //     console.log('succ', succ)\n          //   }\n          // )\n          const timeoutDuration = 1000;\n\n          const openAppFailure = () => {\n           \n            const res = confirm('应用程序未安装，请下载并安装。');\n            \n          };\n\n          const openAppSuccess = () => {\n            console.log('成功打开本地应用程序');\n          };\n\n          openProcedure(appUri, openAppFailure, openAppSuccess, timeoutDuration);\n       } \n    }\n}\n</script>"],"mappings":"AAMA,SAAAA,aAAA;AACA,SAAAC,MAAA;AAEA;EACAC,KAAA;IACA,QAEA;EACA;EACAD,OAAA,GAEA;EACAE,QAAA,GAEA;EACAC,OAAA;IACAC,IAAA;MACAC,OAAA,CAAAC,GAAA,CAAAC,SAAA;MACA,MAAAC,MAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,MAAAC,eAAA;MAEA,MAAAC,cAAA,GAAAA,CAAA;QAEA,MAAAC,GAAA,GAAAC,OAAA;MAEA;MAEA,MAAAC,cAAA,GAAAA,CAAA;QACAR,OAAA,CAAAC,GAAA;MACA;MAEAP,aAAA,CAAAS,MAAA,EAAAE,cAAA,EAAAG,cAAA,EAAAJ,eAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}