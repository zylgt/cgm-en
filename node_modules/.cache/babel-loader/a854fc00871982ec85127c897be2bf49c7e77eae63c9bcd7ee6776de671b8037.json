{"ast":null,"code":"import _defineProperty from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { debugError } from '../common/util.js';\nimport { assert } from '../util/assert.js';\n/**\n * The default cooperative request interception resolution priority\n *\n * @public\n */\nexport const DEFAULT_INTERCEPT_RESOLUTION_PRIORITY = 0;\n/**\n * Represents an HTTP request sent by a page.\n * @remarks\n *\n * Whenever the page sends a request, such as for a network resource, the\n * following events are emitted by Puppeteer's `page`:\n *\n * - `request`: emitted when the request is issued by the page.\n * - `requestfinished` - emitted when the response body is downloaded and the\n *   request is complete.\n *\n * If request fails at some point, then instead of `requestfinished` event the\n * `requestfailed` event is emitted.\n *\n * All of these events provide an instance of `HTTPRequest` representing the\n * request that occurred:\n *\n * ```\n * page.on('request', request => ...)\n * ```\n *\n * NOTE: HTTP Error responses, such as 404 or 503, are still successful\n * responses from HTTP standpoint, so request will complete with\n * `requestfinished` event.\n *\n * If request gets a 'redirect' response, the request is successfully finished\n * with the `requestfinished` event, and a new request is issued to a\n * redirected url.\n *\n * @public\n */\nexport class HTTPRequest {\n  /**\n   * @internal\n   */\n  constructor() {\n    /**\n     * @internal\n     */\n    _defineProperty(this, \"_interceptionId\", void 0);\n    /**\n     * @internal\n     */\n    _defineProperty(this, \"_failureText\", null);\n    /**\n     * @internal\n     */\n    _defineProperty(this, \"_response\", null);\n    /**\n     * @internal\n     */\n    _defineProperty(this, \"_fromMemoryCache\", false);\n    /**\n     * @internal\n     */\n    _defineProperty(this, \"_redirectChain\", []);\n    /**\n     * @internal\n     */\n    _defineProperty(this, \"interception\", {\n      enabled: false,\n      handled: false,\n      handlers: [],\n      resolutionState: {\n        action: InterceptResolutionAction.None\n      },\n      requestOverrides: {},\n      response: null,\n      abortReason: null\n    });\n  }\n  /**\n   * The `ContinueRequestOverrides` that will be used\n   * if the interception is allowed to continue (ie, `abort()` and\n   * `respond()` aren't called).\n   */\n  continueRequestOverrides() {\n    assert(this.interception.enabled, 'Request Interception is not enabled!');\n    return this.interception.requestOverrides;\n  }\n  /**\n   * The `ResponseForRequest` that gets used if the\n   * interception is allowed to respond (ie, `abort()` is not called).\n   */\n  responseForRequest() {\n    assert(this.interception.enabled, 'Request Interception is not enabled!');\n    return this.interception.response;\n  }\n  /**\n   * The most recent reason for aborting the request\n   */\n  abortErrorReason() {\n    assert(this.interception.enabled, 'Request Interception is not enabled!');\n    return this.interception.abortReason;\n  }\n  /**\n   * An InterceptResolutionState object describing the current resolution\n   * action and priority.\n   *\n   * InterceptResolutionState contains:\n   * action: InterceptResolutionAction\n   * priority?: number\n   *\n   * InterceptResolutionAction is one of: `abort`, `respond`, `continue`,\n   * `disabled`, `none`, or `already-handled`.\n   */\n  interceptResolutionState() {\n    if (!this.interception.enabled) {\n      return {\n        action: InterceptResolutionAction.Disabled\n      };\n    }\n    if (this.interception.handled) {\n      return {\n        action: InterceptResolutionAction.AlreadyHandled\n      };\n    }\n    return {\n      ...this.interception.resolutionState\n    };\n  }\n  /**\n   * Is `true` if the intercept resolution has already been handled,\n   * `false` otherwise.\n   */\n  isInterceptResolutionHandled() {\n    return this.interception.handled;\n  }\n  /**\n   * Adds an async request handler to the processing queue.\n   * Deferred handlers are not guaranteed to execute in any particular order,\n   * but they are guaranteed to resolve before the request interception\n   * is finalized.\n   */\n  enqueueInterceptAction(pendingHandler) {\n    this.interception.handlers.push(pendingHandler);\n  }\n  /**\n   * Awaits pending interception handlers and then decides how to fulfill\n   * the request interception.\n   */\n  async finalizeInterceptions() {\n    await this.interception.handlers.reduce((promiseChain, interceptAction) => {\n      return promiseChain.then(interceptAction);\n    }, Promise.resolve());\n    this.interception.handlers = []; // TODO: verify this is correct top let gc run\n    const {\n      action\n    } = this.interceptResolutionState();\n    switch (action) {\n      case 'abort':\n        return await this._abort(this.interception.abortReason);\n      case 'respond':\n        if (this.interception.response === null) {\n          throw new Error('Response is missing for the interception');\n        }\n        return await this._respond(this.interception.response);\n      case 'continue':\n        return await this._continue(this.interception.requestOverrides);\n    }\n  }\n  /**\n   * Continues request with optional request overrides.\n   *\n   * @example\n   *\n   * ```ts\n   * await page.setRequestInterception(true);\n   * page.on('request', request => {\n   *   // Override headers\n   *   const headers = Object.assign({}, request.headers(), {\n   *     foo: 'bar', // set \"foo\" header\n   *     origin: undefined, // remove \"origin\" header\n   *   });\n   *   request.continue({headers});\n   * });\n   * ```\n   *\n   * @param overrides - optional overrides to apply to the request.\n   * @param priority - If provided, intercept is resolved using cooperative\n   * handling rules. Otherwise, intercept is resolved immediately.\n   *\n   * @remarks\n   *\n   * To use this, request interception should be enabled with\n   * {@link Page.setRequestInterception}.\n   *\n   * Exception is immediately thrown if the request interception is not enabled.\n   */\n  async continue(overrides = {}, priority) {\n    // Request interception is not supported for data: urls.\n    if (this.url().startsWith('data:')) {\n      return;\n    }\n    assert(this.interception.enabled, 'Request Interception is not enabled!');\n    assert(!this.interception.handled, 'Request is already handled!');\n    if (priority === undefined) {\n      return await this._continue(overrides);\n    }\n    this.interception.requestOverrides = overrides;\n    if (this.interception.resolutionState.priority === undefined || priority > this.interception.resolutionState.priority) {\n      this.interception.resolutionState = {\n        action: InterceptResolutionAction.Continue,\n        priority\n      };\n      return;\n    }\n    if (priority === this.interception.resolutionState.priority) {\n      if (this.interception.resolutionState.action === 'abort' || this.interception.resolutionState.action === 'respond') {\n        return;\n      }\n      this.interception.resolutionState.action = InterceptResolutionAction.Continue;\n    }\n    return;\n  }\n  /**\n   * Fulfills a request with the given response.\n   *\n   * @example\n   * An example of fulfilling all requests with 404 responses:\n   *\n   * ```ts\n   * await page.setRequestInterception(true);\n   * page.on('request', request => {\n   *   request.respond({\n   *     status: 404,\n   *     contentType: 'text/plain',\n   *     body: 'Not Found!',\n   *   });\n   * });\n   * ```\n   *\n   * NOTE: Mocking responses for dataURL requests is not supported.\n   * Calling `request.respond` for a dataURL request is a noop.\n   *\n   * @param response - the response to fulfill the request with.\n   * @param priority - If provided, intercept is resolved using\n   * cooperative handling rules. Otherwise, intercept is resolved\n   * immediately.\n   *\n   * @remarks\n   *\n   * To use this, request\n   * interception should be enabled with {@link Page.setRequestInterception}.\n   *\n   * Exception is immediately thrown if the request interception is not enabled.\n   */\n  async respond(response, priority) {\n    // Mocking responses for dataURL requests is not currently supported.\n    if (this.url().startsWith('data:')) {\n      return;\n    }\n    assert(this.interception.enabled, 'Request Interception is not enabled!');\n    assert(!this.interception.handled, 'Request is already handled!');\n    if (priority === undefined) {\n      return await this._respond(response);\n    }\n    this.interception.response = response;\n    if (this.interception.resolutionState.priority === undefined || priority > this.interception.resolutionState.priority) {\n      this.interception.resolutionState = {\n        action: InterceptResolutionAction.Respond,\n        priority\n      };\n      return;\n    }\n    if (priority === this.interception.resolutionState.priority) {\n      if (this.interception.resolutionState.action === 'abort') {\n        return;\n      }\n      this.interception.resolutionState.action = InterceptResolutionAction.Respond;\n    }\n  }\n  /**\n   * Aborts a request.\n   *\n   * @param errorCode - optional error code to provide.\n   * @param priority - If provided, intercept is resolved using\n   * cooperative handling rules. Otherwise, intercept is resolved\n   * immediately.\n   *\n   * @remarks\n   *\n   * To use this, request interception should be enabled with\n   * {@link Page.setRequestInterception}. If it is not enabled, this method will\n   * throw an exception immediately.\n   */\n  async abort(errorCode = 'failed', priority) {\n    // Request interception is not supported for data: urls.\n    if (this.url().startsWith('data:')) {\n      return;\n    }\n    const errorReason = errorReasons[errorCode];\n    assert(errorReason, 'Unknown error code: ' + errorCode);\n    assert(this.interception.enabled, 'Request Interception is not enabled!');\n    assert(!this.interception.handled, 'Request is already handled!');\n    if (priority === undefined) {\n      return await this._abort(errorReason);\n    }\n    this.interception.abortReason = errorReason;\n    if (this.interception.resolutionState.priority === undefined || priority >= this.interception.resolutionState.priority) {\n      this.interception.resolutionState = {\n        action: InterceptResolutionAction.Abort,\n        priority\n      };\n      return;\n    }\n  }\n}\n/**\n * @public\n */\nexport var InterceptResolutionAction;\n(function (InterceptResolutionAction) {\n  InterceptResolutionAction[\"Abort\"] = \"abort\";\n  InterceptResolutionAction[\"Respond\"] = \"respond\";\n  InterceptResolutionAction[\"Continue\"] = \"continue\";\n  InterceptResolutionAction[\"Disabled\"] = \"disabled\";\n  InterceptResolutionAction[\"None\"] = \"none\";\n  InterceptResolutionAction[\"AlreadyHandled\"] = \"already-handled\";\n})(InterceptResolutionAction || (InterceptResolutionAction = {}));\n/**\n * @internal\n */\nexport function headersArray(headers) {\n  const result = [];\n  for (const name in headers) {\n    const value = headers[name];\n    if (!Object.is(value, undefined)) {\n      const values = Array.isArray(value) ? value : [value];\n      result.push(...values.map(value => {\n        return {\n          name,\n          value: value + ''\n        };\n      }));\n    }\n  }\n  return result;\n}\n/**\n * @internal\n *\n * @remarks\n * List taken from {@link https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml}\n * with extra 306 and 418 codes.\n */\nexport const STATUS_TEXTS = {\n  '100': 'Continue',\n  '101': 'Switching Protocols',\n  '102': 'Processing',\n  '103': 'Early Hints',\n  '200': 'OK',\n  '201': 'Created',\n  '202': 'Accepted',\n  '203': 'Non-Authoritative Information',\n  '204': 'No Content',\n  '205': 'Reset Content',\n  '206': 'Partial Content',\n  '207': 'Multi-Status',\n  '208': 'Already Reported',\n  '226': 'IM Used',\n  '300': 'Multiple Choices',\n  '301': 'Moved Permanently',\n  '302': 'Found',\n  '303': 'See Other',\n  '304': 'Not Modified',\n  '305': 'Use Proxy',\n  '306': 'Switch Proxy',\n  '307': 'Temporary Redirect',\n  '308': 'Permanent Redirect',\n  '400': 'Bad Request',\n  '401': 'Unauthorized',\n  '402': 'Payment Required',\n  '403': 'Forbidden',\n  '404': 'Not Found',\n  '405': 'Method Not Allowed',\n  '406': 'Not Acceptable',\n  '407': 'Proxy Authentication Required',\n  '408': 'Request Timeout',\n  '409': 'Conflict',\n  '410': 'Gone',\n  '411': 'Length Required',\n  '412': 'Precondition Failed',\n  '413': 'Payload Too Large',\n  '414': 'URI Too Long',\n  '415': 'Unsupported Media Type',\n  '416': 'Range Not Satisfiable',\n  '417': 'Expectation Failed',\n  '418': \"I'm a teapot\",\n  '421': 'Misdirected Request',\n  '422': 'Unprocessable Entity',\n  '423': 'Locked',\n  '424': 'Failed Dependency',\n  '425': 'Too Early',\n  '426': 'Upgrade Required',\n  '428': 'Precondition Required',\n  '429': 'Too Many Requests',\n  '431': 'Request Header Fields Too Large',\n  '451': 'Unavailable For Legal Reasons',\n  '500': 'Internal Server Error',\n  '501': 'Not Implemented',\n  '502': 'Bad Gateway',\n  '503': 'Service Unavailable',\n  '504': 'Gateway Timeout',\n  '505': 'HTTP Version Not Supported',\n  '506': 'Variant Also Negotiates',\n  '507': 'Insufficient Storage',\n  '508': 'Loop Detected',\n  '510': 'Not Extended',\n  '511': 'Network Authentication Required'\n};\nconst errorReasons = {\n  aborted: 'Aborted',\n  accessdenied: 'AccessDenied',\n  addressunreachable: 'AddressUnreachable',\n  blockedbyclient: 'BlockedByClient',\n  blockedbyresponse: 'BlockedByResponse',\n  connectionaborted: 'ConnectionAborted',\n  connectionclosed: 'ConnectionClosed',\n  connectionfailed: 'ConnectionFailed',\n  connectionrefused: 'ConnectionRefused',\n  connectionreset: 'ConnectionReset',\n  internetdisconnected: 'InternetDisconnected',\n  namenotresolved: 'NameNotResolved',\n  timedout: 'TimedOut',\n  failed: 'Failed'\n};\n/**\n * @internal\n */\nexport function handleError(error) {\n  if (error.originalMessage.includes('Invalid header')) {\n    throw error;\n  }\n  // In certain cases, protocol will return error if the request was\n  // already canceled or the page was closed. We should tolerate these\n  // errors.\n  debugError(error);\n}","map":{"version":3,"names":["debugError","assert","DEFAULT_INTERCEPT_RESOLUTION_PRIORITY","HTTPRequest","constructor","_defineProperty","enabled","handled","handlers","resolutionState","action","InterceptResolutionAction","None","requestOverrides","response","abortReason","continueRequestOverrides","interception","responseForRequest","abortErrorReason","interceptResolutionState","Disabled","AlreadyHandled","isInterceptResolutionHandled","enqueueInterceptAction","pendingHandler","push","finalizeInterceptions","reduce","promiseChain","interceptAction","then","Promise","resolve","_abort","Error","_respond","_continue","continue","overrides","priority","url","startsWith","undefined","Continue","respond","Respond","abort","errorCode","errorReason","errorReasons","Abort","headersArray","headers","result","name","value","Object","is","values","Array","isArray","map","STATUS_TEXTS","aborted","accessdenied","addressunreachable","blockedbyclient","blockedbyresponse","connectionaborted","connectionclosed","connectionfailed","connectionrefused","connectionreset","internetdisconnected","namenotresolved","timedout","failed","handleError","error","originalMessage","includes"],"sources":["../../../../src/api/HTTPRequest.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}