{"ast":null,"code":"import _classPrivateMethodInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateMethodInitSpec.js\";\nimport _classPrivateFieldInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldGet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\nimport _assertClassBrand from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/assertClassBrand.js\";\nimport _classPrivateFieldSet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\n/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { stdin as input, stdout as output } from 'process';\nimport * as readline from 'readline';\nimport ProgressBar from 'progress';\nimport { hideBin } from 'yargs/helpers';\nimport yargs from 'yargs/yargs';\nimport { resolveBuildId, BrowserPlatform } from './browser-data/browser-data.js';\nimport { Cache } from './Cache.js';\nimport { detectBrowserPlatform } from './detectPlatform.js';\nimport { install } from './install.js';\nimport { computeExecutablePath, computeSystemExecutablePath, launch } from './launch.js';\n/**\n * @public\n */\nvar _cachePath = /*#__PURE__*/new WeakMap();\nvar _rl = /*#__PURE__*/new WeakMap();\nvar _scriptName = /*#__PURE__*/new WeakMap();\nvar _allowCachePathOverride = /*#__PURE__*/new WeakMap();\nvar _pinnedBrowsers = /*#__PURE__*/new WeakMap();\nvar _prefixCommand = /*#__PURE__*/new WeakMap();\nvar _CLI_brand = /*#__PURE__*/new WeakSet();\nexport class CLI {\n  constructor(opts, _rl2) {\n    _classPrivateMethodInitSpec(this, _CLI_brand);\n    _classPrivateFieldInitSpec(this, _cachePath, void 0);\n    _classPrivateFieldInitSpec(this, _rl, void 0);\n    _classPrivateFieldInitSpec(this, _scriptName, '');\n    _classPrivateFieldInitSpec(this, _allowCachePathOverride, true);\n    _classPrivateFieldInitSpec(this, _pinnedBrowsers, void 0);\n    _classPrivateFieldInitSpec(this, _prefixCommand, void 0);\n    if (!opts) {\n      opts = {};\n    }\n    if (typeof opts === 'string') {\n      opts = {\n        cachePath: opts\n      };\n    }\n    _classPrivateFieldSet(_cachePath, this, opts.cachePath ?? process.cwd());\n    _classPrivateFieldSet(_rl, this, _rl2);\n    _classPrivateFieldSet(_scriptName, this, opts.scriptName ?? '@puppeteer/browsers');\n    _classPrivateFieldSet(_allowCachePathOverride, this, opts.allowCachePathOverride ?? true);\n    _classPrivateFieldSet(_pinnedBrowsers, this, opts.pinnedBrowsers);\n    _classPrivateFieldSet(_prefixCommand, this, opts.prefixCommand);\n  }\n  async run(argv) {\n    const yargsInstance = yargs(hideBin(argv));\n    let target = yargsInstance.scriptName(_classPrivateFieldGet(_scriptName, this));\n    if (_classPrivateFieldGet(_prefixCommand, this)) {\n      target = target.command(_classPrivateFieldGet(_prefixCommand, this).cmd, _classPrivateFieldGet(_prefixCommand, this).description, yargs => {\n        return _assertClassBrand(_CLI_brand, this, _build).call(this, yargs);\n      });\n    } else {\n      target = _assertClassBrand(_CLI_brand, this, _build).call(this, target);\n    }\n    await target.demandCommand(1).help().wrap(Math.min(120, yargsInstance.terminalWidth())).parse();\n  }\n}\n/**\n * @public\n */\nfunction _defineBrowserParameter(yargs) {\n  yargs.positional('browser', {\n    description: 'Which browser to install <browser>[@<buildId|latest>]. `latest` will try to find the latest available build. `buildId` is a browser-specific identifier such as a version or a revision.',\n    type: 'string',\n    coerce: opt => {\n      return {\n        name: _assertClassBrand(_CLI_brand, this, _parseBrowser).call(this, opt),\n        buildId: _assertClassBrand(_CLI_brand, this, _parseBuildId).call(this, opt)\n      };\n    }\n  });\n}\nfunction _definePlatformParameter(yargs) {\n  yargs.option('platform', {\n    type: 'string',\n    desc: 'Platform that the binary needs to be compatible with.',\n    choices: Object.values(BrowserPlatform),\n    defaultDescription: 'Auto-detected'\n  });\n}\nfunction _definePathParameter(yargs, required = false) {\n  if (!_classPrivateFieldGet(_allowCachePathOverride, this)) {\n    return;\n  }\n  yargs.option('path', {\n    type: 'string',\n    desc: 'Path to the root folder for the browser downloads and installation. The installation folder structure is compatible with the cache structure used by Puppeteer.',\n    defaultDescription: 'Current working directory',\n    ...(required ? {} : {\n      default: process.cwd()\n    })\n  });\n  if (required) {\n    yargs.demandOption('path');\n  }\n}\nfunction _build(yargs) {\n  const latestOrPinned = _classPrivateFieldGet(_pinnedBrowsers, this) ? 'pinned' : 'latest';\n  return yargs.command('install <browser>', 'Download and install the specified browser. If successful, the command outputs the actual browser buildId that was installed and the absolute path to the browser executable (format: <browser>@<buildID> <path>).', yargs => {\n    _assertClassBrand(_CLI_brand, this, _defineBrowserParameter).call(this, yargs);\n    _assertClassBrand(_CLI_brand, this, _definePlatformParameter).call(this, yargs);\n    _assertClassBrand(_CLI_brand, this, _definePathParameter).call(this, yargs);\n    yargs.option('base-url', {\n      type: 'string',\n      desc: 'Base URL to download from'\n    });\n    yargs.example('$0 install chrome', `Install the ${latestOrPinned} available build of the Chrome browser.`);\n    yargs.example('$0 install chrome@latest', 'Install the latest available build for the Chrome browser.');\n    yargs.example('$0 install chrome@stable', 'Install the latest available build for the Chrome browser from the stable channel.');\n    yargs.example('$0 install chrome@beta', 'Install the latest available build for the Chrome browser from the beta channel.');\n    yargs.example('$0 install chrome@dev', 'Install the latest available build for the Chrome browser from the dev channel.');\n    yargs.example('$0 install chrome@canary', 'Install the latest available build for the Chrome Canary browser.');\n    yargs.example('$0 install chrome@115', 'Install the latest available build for Chrome 115.');\n    yargs.example('$0 install chromedriver@canary', 'Install the latest available build for ChromeDriver Canary.');\n    yargs.example('$0 install chromedriver@115', 'Install the latest available build for ChromeDriver 115.');\n    yargs.example('$0 install chromedriver@115.0.5790', 'Install the latest available patch (115.0.5790.X) build for ChromeDriver.');\n    yargs.example('$0 install chrome-headless-shell', 'Install the latest available chrome-headless-shell build.');\n    yargs.example('$0 install chrome-headless-shell@beta', 'Install the latest available chrome-headless-shell build corresponding to the Beta channel.');\n    yargs.example('$0 install chrome-headless-shell@118', 'Install the latest available chrome-headless-shell 118 build.');\n    yargs.example('$0 install chromium@1083080', 'Install the revision 1083080 of the Chromium browser.');\n    yargs.example('$0 install firefox', 'Install the latest nightly available build of the Firefox browser.');\n    yargs.example('$0 install firefox@stable', 'Install the latest stable build of the Firefox browser.');\n    yargs.example('$0 install firefox@beta', 'Install the latest beta build of the Firefox browser.');\n    yargs.example('$0 install firefox@devedition', 'Install the latest devedition build of the Firefox browser.');\n    yargs.example('$0 install firefox@esr', 'Install the latest ESR build of the Firefox browser.');\n    yargs.example('$0 install firefox@nightly', 'Install the latest nightly build of the Firefox browser.');\n    yargs.example('$0 install firefox@stable_111.0.1', 'Install a specific version of the Firefox browser.');\n    yargs.example('$0 install firefox --platform mac', 'Install the latest Mac (Intel) build of the Firefox browser.');\n    if (_classPrivateFieldGet(_allowCachePathOverride, this)) {\n      yargs.example('$0 install firefox --path /tmp/my-browser-cache', 'Install to the specified cache directory.');\n    }\n  }, async argv => {\n    const args = argv;\n    args.platform ??= detectBrowserPlatform();\n    if (!args.platform) {\n      throw new Error(`Could not resolve the current platform`);\n    }\n    if (args.browser.buildId === 'pinned') {\n      const pinnedVersion = _classPrivateFieldGet(_pinnedBrowsers, this)?.[args.browser.name];\n      if (!pinnedVersion) {\n        throw new Error(`No pinned version found for ${args.browser.name}`);\n      }\n      args.browser.buildId = pinnedVersion;\n    }\n    const originalBuildId = args.browser.buildId;\n    args.browser.buildId = await resolveBuildId(args.browser.name, args.platform, args.browser.buildId);\n    await install({\n      browser: args.browser.name,\n      buildId: args.browser.buildId,\n      platform: args.platform,\n      cacheDir: args.path ?? _classPrivateFieldGet(_cachePath, this),\n      downloadProgressCallback: makeProgressCallback(args.browser.name, args.browser.buildId),\n      baseUrl: args.baseUrl,\n      buildIdAlias: originalBuildId !== args.browser.buildId ? originalBuildId : undefined\n    });\n    console.log(`${args.browser.name}@${args.browser.buildId} ${computeExecutablePath({\n      browser: args.browser.name,\n      buildId: args.browser.buildId,\n      cacheDir: args.path ?? _classPrivateFieldGet(_cachePath, this),\n      platform: args.platform\n    })}`);\n  }).command('launch <browser>', 'Launch the specified browser', yargs => {\n    _assertClassBrand(_CLI_brand, this, _defineBrowserParameter).call(this, yargs);\n    _assertClassBrand(_CLI_brand, this, _definePlatformParameter).call(this, yargs);\n    _assertClassBrand(_CLI_brand, this, _definePathParameter).call(this, yargs);\n    yargs.option('detached', {\n      type: 'boolean',\n      desc: 'Detach the child process.',\n      default: false\n    });\n    yargs.option('system', {\n      type: 'boolean',\n      desc: 'Search for a browser installed on the system instead of the cache folder.',\n      default: false\n    });\n    yargs.example('$0 launch chrome@115.0.5790.170', 'Launch Chrome 115.0.5790.170');\n    yargs.example('$0 launch firefox@112.0a1', 'Launch the Firefox browser identified by the milestone 112.0a1.');\n    yargs.example('$0 launch chrome@115.0.5790.170 --detached', 'Launch the browser but detach the sub-processes.');\n    yargs.example('$0 launch chrome@canary --system', 'Try to locate the Canary build of Chrome installed on the system and launch it.');\n  }, async argv => {\n    const args = argv;\n    const executablePath = args.system ? computeSystemExecutablePath({\n      browser: args.browser.name,\n      // TODO: throw an error if not a ChromeReleaseChannel is provided.\n      channel: args.browser.buildId,\n      platform: args.platform\n    }) : computeExecutablePath({\n      browser: args.browser.name,\n      buildId: args.browser.buildId,\n      cacheDir: args.path ?? _classPrivateFieldGet(_cachePath, this),\n      platform: args.platform\n    });\n    launch({\n      executablePath,\n      detached: args.detached\n    });\n  }).command('clear', _classPrivateFieldGet(_allowCachePathOverride, this) ? 'Removes all installed browsers from the specified cache directory' : `Removes all installed browsers from ${_classPrivateFieldGet(_cachePath, this)}`, yargs => {\n    _assertClassBrand(_CLI_brand, this, _definePathParameter).call(this, yargs, true);\n  }, async argv => {\n    const args = argv;\n    const cacheDir = args.path ?? _classPrivateFieldGet(_cachePath, this);\n    const rl = _classPrivateFieldGet(_rl, this) ?? readline.createInterface({\n      input,\n      output\n    });\n    rl.question(`Do you want to permanently and recursively delete the content of ${cacheDir} (yes/No)? `, answer => {\n      rl.close();\n      if (!['y', 'yes'].includes(answer.toLowerCase().trim())) {\n        console.log('Cancelled.');\n        return;\n      }\n      const cache = new Cache(cacheDir);\n      cache.clear();\n      console.log(`${cacheDir} cleared.`);\n    });\n  }).demandCommand(1).help();\n}\nfunction _parseBrowser(version) {\n  return version.split('@').shift();\n}\nfunction _parseBuildId(version) {\n  const parts = version.split('@');\n  return parts.length === 2 ? parts[1] : _classPrivateFieldGet(_pinnedBrowsers, this) ? 'pinned' : 'latest';\n}\nexport function makeProgressCallback(browser, buildId) {\n  let progressBar;\n  let lastDownloadedBytes = 0;\n  return (downloadedBytes, totalBytes) => {\n    if (!progressBar) {\n      progressBar = new ProgressBar(`Downloading ${browser} ${buildId} - ${toMegabytes(totalBytes)} [:bar] :percent :etas `, {\n        complete: '=',\n        incomplete: ' ',\n        width: 20,\n        total: totalBytes\n      });\n    }\n    const delta = downloadedBytes - lastDownloadedBytes;\n    lastDownloadedBytes = downloadedBytes;\n    progressBar.tick(delta);\n  };\n}\nfunction toMegabytes(bytes) {\n  const mb = bytes / 1000 / 1000;\n  return `${Math.round(mb * 10) / 10} MB`;\n}","map":{"version":3,"names":["stdin","input","stdout","output","readline","ProgressBar","hideBin","yargs","resolveBuildId","BrowserPlatform","Cache","detectBrowserPlatform","install","computeExecutablePath","computeSystemExecutablePath","launch","_cachePath","WeakMap","_rl","_scriptName","_allowCachePathOverride","_pinnedBrowsers","_prefixCommand","_CLI_brand","WeakSet","CLI","constructor","opts","rl","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","cachePath","_classPrivateFieldSet","process","cwd","scriptName","allowCachePathOverride","pinnedBrowsers","prefixCommand","run","argv","yargsInstance","target","_classPrivateFieldGet","command","cmd","description","_assertClassBrand","_build","call","demandCommand","help","wrap","Math","min","terminalWidth","parse","_defineBrowserParameter","positional","type","coerce","opt","name","_parseBrowser","buildId","_parseBuildId","_definePlatformParameter","option","desc","choices","Object","values","defaultDescription","_definePathParameter","required","default","demandOption","latestOrPinned","example","args","platform","Error","browser","pinnedVersion","originalBuildId","cacheDir","path","downloadProgressCallback","makeProgressCallback","baseUrl","buildIdAlias","undefined","console","log","executablePath","system","channel","detached","createInterface","question","answer","close","includes","toLowerCase","trim","cache","clear","version","split","shift","parts","length","progressBar","lastDownloadedBytes","downloadedBytes","totalBytes","toMegabytes","complete","incomplete","width","total","delta","tick","bytes","mb","round"],"sources":["../../src/CLI.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}