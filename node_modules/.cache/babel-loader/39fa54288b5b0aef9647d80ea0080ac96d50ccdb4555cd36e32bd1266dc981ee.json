{"ast":null,"code":"import { create, typeList, updata, configList } from '@/api/api';\nexport default {\n  data() {\n    return {\n      formData: {\n        order: '',\n        item_name: '',\n        config_key: 'diabetes_type'\n      },\n      formRules: {\n        order: [{\n          required: true,\n          trigger: \"blur\",\n          message: \"请填写顺序号\"\n        }],\n        item_name: [{\n          required: true,\n          trigger: \"blur\",\n          message: \" 请填写配置项名称\"\n        }]\n      },\n      loading: false,\n      //添加配置项loading\n      listLoading: false,\n      list: '',\n      configList: [],\n      addType: false,\n      //弹窗是否显示\n      dialogTitle: '',\n      //弹窗标题\n      editType: 1 //弹窗是1添加2修改\n    };\n  },\n  created() {\n    this.getConfigList();\n    this.getInfos();\n  },\n  methods: {\n    // 获取配置项列表\n    getConfigList() {\n      configList().then(response => {\n        if (response.code == 1000) {\n          this.configList = response.data;\n        } else {\n          this.$message({\n            type: 'error',\n            message: response.msg\n          });\n        }\n      }).catch(res => {\n        this.$message({\n          type: 'error',\n          message: res.message\n        });\n      });\n    },\n    // 根据配置key获取配置详情\n    getInfos() {\n      this.listLoading = true;\n      typeList({\n        config_key: \"diabetes_type\"\n      }).then(response => {\n        this.listLoading = false;\n        if (response.code == 1000) {\n          this.list = response.data;\n        } else {\n          this.$message({\n            type: 'error',\n            message: response.msg\n          });\n        }\n      }).catch(res => {\n        this.$message({\n          type: 'error',\n          message: res.message\n        });\n      });\n    },\n    // 添加配置项\n    addTypes() {\n      this.$refs.formData.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          create(this.formData).then(response => {\n            this.loading = false;\n            if (response.code == 1000) {\n              this.addType = false;\n              this.$message({\n                message: '添加成功',\n                type: 'success'\n              });\n              this.getInfos();\n            } else {\n              this.$message({\n                type: 'error',\n                message: response.msg\n              });\n            }\n          }).catch(res => {\n            this.$message({\n              type: 'error',\n              message: res.message\n            });\n          });\n        }\n      });\n    },\n    // 修改配置项\n    editTypes() {\n      this.$refs.formData.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          updata(this.formData).then(response => {\n            this.loading = false;\n            if (response.code == 1000) {\n              this.addType = false;\n              this.$message({\n                message: '修改成功',\n                type: 'success'\n              });\n              this.getInfos();\n            } else {\n              this.$message({\n                type: 'error',\n                message: response.msg\n              });\n            }\n          }).catch(res => {\n            this.$message({\n              type: 'error',\n              message: res.message\n            });\n          });\n        }\n      });\n    },\n    // 新增弹窗\n    addDialog() {\n      this.addType = true;\n      this.dialogTitle = '添加配置项';\n      this.editType = 1;\n      this.formData = {\n        item_name: '',\n        config_key: 'diabetes_type',\n        order: this.list[this.list.length - 1].order + 1\n      };\n    },\n    // 修改弹窗\n    edit(info) {\n      this.addType = true;\n      this.dialogTitle = '修改配置项';\n      this.editType = 2;\n      this.formData = {\n        id: info.id,\n        item_name: info.item_name,\n        order: info.order,\n        is_active: 0\n      };\n    }\n  }\n};","map":{"version":3,"names":["create","typeList","updata","configList","data","formData","order","item_name","config_key","formRules","required","trigger","message","loading","listLoading","list","addType","dialogTitle","editType","created","getConfigList","getInfos","methods","then","response","code","$message","type","msg","catch","res","addTypes","$refs","validate","valid","editTypes","addDialog","length","edit","info","id","is_active"],"sources":["src/views/healthConfig.vue"],"sourcesContent":["<template>\n    <div>\n        <el-tabs>\n            <el-tab-pane v-for='item in configList' :key='item.id' :label=\"item.config_name\"></el-tab-pane>\n        </el-tabs>\n        <!-- 查询和其他操作 -->\n        <div class=\"filter-container\">\n          <el-button class=\"filter-item\" type=\"primary\" icon=\"el-icon-plus\" @click='addDialog' >新增</el-button>\n        </div>\n        <!-- 查询结果 -->\n        <el-table v-loading=\"listLoading\" :data=\"list\" header-row-class-name='headerBg' element-loading-text=\"正在查询中。。。\" border fit highlight-current-row  >\n            <el-table-column align=\"center\" label=\"主键\" prop=\"item_key\" />\n            <el-table-column align=\"center\" label=\"顺序号\" prop=\"order\"/>\n            <el-table-column align=\"center\" label=\"内容\" prop=\"item_name\"/>\n\n            <el-table-column align=\"center\" label=\"创建时间\" prop=\"phone\"/>\n\n            <el-table-column align=\"center\" label=\"更新时间\" prop=\"city\"/>\n            <el-table-column align=\"center\" label=\"操作\" >\n                <template  slot-scope=\"scope\">\n                    <div class='flex table-handel'>\n                        <el-button type=\"text\"  style='margin:0;' class=\"text-info\" @click='edit(scope.row)' >修改</el-button>\n                    </div>\n                </template>\n            </el-table-column>\n        </el-table>\n        <!-- 弹窗 -->\n        <el-dialog :visible.sync=\"addType\" :title=\"dialogTitle\" border width=\"50%\">\n            <el-form ref=\"formData\"  label-width=\"120px\" label-position=\"right\" :model=\"formData\" :rules='formRules'>\n               \n                <el-form-item label=\"顺序号\"  prop=\"order\">\n                    <el-input-number v-model=\"formData.order\"  :min=\"1\" :max=\"100\"></el-input-number>\n                </el-form-item>\n                 <el-form-item label=\"配置项名称\"  prop=\"item_name\">\n                    <el-input v-model=\"formData.item_name\" />\n                </el-form-item>\n                <div class='flex record-btn'  >\n                    <el-button :loading=\"loading\" type=\"primary\" @click=\"addTypes\" v-if='editType==1' >确认</el-button>\n                    <el-button :loading=\"loading\" type=\"primary\" @click=\"editTypes\" v-if='editType==2'>确认</el-button>\n                    <el-button  @click=\"addType = false\">取消</el-button>\n                </div>\n            </el-form>\n        </el-dialog>\n    </div>\n</template>\n<script>\nimport {create,typeList,updata,configList} from '@/api/api'\nexport default {\n    data(){\n        return{\n            formData:{\n                order:'',\n                item_name:'',\n                config_key:'diabetes_type'\n            },\n            formRules:{\n                order: [{ required: true, trigger: \"blur\", message: \"请填写顺序号\" }],\n                item_name: [{ required: true, trigger: \"blur\", message: \" 请填写配置项名称\" }]\n            },\n            loading:false, //添加配置项loading\n            listLoading:false,\n            list:'',\n            configList:[],\n            addType:false,  //弹窗是否显示\n            dialogTitle:'', //弹窗标题\n            editType:1,//弹窗是1添加2修改\n        }\n    },\n    created(){\n        this.getConfigList()\n        this.getInfos()\n    },\n\n    methods:{\n        // 获取配置项列表\n        getConfigList(){\n            configList().then(response => {\n                    if(response.code == 1000){\n                        this.configList = response.data\n                    }else{\n                        this.$message({\n                            type: 'error',\n                            message: response.msg\n                        });\n                    }\n            }).catch((res) => {\n                    this.$message({\n                        type: 'error',\n                        message: res.message\n                    });\n            })\n        },\n        // 根据配置key获取配置详情\n        getInfos(){\n            this.listLoading = true\n            typeList({config_key:\"diabetes_type\"}).then(response => {\n                    this.listLoading = false\n                    if(response.code == 1000){\n                        this.list = response.data\n                    }else{\n                        this.$message({\n                            type: 'error',\n                            message: response.msg\n                        });\n                    }\n            }).catch((res) => {\n                    this.$message({\n                        type: 'error',\n                        message: res.message\n                    });\n            })\n        },\n        // 添加配置项\n        addTypes(){\n               this.$refs.formData.validate((valid) => {\n                    if(valid){\n                        this.loading = true\n                        create(this.formData).then(response => {\n                            this.loading=false\n\t\t\t\t\t\t\tif(response.code == 1000){\n\t\t\t\t\t\t\t\tthis.addType = false\n                                this.$message({\n                                    message: '添加成功',\n                                    type: 'success'\n                                });\n                                this.getInfos()\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tthis.$message({\n                                    type: 'error',\n                                    message: response.msg\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n                        }).catch((res) => {\n                                this.$message({\n                                    type: 'error',\n                                    message: res.message\n                                });\n                        })\n                    }\n               })\n        },\n        // 修改配置项\n        editTypes(){\n            this.$refs.formData.validate((valid) => {\n                    if(valid){\n                        this.loading = true\n                        updata(this.formData).then(response => {\n                            this.loading=false\n\t\t\t\t\t\t\tif(response.code == 1000){\n\t\t\t\t\t\t\t\tthis.addType = false\n                                this.$message({\n                                    message: '修改成功',\n                                    type: 'success'\n                                });\n                                this.getInfos()\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tthis.$message({\n                                    type: 'error',\n                                    message: response.msg\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n                        }).catch((res) => {\n                                this.$message({\n                                    type: 'error',\n                                    message: res.message\n                                });\n                        })\n                    }\n               })\n        },\n        // 新增弹窗\n        addDialog(){\n            this.addType = true\n            this.dialogTitle = '添加配置项'\n            this.editType = 1\n            this.formData = {\n                item_name:'',\n                config_key:'diabetes_type',\n                order:this.list[this.list.length-1].order+1\n            }\n        },\n        // 修改弹窗\n        edit(info){\n            this.addType = true\n            this.dialogTitle = '修改配置项'\n            this.editType = 2\n            this.formData = {\n                id:info.id,\n                item_name:info.item_name,\n                order:info.order,\n                is_active:0\n            }\n        }\n    }\n}\n</script>\n<style scoped>\n    .filter-container{\n        margin-bottom:20px;\n    }\n    .record-btn{\n        display: flex;\n        justify-content: flex-end;\n    }\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}