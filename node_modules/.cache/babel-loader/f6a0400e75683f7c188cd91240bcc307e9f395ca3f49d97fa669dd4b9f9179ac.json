{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*--------------------------------------------------------------------------\r\n * linq.js - LINQ for JavaScript\r\n * licensed under MIT License\r\n *------------------------------------------------------------------------*/\n\nvar Functions = {\n  Identity: function (x) {\n    return x;\n  },\n  True: function () {\n    return true;\n  },\n  Blank: function () {}\n};\nvar Types = {\n  Boolean: typeof true,\n  Number: typeof 0,\n  String: typeof \"\",\n  Object: typeof {},\n  Undefined: typeof undefined,\n  Function: typeof function () {}\n};\nvar funcCache = {\n  \"\": Functions.Identity\n};\nvar Utils = {\n  createLambda: function (expression) {\n    if (expression == null) return Functions.Identity;\n    if (typeof expression === Types.String) {\n      // get from cache\n      let f = funcCache[expression];\n      if (f != null) {\n        return f;\n      }\n      if (expression.indexOf(\"=>\") === -1) {\n        const regexp = new RegExp(\"[$]+\", \"g\");\n        let maxLength = 0;\n        let match;\n        while ((match = regexp.exec(expression)) != null) {\n          if (match[0].length > maxLength) {\n            maxLength = match[0].length;\n          }\n        }\n        const argArray = [];\n        for (let i = 1; i <= maxLength; i++) {\n          let dollar = \"\";\n          for (let j = 0; j < i; j++) {\n            dollar += \"$\";\n          }\n          argArray.push(dollar);\n        }\n        const args = argArray.join(\",\");\n        f = new Function(args, \"return \" + expression);\n        funcCache[expression] = f;\n        return f;\n      } else {\n        const expr = expression.match(/^[(\\s]*([^()]*?)[)\\s]*=>(.*)/);\n        f = new Function(expr[1], expr[2].match(/\\breturn\\b/) ? expr[2] : \"return \" + expr[2]);\n        funcCache[expression] = f;\n        return f;\n      }\n    }\n    return expression;\n  },\n  defineProperty: function (target, methodName, value) {\n    Object.defineProperty(target, methodName, {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: value\n    });\n  },\n  compare: function (a, b) {\n    return a === b ? 0 : a > b ? 1 : -1;\n  },\n  dispose: function (obj) {\n    if (obj != null) obj.dispose();\n  },\n  hasNativeIteratorSupport: function () {\n    return typeof Symbol !== 'undefined' && typeof Symbol.iterator !== 'undefined';\n  }\n};\nvar State = {\n  Before: 0,\n  Running: 1,\n  After: 2\n};\nvar IEnumerator = function (initialize, tryGetNext, dispose) {\n  var yielder = new Yielder();\n  var state = State.Before;\n  this.current = yielder.current;\n  this.moveNext = function () {\n    try {\n      switch (state) {\n        case State.Before:\n          state = State.Running;\n          initialize();\n        // fall through\n\n        case State.Running:\n          if (tryGetNext.apply(yielder)) {\n            return true;\n          } else {\n            this.dispose();\n            return false;\n          }\n        // fall through\n\n        case State.After:\n          return false;\n      }\n    } catch (e) {\n      this.dispose();\n      throw e;\n    }\n  };\n  this.dispose = function () {\n    if (state != State.Running) return;\n    try {\n      dispose();\n    } finally {\n      state = State.After;\n    }\n  };\n};\n\n// tryGetNext yielder\nvar Yielder = function () {\n  var current = null;\n  this.current = function () {\n    return current;\n  };\n  this.yieldReturn = function (value) {\n    current = value;\n    return true;\n  };\n  this.yieldBreak = function () {\n    return false;\n  };\n};\n\n// Enumerable constuctor\nvar Enumerable = function (getEnumerator) {\n  this.getEnumerator = getEnumerator;\n};\n\n///////////////////\n// Utility Methods\n\nEnumerable.Utils = {};\nEnumerable.Utils.createLambda = function (expression) {\n  return Utils.createLambda(expression);\n};\nEnumerable.Utils.createEnumerable = function (getEnumerator) {\n  return new Enumerable(getEnumerator);\n};\nEnumerable.Utils.createEnumerator = function (initialize, tryGetNext, dispose) {\n  return new IEnumerator(initialize, tryGetNext, dispose);\n};\nEnumerable.Utils.extendTo = function (type) {\n  var typeProto = type.prototype;\n  var enumerableProto;\n  if (type === Array) {\n    enumerableProto = ArrayEnumerable.prototype;\n    Utils.defineProperty(typeProto, \"getSource\", function () {\n      return this;\n    });\n  } else {\n    enumerableProto = Enumerable.prototype;\n    Utils.defineProperty(typeProto, \"getEnumerator\", function () {\n      return Enumerable.from(this).getEnumerator();\n    });\n  }\n  for (let methodName in enumerableProto) {\n    const func = enumerableProto[methodName];\n\n    // already extended\n    if (typeProto[methodName] == func) continue;\n\n    // already defined(example Array#reverse/join/forEach...)\n    if (typeProto[methodName] != null) {\n      methodName = methodName + \"ByLinq\";\n      if (typeProto[methodName] == func) continue; // recheck\n    }\n    if (func instanceof Function) {\n      Utils.defineProperty(typeProto, methodName, func);\n    }\n  }\n};\nEnumerable.Utils.recallFrom = function (type) {\n  var typeProto = type.prototype;\n  var enumerableProto;\n  if (type === Array) {\n    enumerableProto = ArrayEnumerable.prototype;\n    delete typeProto.getSource;\n  } else {\n    enumerableProto = Enumerable.prototype;\n    delete typeProto.getEnumerator;\n  }\n  for (const methodName in enumerableProto) {\n    const func = enumerableProto[methodName];\n    if (typeProto[methodName + 'ByLinq']) {\n      delete typeProto[methodName + 'ByLinq'];\n    } else if (typeProto[methodName] == func && func instanceof Function) {\n      delete typeProto[methodName];\n    }\n  }\n};\n\n//////////////\n// Generators\n\nEnumerable.choice = function () {\n  var args = arguments;\n  return new Enumerable(function () {\n    return new IEnumerator(function () {\n      args = args[0] instanceof Array ? args[0] : args[0].getEnumerator != null ? args[0].toArray() : args;\n    }, function () {\n      return this.yieldReturn(args[Math.floor(Math.random() * args.length)]);\n    }, Functions.Blank);\n  });\n};\nEnumerable.cycle = function () {\n  var args = arguments;\n  return new Enumerable(function () {\n    var index = 0;\n    return new IEnumerator(function () {\n      args = args[0] instanceof Array ? args[0] : args[0].getEnumerator != null ? args[0].toArray() : args;\n    }, function () {\n      if (index >= args.length) index = 0;\n      return this.yieldReturn(args[index++]);\n    }, Functions.Blank);\n  });\n};\nEnumerable.empty = function () {\n  return new Enumerable(function () {\n    return new IEnumerator(Functions.Blank, function () {\n      return false;\n    }, Functions.Blank);\n  });\n};\nEnumerable.from = function (obj) {\n  if (obj == null) {\n    return Enumerable.empty();\n  }\n  if (obj instanceof Enumerable) {\n    return obj;\n  }\n  if (typeof obj == Types.Number || typeof obj == Types.Boolean) {\n    return Enumerable.repeat(obj, 1);\n  }\n  if (typeof obj == Types.String) {\n    return new Enumerable(function () {\n      var index = 0;\n      return new IEnumerator(Functions.Blank, function () {\n        return index < obj.length ? this.yieldReturn(obj.charAt(index++)) : false;\n      }, Functions.Blank);\n    });\n  }\n  if (typeof obj == Types.Function && Object.keys(obj).length == 0) {\n    return new Enumerable(function () {\n      var orig;\n      return new IEnumerator(function () {\n        orig = obj()[Symbol.iterator]();\n      }, function () {\n        var next = orig.next();\n        return next.done ? false : this.yieldReturn(next.value);\n      }, Functions.Blank);\n    });\n  }\n  if (typeof obj != Types.Function) {\n    // array or array-like object\n    if (typeof obj.length == Types.Number) {\n      return new ArrayEnumerable(obj);\n    }\n\n    // iterable object\n    if (typeof Symbol !== 'undefined' && typeof obj[Symbol.iterator] !== 'undefined') {\n      return new Enumerable(function () {\n        return new IEnumerator(Functions.Blank, function () {\n          var next = obj.next();\n          return next.done ? false : this.yieldReturn(next.value);\n        }, Functions.Blank);\n      });\n    }\n  }\n\n  // case function/object: create keyValuePair[]\n  return new Enumerable(function () {\n    var array = [];\n    var index = 0;\n    return new IEnumerator(function () {\n      for (const key in obj) {\n        const value = obj[key];\n        if (!(value instanceof Function) && Object.prototype.hasOwnProperty.call(obj, key)) {\n          array.push({\n            key: key,\n            value: value\n          });\n        }\n      }\n    }, function () {\n      return index < array.length ? this.yieldReturn(array[index++]) : false;\n    }, Functions.Blank);\n  });\n}, Enumerable.make = function (element) {\n  return Enumerable.repeat(element, 1);\n};\n\n// Overload:function(input, pattern)\n// Overload:function(input, pattern, flags)\nEnumerable.matches = function (input, pattern, flags) {\n  if (flags == null) flags = \"\";\n  if (pattern instanceof RegExp) {\n    flags += pattern.ignoreCase ? \"i\" : \"\";\n    flags += pattern.multiline ? \"m\" : \"\";\n    pattern = pattern.source;\n  }\n  if (flags.indexOf(\"g\") === -1) flags += \"g\";\n  return new Enumerable(function () {\n    var regex;\n    return new IEnumerator(function () {\n      regex = new RegExp(pattern, flags);\n    }, function () {\n      var match = regex.exec(input);\n      return match ? this.yieldReturn(match) : false;\n    }, Functions.Blank);\n  });\n};\n\n// Overload:function(start, count)\n// Overload:function(start, count, step)\nEnumerable.range = function (start, count, step) {\n  if (step == null) step = 1;\n  return new Enumerable(function () {\n    var value;\n    var index = 0;\n    return new IEnumerator(function () {\n      value = start - step;\n    }, function () {\n      return index++ < count ? this.yieldReturn(value += step) : this.yieldBreak();\n    }, Functions.Blank);\n  });\n};\n\n// Overload:function(start, count)\n// Overload:function(start, count, step)\nEnumerable.rangeDown = function (start, count, step) {\n  if (step == null) step = 1;\n  return new Enumerable(function () {\n    var value;\n    var index = 0;\n    return new IEnumerator(function () {\n      value = start + step;\n    }, function () {\n      return index++ < count ? this.yieldReturn(value -= step) : this.yieldBreak();\n    }, Functions.Blank);\n  });\n};\n\n// Overload:function(start, to)\n// Overload:function(start, to, step)\nEnumerable.rangeTo = function (start, to, step) {\n  if (step == null) step = 1;\n  if (start < to) {\n    return new Enumerable(function () {\n      var value;\n      return new IEnumerator(function () {\n        value = start - step;\n      }, function () {\n        var next = value += step;\n        return next <= to ? this.yieldReturn(next) : this.yieldBreak();\n      }, Functions.Blank);\n    });\n  } else {\n    return new Enumerable(function () {\n      var value;\n      return new IEnumerator(function () {\n        value = start + step;\n      }, function () {\n        var next = value -= step;\n        return next >= to ? this.yieldReturn(next) : this.yieldBreak();\n      }, Functions.Blank);\n    });\n  }\n};\n\n// Overload:function(element)\n// Overload:function(element, count)\nEnumerable.repeat = function (element, count) {\n  if (count != null) return Enumerable.repeat(element).take(count);\n  return new Enumerable(function () {\n    return new IEnumerator(Functions.Blank, function () {\n      return this.yieldReturn(element);\n    }, Functions.Blank);\n  });\n};\nEnumerable.repeatWithFinalize = function (initializer, finalizer) {\n  initializer = Utils.createLambda(initializer);\n  finalizer = Utils.createLambda(finalizer);\n  return new Enumerable(function () {\n    var element;\n    return new IEnumerator(function () {\n      element = initializer();\n    }, function () {\n      return this.yieldReturn(element);\n    }, function () {\n      if (element != null) {\n        finalizer(element);\n        element = null;\n      }\n    });\n  });\n};\n\n// Overload:function(func)\n// Overload:function(func, count)\nEnumerable.generate = function (func, count) {\n  if (count != null) return Enumerable.generate(func).take(count);\n  func = Utils.createLambda(func);\n  return new Enumerable(function () {\n    return new IEnumerator(Functions.Blank, function () {\n      return this.yieldReturn(func());\n    }, Functions.Blank);\n  });\n};\n\n// Overload:function()\n// Overload:function(start)\n// Overload:function(start, step)\nEnumerable.toInfinity = function (start, step) {\n  if (start == null) start = 0;\n  if (step == null) step = 1;\n  return new Enumerable(function () {\n    var value;\n    return new IEnumerator(function () {\n      value = start - step;\n    }, function () {\n      return this.yieldReturn(value += step);\n    }, Functions.Blank);\n  });\n};\n\n// Overload:function()\n// Overload:function(start)\n// Overload:function(start, step)\nEnumerable.toNegativeInfinity = function (start, step) {\n  if (start == null) start = 0;\n  if (step == null) step = 1;\n  return new Enumerable(function () {\n    var value;\n    return new IEnumerator(function () {\n      value = start + step;\n    }, function () {\n      return this.yieldReturn(value -= step);\n    }, Functions.Blank);\n  });\n};\nEnumerable.unfold = function (seed, func) {\n  func = Utils.createLambda(func);\n  return new Enumerable(function () {\n    var isFirst = true;\n    var value;\n    return new IEnumerator(Functions.Blank, function () {\n      if (isFirst) {\n        isFirst = false;\n        value = seed;\n        return this.yieldReturn(value);\n      }\n      value = func(value);\n      return this.yieldReturn(value);\n    }, Functions.Blank);\n  });\n};\nEnumerable.defer = function (enumerableFactory) {\n  return new Enumerable(function () {\n    var enumerator;\n    return new IEnumerator(function () {\n      enumerator = Enumerable.from(enumerableFactory()).getEnumerator();\n    }, function () {\n      return enumerator.moveNext() ? this.yieldReturn(enumerator.current()) : this.yieldBreak();\n    }, function () {\n      Utils.dispose(enumerator);\n    });\n  });\n};\n\n/////////////////////\n// Extension Methods\n\n////////////////////////////////////\n// Projection and Filtering Methods\n\n// Overload:function(func)\n// Overload:function(func, resultSelector<element>)\n// Overload:function(func, resultSelector<element, nestLevel>)\nEnumerable.prototype.traverseBreadthFirst = function (func, resultSelector) {\n  var source = this;\n  func = Utils.createLambda(func);\n  resultSelector = Utils.createLambda(resultSelector);\n  return new Enumerable(function () {\n    var enumerator;\n    var nestLevel = 0;\n    var buffer = [];\n    return new IEnumerator(function () {\n      enumerator = source.getEnumerator();\n    }, function () {\n      while (true) {\n        if (enumerator.moveNext()) {\n          buffer.push(enumerator.current());\n          return this.yieldReturn(resultSelector(enumerator.current(), nestLevel));\n        }\n        const next = Enumerable.from(buffer).selectMany(function (x) {\n          return func(x);\n        });\n        if (!next.any()) {\n          return false;\n        } else {\n          nestLevel++;\n          buffer = [];\n          Utils.dispose(enumerator);\n          enumerator = next.getEnumerator();\n        }\n      }\n    }, function () {\n      Utils.dispose(enumerator);\n    });\n  });\n};\n\n// Overload:function(func)\n// Overload:function(func, resultSelector<element>)\n// Overload:function(func, resultSelector<element, nestLevel>)\nEnumerable.prototype.traverseDepthFirst = function (func, resultSelector) {\n  var source = this;\n  func = Utils.createLambda(func);\n  resultSelector = Utils.createLambda(resultSelector);\n  return new Enumerable(function () {\n    var enumeratorStack = [];\n    var enumerator;\n    return new IEnumerator(function () {\n      enumerator = source.getEnumerator();\n    }, function () {\n      while (true) {\n        if (enumerator.moveNext()) {\n          const value = resultSelector(enumerator.current(), enumeratorStack.length);\n          enumeratorStack.push(enumerator);\n          enumerator = Enumerable.from(func(enumerator.current())).getEnumerator();\n          return this.yieldReturn(value);\n        }\n        if (enumeratorStack.length <= 0) return false;\n        Utils.dispose(enumerator);\n        enumerator = enumeratorStack.pop();\n      }\n    }, function () {\n      try {\n        Utils.dispose(enumerator);\n      } finally {\n        Enumerable.from(enumeratorStack).forEach(function (s) {\n          s.dispose();\n        });\n      }\n    });\n  });\n};\nEnumerable.prototype.flatten = function () {\n  var source = this;\n  return new Enumerable(function () {\n    var enumerator;\n    var middleEnumerator = null;\n    return new IEnumerator(function () {\n      enumerator = source.getEnumerator();\n    }, function () {\n      while (true) {\n        if (middleEnumerator != null) {\n          if (middleEnumerator.moveNext()) {\n            return this.yieldReturn(middleEnumerator.current());\n          } else {\n            middleEnumerator = null;\n          }\n        }\n        if (enumerator.moveNext()) {\n          if (enumerator.current() instanceof Array) {\n            Utils.dispose(middleEnumerator);\n            middleEnumerator = Enumerable.from(enumerator.current()).selectMany(Functions.Identity).flatten().getEnumerator();\n            continue;\n          } else {\n            return this.yieldReturn(enumerator.current());\n          }\n        }\n        return false;\n      }\n    }, function () {\n      try {\n        Utils.dispose(enumerator);\n      } finally {\n        Utils.dispose(middleEnumerator);\n      }\n    });\n  });\n};\nEnumerable.prototype.pairwise = function (selector) {\n  var source = this;\n  selector = Utils.createLambda(selector);\n  return new Enumerable(function () {\n    var enumerator;\n    return new IEnumerator(function () {\n      enumerator = source.getEnumerator();\n      enumerator.moveNext();\n    }, function () {\n      var prev = enumerator.current();\n      return enumerator.moveNext() ? this.yieldReturn(selector(prev, enumerator.current())) : false;\n    }, function () {\n      Utils.dispose(enumerator);\n    });\n  });\n};\n\n// Overload:function(func)\n// Overload:function(seed,func<value,element>)\nEnumerable.prototype.scan = function (seed, func) {\n  var isUseSeed;\n  if (func == null) {\n    func = Utils.createLambda(seed);\n    isUseSeed = false;\n  } else {\n    func = Utils.createLambda(func);\n    isUseSeed = true;\n  }\n  var source = this;\n  return new Enumerable(function () {\n    var enumerator;\n    var value;\n    var isFirst = true;\n    return new IEnumerator(function () {\n      enumerator = source.getEnumerator();\n    }, function () {\n      if (isFirst) {\n        isFirst = false;\n        if (!isUseSeed) {\n          if (enumerator.moveNext()) {\n            return this.yieldReturn(value = enumerator.current());\n          }\n        } else {\n          return this.yieldReturn(value = seed);\n        }\n      }\n      return enumerator.moveNext() ? this.yieldReturn(value = func(value, enumerator.current())) : false;\n    }, function () {\n      Utils.dispose(enumerator);\n    });\n  });\n};\n\n// Overload:function(selector<element>)\n// Overload:function(selector<element,index>)\nEnumerable.prototype.select = function (selector) {\n  selector = Utils.createLambda(selector);\n  if (selector.length <= 1) {\n    return new WhereSelectEnumerable(this, null, selector);\n  } else {\n    var source = this;\n    return new Enumerable(function () {\n      var enumerator;\n      var index = 0;\n      return new IEnumerator(function () {\n        enumerator = source.getEnumerator();\n      }, function () {\n        return enumerator.moveNext() ? this.yieldReturn(selector(enumerator.current(), index++)) : false;\n      }, function () {\n        Utils.dispose(enumerator);\n      });\n    });\n  }\n};\n\n// Overload:function(collectionSelector<element>)\n// Overload:function(collectionSelector<element,index>)\n// Overload:function(collectionSelector<element>,resultSelector)\n// Overload:function(collectionSelector<element,index>,resultSelector)\nEnumerable.prototype.selectMany = function (collectionSelector, resultSelector) {\n  var source = this;\n  collectionSelector = Utils.createLambda(collectionSelector);\n  if (resultSelector == null) resultSelector = function (a, b) {\n    return b;\n  };\n  resultSelector = Utils.createLambda(resultSelector);\n  return new Enumerable(function () {\n    var enumerator;\n    var middleEnumerator = undefined;\n    var index = 0;\n    return new IEnumerator(function () {\n      enumerator = source.getEnumerator();\n    }, function () {\n      if (middleEnumerator === undefined) {\n        if (!enumerator.moveNext()) return false;\n      }\n      do {\n        if (middleEnumerator == null) {\n          const middleSeq = collectionSelector(enumerator.current(), index++);\n          middleEnumerator = Enumerable.from(middleSeq).getEnumerator();\n        }\n        if (middleEnumerator.moveNext()) {\n          return this.yieldReturn(resultSelector(enumerator.current(), middleEnumerator.current()));\n        }\n        Utils.dispose(middleEnumerator);\n        middleEnumerator = null;\n      } while (enumerator.moveNext());\n      return false;\n    }, function () {\n      try {\n        Utils.dispose(enumerator);\n      } finally {\n        Utils.dispose(middleEnumerator);\n      }\n    });\n  });\n};\n\n// Overload:function(predicate<element>)\n// Overload:function(predicate<element,index>)\nEnumerable.prototype.where = function (predicate) {\n  predicate = Utils.createLambda(predicate);\n  if (predicate.length <= 1) {\n    return new WhereEnumerable(this, predicate);\n  } else {\n    var source = this;\n    return new Enumerable(function () {\n      var enumerator;\n      var index = 0;\n      return new IEnumerator(function () {\n        enumerator = source.getEnumerator();\n      }, function () {\n        while (enumerator.moveNext()) {\n          if (predicate(enumerator.current(), index++)) {\n            return this.yieldReturn(enumerator.current());\n          }\n        }\n        return false;\n      }, function () {\n        Utils.dispose(enumerator);\n      });\n    });\n  }\n};\n\n// Overload:function(selector<element>)\n// Overload:function(selector<element,index>)\nEnumerable.prototype.choose = function (selector) {\n  selector = Utils.createLambda(selector);\n  var source = this;\n  return new Enumerable(function () {\n    var enumerator;\n    var index = 0;\n    return new IEnumerator(function () {\n      enumerator = source.getEnumerator();\n    }, function () {\n      while (enumerator.moveNext()) {\n        const result = selector(enumerator.current(), index++);\n        if (result != null) {\n          return this.yieldReturn(result);\n        }\n      }\n      return this.yieldBreak();\n    }, function () {\n      Utils.dispose(enumerator);\n    });\n  });\n};\nEnumerable.prototype.ofType = function (type) {\n  var typeName;\n  switch (type) {\n    case Number:\n      typeName = Types.Number;\n      break;\n    case String:\n      typeName = Types.String;\n      break;\n    case Boolean:\n      typeName = Types.Boolean;\n      break;\n    case Function:\n      typeName = Types.Function;\n      break;\n    default:\n      typeName = null;\n      break;\n  }\n  return typeName === null ? this.where(function (x) {\n    return x instanceof type;\n  }) : this.where(function (x) {\n    return typeof x === typeName;\n  });\n};\n\n// mutiple arguments, last one is selector, others are enumerable\nEnumerable.prototype.zip = function () {\n  var args = arguments;\n  var selector = Utils.createLambda(arguments[arguments.length - 1]);\n  var source = this;\n  // optimized case:argument is 2\n  if (arguments.length == 2) {\n    const second = arguments[0];\n    return new Enumerable(function () {\n      var firstEnumerator;\n      var secondEnumerator;\n      var index = 0;\n      return new IEnumerator(function () {\n        firstEnumerator = source.getEnumerator();\n        secondEnumerator = Enumerable.from(second).getEnumerator();\n      }, function () {\n        if (firstEnumerator.moveNext() && secondEnumerator.moveNext()) {\n          return this.yieldReturn(selector(firstEnumerator.current(), secondEnumerator.current(), index++));\n        }\n        return false;\n      }, function () {\n        try {\n          Utils.dispose(firstEnumerator);\n        } finally {\n          Utils.dispose(secondEnumerator);\n        }\n      });\n    });\n  } else {\n    return new Enumerable(function () {\n      var enumerators;\n      var index = 0;\n      return new IEnumerator(function () {\n        var array = Enumerable.make(source).concat(Enumerable.from(args).takeExceptLast().select(Enumerable.from)).select(function (x) {\n          return x.getEnumerator();\n        }).toArray();\n        enumerators = Enumerable.from(array);\n      }, function () {\n        if (enumerators.all(function (x) {\n          return x.moveNext();\n        })) {\n          const array = enumerators.select(function (x) {\n            return x.current();\n          }).toArray();\n          array.push(index++);\n          return this.yieldReturn(selector.apply(null, array));\n        } else {\n          return this.yieldBreak();\n        }\n      }, function () {\n        Enumerable.from(enumerators).forEach(Utils.dispose);\n      });\n    });\n  }\n};\n\n// mutiple arguments\nEnumerable.prototype.merge = function () {\n  var args = arguments;\n  var source = this;\n  return new Enumerable(function () {\n    var enumerators;\n    var index = -1;\n    return new IEnumerator(function () {\n      enumerators = Enumerable.make(source).concat(Enumerable.from(args).select(Enumerable.from)).select(function (x) {\n        return x.getEnumerator();\n      }).toArray();\n    }, function () {\n      while (enumerators.length > 0) {\n        index = index >= enumerators.length - 1 ? 0 : index + 1;\n        const enumerator = enumerators[index];\n        if (enumerator.moveNext()) {\n          return this.yieldReturn(enumerator.current());\n        } else {\n          enumerator.dispose();\n          enumerators.splice(index--, 1);\n        }\n      }\n      return this.yieldBreak();\n    }, function () {\n      Enumerable.from(enumerators).forEach(Utils.dispose);\n    });\n  });\n};\n\n////////////////\n// Join Methods\n\n// Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector)\n// Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector)\nEnumerable.prototype.join = function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector) {\n  outerKeySelector = Utils.createLambda(outerKeySelector);\n  innerKeySelector = Utils.createLambda(innerKeySelector);\n  resultSelector = Utils.createLambda(resultSelector);\n  compareSelector = Utils.createLambda(compareSelector);\n  var source = this;\n  return new Enumerable(function () {\n    var outerEnumerator;\n    var lookup;\n    var innerElements = null;\n    var innerCount = 0;\n    return new IEnumerator(function () {\n      outerEnumerator = source.getEnumerator();\n      lookup = Enumerable.from(inner).toLookup(innerKeySelector, Functions.Identity, compareSelector);\n    }, function () {\n      while (true) {\n        if (innerElements != null) {\n          let innerElement = innerElements[innerCount++];\n          if (innerElement !== undefined) {\n            return this.yieldReturn(resultSelector(outerEnumerator.current(), innerElement));\n          }\n          innerElement = null;\n          innerCount = 0;\n        }\n        if (outerEnumerator.moveNext()) {\n          const key = outerKeySelector(outerEnumerator.current());\n          innerElements = lookup.get(key).toArray();\n        } else {\n          return false;\n        }\n      }\n    }, function () {\n      Utils.dispose(outerEnumerator);\n    });\n  });\n};\n\n// Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector)\n// Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector)\nEnumerable.prototype.leftJoin = function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector) {\n  outerKeySelector = Utils.createLambda(outerKeySelector);\n  innerKeySelector = Utils.createLambda(innerKeySelector);\n  resultSelector = Utils.createLambda(resultSelector);\n  compareSelector = Utils.createLambda(compareSelector);\n  var source = this;\n  return new Enumerable(function () {\n    var outerEnumerator;\n    var lookup;\n    var innerElements = null;\n    var innerCount = 0;\n    return new IEnumerator(function () {\n      outerEnumerator = source.getEnumerator();\n      lookup = Enumerable.from(inner).toLookup(innerKeySelector, Functions.Identity, compareSelector);\n    }, function () {\n      while (true) {\n        if (innerElements != null) {\n          let innerElement = innerElements[innerCount++];\n          if (innerElement !== undefined) {\n            return this.yieldReturn(resultSelector(outerEnumerator.current(), innerElement));\n          }\n          innerElement = null;\n          innerCount = 0;\n        }\n        if (outerEnumerator.moveNext()) {\n          const key = outerKeySelector(outerEnumerator.current());\n          innerElements = lookup.get(key).toArray();\n          // execute once if innerElements is NULL\n          if (innerElements == null || innerElements.length == 0) {\n            return this.yieldReturn(resultSelector(outerEnumerator.current(), null));\n          }\n        } else {\n          return false;\n        }\n      }\n    }, function () {\n      Utils.dispose(outerEnumerator);\n    });\n  });\n};\n\n// Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector)\n// Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector)\nEnumerable.prototype.groupJoin = function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector) {\n  outerKeySelector = Utils.createLambda(outerKeySelector);\n  innerKeySelector = Utils.createLambda(innerKeySelector);\n  resultSelector = Utils.createLambda(resultSelector);\n  compareSelector = Utils.createLambda(compareSelector);\n  var source = this;\n  return new Enumerable(function () {\n    var enumerator = source.getEnumerator();\n    var lookup = null;\n    return new IEnumerator(function () {\n      enumerator = source.getEnumerator();\n      lookup = Enumerable.from(inner).toLookup(innerKeySelector, Functions.Identity, compareSelector);\n    }, function () {\n      if (enumerator.moveNext()) {\n        const innerElement = lookup.get(outerKeySelector(enumerator.current()));\n        return this.yieldReturn(resultSelector(enumerator.current(), innerElement));\n      }\n      return false;\n    }, function () {\n      Utils.dispose(enumerator);\n    });\n  });\n};\n\n///////////////\n// Set Methods\n\nEnumerable.prototype.all = function (predicate) {\n  predicate = Utils.createLambda(predicate);\n  var result = true;\n  this.forEach(function (x) {\n    if (!predicate(x)) {\n      result = false;\n      return false; // break\n    }\n  });\n  return result;\n};\n\n// Overload:function()\n// Overload:function(predicate)\nEnumerable.prototype.any = function (predicate) {\n  predicate = Utils.createLambda(predicate);\n  var enumerator = this.getEnumerator();\n  try {\n    if (arguments.length == 0) return enumerator.moveNext(); // case:function()\n\n    while (enumerator.moveNext())\n    // case:function(predicate)\n    {\n      if (predicate(enumerator.current())) return true;\n    }\n    return false;\n  } finally {\n    Utils.dispose(enumerator);\n  }\n};\nEnumerable.prototype.isEmpty = function () {\n  return !this.any();\n};\n\n// multiple arguments\nEnumerable.prototype.concat = function () {\n  var source = this;\n  if (arguments.length == 1) {\n    const second = arguments[0];\n    return new Enumerable(function () {\n      var firstEnumerator;\n      var secondEnumerator;\n      return new IEnumerator(function () {\n        firstEnumerator = source.getEnumerator();\n      }, function () {\n        if (secondEnumerator == null) {\n          if (firstEnumerator.moveNext()) return this.yieldReturn(firstEnumerator.current());\n          secondEnumerator = Enumerable.from(second).getEnumerator();\n        }\n        if (secondEnumerator.moveNext()) return this.yieldReturn(secondEnumerator.current());\n        return false;\n      }, function () {\n        try {\n          Utils.dispose(firstEnumerator);\n        } finally {\n          Utils.dispose(secondEnumerator);\n        }\n      });\n    });\n  } else {\n    const args = arguments;\n    return new Enumerable(function () {\n      var enumerators;\n      return new IEnumerator(function () {\n        enumerators = Enumerable.make(source).concat(Enumerable.from(args).select(Enumerable.from)).select(function (x) {\n          return x.getEnumerator();\n        }).toArray();\n      }, function () {\n        while (enumerators.length > 0) {\n          const enumerator = enumerators[0];\n          if (enumerator.moveNext()) {\n            return this.yieldReturn(enumerator.current());\n          } else {\n            enumerator.dispose();\n            enumerators.splice(0, 1);\n          }\n        }\n        return this.yieldBreak();\n      }, function () {\n        Enumerable.from(enumerators).forEach(Utils.dispose);\n      });\n    });\n  }\n};\nEnumerable.prototype.insert = function (index, second) {\n  var source = this;\n  return new Enumerable(function () {\n    var firstEnumerator;\n    var secondEnumerator;\n    var count = 0;\n    var isEnumerated = false;\n    return new IEnumerator(function () {\n      firstEnumerator = source.getEnumerator();\n      secondEnumerator = Enumerable.from(second).getEnumerator();\n    }, function () {\n      if (count == index && secondEnumerator.moveNext()) {\n        isEnumerated = true;\n        return this.yieldReturn(secondEnumerator.current());\n      }\n      if (firstEnumerator.moveNext()) {\n        count++;\n        return this.yieldReturn(firstEnumerator.current());\n      }\n      if (!isEnumerated && secondEnumerator.moveNext()) {\n        return this.yieldReturn(secondEnumerator.current());\n      }\n      return false;\n    }, function () {\n      try {\n        Utils.dispose(firstEnumerator);\n      } finally {\n        Utils.dispose(secondEnumerator);\n      }\n    });\n  });\n};\nEnumerable.prototype.alternate = function (alternateValueOrSequence) {\n  var source = this;\n  return new Enumerable(function () {\n    var buffer;\n    var enumerator;\n    var alternateSequence;\n    var alternateEnumerator;\n    return new IEnumerator(function () {\n      if (alternateValueOrSequence instanceof Array || alternateValueOrSequence.getEnumerator != null) {\n        alternateSequence = Enumerable.from(Enumerable.from(alternateValueOrSequence).toArray()); // freeze\n      } else {\n        alternateSequence = Enumerable.make(alternateValueOrSequence);\n      }\n      enumerator = source.getEnumerator();\n      if (enumerator.moveNext()) buffer = enumerator.current();\n    }, function () {\n      while (true) {\n        if (alternateEnumerator != null) {\n          if (alternateEnumerator.moveNext()) {\n            return this.yieldReturn(alternateEnumerator.current());\n          } else {\n            alternateEnumerator = null;\n          }\n        }\n        if (buffer == null && enumerator.moveNext()) {\n          buffer = enumerator.current(); // hasNext\n          alternateEnumerator = alternateSequence.getEnumerator();\n          continue; // GOTO\n        } else if (buffer != null) {\n          const retVal = buffer;\n          buffer = null;\n          return this.yieldReturn(retVal);\n        }\n        return this.yieldBreak();\n      }\n    }, function () {\n      try {\n        Utils.dispose(enumerator);\n      } finally {\n        Utils.dispose(alternateEnumerator);\n      }\n    });\n  });\n};\n\n// Overload:function(value)\n// Overload:function(value, compareSelector)\nEnumerable.prototype.contains = function (value, compareSelector) {\n  compareSelector = Utils.createLambda(compareSelector);\n  var enumerator = this.getEnumerator();\n  try {\n    while (enumerator.moveNext()) {\n      if (compareSelector(enumerator.current()) === value) return true;\n    }\n    return false;\n  } finally {\n    Utils.dispose(enumerator);\n  }\n};\nEnumerable.prototype.defaultIfEmpty = function (defaultValue) {\n  var source = this;\n  if (defaultValue === undefined) defaultValue = null;\n  return new Enumerable(function () {\n    var enumerator;\n    var isFirst = true;\n    return new IEnumerator(function () {\n      enumerator = source.getEnumerator();\n    }, function () {\n      if (enumerator.moveNext()) {\n        isFirst = false;\n        return this.yieldReturn(enumerator.current());\n      } else if (isFirst) {\n        isFirst = false;\n        return this.yieldReturn(defaultValue);\n      }\n      return false;\n    }, function () {\n      Utils.dispose(enumerator);\n    });\n  });\n};\n\n// Overload:function()\n// Overload:function(compareSelector)\nEnumerable.prototype.distinct = function (compareSelector) {\n  return this.except(Enumerable.empty(), compareSelector);\n};\nEnumerable.prototype.distinctUntilChanged = function (compareSelector) {\n  compareSelector = Utils.createLambda(compareSelector);\n  var source = this;\n  return new Enumerable(function () {\n    var enumerator;\n    var compareKey;\n    var initial;\n    return new IEnumerator(function () {\n      enumerator = source.getEnumerator();\n    }, function () {\n      while (enumerator.moveNext()) {\n        const key = compareSelector(enumerator.current());\n        if (initial) {\n          initial = false;\n          compareKey = key;\n          return this.yieldReturn(enumerator.current());\n        }\n        if (compareKey === key) {\n          continue;\n        }\n        compareKey = key;\n        return this.yieldReturn(enumerator.current());\n      }\n      return this.yieldBreak();\n    }, function () {\n      Utils.dispose(enumerator);\n    });\n  });\n};\n\n// Overload:function(second)\n// Overload:function(second, compareSelector)\nEnumerable.prototype.except = function (second, compareSelector) {\n  compareSelector = Utils.createLambda(compareSelector);\n  var source = this;\n  return new Enumerable(function () {\n    var enumerator;\n    var keys;\n    return new IEnumerator(function () {\n      enumerator = source.getEnumerator();\n      keys = new Dictionary(compareSelector);\n      Enumerable.from(second).forEach(function (key) {\n        keys.add(key);\n      });\n    }, function () {\n      while (enumerator.moveNext()) {\n        const current = enumerator.current();\n        if (!keys.contains(current)) {\n          keys.add(current);\n          return this.yieldReturn(current);\n        }\n      }\n      return false;\n    }, function () {\n      Utils.dispose(enumerator);\n    });\n  });\n};\n\n// Overload:function(second)\n// Overload:function(second, compareSelector)\nEnumerable.prototype.intersect = function (second, compareSelector) {\n  compareSelector = Utils.createLambda(compareSelector);\n  var source = this;\n  return new Enumerable(function () {\n    var enumerator;\n    var keys;\n    var outs;\n    return new IEnumerator(function () {\n      enumerator = source.getEnumerator();\n      keys = new Dictionary(compareSelector);\n      Enumerable.from(second).forEach(function (key) {\n        keys.add(key);\n      });\n      outs = new Dictionary(compareSelector);\n    }, function () {\n      while (enumerator.moveNext()) {\n        const current = enumerator.current();\n        if (!outs.contains(current) && keys.contains(current)) {\n          outs.add(current);\n          return this.yieldReturn(current);\n        }\n      }\n      return false;\n    }, function () {\n      Utils.dispose(enumerator);\n    });\n  });\n};\n\n// Overload:function(second)\n// Overload:function(second, compareSelector)\nEnumerable.prototype.sequenceEqual = function (second, compareSelector) {\n  compareSelector = Utils.createLambda(compareSelector);\n  var firstEnumerator = this.getEnumerator();\n  try {\n    const secondEnumerator = Enumerable.from(second).getEnumerator();\n    try {\n      while (firstEnumerator.moveNext()) {\n        if (!secondEnumerator.moveNext() || compareSelector(firstEnumerator.current()) !== compareSelector(secondEnumerator.current())) {\n          return false;\n        }\n      }\n      if (secondEnumerator.moveNext()) return false;\n      return true;\n    } finally {\n      Utils.dispose(secondEnumerator);\n    }\n  } finally {\n    Utils.dispose(firstEnumerator);\n  }\n};\nEnumerable.prototype.union = function (second, compareSelector) {\n  compareSelector = Utils.createLambda(compareSelector);\n  var source = this;\n  return new Enumerable(function () {\n    var firstEnumerator;\n    var secondEnumerator;\n    var keys;\n    return new IEnumerator(function () {\n      firstEnumerator = source.getEnumerator();\n      keys = new Dictionary(compareSelector);\n    }, function () {\n      var current;\n      if (secondEnumerator === undefined) {\n        while (firstEnumerator.moveNext()) {\n          current = firstEnumerator.current();\n          if (!keys.contains(current)) {\n            keys.add(current);\n            return this.yieldReturn(current);\n          }\n        }\n        secondEnumerator = Enumerable.from(second).getEnumerator();\n      }\n      while (secondEnumerator.moveNext()) {\n        current = secondEnumerator.current();\n        if (!keys.contains(current)) {\n          keys.add(current);\n          return this.yieldReturn(current);\n        }\n      }\n      return false;\n    }, function () {\n      try {\n        Utils.dispose(firstEnumerator);\n      } finally {\n        Utils.dispose(secondEnumerator);\n      }\n    });\n  });\n};\n\n////////////////////\n// Ordering Methods\n\nEnumerable.prototype.orderBy = function (keySelector, comparer) {\n  return new OrderedEnumerable(this, keySelector, comparer, false);\n};\nEnumerable.prototype.orderByDescending = function (keySelector, comparer) {\n  return new OrderedEnumerable(this, keySelector, comparer, true);\n};\nEnumerable.prototype.reverse = function () {\n  var source = this;\n  return new Enumerable(function () {\n    var buffer;\n    var index;\n    return new IEnumerator(function () {\n      buffer = source.toArray();\n      index = buffer.length;\n    }, function () {\n      return index > 0 ? this.yieldReturn(buffer[--index]) : false;\n    }, Functions.Blank);\n  });\n};\nEnumerable.prototype.shuffle = function () {\n  var source = this;\n  return new Enumerable(function () {\n    var buffer;\n    return new IEnumerator(function () {\n      buffer = source.toArray();\n    }, function () {\n      if (buffer.length > 0) {\n        const i = Math.floor(Math.random() * buffer.length);\n        return this.yieldReturn(buffer.splice(i, 1)[0]);\n      }\n      return false;\n    }, Functions.Blank);\n  });\n};\nEnumerable.prototype.weightedSample = function (weightSelector) {\n  weightSelector = Utils.createLambda(weightSelector);\n  var source = this;\n  return new Enumerable(function () {\n    var sortedByBound;\n    var totalWeight = 0;\n    return new IEnumerator(function () {\n      sortedByBound = source.choose(function (x) {\n        var weight = weightSelector(x);\n        if (weight <= 0) return null; // ignore 0\n\n        totalWeight += weight;\n        return {\n          value: x,\n          bound: totalWeight\n        };\n      }).toArray();\n    }, function () {\n      if (sortedByBound.length > 0) {\n        const draw = Math.floor(Math.random() * totalWeight) + 1;\n        let lower = -1;\n        let upper = sortedByBound.length;\n        while (upper - lower > 1) {\n          const index = Math.floor((lower + upper) / 2);\n          if (sortedByBound[index].bound >= draw) {\n            upper = index;\n          } else {\n            lower = index;\n          }\n        }\n        return this.yieldReturn(sortedByBound[upper].value);\n      }\n      return this.yieldBreak();\n    }, Functions.Blank);\n  });\n};\n\n////////////////////\n// Grouping Methods\n\n// Overload:function(keySelector)\n// Overload:function(keySelector,elementSelector)\n// Overload:function(keySelector,elementSelector,resultSelector)\n// Overload:function(keySelector,elementSelector,resultSelector,compareSelector)\nEnumerable.prototype.groupBy = function (keySelector, elementSelector, resultSelector, compareSelector) {\n  var source = this;\n  keySelector = Utils.createLambda(keySelector);\n  elementSelector = Utils.createLambda(elementSelector);\n  if (resultSelector != null) resultSelector = Utils.createLambda(resultSelector);\n  compareSelector = Utils.createLambda(compareSelector);\n  return new Enumerable(function () {\n    var enumerator;\n    return new IEnumerator(function () {\n      enumerator = source.toLookup(keySelector, elementSelector, compareSelector).toEnumerable().getEnumerator();\n    }, function () {\n      while (enumerator.moveNext()) {\n        return resultSelector == null ? this.yieldReturn(enumerator.current()) : this.yieldReturn(resultSelector(enumerator.current().key(), enumerator.current()));\n      }\n      return false;\n    }, function () {\n      Utils.dispose(enumerator);\n    });\n  });\n};\n\n// Overload:function(keySelector)\n// Overload:function(keySelector,elementSelector)\n// Overload:function(keySelector,elementSelector,resultSelector)\n// Overload:function(keySelector,elementSelector,resultSelector,compareSelector)\nEnumerable.prototype.partitionBy = function (keySelector, elementSelector, resultSelector, compareSelector) {\n  var source = this;\n  keySelector = Utils.createLambda(keySelector);\n  elementSelector = Utils.createLambda(elementSelector);\n  compareSelector = Utils.createLambda(compareSelector);\n  var hasResultSelector;\n  if (resultSelector == null) {\n    hasResultSelector = false;\n    resultSelector = function (key, group) {\n      return new Grouping(key, group);\n    };\n  } else {\n    hasResultSelector = true;\n    resultSelector = Utils.createLambda(resultSelector);\n  }\n  return new Enumerable(function () {\n    var enumerator;\n    var key;\n    var compareKey;\n    var group = [];\n    return new IEnumerator(function () {\n      enumerator = source.getEnumerator();\n      if (enumerator.moveNext()) {\n        key = keySelector(enumerator.current());\n        compareKey = compareSelector(key);\n        group.push(elementSelector(enumerator.current()));\n      }\n    }, function () {\n      var hasNext;\n      while ((hasNext = enumerator.moveNext()) == true) {\n        if (compareKey === compareSelector(keySelector(enumerator.current()))) {\n          group.push(elementSelector(enumerator.current()));\n        } else break;\n      }\n      if (group.length > 0) {\n        const result = hasResultSelector ? resultSelector(key, Enumerable.from(group)) : resultSelector(key, group);\n        if (hasNext) {\n          key = keySelector(enumerator.current());\n          compareKey = compareSelector(key);\n          group = [elementSelector(enumerator.current())];\n        } else group = [];\n        return this.yieldReturn(result);\n      }\n      return false;\n    }, function () {\n      Utils.dispose(enumerator);\n    });\n  });\n};\nEnumerable.prototype.buffer = function (count) {\n  var source = this;\n  return new Enumerable(function () {\n    var enumerator;\n    return new IEnumerator(function () {\n      enumerator = source.getEnumerator();\n    }, function () {\n      var array = [];\n      var index = 0;\n      while (enumerator.moveNext()) {\n        array.push(enumerator.current());\n        if (++index >= count) return this.yieldReturn(array);\n      }\n      if (array.length > 0) return this.yieldReturn(array);\n      return false;\n    }, function () {\n      Utils.dispose(enumerator);\n    });\n  });\n};\n\n/////////////////////\n// Aggregate Methods\n\n// Overload:function(func)\n// Overload:function(seed,func)\n// Overload:function(seed,func,resultSelector)\nEnumerable.prototype.aggregate = function (seed, func, resultSelector) {\n  resultSelector = Utils.createLambda(resultSelector);\n  return resultSelector(this.scan(seed, func, resultSelector).last());\n};\n\n// Overload:function()\n// Overload:function(selector)\nEnumerable.prototype.average = function (selector) {\n  selector = Utils.createLambda(selector);\n  var sum = 0;\n  var count = 0;\n  this.forEach(function (x) {\n    sum += selector(x);\n    ++count;\n  });\n  return sum / count;\n};\n\n// Overload:function()\n// Overload:function(predicate)\nEnumerable.prototype.count = function (predicate) {\n  predicate = predicate == null ? Functions.True : Utils.createLambda(predicate);\n  var count = 0;\n  this.forEach(function (x, i) {\n    if (predicate(x, i)) ++count;\n  });\n  return count;\n};\n\n// Overload:function()\n// Overload:function(selector)\nEnumerable.prototype.max = function (selector) {\n  if (selector == null) selector = Functions.Identity;\n  return this.select(selector).aggregate(function (a, b) {\n    return a > b ? a : b;\n  });\n};\n\n// Overload:function()\n// Overload:function(selector)\nEnumerable.prototype.min = function (selector) {\n  if (selector == null) selector = Functions.Identity;\n  return this.select(selector).aggregate(function (a, b) {\n    return a < b ? a : b;\n  });\n};\nEnumerable.prototype.maxBy = function (keySelector) {\n  keySelector = Utils.createLambda(keySelector);\n  return this.aggregate(function (a, b) {\n    return keySelector(a) > keySelector(b) ? a : b;\n  });\n};\nEnumerable.prototype.minBy = function (keySelector) {\n  keySelector = Utils.createLambda(keySelector);\n  return this.aggregate(function (a, b) {\n    return keySelector(a) < keySelector(b) ? a : b;\n  });\n};\n\n// Overload:function()\n// Overload:function(selector)\nEnumerable.prototype.sum = function (selector) {\n  if (selector == null) selector = Functions.Identity;\n  return this.select(selector).aggregate(0, function (a, b) {\n    return a + b;\n  });\n};\n\n//////////////////\n// Paging Methods\n\nEnumerable.prototype.elementAt = function (index) {\n  var value;\n  var found = false;\n  this.forEach(function (x, i) {\n    if (i == index) {\n      value = x;\n      found = true;\n      return false;\n    }\n  });\n  if (!found) throw new Error(\"index is less than 0 or greater than or equal to the number of elements in source.\");\n  return value;\n};\nEnumerable.prototype.elementAtOrDefault = function (index, defaultValue) {\n  if (defaultValue === undefined) defaultValue = null;\n  var value;\n  var found = false;\n  this.forEach(function (x, i) {\n    if (i == index) {\n      value = x;\n      found = true;\n      return false;\n    }\n  });\n  return !found ? defaultValue : value;\n};\n\n// Overload:function()\n// Overload:function(predicate)\nEnumerable.prototype.first = function (predicate) {\n  if (predicate != null) return this.where(predicate).first();\n  var value;\n  var found = false;\n  this.forEach(function (x) {\n    value = x;\n    found = true;\n    return false;\n  });\n  if (!found) throw new Error(\"first:No element satisfies the condition.\");\n  return value;\n};\nEnumerable.prototype.firstOrDefault = function (predicate, defaultValue) {\n  if (predicate !== undefined) {\n    if (typeof predicate === Types.Function || typeof Utils.createLambda(predicate) === Types.Function) {\n      return this.where(predicate).firstOrDefault(undefined, defaultValue);\n    }\n    defaultValue = predicate;\n  }\n  var value;\n  var found = false;\n  this.forEach(function (x) {\n    value = x;\n    found = true;\n    return false;\n  });\n  return !found ? defaultValue : value;\n};\n\n// Overload:function()\n// Overload:function(predicate)\nEnumerable.prototype.last = function (predicate) {\n  if (predicate != null) return this.where(predicate).last();\n  var value;\n  var found = false;\n  this.forEach(function (x) {\n    found = true;\n    value = x;\n  });\n  if (!found) throw new Error(\"last:No element satisfies the condition.\");\n  return value;\n};\nEnumerable.prototype.lastOrDefault = function (predicate, defaultValue) {\n  if (predicate !== undefined) {\n    if (typeof predicate === Types.Function || typeof Utils.createLambda(predicate) === Types.Function) {\n      return this.where(predicate).lastOrDefault(undefined, defaultValue);\n    }\n    defaultValue = predicate;\n  }\n  var value;\n  var found = false;\n  this.forEach(function (x) {\n    found = true;\n    value = x;\n  });\n  return !found ? defaultValue : value;\n};\n\n// Overload:function()\n// Overload:function(predicate)\nEnumerable.prototype.single = function (predicate) {\n  if (predicate != null) return this.where(predicate).single();\n  var value;\n  var found = false;\n  this.forEach(function (x) {\n    if (!found) {\n      found = true;\n      value = x;\n    } else throw new Error(\"single:sequence contains more than one element.\");\n  });\n  if (!found) throw new Error(\"single:No element satisfies the condition.\");\n  return value;\n};\n\n// Overload:function(defaultValue)\n// Overload:function(defaultValue,predicate)\nEnumerable.prototype.singleOrDefault = function (predicate, defaultValue) {\n  if (defaultValue === undefined) defaultValue = null;\n  if (predicate != null) return this.where(predicate).singleOrDefault(null, defaultValue);\n  var value;\n  var found = false;\n  this.forEach(function (x) {\n    if (!found) {\n      found = true;\n      value = x;\n    } else throw new Error(\"single:sequence contains more than one element.\");\n  });\n  return !found ? defaultValue : value;\n};\nEnumerable.prototype.skip = function (count) {\n  var source = this;\n  return new Enumerable(function () {\n    var enumerator;\n    var index = 0;\n    return new IEnumerator(function () {\n      enumerator = source.getEnumerator();\n      while (index++ < count && enumerator.moveNext()) {}\n    }, function () {\n      return enumerator.moveNext() ? this.yieldReturn(enumerator.current()) : false;\n    }, function () {\n      Utils.dispose(enumerator);\n    });\n  });\n};\n\n// Overload:function(predicate<element>)\n// Overload:function(predicate<element,index>)\nEnumerable.prototype.skipWhile = function (predicate) {\n  predicate = Utils.createLambda(predicate);\n  var source = this;\n  return new Enumerable(function () {\n    var enumerator;\n    var index = 0;\n    var isSkipEnd = false;\n    return new IEnumerator(function () {\n      enumerator = source.getEnumerator();\n    }, function () {\n      while (!isSkipEnd) {\n        if (enumerator.moveNext()) {\n          if (!predicate(enumerator.current(), index++)) {\n            isSkipEnd = true;\n            return this.yieldReturn(enumerator.current());\n          }\n          continue;\n        } else return false;\n      }\n      return enumerator.moveNext() ? this.yieldReturn(enumerator.current()) : false;\n    }, function () {\n      Utils.dispose(enumerator);\n    });\n  });\n};\nEnumerable.prototype.take = function (count) {\n  var source = this;\n  return new Enumerable(function () {\n    var enumerator;\n    var index = 0;\n    return new IEnumerator(function () {\n      enumerator = source.getEnumerator();\n    }, function () {\n      return index++ < count && enumerator.moveNext() ? this.yieldReturn(enumerator.current()) : false;\n    }, function () {\n      Utils.dispose(enumerator);\n    });\n  });\n};\n\n// Overload:function(predicate<element>)\n// Overload:function(predicate<element,index>)\nEnumerable.prototype.takeWhile = function (predicate) {\n  predicate = Utils.createLambda(predicate);\n  var source = this;\n  return new Enumerable(function () {\n    var enumerator;\n    var index = 0;\n    return new IEnumerator(function () {\n      enumerator = source.getEnumerator();\n    }, function () {\n      return enumerator.moveNext() && predicate(enumerator.current(), index++) ? this.yieldReturn(enumerator.current()) : false;\n    }, function () {\n      Utils.dispose(enumerator);\n    });\n  });\n};\n\n// Overload:function()\n// Overload:function(count)\nEnumerable.prototype.takeExceptLast = function (count) {\n  if (count == null) count = 1;\n  var source = this;\n  return new Enumerable(function () {\n    if (count <= 0) return source.getEnumerator(); // do nothing\n\n    var enumerator;\n    var q = [];\n    return new IEnumerator(function () {\n      enumerator = source.getEnumerator();\n    }, function () {\n      while (enumerator.moveNext()) {\n        if (q.length == count) {\n          q.push(enumerator.current());\n          return this.yieldReturn(q.shift());\n        }\n        q.push(enumerator.current());\n      }\n      return false;\n    }, function () {\n      Utils.dispose(enumerator);\n    });\n  });\n};\nEnumerable.prototype.takeFromLast = function (count) {\n  if (count <= 0 || count == null) return Enumerable.empty();\n  var source = this;\n  return new Enumerable(function () {\n    var sourceEnumerator;\n    var enumerator;\n    var q = [];\n    return new IEnumerator(function () {\n      sourceEnumerator = source.getEnumerator();\n    }, function () {\n      while (sourceEnumerator.moveNext()) {\n        if (q.length == count) q.shift();\n        q.push(sourceEnumerator.current());\n      }\n      if (enumerator == null) {\n        enumerator = Enumerable.from(q).getEnumerator();\n      }\n      return enumerator.moveNext() ? this.yieldReturn(enumerator.current()) : false;\n    }, function () {\n      Utils.dispose(enumerator);\n    });\n  });\n};\n\n// Overload:function(item)\n// Overload:function(predicate)\nEnumerable.prototype.indexOf = function (item) {\n  var found = null;\n\n  // item as predicate\n  if (typeof item === Types.Function) {\n    this.forEach(function (x, i) {\n      if (item(x, i)) {\n        found = i;\n        return false;\n      }\n    });\n  } else {\n    this.forEach(function (x, i) {\n      if (x === item) {\n        found = i;\n        return false;\n      }\n    });\n  }\n  return found !== null ? found : -1;\n};\n\n// Overload:function(item)\n// Overload:function(predicate)\nEnumerable.prototype.lastIndexOf = function (item) {\n  var result = -1;\n\n  // item as predicate\n  if (typeof item === Types.Function) {\n    this.forEach(function (x, i) {\n      if (item(x, i)) result = i;\n    });\n  } else {\n    this.forEach(function (x, i) {\n      if (x === item) result = i;\n    });\n  }\n  return result;\n};\n\n///////////////////\n// Convert Methods\n\nEnumerable.prototype.cast = function () {\n  return this;\n};\nEnumerable.prototype.asEnumerable = function () {\n  return Enumerable.from(this);\n};\nEnumerable.prototype.toArray = function () {\n  var array = [];\n  this.forEach(function (x) {\n    array.push(x);\n  });\n  return array;\n};\n\n// Overload:function(keySelector)\n// Overload:function(keySelector, elementSelector)\n// Overload:function(keySelector, elementSelector, compareSelector)\nEnumerable.prototype.toLookup = function (keySelector, elementSelector, compareSelector) {\n  keySelector = Utils.createLambda(keySelector);\n  elementSelector = Utils.createLambda(elementSelector);\n  compareSelector = Utils.createLambda(compareSelector);\n  var dict = new Dictionary(compareSelector);\n  this.forEach(function (x) {\n    var key = keySelector(x);\n    var element = elementSelector(x);\n    var array = dict.get(key);\n    if (array !== undefined) array.push(element);else dict.add(key, [element]);\n  });\n  return new Lookup(dict);\n};\nEnumerable.prototype.toObject = function (keySelector, elementSelector) {\n  keySelector = Utils.createLambda(keySelector);\n  elementSelector = Utils.createLambda(elementSelector);\n  var obj = {};\n  this.forEach(function (x) {\n    obj[keySelector(x)] = elementSelector(x);\n  });\n  return obj;\n};\n\n// Overload:function(keySelector, elementSelector)\n// Overload:function(keySelector, elementSelector, compareSelector)\nEnumerable.prototype.toDictionary = function (keySelector, elementSelector, compareSelector) {\n  keySelector = Utils.createLambda(keySelector);\n  elementSelector = Utils.createLambda(elementSelector);\n  compareSelector = Utils.createLambda(compareSelector);\n  var dict = new Dictionary(compareSelector);\n  this.forEach(function (x) {\n    dict.add(keySelector(x), elementSelector(x));\n  });\n  return dict;\n};\n\n// Overload:function()\n// Overload:function(replacer)\n// Overload:function(replacer, space)\nEnumerable.prototype.toJSONString = function (replacer, space) {\n  if (typeof JSON === Types.Undefined || JSON.stringify == null) {\n    throw new Error(\"toJSONString can't find JSON.stringify. This works native JSON support Browser or include json2.js\");\n  }\n  return JSON.stringify(this.toArray(), replacer, space);\n};\n\n// Overload:function()\n// Overload:function(separator)\n// Overload:function(separator,selector)\nEnumerable.prototype.toJoinedString = function (separator, selector) {\n  if (separator == null) separator = \"\";\n  if (selector == null) selector = Functions.Identity;\n  return this.select(selector).toArray().join(separator);\n};\n\n//////////////////\n// Action Methods\n\n// Overload:function(action<element>)\n// Overload:function(action<element,index>)\nEnumerable.prototype.doAction = function (action) {\n  var source = this;\n  action = Utils.createLambda(action);\n  return new Enumerable(function () {\n    var enumerator;\n    var index = 0;\n    return new IEnumerator(function () {\n      enumerator = source.getEnumerator();\n    }, function () {\n      if (enumerator.moveNext()) {\n        action(enumerator.current(), index++);\n        return this.yieldReturn(enumerator.current());\n      }\n      return false;\n    }, function () {\n      Utils.dispose(enumerator);\n    });\n  });\n};\n\n// Overload:function(action<element>)\n// Overload:function(action<element,index>)\n// Overload:function(func<element,bool>)\n// Overload:function(func<element,index,bool>)\nEnumerable.prototype.forEach = function (action) {\n  action = Utils.createLambda(action);\n  var index = 0;\n  var enumerator = this.getEnumerator();\n  try {\n    while (enumerator.moveNext()) {\n      if (action(enumerator.current(), index++) === false) break;\n    }\n  } finally {\n    Utils.dispose(enumerator);\n  }\n};\nEnumerable.prototype.force = function () {\n  var enumerator = this.getEnumerator();\n  try {\n    while (enumerator.moveNext()) {}\n  } finally {\n    Utils.dispose(enumerator);\n  }\n};\n\n//////////////////////\n// Functional Methods\n\nEnumerable.prototype.letBind = function (func) {\n  func = Utils.createLambda(func);\n  var source = this;\n  return new Enumerable(function () {\n    var enumerator;\n    return new IEnumerator(function () {\n      enumerator = Enumerable.from(func(source)).getEnumerator();\n    }, function () {\n      return enumerator.moveNext() ? this.yieldReturn(enumerator.current()) : false;\n    }, function () {\n      Utils.dispose(enumerator);\n    });\n  });\n};\nEnumerable.prototype.share = function () {\n  var source = this;\n  var sharedEnumerator;\n  var disposed = false;\n  return new DisposableEnumerable(function () {\n    return new IEnumerator(function () {\n      if (sharedEnumerator == null) {\n        sharedEnumerator = source.getEnumerator();\n      }\n    }, function () {\n      if (disposed) throw new Error(\"enumerator is disposed\");\n      return sharedEnumerator.moveNext() ? this.yieldReturn(sharedEnumerator.current()) : false;\n    }, Functions.Blank);\n  }, function () {\n    disposed = true;\n    Utils.dispose(sharedEnumerator);\n  });\n};\nEnumerable.prototype.memoize = function () {\n  var source = this;\n  var cache;\n  var enumerator;\n  var disposed = false;\n  return new DisposableEnumerable(function () {\n    var index = -1;\n    return new IEnumerator(function () {\n      if (enumerator == null) {\n        enumerator = source.getEnumerator();\n        cache = [];\n      }\n    }, function () {\n      if (disposed) throw new Error(\"enumerator is disposed\");\n      index++;\n      if (cache.length <= index) {\n        return enumerator.moveNext() ? this.yieldReturn(cache[index] = enumerator.current()) : false;\n      }\n      return this.yieldReturn(cache[index]);\n    }, Functions.Blank);\n  }, function () {\n    disposed = true;\n    Utils.dispose(enumerator);\n    cache = null;\n  });\n};\n\n// Iterator support (ES6 for..of)\nif (Utils.hasNativeIteratorSupport()) {\n  Enumerable.prototype[Symbol.iterator] = function () {\n    return {\n      enumerator: this.getEnumerator(),\n      next: function () {\n        if (this.enumerator.moveNext()) {\n          return {\n            done: false,\n            value: this.enumerator.current()\n          };\n        } else {\n          return {\n            done: true\n          };\n        }\n      }\n    };\n  };\n}\n\n//////////////////////////\n// Error Handling Methods\n\nEnumerable.prototype.catchError = function (handler) {\n  handler = Utils.createLambda(handler);\n  var source = this;\n  return new Enumerable(function () {\n    var enumerator;\n    return new IEnumerator(function () {\n      enumerator = source.getEnumerator();\n    }, function () {\n      try {\n        return enumerator.moveNext() ? this.yieldReturn(enumerator.current()) : false;\n      } catch (e) {\n        handler(e);\n        return false;\n      }\n    }, function () {\n      Utils.dispose(enumerator);\n    });\n  });\n};\nEnumerable.prototype.finallyAction = function (finallyAction) {\n  finallyAction = Utils.createLambda(finallyAction);\n  var source = this;\n  return new Enumerable(function () {\n    var enumerator;\n    return new IEnumerator(function () {\n      enumerator = source.getEnumerator();\n    }, function () {\n      return enumerator.moveNext() ? this.yieldReturn(enumerator.current()) : false;\n    }, function () {\n      try {\n        Utils.dispose(enumerator);\n      } finally {\n        finallyAction();\n      }\n    });\n  });\n};\n\n/////////////////\n// Debug Methods\n\n// Overload:function()\n// Overload:function(selector)\nEnumerable.prototype.log = function (selector) {\n  selector = Utils.createLambda(selector);\n  return this.doAction(function (item) {\n    if (typeof console !== Types.Undefined) {\n      console.log(selector(item));\n    }\n  });\n};\n\n// Overload:function()\n// Overload:function(message)\n// Overload:function(message,selector)\nEnumerable.prototype.trace = function (message, selector) {\n  if (message == null) message = \"Trace\";\n  selector = Utils.createLambda(selector);\n  return this.doAction(function (item) {\n    if (typeof console !== Types.Undefined) {\n      console.log(message, selector(item));\n    }\n  });\n};\n\n///////////\n// Private\n\nvar OrderedEnumerable = function (source, keySelector, comparer, descending, parent) {\n  this.source = source;\n  this.keySelector = Utils.createLambda(keySelector);\n  this.descending = descending;\n  this.parent = parent;\n  if (comparer) this.comparer = Utils.createLambda(comparer);\n};\nOrderedEnumerable.prototype = new Enumerable();\nOrderedEnumerable.prototype.createOrderedEnumerable = function (keySelector, comparer, descending) {\n  return new OrderedEnumerable(this.source, keySelector, comparer, descending, this);\n};\nOrderedEnumerable.prototype.thenBy = function (keySelector, comparer) {\n  return this.createOrderedEnumerable(keySelector, comparer, false);\n};\nOrderedEnumerable.prototype.thenByDescending = function (keySelector, comparer) {\n  return this.createOrderedEnumerable(keySelector, comparer, true);\n};\nOrderedEnumerable.prototype.getEnumerator = function () {\n  var self = this;\n  var buffer;\n  var indexes;\n  var index = 0;\n  return new IEnumerator(function () {\n    buffer = [];\n    indexes = [];\n    self.source.forEach(function (item, index) {\n      buffer.push(item);\n      indexes.push(index);\n    });\n    var sortContext = SortContext.create(self, null);\n    sortContext.GenerateKeys(buffer);\n    indexes.sort(function (a, b) {\n      return sortContext.compare(a, b);\n    });\n  }, function () {\n    return index < indexes.length ? this.yieldReturn(buffer[indexes[index++]]) : false;\n  }, Functions.Blank);\n};\nvar SortContext = function (keySelector, comparer, descending, child) {\n  this.keySelector = keySelector;\n  this.descending = descending;\n  this.child = child;\n  this.comparer = comparer;\n  this.keys = null;\n};\nSortContext.create = function (orderedEnumerable, currentContext) {\n  var context = new SortContext(orderedEnumerable.keySelector, orderedEnumerable.comparer, orderedEnumerable.descending, currentContext);\n  if (orderedEnumerable.parent != null) return SortContext.create(orderedEnumerable.parent, context);\n  return context;\n};\nSortContext.prototype.GenerateKeys = function (source) {\n  var len = source.length;\n  var keySelector = this.keySelector;\n  var keys = new Array(len);\n  for (let i = 0; i < len; i++) keys[i] = keySelector(source[i]);\n  this.keys = keys;\n  if (this.child != null) this.child.GenerateKeys(source);\n};\nSortContext.prototype.compare = function (index1, index2) {\n  var comparison = this.comparer ? this.comparer(this.keys[index1], this.keys[index2]) : Utils.compare(this.keys[index1], this.keys[index2]);\n  if (comparison == 0) {\n    if (this.child != null) return this.child.compare(index1, index2);\n    return Utils.compare(index1, index2);\n  }\n  return this.descending ? -comparison : comparison;\n};\nvar DisposableEnumerable = function (getEnumerator, dispose) {\n  this.dispose = dispose;\n  Enumerable.call(this, getEnumerator);\n};\nDisposableEnumerable.prototype = new Enumerable();\nvar ArrayEnumerable = function (source) {\n  this.getSource = function () {\n    return source;\n  };\n};\nArrayEnumerable.prototype = new Enumerable();\nArrayEnumerable.prototype.any = function (predicate) {\n  return predicate == null ? this.getSource().length > 0 : Enumerable.prototype.any.apply(this, arguments);\n};\nArrayEnumerable.prototype.count = function (predicate) {\n  return predicate == null ? this.getSource().length : Enumerable.prototype.count.apply(this, arguments);\n};\nArrayEnumerable.prototype.elementAt = function (index) {\n  var source = this.getSource();\n  return 0 <= index && index < source.length ? source[index] : Enumerable.prototype.elementAt.apply(this, arguments);\n};\nArrayEnumerable.prototype.elementAtOrDefault = function (index, defaultValue) {\n  if (defaultValue === undefined) defaultValue = null;\n  var source = this.getSource();\n  return 0 <= index && index < source.length ? source[index] : defaultValue;\n};\nArrayEnumerable.prototype.first = function (predicate) {\n  var source = this.getSource();\n  return predicate == null && source.length > 0 ? source[0] : Enumerable.prototype.first.apply(this, arguments);\n};\nArrayEnumerable.prototype.firstOrDefault = function (predicate, defaultValue) {\n  if (predicate !== undefined) {\n    return Enumerable.prototype.firstOrDefault.apply(this, arguments);\n  }\n  defaultValue = predicate;\n  var source = this.getSource();\n  return source.length > 0 ? source[0] : defaultValue;\n};\nArrayEnumerable.prototype.last = function (predicate) {\n  var source = this.getSource();\n  return predicate == null && source.length > 0 ? source[source.length - 1] : Enumerable.prototype.last.apply(this, arguments);\n};\nArrayEnumerable.prototype.lastOrDefault = function (predicate, defaultValue) {\n  if (predicate !== undefined) {\n    return Enumerable.prototype.lastOrDefault.apply(this, arguments);\n  }\n  defaultValue = predicate;\n  var source = this.getSource();\n  return source.length > 0 ? source[source.length - 1] : defaultValue;\n};\nArrayEnumerable.prototype.skip = function (count) {\n  var source = this.getSource();\n  return new Enumerable(function () {\n    var index;\n    return new IEnumerator(function () {\n      index = count < 0 ? 0 : count;\n    }, function () {\n      return index < source.length ? this.yieldReturn(source[index++]) : false;\n    }, Functions.Blank);\n  });\n};\nArrayEnumerable.prototype.takeExceptLast = function (count) {\n  if (count == null) count = 1;\n  return this.take(this.getSource().length - count);\n};\nArrayEnumerable.prototype.takeFromLast = function (count) {\n  return this.skip(this.getSource().length - count);\n};\nArrayEnumerable.prototype.reverse = function () {\n  var source = this.getSource();\n  return new Enumerable(function () {\n    var index;\n    return new IEnumerator(function () {\n      index = source.length;\n    }, function () {\n      return index > 0 ? this.yieldReturn(source[--index]) : false;\n    }, Functions.Blank);\n  });\n};\nArrayEnumerable.prototype.sequenceEqual = function (second, compareSelector) {\n  if ((second instanceof ArrayEnumerable || second instanceof Array) && compareSelector == null && Enumerable.from(second).count() != this.count()) {\n    return false;\n  }\n  return Enumerable.prototype.sequenceEqual.apply(this, arguments);\n};\nArrayEnumerable.prototype.toJoinedString = function (separator, selector) {\n  var source = this.getSource();\n  if (selector != null || !(source instanceof Array)) {\n    return Enumerable.prototype.toJoinedString.apply(this, arguments);\n  }\n  if (separator == null) separator = \"\";\n  return source.join(separator);\n};\nArrayEnumerable.prototype.getEnumerator = function () {\n  var source = this.getSource();\n  var index = -1;\n\n  // fast and simple enumerator\n  return {\n    current: function () {\n      return source[index];\n    },\n    moveNext: function () {\n      return ++index < source.length;\n    },\n    dispose: Functions.Blank\n  };\n};\n\n// optimization for multiple where and multiple select and whereselect\n\nvar WhereEnumerable = function (source, predicate) {\n  this.prevSource = source;\n  this.prevPredicate = predicate; // predicate.length always <= 1\n};\nWhereEnumerable.prototype = new Enumerable();\nWhereEnumerable.prototype.where = function (predicate) {\n  predicate = Utils.createLambda(predicate);\n  if (predicate.length <= 1) {\n    const prevPredicate = this.prevPredicate;\n    const composedPredicate = function (x) {\n      return prevPredicate(x) && predicate(x);\n    };\n    return new WhereEnumerable(this.prevSource, composedPredicate);\n  } else {\n    // if predicate use index, can't compose\n    return Enumerable.prototype.where.call(this, predicate);\n  }\n};\nWhereEnumerable.prototype.select = function (selector) {\n  selector = Utils.createLambda(selector);\n  return selector.length <= 1 ? new WhereSelectEnumerable(this.prevSource, this.prevPredicate, selector) : Enumerable.prototype.select.call(this, selector);\n};\nWhereEnumerable.prototype.getEnumerator = function () {\n  var predicate = this.prevPredicate;\n  var source = this.prevSource;\n  var enumerator;\n  return new IEnumerator(function () {\n    enumerator = source.getEnumerator();\n  }, function () {\n    while (enumerator.moveNext()) {\n      if (predicate(enumerator.current())) {\n        return this.yieldReturn(enumerator.current());\n      }\n    }\n    return false;\n  }, function () {\n    Utils.dispose(enumerator);\n  });\n};\nvar WhereSelectEnumerable = function (source, predicate, selector) {\n  this.prevSource = source;\n  this.prevPredicate = predicate; // predicate.length always <= 1 or null\n  this.prevSelector = selector; // selector.length always <= 1\n};\nWhereSelectEnumerable.prototype = new Enumerable();\nWhereSelectEnumerable.prototype.where = function (predicate) {\n  predicate = Utils.createLambda(predicate);\n  return predicate.length <= 1 ? new WhereEnumerable(this, predicate) : Enumerable.prototype.where.call(this, predicate);\n};\nWhereSelectEnumerable.prototype.select = function (selector) {\n  selector = Utils.createLambda(selector);\n  if (selector.length <= 1) {\n    const prevSelector = this.prevSelector;\n    const composedSelector = function (x) {\n      return selector(prevSelector(x));\n    };\n    return new WhereSelectEnumerable(this.prevSource, this.prevPredicate, composedSelector);\n  } else {\n    // if selector uses index, can't compose\n    return Enumerable.prototype.select.call(this, selector);\n  }\n};\nWhereSelectEnumerable.prototype.getEnumerator = function () {\n  var predicate = this.prevPredicate;\n  var selector = this.prevSelector;\n  var source = this.prevSource;\n  var enumerator;\n  return new IEnumerator(function () {\n    enumerator = source.getEnumerator();\n  }, function () {\n    while (enumerator.moveNext()) {\n      if (predicate == null || predicate(enumerator.current())) {\n        return this.yieldReturn(selector(enumerator.current()));\n      }\n    }\n    return false;\n  }, function () {\n    Utils.dispose(enumerator);\n  });\n};\n\n///////////////\n// Collections\n\nvar Dictionary = function () {\n  // static utility methods\n  var callHasOwnProperty = function (target, key) {\n    return Object.prototype.hasOwnProperty.call(target, key);\n  };\n  var computeHashCode = function (obj) {\n    if (obj === null) return \"null\";\n    if (obj === undefined) return \"undefined\";\n    return typeof obj.toString === Types.Function ? obj.toString() : Object.prototype.toString.call(obj);\n  };\n\n  // LinkedList for Dictionary\n  var HashEntry = function (key, value) {\n    this.key = key;\n    this.value = value;\n    this.prev = null;\n    this.next = null;\n  };\n  var EntryList = function () {\n    this.first = null;\n    this.last = null;\n  };\n  EntryList.prototype = {\n    addLast: function (entry) {\n      if (this.last != null) {\n        this.last.next = entry;\n        entry.prev = this.last;\n        this.last = entry;\n      } else this.first = this.last = entry;\n    },\n    replace: function (entry, newEntry) {\n      if (entry.prev != null) {\n        entry.prev.next = newEntry;\n        newEntry.prev = entry.prev;\n      } else this.first = newEntry;\n      if (entry.next != null) {\n        entry.next.prev = newEntry;\n        newEntry.next = entry.next;\n      } else this.last = newEntry;\n    },\n    remove: function (entry) {\n      if (entry.prev != null) entry.prev.next = entry.next;else this.first = entry.next;\n      if (entry.next != null) entry.next.prev = entry.prev;else this.last = entry.prev;\n    }\n  };\n\n  // Overload:function()\n  // Overload:function(compareSelector)\n  var Dictionary = function (compareSelector) {\n    this.countField = 0;\n    this.entryList = new EntryList();\n    this.buckets = {}; // as Dictionary<string,List<object>>\n    this.compareSelector = compareSelector == null ? Functions.Identity : compareSelector;\n  };\n  Dictionary.prototype = {\n    add: function (key, value) {\n      var compareKey = this.compareSelector(key);\n      var hash = computeHashCode(compareKey);\n      var entry = new HashEntry(key, value);\n      if (callHasOwnProperty(this.buckets, hash)) {\n        const array = this.buckets[hash];\n        for (let i = 0; i < array.length; i++) {\n          if (this.compareSelector(array[i].key) === compareKey) {\n            this.entryList.replace(array[i], entry);\n            array[i] = entry;\n            return;\n          }\n        }\n        array.push(entry);\n      } else {\n        this.buckets[hash] = [entry];\n      }\n      this.countField++;\n      this.entryList.addLast(entry);\n    },\n    get: function (key) {\n      var compareKey = this.compareSelector(key);\n      var hash = computeHashCode(compareKey);\n      if (!callHasOwnProperty(this.buckets, hash)) return undefined;\n      var array = this.buckets[hash];\n      for (let i = 0; i < array.length; i++) {\n        const entry = array[i];\n        if (this.compareSelector(entry.key) === compareKey) return entry.value;\n      }\n      return undefined;\n    },\n    set: function (key, value) {\n      var compareKey = this.compareSelector(key);\n      var hash = computeHashCode(compareKey);\n      if (callHasOwnProperty(this.buckets, hash)) {\n        const array = this.buckets[hash];\n        for (let i = 0; i < array.length; i++) {\n          if (this.compareSelector(array[i].key) === compareKey) {\n            const newEntry = new HashEntry(key, value);\n            this.entryList.replace(array[i], newEntry);\n            array[i] = newEntry;\n            return true;\n          }\n        }\n      }\n      return false;\n    },\n    contains: function (key) {\n      var compareKey = this.compareSelector(key);\n      var hash = computeHashCode(compareKey);\n      if (!callHasOwnProperty(this.buckets, hash)) return false;\n      var array = this.buckets[hash];\n      for (let i = 0; i < array.length; i++) {\n        if (this.compareSelector(array[i].key) === compareKey) return true;\n      }\n      return false;\n    },\n    clear: function () {\n      this.countField = 0;\n      this.buckets = {};\n      this.entryList = new EntryList();\n    },\n    remove: function (key) {\n      var compareKey = this.compareSelector(key);\n      var hash = computeHashCode(compareKey);\n      if (!callHasOwnProperty(this.buckets, hash)) return;\n      var array = this.buckets[hash];\n      for (let i = 0; i < array.length; i++) {\n        if (this.compareSelector(array[i].key) === compareKey) {\n          this.entryList.remove(array[i]);\n          array.splice(i, 1);\n          if (array.length == 0) delete this.buckets[hash];\n          this.countField--;\n          return;\n        }\n      }\n    },\n    count: function () {\n      return this.countField;\n    },\n    toEnumerable: function () {\n      var self = this;\n      return new Enumerable(function () {\n        var currentEntry;\n        return new IEnumerator(function () {\n          currentEntry = self.entryList.first;\n        }, function () {\n          if (currentEntry != null) {\n            const result = {\n              key: currentEntry.key,\n              value: currentEntry.value\n            };\n            currentEntry = currentEntry.next;\n            return this.yieldReturn(result);\n          }\n          return false;\n        }, Functions.Blank);\n      });\n    }\n  };\n  return Dictionary;\n}();\n\n// dictionary = Dictionary<TKey, TValue[]>\nvar Lookup = function (dictionary) {\n  this.count = function () {\n    return dictionary.count();\n  };\n  this.get = function (key) {\n    return Enumerable.from(dictionary.get(key));\n  };\n  this.contains = function (key) {\n    return dictionary.contains(key);\n  };\n  this.toEnumerable = function () {\n    return dictionary.toEnumerable().select(function (kvp) {\n      return new Grouping(kvp.key, kvp.value);\n    });\n  };\n};\nvar Grouping = function (groupKey, elements) {\n  this.key = function () {\n    return groupKey;\n  };\n  ArrayEnumerable.call(this, elements);\n};\nGrouping.prototype = new ArrayEnumerable();\nexport default Enumerable;","map":{"version":3,"names":["Functions","Identity","x","True","Blank","Types","Boolean","Number","String","Object","Undefined","undefined","Function","funcCache","Utils","createLambda","expression","f","indexOf","regexp","RegExp","maxLength","match","exec","length","argArray","i","dollar","j","push","args","join","expr","defineProperty","target","methodName","value","enumerable","configurable","writable","compare","a","b","dispose","obj","hasNativeIteratorSupport","Symbol","iterator","State","Before","Running","After","IEnumerator","initialize","tryGetNext","yielder","Yielder","state","current","moveNext","apply","e","yieldReturn","yieldBreak","Enumerable","getEnumerator","createEnumerable","createEnumerator","extendTo","type","typeProto","prototype","enumerableProto","Array","ArrayEnumerable","from","func","recallFrom","getSource","choice","arguments","toArray","Math","floor","random","cycle","index","empty","repeat","charAt","keys","orig","next","done","array","key","hasOwnProperty","call","make","element","matches","input","pattern","flags","ignoreCase","multiline","source","regex","range","start","count","step","rangeDown","rangeTo","to","take","repeatWithFinalize","initializer","finalizer","generate","toInfinity","toNegativeInfinity","unfold","seed","isFirst","defer","enumerableFactory","enumerator","traverseBreadthFirst","resultSelector","nestLevel","buffer","selectMany","any","traverseDepthFirst","enumeratorStack","pop","forEach","s","flatten","middleEnumerator","pairwise","selector","prev","scan","isUseSeed","select","WhereSelectEnumerable","collectionSelector","middleSeq","where","predicate","WhereEnumerable","choose","result","ofType","typeName","zip","second","firstEnumerator","secondEnumerator","enumerators","concat","takeExceptLast","all","merge","splice","inner","outerKeySelector","innerKeySelector","compareSelector","outerEnumerator","lookup","innerElements","innerCount","toLookup","innerElement","get","leftJoin","groupJoin","isEmpty","insert","isEnumerated","alternate","alternateValueOrSequence","alternateSequence","alternateEnumerator","retVal","contains","defaultIfEmpty","defaultValue","distinct","except","distinctUntilChanged","compareKey","initial","Dictionary","add","intersect","outs","sequenceEqual","union","orderBy","keySelector","comparer","OrderedEnumerable","orderByDescending","reverse","shuffle","weightedSample","weightSelector","sortedByBound","totalWeight","weight","bound","draw","lower","upper","groupBy","elementSelector","toEnumerable","partitionBy","hasResultSelector","group","Grouping","hasNext","aggregate","last","average","sum","max","min","maxBy","minBy","elementAt","found","Error","elementAtOrDefault","first","firstOrDefault","lastOrDefault","single","singleOrDefault","skip","skipWhile","isSkipEnd","takeWhile","q","shift","takeFromLast","sourceEnumerator","item","lastIndexOf","cast","asEnumerable","dict","Lookup","toObject","toDictionary","toJSONString","replacer","space","JSON","stringify","toJoinedString","separator","doAction","action","force","letBind","share","sharedEnumerator","disposed","DisposableEnumerable","memoize","cache","catchError","handler","finallyAction","log","console","trace","message","descending","parent","createOrderedEnumerable","thenBy","thenByDescending","self","indexes","sortContext","SortContext","create","GenerateKeys","sort","child","orderedEnumerable","currentContext","context","len","index1","index2","comparison","prevSource","prevPredicate","composedPredicate","prevSelector","composedSelector","callHasOwnProperty","computeHashCode","toString","HashEntry","EntryList","addLast","entry","replace","newEntry","remove","countField","entryList","buckets","hash","set","clear","currentEntry","dictionary","kvp","groupKey","elements"],"sources":["/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/linq/linq.js"],"sourcesContent":["/*--------------------------------------------------------------------------\r\n * linq.js - LINQ for JavaScript\r\n * licensed under MIT License\r\n *------------------------------------------------------------------------*/\r\n\r\nvar Functions = {\r\n    Identity: function (x) { return x; },\r\n    True: function () { return true; },\r\n    Blank: function () { }\r\n};\r\n\r\nvar Types = {\r\n    Boolean: typeof true,\r\n    Number: typeof 0,\r\n    String: typeof \"\",\r\n    Object: typeof {},\r\n    Undefined: typeof undefined,\r\n    Function: typeof function () { }\r\n};\r\n\r\nvar funcCache = { \"\": Functions.Identity };\r\n\r\nvar Utils = {\r\n    createLambda: function (expression) {\r\n        if (expression == null) return Functions.Identity;\r\n        if (typeof expression === Types.String) {\r\n            // get from cache\r\n            let f = funcCache[expression];\r\n            if (f != null) {\r\n                return f;\r\n            }\r\n\r\n            if (expression.indexOf(\"=>\") === -1) {\r\n                const regexp = new RegExp(\"[$]+\", \"g\");\r\n\r\n                let maxLength = 0;\r\n                let match;\r\n                while ((match = regexp.exec(expression)) != null) {\r\n                    if (match[0].length > maxLength) {\r\n                        maxLength = match[0].length;\r\n                    }\r\n                }\r\n\r\n                const argArray = [];\r\n                for (let i = 1; i <= maxLength; i++) {\r\n                    let dollar = \"\";\r\n                    for (let j = 0; j < i; j++) {\r\n                        dollar += \"$\";\r\n                    }\r\n                    argArray.push(dollar);\r\n                }\r\n\r\n                const args = argArray.join(\",\");\r\n\r\n                f = new Function(args, \"return \" + expression);\r\n                funcCache[expression] = f;\r\n                return f;\r\n            }\r\n            else {\r\n                const expr = expression.match(/^[(\\s]*([^()]*?)[)\\s]*=>(.*)/);\r\n                f = new Function(expr[1], (expr[2].match(/\\breturn\\b/) ? expr[2] : \"return \" + expr[2]));\r\n                funcCache[expression] = f;\r\n                return f;\r\n            }\r\n        }\r\n        return expression;\r\n    },\r\n\r\n    defineProperty: function (target, methodName, value) {\r\n        Object.defineProperty(target, methodName, {\r\n            enumerable: false,\r\n            configurable: true,\r\n            writable: true,\r\n            value: value\r\n        })\r\n    },\r\n\r\n    compare: function (a, b) {\r\n        return (a === b) ? 0 : (a > b) ? 1 : -1;\r\n    },\r\n\r\n    dispose: function (obj) {\r\n        if (obj != null) obj.dispose();\r\n    },\r\n\r\n    hasNativeIteratorSupport: function () {\r\n        return typeof Symbol !== 'undefined' && typeof Symbol.iterator !== 'undefined';\r\n    }\r\n};\r\n\r\nvar State = { Before: 0, Running: 1, After: 2 };\r\n\r\nvar IEnumerator = function (initialize, tryGetNext, dispose) {\r\n    var yielder = new Yielder();\r\n    var state = State.Before;\r\n\r\n    this.current = yielder.current;\r\n\r\n    this.moveNext = function () {\r\n        try {\r\n            switch (state) {\r\n                case State.Before:\r\n                    state = State.Running;\r\n                    initialize();\r\n                // fall through\r\n\r\n                case State.Running:\r\n                    if (tryGetNext.apply(yielder)) {\r\n                        return true;\r\n                    }\r\n                    else {\r\n                        this.dispose();\r\n                        return false;\r\n                    }\r\n                // fall through\r\n\r\n                case State.After:\r\n                    return false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.dispose();\r\n            throw e;\r\n        }\r\n    };\r\n\r\n    this.dispose = function () {\r\n        if (state != State.Running) return;\r\n\r\n        try {\r\n            dispose();\r\n        }\r\n        finally {\r\n            state = State.After;\r\n        }\r\n    };\r\n};\r\n\r\n// tryGetNext yielder\r\nvar Yielder = function () {\r\n    var current = null;\r\n    this.current = function () { return current; };\r\n    this.yieldReturn = function (value) {\r\n        current = value;\r\n        return true;\r\n    };\r\n    this.yieldBreak = function () {\r\n        return false;\r\n    };\r\n};\r\n\r\n// Enumerable constuctor\r\nvar Enumerable = function (getEnumerator) {\r\n    this.getEnumerator = getEnumerator;\r\n};\r\n\r\n///////////////////\r\n// Utility Methods\r\n\r\nEnumerable.Utils = {};\r\n\r\nEnumerable.Utils.createLambda = function (expression) {\r\n    return Utils.createLambda(expression);\r\n};\r\n\r\nEnumerable.Utils.createEnumerable = function (getEnumerator) {\r\n    return new Enumerable(getEnumerator);\r\n};\r\n\r\nEnumerable.Utils.createEnumerator = function (initialize, tryGetNext, dispose) {\r\n    return new IEnumerator(initialize, tryGetNext, dispose);\r\n};\r\n\r\nEnumerable.Utils.extendTo = function (type) {\r\n    var typeProto = type.prototype;\r\n    var enumerableProto;\r\n\r\n    if (type === Array) {\r\n        enumerableProto = ArrayEnumerable.prototype;\r\n        Utils.defineProperty(typeProto, \"getSource\", function () {\r\n            return this;\r\n        });\r\n    }\r\n    else {\r\n        enumerableProto = Enumerable.prototype;\r\n        Utils.defineProperty(typeProto, \"getEnumerator\", function () {\r\n            return Enumerable.from(this).getEnumerator();\r\n        });\r\n    }\r\n\r\n    for (let methodName in enumerableProto) {\r\n        const func = enumerableProto[methodName];\r\n\r\n        // already extended\r\n        if (typeProto[methodName] == func) continue;\r\n\r\n        // already defined(example Array#reverse/join/forEach...)\r\n        if (typeProto[methodName] != null) {\r\n            methodName = methodName + \"ByLinq\";\r\n            if (typeProto[methodName] == func) continue; // recheck\r\n        }\r\n\r\n        if (func instanceof Function) {\r\n            Utils.defineProperty(typeProto, methodName, func);\r\n        }\r\n    }\r\n};\r\n\r\nEnumerable.Utils.recallFrom = function (type) {\r\n    var typeProto = type.prototype;\r\n    var enumerableProto;\r\n\r\n    if (type === Array) {\r\n        enumerableProto = ArrayEnumerable.prototype;\r\n        delete typeProto.getSource;\r\n    }\r\n    else {\r\n        enumerableProto = Enumerable.prototype;\r\n        delete typeProto.getEnumerator;\r\n    }\r\n\r\n    for (const methodName in enumerableProto) {\r\n        const func = enumerableProto[methodName];\r\n\r\n        if (typeProto[methodName + 'ByLinq']) {\r\n            delete typeProto[methodName + 'ByLinq'];\r\n        }\r\n        else if (typeProto[methodName] == func && func instanceof Function) {\r\n            delete typeProto[methodName];\r\n        }\r\n    }\r\n};\r\n\r\n//////////////\r\n// Generators\r\n\r\nEnumerable.choice = function () {\r\n    var args = arguments;\r\n\r\n    return new Enumerable(function () {\r\n        return new IEnumerator(\r\n            function () {\r\n                args = (args[0] instanceof Array) ? args[0]\r\n                    : (args[0].getEnumerator != null) ? args[0].toArray()\r\n                        : args;\r\n            },\r\n            function () {\r\n                return this.yieldReturn(args[Math.floor(Math.random() * args.length)]);\r\n            },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\nEnumerable.cycle = function () {\r\n    var args = arguments;\r\n\r\n    return new Enumerable(function () {\r\n        var index = 0;\r\n        return new IEnumerator(\r\n            function () {\r\n                args = (args[0] instanceof Array) ? args[0]\r\n                    : (args[0].getEnumerator != null) ? args[0].toArray()\r\n                        : args;\r\n            },\r\n            function () {\r\n                if (index >= args.length) index = 0;\r\n                return this.yieldReturn(args[index++]);\r\n            },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\nEnumerable.empty = function () {\r\n    return new Enumerable(function () {\r\n        return new IEnumerator(\r\n            Functions.Blank,\r\n            function () { return false; },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\nEnumerable.from = function (obj) {\r\n    if (obj == null) {\r\n        return Enumerable.empty();\r\n    }\r\n    if (obj instanceof Enumerable) {\r\n        return obj;\r\n    }\r\n    if (typeof obj == Types.Number || typeof obj == Types.Boolean) {\r\n        return Enumerable.repeat(obj, 1);\r\n    }\r\n    if (typeof obj == Types.String) {\r\n        return new Enumerable(function () {\r\n            var index = 0;\r\n            return new IEnumerator(\r\n                Functions.Blank,\r\n                function () {\r\n                    return (index < obj.length) ? this.yieldReturn(obj.charAt(index++)) : false;\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    }\r\n    if (typeof obj == Types.Function && Object.keys(obj).length == 0) {\r\n        return new Enumerable(function () {\r\n            var orig;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    orig = obj()[Symbol.iterator]();\r\n                },\r\n                function () {\r\n                    var next = orig.next();\r\n                    return (next.done ? false : (this.yieldReturn(next.value)));\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    }\r\n\r\n    if (typeof obj != Types.Function) {\r\n        // array or array-like object\r\n        if (typeof obj.length == Types.Number) {\r\n            return new ArrayEnumerable(obj);\r\n        }\r\n\r\n        // iterable object\r\n        if (typeof Symbol !== 'undefined' && typeof obj[Symbol.iterator] !== 'undefined') {\r\n            return new Enumerable(function () {\r\n                return new IEnumerator(\r\n                    Functions.Blank,\r\n                    function () {\r\n                        var next = obj.next();\r\n                        return (next.done ? false : (this.yieldReturn(next.value)));\r\n                    },\r\n                    Functions.Blank);\r\n            });\r\n        }\r\n    }\r\n\r\n    // case function/object: create keyValuePair[]\r\n    return new Enumerable(function () {\r\n        var array = [];\r\n        var index = 0;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                for (const key in obj) {\r\n                    const value = obj[key];\r\n                    if (!(value instanceof Function) && Object.prototype.hasOwnProperty.call(obj, key)) {\r\n                        array.push({ key: key, value: value });\r\n                    }\r\n                }\r\n            },\r\n            function () {\r\n                return (index < array.length)\r\n                    ? this.yieldReturn(array[index++])\r\n                    : false;\r\n            },\r\n            Functions.Blank);\r\n    });\r\n},\r\n\r\n    Enumerable.make = function (element) {\r\n        return Enumerable.repeat(element, 1);\r\n    };\r\n\r\n// Overload:function(input, pattern)\r\n// Overload:function(input, pattern, flags)\r\nEnumerable.matches = function (input, pattern, flags) {\r\n    if (flags == null) flags = \"\";\r\n\r\n    if (pattern instanceof RegExp) {\r\n        flags += (pattern.ignoreCase) ? \"i\" : \"\";\r\n        flags += (pattern.multiline) ? \"m\" : \"\";\r\n        pattern = pattern.source;\r\n    }\r\n    if (flags.indexOf(\"g\") === -1) flags += \"g\";\r\n\r\n    return new Enumerable(function () {\r\n        var regex;\r\n        return new IEnumerator(\r\n            function () { regex = new RegExp(pattern, flags); },\r\n            function () {\r\n                var match = regex.exec(input);\r\n                return (match) ? this.yieldReturn(match) : false;\r\n            },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\n// Overload:function(start, count)\r\n// Overload:function(start, count, step)\r\nEnumerable.range = function (start, count, step) {\r\n    if (step == null) step = 1;\r\n\r\n    return new Enumerable(function () {\r\n        var value;\r\n        var index = 0;\r\n\r\n        return new IEnumerator(\r\n            function () { value = start - step; },\r\n            function () {\r\n                return (index++ < count)\r\n                    ? this.yieldReturn(value += step)\r\n                    : this.yieldBreak();\r\n            },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\n// Overload:function(start, count)\r\n// Overload:function(start, count, step)\r\nEnumerable.rangeDown = function (start, count, step) {\r\n    if (step == null) step = 1;\r\n\r\n    return new Enumerable(function () {\r\n        var value;\r\n        var index = 0;\r\n\r\n        return new IEnumerator(\r\n            function () { value = start + step; },\r\n            function () {\r\n                return (index++ < count)\r\n                    ? this.yieldReturn(value -= step)\r\n                    : this.yieldBreak();\r\n            },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\n// Overload:function(start, to)\r\n// Overload:function(start, to, step)\r\nEnumerable.rangeTo = function (start, to, step) {\r\n    if (step == null) step = 1;\r\n\r\n    if (start < to) {\r\n        return new Enumerable(function () {\r\n            var value;\r\n\r\n            return new IEnumerator(\r\n                function () { value = start - step; },\r\n                function () {\r\n                    var next = value += step;\r\n                    return (next <= to)\r\n                        ? this.yieldReturn(next)\r\n                        : this.yieldBreak();\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    }\r\n    else {\r\n        return new Enumerable(function () {\r\n            var value;\r\n\r\n            return new IEnumerator(\r\n                function () { value = start + step; },\r\n                function () {\r\n                    var next = value -= step;\r\n                    return (next >= to)\r\n                        ? this.yieldReturn(next)\r\n                        : this.yieldBreak();\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    }\r\n};\r\n\r\n// Overload:function(element)\r\n// Overload:function(element, count)\r\nEnumerable.repeat = function (element, count) {\r\n    if (count != null)\r\n        return Enumerable.repeat(element).take(count);\r\n\r\n    return new Enumerable(function () {\r\n        return new IEnumerator(\r\n            Functions.Blank,\r\n            function () { return this.yieldReturn(element); },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\nEnumerable.repeatWithFinalize = function (initializer, finalizer) {\r\n    initializer = Utils.createLambda(initializer);\r\n    finalizer = Utils.createLambda(finalizer);\r\n\r\n    return new Enumerable(function () {\r\n        var element;\r\n        return new IEnumerator(\r\n            function () { element = initializer(); },\r\n            function () { return this.yieldReturn(element); },\r\n            function () {\r\n                if (element != null) {\r\n                    finalizer(element);\r\n                    element = null;\r\n                }\r\n            });\r\n    });\r\n};\r\n\r\n// Overload:function(func)\r\n// Overload:function(func, count)\r\nEnumerable.generate = function (func, count) {\r\n    if (count != null)\r\n        return Enumerable.generate(func).take(count);\r\n\r\n    func = Utils.createLambda(func);\r\n\r\n    return new Enumerable(function () {\r\n        return new IEnumerator(\r\n            Functions.Blank,\r\n            function () { return this.yieldReturn(func()); },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(start)\r\n// Overload:function(start, step)\r\nEnumerable.toInfinity = function (start, step) {\r\n    if (start == null) start = 0;\r\n    if (step == null) step = 1;\r\n\r\n    return new Enumerable(function () {\r\n        var value;\r\n        return new IEnumerator(\r\n            function () { value = start - step; },\r\n            function () { return this.yieldReturn(value += step); },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(start)\r\n// Overload:function(start, step)\r\nEnumerable.toNegativeInfinity = function (start, step) {\r\n    if (start == null) start = 0;\r\n    if (step == null) step = 1;\r\n\r\n    return new Enumerable(function () {\r\n        var value;\r\n        return new IEnumerator(\r\n            function () { value = start + step; },\r\n            function () { return this.yieldReturn(value -= step); },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\nEnumerable.unfold = function (seed, func) {\r\n    func = Utils.createLambda(func);\r\n\r\n    return new Enumerable(function () {\r\n        var isFirst = true;\r\n        var value;\r\n        return new IEnumerator(\r\n            Functions.Blank,\r\n            function () {\r\n                if (isFirst) {\r\n                    isFirst = false;\r\n                    value = seed;\r\n                    return this.yieldReturn(value);\r\n                }\r\n                value = func(value);\r\n                return this.yieldReturn(value);\r\n            },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\nEnumerable.defer = function (enumerableFactory) {\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = Enumerable.from(enumerableFactory()).getEnumerator(); },\r\n            function () {\r\n                return (enumerator.moveNext())\r\n                    ? this.yieldReturn(enumerator.current())\r\n                    : this.yieldBreak();\r\n            },\r\n            function () {\r\n                Utils.dispose(enumerator);\r\n            });\r\n    });\r\n};\r\n\r\n/////////////////////\r\n// Extension Methods\r\n\r\n////////////////////////////////////\r\n// Projection and Filtering Methods\r\n\r\n// Overload:function(func)\r\n// Overload:function(func, resultSelector<element>)\r\n// Overload:function(func, resultSelector<element, nestLevel>)\r\nEnumerable.prototype.traverseBreadthFirst = function (func, resultSelector) {\r\n    var source = this;\r\n    func = Utils.createLambda(func);\r\n    resultSelector = Utils.createLambda(resultSelector);\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var nestLevel = 0;\r\n        var buffer = [];\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                while (true) {\r\n                    if (enumerator.moveNext()) {\r\n                        buffer.push(enumerator.current());\r\n                        return this.yieldReturn(resultSelector(enumerator.current(), nestLevel));\r\n                    }\r\n\r\n                    const next = Enumerable.from(buffer).selectMany(function (x) { return func(x); });\r\n                    if (!next.any()) {\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        nestLevel++;\r\n                        buffer = [];\r\n                        Utils.dispose(enumerator);\r\n                        enumerator = next.getEnumerator();\r\n                    }\r\n                }\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function(func)\r\n// Overload:function(func, resultSelector<element>)\r\n// Overload:function(func, resultSelector<element, nestLevel>)\r\nEnumerable.prototype.traverseDepthFirst = function (func, resultSelector) {\r\n    var source = this;\r\n    func = Utils.createLambda(func);\r\n    resultSelector = Utils.createLambda(resultSelector);\r\n\r\n    return new Enumerable(function () {\r\n        var enumeratorStack = [];\r\n        var enumerator;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                while (true) {\r\n                    if (enumerator.moveNext()) {\r\n                        const value = resultSelector(enumerator.current(), enumeratorStack.length);\r\n                        enumeratorStack.push(enumerator);\r\n                        enumerator = Enumerable.from(func(enumerator.current())).getEnumerator();\r\n                        return this.yieldReturn(value);\r\n                    }\r\n\r\n                    if (enumeratorStack.length <= 0) return false;\r\n                    Utils.dispose(enumerator);\r\n                    enumerator = enumeratorStack.pop();\r\n                }\r\n            },\r\n            function () {\r\n                try {\r\n                    Utils.dispose(enumerator);\r\n                }\r\n                finally {\r\n                    Enumerable.from(enumeratorStack).forEach(function (s) { s.dispose(); });\r\n                }\r\n            });\r\n    });\r\n};\r\n\r\nEnumerable.prototype.flatten = function () {\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var middleEnumerator = null;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                while (true) {\r\n                    if (middleEnumerator != null) {\r\n                        if (middleEnumerator.moveNext()) {\r\n                            return this.yieldReturn(middleEnumerator.current());\r\n                        }\r\n                        else {\r\n                            middleEnumerator = null;\r\n                        }\r\n                    }\r\n\r\n                    if (enumerator.moveNext()) {\r\n                        if (enumerator.current() instanceof Array) {\r\n                            Utils.dispose(middleEnumerator);\r\n                            middleEnumerator = Enumerable.from(enumerator.current())\r\n                                .selectMany(Functions.Identity)\r\n                                .flatten()\r\n                                .getEnumerator();\r\n                            continue;\r\n                        }\r\n                        else {\r\n                            return this.yieldReturn(enumerator.current());\r\n                        }\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n            },\r\n            function () {\r\n                try {\r\n                    Utils.dispose(enumerator);\r\n                }\r\n                finally {\r\n                    Utils.dispose(middleEnumerator);\r\n                }\r\n            });\r\n    });\r\n};\r\n\r\nEnumerable.prototype.pairwise = function (selector) {\r\n    var source = this;\r\n    selector = Utils.createLambda(selector);\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                enumerator = source.getEnumerator();\r\n                enumerator.moveNext();\r\n            },\r\n            function () {\r\n                var prev = enumerator.current();\r\n                return (enumerator.moveNext())\r\n                    ? this.yieldReturn(selector(prev, enumerator.current()))\r\n                    : false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function(func)\r\n// Overload:function(seed,func<value,element>)\r\nEnumerable.prototype.scan = function (seed, func) {\r\n    var isUseSeed;\r\n    if (func == null) {\r\n        func = Utils.createLambda(seed);\r\n        isUseSeed = false;\r\n    } else {\r\n        func = Utils.createLambda(func);\r\n        isUseSeed = true;\r\n    }\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var value;\r\n        var isFirst = true;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                if (isFirst) {\r\n                    isFirst = false;\r\n                    if (!isUseSeed) {\r\n                        if (enumerator.moveNext()) {\r\n                            return this.yieldReturn(value = enumerator.current());\r\n                        }\r\n                    }\r\n                    else {\r\n                        return this.yieldReturn(value = seed);\r\n                    }\r\n                }\r\n\r\n                return (enumerator.moveNext())\r\n                    ? this.yieldReturn(value = func(value, enumerator.current()))\r\n                    : false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function(selector<element>)\r\n// Overload:function(selector<element,index>)\r\nEnumerable.prototype.select = function (selector) {\r\n    selector = Utils.createLambda(selector);\r\n\r\n    if (selector.length <= 1) {\r\n        return new WhereSelectEnumerable(this, null, selector);\r\n    }\r\n    else {\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    return (enumerator.moveNext())\r\n                        ? this.yieldReturn(selector(enumerator.current(), index++))\r\n                        : false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    }\r\n};\r\n\r\n// Overload:function(collectionSelector<element>)\r\n// Overload:function(collectionSelector<element,index>)\r\n// Overload:function(collectionSelector<element>,resultSelector)\r\n// Overload:function(collectionSelector<element,index>,resultSelector)\r\nEnumerable.prototype.selectMany = function (collectionSelector, resultSelector) {\r\n    var source = this;\r\n    collectionSelector = Utils.createLambda(collectionSelector);\r\n    if (resultSelector == null) resultSelector = function (a, b) { return b; };\r\n    resultSelector = Utils.createLambda(resultSelector);\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var middleEnumerator = undefined;\r\n        var index = 0;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                if (middleEnumerator === undefined) {\r\n                    if (!enumerator.moveNext()) return false;\r\n                }\r\n                do {\r\n                    if (middleEnumerator == null) {\r\n                        const middleSeq = collectionSelector(enumerator.current(), index++);\r\n                        middleEnumerator = Enumerable.from(middleSeq).getEnumerator();\r\n                    }\r\n                    if (middleEnumerator.moveNext()) {\r\n                        return this.yieldReturn(resultSelector(enumerator.current(), middleEnumerator.current()));\r\n                    }\r\n                    Utils.dispose(middleEnumerator);\r\n                    middleEnumerator = null;\r\n                } while (enumerator.moveNext());\r\n                return false;\r\n            },\r\n            function () {\r\n                try {\r\n                    Utils.dispose(enumerator);\r\n                }\r\n                finally {\r\n                    Utils.dispose(middleEnumerator);\r\n                }\r\n            });\r\n    });\r\n};\r\n\r\n// Overload:function(predicate<element>)\r\n// Overload:function(predicate<element,index>)\r\nEnumerable.prototype.where = function (predicate) {\r\n    predicate = Utils.createLambda(predicate);\r\n\r\n    if (predicate.length <= 1) {\r\n        return new WhereEnumerable(this, predicate);\r\n    }\r\n    else {\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    while (enumerator.moveNext()) {\r\n                        if (predicate(enumerator.current(), index++)) {\r\n                            return this.yieldReturn(enumerator.current());\r\n                        }\r\n                    }\r\n                    return false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    }\r\n};\r\n\r\n\r\n// Overload:function(selector<element>)\r\n// Overload:function(selector<element,index>)\r\nEnumerable.prototype.choose = function (selector) {\r\n    selector = Utils.createLambda(selector);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var index = 0;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                while (enumerator.moveNext()) {\r\n                    const result = selector(enumerator.current(), index++);\r\n                    if (result != null) {\r\n                        return this.yieldReturn(result);\r\n                    }\r\n                }\r\n                return this.yieldBreak();\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\nEnumerable.prototype.ofType = function (type) {\r\n    var typeName;\r\n    switch (type) {\r\n        case Number:\r\n            typeName = Types.Number;\r\n            break;\r\n        case String:\r\n            typeName = Types.String;\r\n            break;\r\n        case Boolean:\r\n            typeName = Types.Boolean;\r\n            break;\r\n        case Function:\r\n            typeName = Types.Function;\r\n            break;\r\n        default:\r\n            typeName = null;\r\n            break;\r\n    }\r\n    return (typeName === null)\r\n        ? this.where(function (x) { return x instanceof type; })\r\n        : this.where(function (x) { return typeof x === typeName; });\r\n};\r\n\r\n// mutiple arguments, last one is selector, others are enumerable\r\nEnumerable.prototype.zip = function () {\r\n    var args = arguments;\r\n    var selector = Utils.createLambda(arguments[arguments.length - 1]);\r\n\r\n    var source = this;\r\n    // optimized case:argument is 2\r\n    if (arguments.length == 2) {\r\n        const second = arguments[0];\r\n\r\n        return new Enumerable(function () {\r\n            var firstEnumerator;\r\n            var secondEnumerator;\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    firstEnumerator = source.getEnumerator();\r\n                    secondEnumerator = Enumerable.from(second).getEnumerator();\r\n                },\r\n                function () {\r\n                    if (firstEnumerator.moveNext() && secondEnumerator.moveNext()) {\r\n                        return this.yieldReturn(selector(firstEnumerator.current(), secondEnumerator.current(), index++));\r\n                    }\r\n                    return false;\r\n                },\r\n                function () {\r\n                    try {\r\n                        Utils.dispose(firstEnumerator);\r\n                    } finally {\r\n                        Utils.dispose(secondEnumerator);\r\n                    }\r\n                });\r\n        });\r\n    }\r\n    else {\r\n        return new Enumerable(function () {\r\n            var enumerators;\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    var array = Enumerable.make(source)\r\n                        .concat(Enumerable.from(args).takeExceptLast().select(Enumerable.from))\r\n                        .select(function (x) { return x.getEnumerator() })\r\n                        .toArray();\r\n                    enumerators = Enumerable.from(array);\r\n                },\r\n                function () {\r\n                    if (enumerators.all(function (x) { return x.moveNext() })) {\r\n                        const array = enumerators\r\n                            .select(function (x) { return x.current() })\r\n                            .toArray();\r\n                        array.push(index++);\r\n                        return this.yieldReturn(selector.apply(null, array));\r\n                    }\r\n                    else {\r\n                        return this.yieldBreak();\r\n                    }\r\n                },\r\n                function () {\r\n                    Enumerable.from(enumerators).forEach(Utils.dispose);\r\n                });\r\n        });\r\n    }\r\n};\r\n\r\n// mutiple arguments\r\nEnumerable.prototype.merge = function () {\r\n    var args = arguments;\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerators;\r\n        var index = -1;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                enumerators = Enumerable.make(source)\r\n                    .concat(Enumerable.from(args).select(Enumerable.from))\r\n                    .select(function (x) { return x.getEnumerator() })\r\n                    .toArray();\r\n            },\r\n            function () {\r\n                while (enumerators.length > 0) {\r\n                    index = (index >= enumerators.length - 1) ? 0 : index + 1;\r\n                    const enumerator = enumerators[index];\r\n\r\n                    if (enumerator.moveNext()) {\r\n                        return this.yieldReturn(enumerator.current());\r\n                    }\r\n                    else {\r\n                        enumerator.dispose();\r\n                        enumerators.splice(index--, 1);\r\n                    }\r\n                }\r\n                return this.yieldBreak();\r\n            },\r\n            function () {\r\n                Enumerable.from(enumerators).forEach(Utils.dispose);\r\n            });\r\n    });\r\n};\r\n\r\n////////////////\r\n// Join Methods\r\n\r\n// Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector)\r\n// Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector)\r\nEnumerable.prototype.join = function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector) {\r\n    outerKeySelector = Utils.createLambda(outerKeySelector);\r\n    innerKeySelector = Utils.createLambda(innerKeySelector);\r\n    resultSelector = Utils.createLambda(resultSelector);\r\n    compareSelector = Utils.createLambda(compareSelector);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var outerEnumerator;\r\n        var lookup;\r\n        var innerElements = null;\r\n        var innerCount = 0;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                outerEnumerator = source.getEnumerator();\r\n                lookup = Enumerable.from(inner).toLookup(innerKeySelector, Functions.Identity, compareSelector);\r\n            },\r\n            function () {\r\n                while (true) {\r\n                    if (innerElements != null) {\r\n                        let innerElement = innerElements[innerCount++];\r\n                        if (innerElement !== undefined) {\r\n                            return this.yieldReturn(resultSelector(outerEnumerator.current(), innerElement));\r\n                        }\r\n\r\n                        innerElement = null;\r\n                        innerCount = 0;\r\n                    }\r\n\r\n                    if (outerEnumerator.moveNext()) {\r\n                        const key = outerKeySelector(outerEnumerator.current());\r\n                        innerElements = lookup.get(key).toArray();\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                }\r\n            },\r\n            function () { Utils.dispose(outerEnumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector)\r\n// Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector)\r\nEnumerable.prototype.leftJoin = function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector) {\r\n    outerKeySelector = Utils.createLambda(outerKeySelector);\r\n    innerKeySelector = Utils.createLambda(innerKeySelector);\r\n    resultSelector = Utils.createLambda(resultSelector);\r\n    compareSelector = Utils.createLambda(compareSelector);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var outerEnumerator;\r\n        var lookup;\r\n        var innerElements = null;\r\n        var innerCount = 0;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                outerEnumerator = source.getEnumerator();\r\n                lookup = Enumerable.from(inner).toLookup(innerKeySelector, Functions.Identity, compareSelector);\r\n            },\r\n            function () {\r\n                while (true) {\r\n                    if (innerElements != null) {\r\n                        let innerElement = innerElements[innerCount++];\r\n                        if (innerElement !== undefined) {\r\n                            return this.yieldReturn(resultSelector(outerEnumerator.current(), innerElement));\r\n                        }\r\n\r\n                        innerElement = null;\r\n                        innerCount = 0;\r\n                    }\r\n\r\n                    if (outerEnumerator.moveNext()) {\r\n                        const key = outerKeySelector(outerEnumerator.current());\r\n                        innerElements = lookup.get(key).toArray();\r\n                        // execute once if innerElements is NULL\r\n                        if (innerElements == null || innerElements.length == 0) {\r\n                            return this.yieldReturn(resultSelector(outerEnumerator.current(), null));\r\n                        }\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                }\r\n            },\r\n            function () { Utils.dispose(outerEnumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector)\r\n// Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector)\r\nEnumerable.prototype.groupJoin = function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector) {\r\n    outerKeySelector = Utils.createLambda(outerKeySelector);\r\n    innerKeySelector = Utils.createLambda(innerKeySelector);\r\n    resultSelector = Utils.createLambda(resultSelector);\r\n    compareSelector = Utils.createLambda(compareSelector);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator = source.getEnumerator();\r\n        var lookup = null;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                enumerator = source.getEnumerator();\r\n                lookup = Enumerable.from(inner).toLookup(innerKeySelector, Functions.Identity, compareSelector);\r\n            },\r\n            function () {\r\n                if (enumerator.moveNext()) {\r\n                    const innerElement = lookup.get(outerKeySelector(enumerator.current()));\r\n                    return this.yieldReturn(resultSelector(enumerator.current(), innerElement));\r\n                }\r\n                return false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n///////////////\r\n// Set Methods\r\n\r\nEnumerable.prototype.all = function (predicate) {\r\n    predicate = Utils.createLambda(predicate);\r\n\r\n    var result = true;\r\n    this.forEach(function (x) {\r\n        if (!predicate(x)) {\r\n            result = false;\r\n            return false; // break\r\n        }\r\n    });\r\n    return result;\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(predicate)\r\nEnumerable.prototype.any = function (predicate) {\r\n    predicate = Utils.createLambda(predicate);\r\n\r\n    var enumerator = this.getEnumerator();\r\n    try {\r\n        if (arguments.length == 0) return enumerator.moveNext(); // case:function()\r\n\r\n        while (enumerator.moveNext()) // case:function(predicate)\r\n        {\r\n            if (predicate(enumerator.current())) return true;\r\n        }\r\n        return false;\r\n    }\r\n    finally {\r\n        Utils.dispose(enumerator);\r\n    }\r\n};\r\n\r\nEnumerable.prototype.isEmpty = function () {\r\n    return !this.any();\r\n};\r\n\r\n// multiple arguments\r\nEnumerable.prototype.concat = function () {\r\n    var source = this;\r\n\r\n    if (arguments.length == 1) {\r\n        const second = arguments[0];\r\n\r\n        return new Enumerable(function () {\r\n            var firstEnumerator;\r\n            var secondEnumerator;\r\n\r\n            return new IEnumerator(\r\n                function () { firstEnumerator = source.getEnumerator(); },\r\n                function () {\r\n                    if (secondEnumerator == null) {\r\n                        if (firstEnumerator.moveNext()) return this.yieldReturn(firstEnumerator.current());\r\n                        secondEnumerator = Enumerable.from(second).getEnumerator();\r\n                    }\r\n                    if (secondEnumerator.moveNext()) return this.yieldReturn(secondEnumerator.current());\r\n                    return false;\r\n                },\r\n                function () {\r\n                    try {\r\n                        Utils.dispose(firstEnumerator);\r\n                    }\r\n                    finally {\r\n                        Utils.dispose(secondEnumerator);\r\n                    }\r\n                });\r\n        });\r\n    }\r\n    else {\r\n        const args = arguments;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerators;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    enumerators = Enumerable.make(source)\r\n                        .concat(Enumerable.from(args).select(Enumerable.from))\r\n                        .select(function (x) { return x.getEnumerator() })\r\n                        .toArray();\r\n                },\r\n                function () {\r\n                    while (enumerators.length > 0) {\r\n                        const enumerator = enumerators[0];\r\n\r\n                        if (enumerator.moveNext()) {\r\n                            return this.yieldReturn(enumerator.current());\r\n                        }\r\n                        else {\r\n                            enumerator.dispose();\r\n                            enumerators.splice(0, 1);\r\n                        }\r\n                    }\r\n                    return this.yieldBreak();\r\n                },\r\n                function () {\r\n                    Enumerable.from(enumerators).forEach(Utils.dispose);\r\n                });\r\n        });\r\n    }\r\n};\r\n\r\nEnumerable.prototype.insert = function (index, second) {\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var firstEnumerator;\r\n        var secondEnumerator;\r\n        var count = 0;\r\n        var isEnumerated = false;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                firstEnumerator = source.getEnumerator();\r\n                secondEnumerator = Enumerable.from(second).getEnumerator();\r\n            },\r\n            function () {\r\n                if (count == index && secondEnumerator.moveNext()) {\r\n                    isEnumerated = true;\r\n                    return this.yieldReturn(secondEnumerator.current());\r\n                }\r\n                if (firstEnumerator.moveNext()) {\r\n                    count++;\r\n                    return this.yieldReturn(firstEnumerator.current());\r\n                }\r\n                if (!isEnumerated && secondEnumerator.moveNext()) {\r\n                    return this.yieldReturn(secondEnumerator.current());\r\n                }\r\n                return false;\r\n            },\r\n            function () {\r\n                try {\r\n                    Utils.dispose(firstEnumerator);\r\n                }\r\n                finally {\r\n                    Utils.dispose(secondEnumerator);\r\n                }\r\n            });\r\n    });\r\n};\r\n\r\nEnumerable.prototype.alternate = function (alternateValueOrSequence) {\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var buffer;\r\n        var enumerator;\r\n        var alternateSequence;\r\n        var alternateEnumerator;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                if (alternateValueOrSequence instanceof Array || alternateValueOrSequence.getEnumerator != null) {\r\n                    alternateSequence = Enumerable.from(Enumerable.from(alternateValueOrSequence).toArray()); // freeze\r\n                }\r\n                else {\r\n                    alternateSequence = Enumerable.make(alternateValueOrSequence);\r\n                }\r\n                enumerator = source.getEnumerator();\r\n                if (enumerator.moveNext()) buffer = enumerator.current();\r\n            },\r\n            function () {\r\n                while (true) {\r\n                    if (alternateEnumerator != null) {\r\n                        if (alternateEnumerator.moveNext()) {\r\n                            return this.yieldReturn(alternateEnumerator.current());\r\n                        }\r\n                        else {\r\n                            alternateEnumerator = null;\r\n                        }\r\n                    }\r\n\r\n                    if (buffer == null && enumerator.moveNext()) {\r\n                        buffer = enumerator.current(); // hasNext\r\n                        alternateEnumerator = alternateSequence.getEnumerator();\r\n                        continue; // GOTO\r\n                    }\r\n                    else if (buffer != null) {\r\n                        const retVal = buffer;\r\n                        buffer = null;\r\n                        return this.yieldReturn(retVal);\r\n                    }\r\n\r\n                    return this.yieldBreak();\r\n                }\r\n            },\r\n            function () {\r\n                try {\r\n                    Utils.dispose(enumerator);\r\n                }\r\n                finally {\r\n                    Utils.dispose(alternateEnumerator);\r\n                }\r\n            });\r\n    });\r\n};\r\n\r\n// Overload:function(value)\r\n// Overload:function(value, compareSelector)\r\nEnumerable.prototype.contains = function (value, compareSelector) {\r\n    compareSelector = Utils.createLambda(compareSelector);\r\n    var enumerator = this.getEnumerator();\r\n    try {\r\n        while (enumerator.moveNext()) {\r\n            if (compareSelector(enumerator.current()) === value) return true;\r\n        }\r\n        return false;\r\n    }\r\n    finally {\r\n        Utils.dispose(enumerator);\r\n    }\r\n};\r\n\r\nEnumerable.prototype.defaultIfEmpty = function (defaultValue) {\r\n    var source = this;\r\n    if (defaultValue === undefined) defaultValue = null;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var isFirst = true;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                if (enumerator.moveNext()) {\r\n                    isFirst = false;\r\n                    return this.yieldReturn(enumerator.current());\r\n                }\r\n                else if (isFirst) {\r\n                    isFirst = false;\r\n                    return this.yieldReturn(defaultValue);\r\n                }\r\n                return false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(compareSelector)\r\nEnumerable.prototype.distinct = function (compareSelector) {\r\n    return this.except(Enumerable.empty(), compareSelector);\r\n};\r\n\r\nEnumerable.prototype.distinctUntilChanged = function (compareSelector) {\r\n    compareSelector = Utils.createLambda(compareSelector);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var compareKey;\r\n        var initial;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                enumerator = source.getEnumerator();\r\n            },\r\n            function () {\r\n                while (enumerator.moveNext()) {\r\n                    const key = compareSelector(enumerator.current());\r\n\r\n                    if (initial) {\r\n                        initial = false;\r\n                        compareKey = key;\r\n                        return this.yieldReturn(enumerator.current());\r\n                    }\r\n\r\n                    if (compareKey === key) {\r\n                        continue;\r\n                    }\r\n\r\n                    compareKey = key;\r\n                    return this.yieldReturn(enumerator.current());\r\n                }\r\n                return this.yieldBreak();\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function(second)\r\n// Overload:function(second, compareSelector)\r\nEnumerable.prototype.except = function (second, compareSelector) {\r\n    compareSelector = Utils.createLambda(compareSelector);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var keys;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                enumerator = source.getEnumerator();\r\n                keys = new Dictionary(compareSelector);\r\n                Enumerable.from(second).forEach(function (key) { keys.add(key); });\r\n            },\r\n            function () {\r\n                while (enumerator.moveNext()) {\r\n                    const current = enumerator.current();\r\n                    if (!keys.contains(current)) {\r\n                        keys.add(current);\r\n                        return this.yieldReturn(current);\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function(second)\r\n// Overload:function(second, compareSelector)\r\nEnumerable.prototype.intersect = function (second, compareSelector) {\r\n    compareSelector = Utils.createLambda(compareSelector);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var keys;\r\n        var outs;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                enumerator = source.getEnumerator();\r\n\r\n                keys = new Dictionary(compareSelector);\r\n                Enumerable.from(second).forEach(function (key) { keys.add(key); });\r\n                outs = new Dictionary(compareSelector);\r\n            },\r\n            function () {\r\n                while (enumerator.moveNext()) {\r\n                    const current = enumerator.current();\r\n                    if (!outs.contains(current) && keys.contains(current)) {\r\n                        outs.add(current);\r\n                        return this.yieldReturn(current);\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function(second)\r\n// Overload:function(second, compareSelector)\r\nEnumerable.prototype.sequenceEqual = function (second, compareSelector) {\r\n    compareSelector = Utils.createLambda(compareSelector);\r\n\r\n    var firstEnumerator = this.getEnumerator();\r\n    try {\r\n        const secondEnumerator = Enumerable.from(second).getEnumerator();\r\n        try {\r\n            while (firstEnumerator.moveNext()) {\r\n                if (!secondEnumerator.moveNext()\r\n                    || compareSelector(firstEnumerator.current()) !== compareSelector(secondEnumerator.current())) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            if (secondEnumerator.moveNext()) return false;\r\n            return true;\r\n        }\r\n        finally {\r\n            Utils.dispose(secondEnumerator);\r\n        }\r\n    }\r\n    finally {\r\n        Utils.dispose(firstEnumerator);\r\n    }\r\n};\r\n\r\nEnumerable.prototype.union = function (second, compareSelector) {\r\n    compareSelector = Utils.createLambda(compareSelector);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var firstEnumerator;\r\n        var secondEnumerator;\r\n        var keys;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                firstEnumerator = source.getEnumerator();\r\n                keys = new Dictionary(compareSelector);\r\n            },\r\n            function () {\r\n                var current;\r\n                if (secondEnumerator === undefined) {\r\n                    while (firstEnumerator.moveNext()) {\r\n                        current = firstEnumerator.current();\r\n                        if (!keys.contains(current)) {\r\n                            keys.add(current);\r\n                            return this.yieldReturn(current);\r\n                        }\r\n                    }\r\n                    secondEnumerator = Enumerable.from(second).getEnumerator();\r\n                }\r\n                while (secondEnumerator.moveNext()) {\r\n                    current = secondEnumerator.current();\r\n                    if (!keys.contains(current)) {\r\n                        keys.add(current);\r\n                        return this.yieldReturn(current);\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            function () {\r\n                try {\r\n                    Utils.dispose(firstEnumerator);\r\n                }\r\n                finally {\r\n                    Utils.dispose(secondEnumerator);\r\n                }\r\n            });\r\n    });\r\n};\r\n\r\n////////////////////\r\n// Ordering Methods\r\n\r\nEnumerable.prototype.orderBy = function (keySelector, comparer) {\r\n    return new OrderedEnumerable(this, keySelector, comparer, false);\r\n};\r\n\r\nEnumerable.prototype.orderByDescending = function (keySelector, comparer) {\r\n    return new OrderedEnumerable(this, keySelector, comparer, true);\r\n};\r\n\r\nEnumerable.prototype.reverse = function () {\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var buffer;\r\n        var index;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                buffer = source.toArray();\r\n                index = buffer.length;\r\n            },\r\n            function () {\r\n                return (index > 0)\r\n                    ? this.yieldReturn(buffer[--index])\r\n                    : false;\r\n            },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\nEnumerable.prototype.shuffle = function () {\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var buffer;\r\n\r\n        return new IEnumerator(\r\n            function () { buffer = source.toArray(); },\r\n            function () {\r\n                if (buffer.length > 0) {\r\n                    const i = Math.floor(Math.random() * buffer.length);\r\n                    return this.yieldReturn(buffer.splice(i, 1)[0]);\r\n                }\r\n                return false;\r\n            },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\nEnumerable.prototype.weightedSample = function (weightSelector) {\r\n    weightSelector = Utils.createLambda(weightSelector);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var sortedByBound;\r\n        var totalWeight = 0;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                sortedByBound = source\r\n                    .choose(function (x) {\r\n                        var weight = weightSelector(x);\r\n                        if (weight <= 0) return null; // ignore 0\r\n\r\n                        totalWeight += weight;\r\n                        return { value: x, bound: totalWeight };\r\n                    })\r\n                    .toArray();\r\n            },\r\n            function () {\r\n                if (sortedByBound.length > 0) {\r\n                    const draw = Math.floor(Math.random() * totalWeight) + 1;\r\n\r\n                    let lower = -1;\r\n                    let upper = sortedByBound.length;\r\n                    while (upper - lower > 1) {\r\n                        const index = Math.floor((lower + upper) / 2);\r\n                        if (sortedByBound[index].bound >= draw) {\r\n                            upper = index;\r\n                        }\r\n                        else {\r\n                            lower = index;\r\n                        }\r\n                    }\r\n\r\n                    return this.yieldReturn(sortedByBound[upper].value);\r\n                }\r\n\r\n                return this.yieldBreak();\r\n            },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\n////////////////////\r\n// Grouping Methods\r\n\r\n// Overload:function(keySelector)\r\n// Overload:function(keySelector,elementSelector)\r\n// Overload:function(keySelector,elementSelector,resultSelector)\r\n// Overload:function(keySelector,elementSelector,resultSelector,compareSelector)\r\nEnumerable.prototype.groupBy = function (keySelector, elementSelector, resultSelector, compareSelector) {\r\n    var source = this;\r\n    keySelector = Utils.createLambda(keySelector);\r\n    elementSelector = Utils.createLambda(elementSelector);\r\n    if (resultSelector != null) resultSelector = Utils.createLambda(resultSelector);\r\n    compareSelector = Utils.createLambda(compareSelector);\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                enumerator = source.toLookup(keySelector, elementSelector, compareSelector)\r\n                    .toEnumerable()\r\n                    .getEnumerator();\r\n            },\r\n            function () {\r\n                while (enumerator.moveNext()) {\r\n                    return (resultSelector == null)\r\n                        ? this.yieldReturn(enumerator.current())\r\n                        : this.yieldReturn(resultSelector(enumerator.current().key(), enumerator.current()));\r\n                }\r\n                return false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function(keySelector)\r\n// Overload:function(keySelector,elementSelector)\r\n// Overload:function(keySelector,elementSelector,resultSelector)\r\n// Overload:function(keySelector,elementSelector,resultSelector,compareSelector)\r\nEnumerable.prototype.partitionBy = function (keySelector, elementSelector, resultSelector, compareSelector) {\r\n    var source = this;\r\n    keySelector = Utils.createLambda(keySelector);\r\n    elementSelector = Utils.createLambda(elementSelector);\r\n    compareSelector = Utils.createLambda(compareSelector);\r\n    var hasResultSelector;\r\n    if (resultSelector == null) {\r\n        hasResultSelector = false;\r\n        resultSelector = function (key, group) { return new Grouping(key, group); };\r\n    }\r\n    else {\r\n        hasResultSelector = true;\r\n        resultSelector = Utils.createLambda(resultSelector);\r\n    }\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var key;\r\n        var compareKey;\r\n        var group = [];\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                enumerator = source.getEnumerator();\r\n                if (enumerator.moveNext()) {\r\n                    key = keySelector(enumerator.current());\r\n                    compareKey = compareSelector(key);\r\n                    group.push(elementSelector(enumerator.current()));\r\n                }\r\n            },\r\n            function () {\r\n                var hasNext;\r\n                while ((hasNext = enumerator.moveNext()) == true) {\r\n                    if (compareKey === compareSelector(keySelector(enumerator.current()))) {\r\n                        group.push(elementSelector(enumerator.current()));\r\n                    }\r\n                    else break;\r\n                }\r\n\r\n                if (group.length > 0) {\r\n                    const result = (hasResultSelector)\r\n                        ? resultSelector(key, Enumerable.from(group))\r\n                        : resultSelector(key, group);\r\n                    if (hasNext) {\r\n                        key = keySelector(enumerator.current());\r\n                        compareKey = compareSelector(key);\r\n                        group = [elementSelector(enumerator.current())];\r\n                    }\r\n                    else group = [];\r\n\r\n                    return this.yieldReturn(result);\r\n                }\r\n\r\n                return false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\nEnumerable.prototype.buffer = function (count) {\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                var array = [];\r\n                var index = 0;\r\n                while (enumerator.moveNext()) {\r\n                    array.push(enumerator.current());\r\n                    if (++index >= count) return this.yieldReturn(array);\r\n                }\r\n                if (array.length > 0) return this.yieldReturn(array);\r\n                return false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n/////////////////////\r\n// Aggregate Methods\r\n\r\n// Overload:function(func)\r\n// Overload:function(seed,func)\r\n// Overload:function(seed,func,resultSelector)\r\nEnumerable.prototype.aggregate = function (seed, func, resultSelector) {\r\n    resultSelector = Utils.createLambda(resultSelector);\r\n    return resultSelector(this.scan(seed, func, resultSelector).last());\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(selector)\r\nEnumerable.prototype.average = function (selector) {\r\n    selector = Utils.createLambda(selector);\r\n\r\n    var sum = 0;\r\n    var count = 0;\r\n    this.forEach(function (x) {\r\n        sum += selector(x);\r\n        ++count;\r\n    });\r\n\r\n    return sum / count;\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(predicate)\r\nEnumerable.prototype.count = function (predicate) {\r\n    predicate = (predicate == null) ? Functions.True : Utils.createLambda(predicate);\r\n\r\n    var count = 0;\r\n    this.forEach(function (x, i) {\r\n        if (predicate(x, i)) ++count;\r\n    });\r\n    return count;\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(selector)\r\nEnumerable.prototype.max = function (selector) {\r\n    if (selector == null) selector = Functions.Identity;\r\n    return this.select(selector).aggregate(function (a, b) { return (a > b) ? a : b; });\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(selector)\r\nEnumerable.prototype.min = function (selector) {\r\n    if (selector == null) selector = Functions.Identity;\r\n    return this.select(selector).aggregate(function (a, b) { return (a < b) ? a : b; });\r\n};\r\n\r\nEnumerable.prototype.maxBy = function (keySelector) {\r\n    keySelector = Utils.createLambda(keySelector);\r\n    return this.aggregate(function (a, b) { return (keySelector(a) > keySelector(b)) ? a : b; });\r\n};\r\n\r\nEnumerable.prototype.minBy = function (keySelector) {\r\n    keySelector = Utils.createLambda(keySelector);\r\n    return this.aggregate(function (a, b) { return (keySelector(a) < keySelector(b)) ? a : b; });\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(selector)\r\nEnumerable.prototype.sum = function (selector) {\r\n    if (selector == null) selector = Functions.Identity;\r\n    return this.select(selector).aggregate(0, function (a, b) { return a + b; });\r\n};\r\n\r\n//////////////////\r\n// Paging Methods\r\n\r\nEnumerable.prototype.elementAt = function (index) {\r\n    var value;\r\n    var found = false;\r\n    this.forEach(function (x, i) {\r\n        if (i == index) {\r\n            value = x;\r\n            found = true;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    if (!found) throw new Error(\"index is less than 0 or greater than or equal to the number of elements in source.\");\r\n    return value;\r\n};\r\n\r\nEnumerable.prototype.elementAtOrDefault = function (index, defaultValue) {\r\n    if (defaultValue === undefined) defaultValue = null;\r\n    var value;\r\n    var found = false;\r\n    this.forEach(function (x, i) {\r\n        if (i == index) {\r\n            value = x;\r\n            found = true;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return (!found) ? defaultValue : value;\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(predicate)\r\nEnumerable.prototype.first = function (predicate) {\r\n    if (predicate != null) return this.where(predicate).first();\r\n\r\n    var value;\r\n    var found = false;\r\n    this.forEach(function (x) {\r\n        value = x;\r\n        found = true;\r\n        return false;\r\n    });\r\n\r\n    if (!found) throw new Error(\"first:No element satisfies the condition.\");\r\n    return value;\r\n};\r\n\r\nEnumerable.prototype.firstOrDefault = function (predicate, defaultValue) {\r\n    if (predicate !== undefined) {\r\n        if (typeof predicate === Types.Function || typeof Utils.createLambda(predicate) === Types.Function) {\r\n            return this.where(predicate).firstOrDefault(undefined, defaultValue);\r\n        }\r\n        defaultValue = predicate;\r\n    }\r\n\r\n    var value;\r\n    var found = false;\r\n    this.forEach(function (x) {\r\n        value = x;\r\n        found = true;\r\n        return false;\r\n    });\r\n    return (!found) ? defaultValue : value;\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(predicate)\r\nEnumerable.prototype.last = function (predicate) {\r\n    if (predicate != null) return this.where(predicate).last();\r\n\r\n    var value;\r\n    var found = false;\r\n    this.forEach(function (x) {\r\n        found = true;\r\n        value = x;\r\n    });\r\n\r\n    if (!found) throw new Error(\"last:No element satisfies the condition.\");\r\n    return value;\r\n};\r\n\r\nEnumerable.prototype.lastOrDefault = function (predicate, defaultValue) {\r\n    if (predicate !== undefined) {\r\n        if (typeof predicate === Types.Function || typeof Utils.createLambda(predicate) === Types.Function) {\r\n            return this.where(predicate).lastOrDefault(undefined, defaultValue);\r\n        }\r\n        defaultValue = predicate;\r\n    }\r\n\r\n    var value;\r\n    var found = false;\r\n    this.forEach(function (x) {\r\n        found = true;\r\n        value = x;\r\n    });\r\n    return (!found) ? defaultValue : value;\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(predicate)\r\nEnumerable.prototype.single = function (predicate) {\r\n    if (predicate != null) return this.where(predicate).single();\r\n\r\n    var value;\r\n    var found = false;\r\n    this.forEach(function (x) {\r\n        if (!found) {\r\n            found = true;\r\n            value = x;\r\n        } else throw new Error(\"single:sequence contains more than one element.\");\r\n    });\r\n\r\n    if (!found) throw new Error(\"single:No element satisfies the condition.\");\r\n    return value;\r\n};\r\n\r\n// Overload:function(defaultValue)\r\n// Overload:function(defaultValue,predicate)\r\nEnumerable.prototype.singleOrDefault = function (predicate, defaultValue) {\r\n    if (defaultValue === undefined) defaultValue = null;\r\n    if (predicate != null) return this.where(predicate).singleOrDefault(null, defaultValue);\r\n\r\n    var value;\r\n    var found = false;\r\n    this.forEach(function (x) {\r\n        if (!found) {\r\n            found = true;\r\n            value = x;\r\n        } else throw new Error(\"single:sequence contains more than one element.\");\r\n    });\r\n\r\n    return (!found) ? defaultValue : value;\r\n};\r\n\r\nEnumerable.prototype.skip = function (count) {\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var index = 0;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                enumerator = source.getEnumerator();\r\n                while (index++ < count && enumerator.moveNext()) { }\r\n            },\r\n            function () {\r\n                return (enumerator.moveNext())\r\n                    ? this.yieldReturn(enumerator.current())\r\n                    : false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function(predicate<element>)\r\n// Overload:function(predicate<element,index>)\r\nEnumerable.prototype.skipWhile = function (predicate) {\r\n    predicate = Utils.createLambda(predicate);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var index = 0;\r\n        var isSkipEnd = false;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                while (!isSkipEnd) {\r\n                    if (enumerator.moveNext()) {\r\n                        if (!predicate(enumerator.current(), index++)) {\r\n                            isSkipEnd = true;\r\n                            return this.yieldReturn(enumerator.current());\r\n                        }\r\n                        continue;\r\n                    } else return false;\r\n                }\r\n\r\n                return (enumerator.moveNext())\r\n                    ? this.yieldReturn(enumerator.current())\r\n                    : false;\r\n\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\nEnumerable.prototype.take = function (count) {\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var index = 0;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                return (index++ < count && enumerator.moveNext())\r\n                    ? this.yieldReturn(enumerator.current())\r\n                    : false;\r\n            },\r\n            function () { Utils.dispose(enumerator); }\r\n        );\r\n    });\r\n};\r\n\r\n// Overload:function(predicate<element>)\r\n// Overload:function(predicate<element,index>)\r\nEnumerable.prototype.takeWhile = function (predicate) {\r\n    predicate = Utils.createLambda(predicate);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var index = 0;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                return (enumerator.moveNext() && predicate(enumerator.current(), index++))\r\n                    ? this.yieldReturn(enumerator.current())\r\n                    : false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(count)\r\nEnumerable.prototype.takeExceptLast = function (count) {\r\n    if (count == null) count = 1;\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        if (count <= 0) return source.getEnumerator(); // do nothing\r\n\r\n        var enumerator;\r\n        var q = [];\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                while (enumerator.moveNext()) {\r\n                    if (q.length == count) {\r\n                        q.push(enumerator.current());\r\n                        return this.yieldReturn(q.shift());\r\n                    }\r\n                    q.push(enumerator.current());\r\n                }\r\n                return false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\nEnumerable.prototype.takeFromLast = function (count) {\r\n    if (count <= 0 || count == null) return Enumerable.empty();\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var sourceEnumerator;\r\n        var enumerator;\r\n        var q = [];\r\n\r\n        return new IEnumerator(\r\n            function () { sourceEnumerator = source.getEnumerator(); },\r\n            function () {\r\n                while (sourceEnumerator.moveNext()) {\r\n                    if (q.length == count) q.shift();\r\n                    q.push(sourceEnumerator.current());\r\n                }\r\n                if (enumerator == null) {\r\n                    enumerator = Enumerable.from(q).getEnumerator();\r\n                }\r\n                return (enumerator.moveNext())\r\n                    ? this.yieldReturn(enumerator.current())\r\n                    : false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function(item)\r\n// Overload:function(predicate)\r\nEnumerable.prototype.indexOf = function (item) {\r\n    var found = null;\r\n\r\n    // item as predicate\r\n    if (typeof (item) === Types.Function) {\r\n        this.forEach(function (x, i) {\r\n            if (item(x, i)) {\r\n                found = i;\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        this.forEach(function (x, i) {\r\n            if (x === item) {\r\n                found = i;\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n\r\n    return (found !== null) ? found : -1;\r\n};\r\n\r\n// Overload:function(item)\r\n// Overload:function(predicate)\r\nEnumerable.prototype.lastIndexOf = function (item) {\r\n    var result = -1;\r\n\r\n    // item as predicate\r\n    if (typeof (item) === Types.Function) {\r\n        this.forEach(function (x, i) {\r\n            if (item(x, i)) result = i;\r\n        });\r\n    }\r\n    else {\r\n        this.forEach(function (x, i) {\r\n            if (x === item) result = i;\r\n        });\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\n///////////////////\r\n// Convert Methods\r\n\r\nEnumerable.prototype.cast = function () {\r\n    return this;\r\n};\r\n\r\nEnumerable.prototype.asEnumerable = function () {\r\n    return Enumerable.from(this);\r\n};\r\n\r\nEnumerable.prototype.toArray = function () {\r\n    var array = [];\r\n    this.forEach(function (x) { array.push(x); });\r\n    return array;\r\n};\r\n\r\n// Overload:function(keySelector)\r\n// Overload:function(keySelector, elementSelector)\r\n// Overload:function(keySelector, elementSelector, compareSelector)\r\nEnumerable.prototype.toLookup = function (keySelector, elementSelector, compareSelector) {\r\n    keySelector = Utils.createLambda(keySelector);\r\n    elementSelector = Utils.createLambda(elementSelector);\r\n    compareSelector = Utils.createLambda(compareSelector);\r\n\r\n    var dict = new Dictionary(compareSelector);\r\n    this.forEach(function (x) {\r\n        var key = keySelector(x);\r\n        var element = elementSelector(x);\r\n\r\n        var array = dict.get(key);\r\n        if (array !== undefined) array.push(element);\r\n        else dict.add(key, [element]);\r\n    });\r\n    return new Lookup(dict);\r\n};\r\n\r\nEnumerable.prototype.toObject = function (keySelector, elementSelector) {\r\n    keySelector = Utils.createLambda(keySelector);\r\n    elementSelector = Utils.createLambda(elementSelector);\r\n\r\n    var obj = {};\r\n    this.forEach(function (x) {\r\n        obj[keySelector(x)] = elementSelector(x);\r\n    });\r\n    return obj;\r\n};\r\n\r\n// Overload:function(keySelector, elementSelector)\r\n// Overload:function(keySelector, elementSelector, compareSelector)\r\nEnumerable.prototype.toDictionary = function (keySelector, elementSelector, compareSelector) {\r\n    keySelector = Utils.createLambda(keySelector);\r\n    elementSelector = Utils.createLambda(elementSelector);\r\n    compareSelector = Utils.createLambda(compareSelector);\r\n\r\n    var dict = new Dictionary(compareSelector);\r\n    this.forEach(function (x) {\r\n        dict.add(keySelector(x), elementSelector(x));\r\n    });\r\n    return dict;\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(replacer)\r\n// Overload:function(replacer, space)\r\nEnumerable.prototype.toJSONString = function (replacer, space) {\r\n    if (typeof JSON === Types.Undefined || JSON.stringify == null) {\r\n        throw new Error(\"toJSONString can't find JSON.stringify. This works native JSON support Browser or include json2.js\");\r\n    }\r\n    return JSON.stringify(this.toArray(), replacer, space);\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(separator)\r\n// Overload:function(separator,selector)\r\nEnumerable.prototype.toJoinedString = function (separator, selector) {\r\n    if (separator == null) separator = \"\";\r\n    if (selector == null) selector = Functions.Identity;\r\n\r\n    return this.select(selector).toArray().join(separator);\r\n};\r\n\r\n//////////////////\r\n// Action Methods\r\n\r\n// Overload:function(action<element>)\r\n// Overload:function(action<element,index>)\r\nEnumerable.prototype.doAction = function (action) {\r\n    var source = this;\r\n    action = Utils.createLambda(action);\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var index = 0;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                if (enumerator.moveNext()) {\r\n                    action(enumerator.current(), index++);\r\n                    return this.yieldReturn(enumerator.current());\r\n                }\r\n                return false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function(action<element>)\r\n// Overload:function(action<element,index>)\r\n// Overload:function(func<element,bool>)\r\n// Overload:function(func<element,index,bool>)\r\nEnumerable.prototype.forEach = function (action) {\r\n    action = Utils.createLambda(action);\r\n\r\n    var index = 0;\r\n    var enumerator = this.getEnumerator();\r\n    try {\r\n        while (enumerator.moveNext()) {\r\n            if (action(enumerator.current(), index++) === false) break;\r\n        }\r\n    } finally {\r\n        Utils.dispose(enumerator);\r\n    }\r\n};\r\n\r\nEnumerable.prototype.force = function () {\r\n    var enumerator = this.getEnumerator();\r\n\r\n    try {\r\n        while (enumerator.moveNext()) { }\r\n    }\r\n    finally {\r\n        Utils.dispose(enumerator);\r\n    }\r\n};\r\n\r\n//////////////////////\r\n// Functional Methods\r\n\r\nEnumerable.prototype.letBind = function (func) {\r\n    func = Utils.createLambda(func);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                enumerator = Enumerable.from(func(source)).getEnumerator();\r\n            },\r\n            function () {\r\n                return (enumerator.moveNext())\r\n                    ? this.yieldReturn(enumerator.current())\r\n                    : false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\nEnumerable.prototype.share = function () {\r\n    var source = this;\r\n    var sharedEnumerator;\r\n    var disposed = false;\r\n\r\n    return new DisposableEnumerable(function () {\r\n        return new IEnumerator(\r\n            function () {\r\n                if (sharedEnumerator == null) {\r\n                    sharedEnumerator = source.getEnumerator();\r\n                }\r\n            },\r\n            function () {\r\n                if (disposed) throw new Error(\"enumerator is disposed\");\r\n\r\n                return (sharedEnumerator.moveNext())\r\n                    ? this.yieldReturn(sharedEnumerator.current())\r\n                    : false;\r\n            },\r\n            Functions.Blank\r\n        );\r\n    }, function () {\r\n        disposed = true;\r\n        Utils.dispose(sharedEnumerator);\r\n    });\r\n};\r\n\r\nEnumerable.prototype.memoize = function () {\r\n    var source = this;\r\n    var cache;\r\n    var enumerator;\r\n    var disposed = false;\r\n\r\n    return new DisposableEnumerable(function () {\r\n        var index = -1;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                if (enumerator == null) {\r\n                    enumerator = source.getEnumerator();\r\n                    cache = [];\r\n                }\r\n            },\r\n            function () {\r\n                if (disposed) throw new Error(\"enumerator is disposed\");\r\n\r\n                index++;\r\n                if (cache.length <= index) {\r\n                    return (enumerator.moveNext())\r\n                        ? this.yieldReturn(cache[index] = enumerator.current())\r\n                        : false;\r\n                }\r\n\r\n                return this.yieldReturn(cache[index]);\r\n            },\r\n            Functions.Blank\r\n        );\r\n    }, function () {\r\n        disposed = true;\r\n        Utils.dispose(enumerator);\r\n        cache = null;\r\n    });\r\n};\r\n\r\n// Iterator support (ES6 for..of)\r\nif (Utils.hasNativeIteratorSupport()) {\r\n    Enumerable.prototype[Symbol.iterator] = function () {\r\n        return {\r\n            enumerator: this.getEnumerator(),\r\n            next: function () {\r\n                if (this.enumerator.moveNext()) {\r\n                    return {\r\n                        done: false,\r\n                        value: this.enumerator.current()\r\n                    };\r\n                } else {\r\n                    return { done: true };\r\n                }\r\n            }\r\n        };\r\n    };\r\n}\r\n\r\n//////////////////////////\r\n// Error Handling Methods\r\n\r\nEnumerable.prototype.catchError = function (handler) {\r\n    handler = Utils.createLambda(handler);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                try {\r\n                    return (enumerator.moveNext())\r\n                        ? this.yieldReturn(enumerator.current())\r\n                        : false;\r\n                } catch (e) {\r\n                    handler(e);\r\n                    return false;\r\n                }\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\nEnumerable.prototype.finallyAction = function (finallyAction) {\r\n    finallyAction = Utils.createLambda(finallyAction);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                return (enumerator.moveNext())\r\n                    ? this.yieldReturn(enumerator.current())\r\n                    : false;\r\n            },\r\n            function () {\r\n                try {\r\n                    Utils.dispose(enumerator);\r\n                } finally {\r\n                    finallyAction();\r\n                }\r\n            });\r\n    });\r\n};\r\n\r\n/////////////////\r\n// Debug Methods\r\n\r\n// Overload:function()\r\n// Overload:function(selector)\r\nEnumerable.prototype.log = function (selector) {\r\n    selector = Utils.createLambda(selector);\r\n\r\n    return this.doAction(function (item) {\r\n        if (typeof console !== Types.Undefined) {\r\n            console.log(selector(item));\r\n        }\r\n    });\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(message)\r\n// Overload:function(message,selector)\r\nEnumerable.prototype.trace = function (message, selector) {\r\n    if (message == null) message = \"Trace\";\r\n    selector = Utils.createLambda(selector);\r\n\r\n    return this.doAction(function (item) {\r\n        if (typeof console !== Types.Undefined) {\r\n            console.log(message, selector(item));\r\n        }\r\n    });\r\n};\r\n\r\n///////////\r\n// Private\r\n\r\nvar OrderedEnumerable = function (source, keySelector, comparer, descending, parent) {\r\n    this.source = source;\r\n    this.keySelector = Utils.createLambda(keySelector);\r\n    this.descending = descending;\r\n    this.parent = parent;\r\n\r\n    if (comparer)\r\n        this.comparer = Utils.createLambda(comparer);\r\n};\r\nOrderedEnumerable.prototype = new Enumerable();\r\n\r\nOrderedEnumerable.prototype.createOrderedEnumerable = function (keySelector, comparer, descending) {\r\n    return new OrderedEnumerable(this.source, keySelector, comparer, descending, this);\r\n};\r\n\r\nOrderedEnumerable.prototype.thenBy = function (keySelector, comparer) {\r\n    return this.createOrderedEnumerable(keySelector, comparer, false);\r\n};\r\n\r\nOrderedEnumerable.prototype.thenByDescending = function (keySelector, comparer) {\r\n    return this.createOrderedEnumerable(keySelector, comparer, true);\r\n};\r\n\r\nOrderedEnumerable.prototype.getEnumerator = function () {\r\n    var self = this;\r\n    var buffer;\r\n    var indexes;\r\n    var index = 0;\r\n\r\n    return new IEnumerator(\r\n        function () {\r\n            buffer = [];\r\n            indexes = [];\r\n            self.source.forEach(function (item, index) {\r\n                buffer.push(item);\r\n                indexes.push(index);\r\n            });\r\n            var sortContext = SortContext.create(self, null);\r\n            sortContext.GenerateKeys(buffer);\r\n\r\n            indexes.sort(function (a, b) { return sortContext.compare(a, b); });\r\n        },\r\n        function () {\r\n            return (index < indexes.length)\r\n                ? this.yieldReturn(buffer[indexes[index++]])\r\n                : false;\r\n        },\r\n        Functions.Blank\r\n    );\r\n};\r\n\r\nvar SortContext = function (keySelector, comparer, descending, child) {\r\n    this.keySelector = keySelector;\r\n    this.descending = descending;\r\n    this.child = child;\r\n    this.comparer = comparer;\r\n    this.keys = null;\r\n};\r\n\r\nSortContext.create = function (orderedEnumerable, currentContext) {\r\n    var context = new SortContext(\r\n        orderedEnumerable.keySelector, orderedEnumerable.comparer, orderedEnumerable.descending, currentContext\r\n    );\r\n\r\n    if (orderedEnumerable.parent != null) return SortContext.create(orderedEnumerable.parent, context);\r\n    return context;\r\n};\r\n\r\nSortContext.prototype.GenerateKeys = function (source) {\r\n    var len = source.length;\r\n    var keySelector = this.keySelector;\r\n    var keys = new Array(len);\r\n    for (let i = 0; i < len; i++) keys[i] = keySelector(source[i]);\r\n    this.keys = keys;\r\n\r\n    if (this.child != null) this.child.GenerateKeys(source);\r\n};\r\n\r\nSortContext.prototype.compare = function (index1, index2) {\r\n    var comparison = this.comparer ?\r\n        this.comparer(this.keys[index1], this.keys[index2]) :\r\n        Utils.compare(this.keys[index1], this.keys[index2]);\r\n\r\n    if (comparison == 0) {\r\n        if (this.child != null) return this.child.compare(index1, index2);\r\n        return Utils.compare(index1, index2);\r\n    }\r\n\r\n    return (this.descending) ? -comparison : comparison;\r\n};\r\n\r\nvar DisposableEnumerable = function (getEnumerator, dispose) {\r\n    this.dispose = dispose;\r\n    Enumerable.call(this, getEnumerator);\r\n};\r\nDisposableEnumerable.prototype = new Enumerable();\r\n\r\nvar ArrayEnumerable = function (source) {\r\n    this.getSource = function () { return source; };\r\n};\r\nArrayEnumerable.prototype = new Enumerable();\r\n\r\nArrayEnumerable.prototype.any = function (predicate) {\r\n    return (predicate == null)\r\n        ? (this.getSource().length > 0)\r\n        : Enumerable.prototype.any.apply(this, arguments);\r\n};\r\n\r\nArrayEnumerable.prototype.count = function (predicate) {\r\n    return (predicate == null)\r\n        ? this.getSource().length\r\n        : Enumerable.prototype.count.apply(this, arguments);\r\n};\r\n\r\nArrayEnumerable.prototype.elementAt = function (index) {\r\n    var source = this.getSource();\r\n    return (0 <= index && index < source.length)\r\n        ? source[index]\r\n        : Enumerable.prototype.elementAt.apply(this, arguments);\r\n};\r\n\r\nArrayEnumerable.prototype.elementAtOrDefault = function (index, defaultValue) {\r\n    if (defaultValue === undefined) defaultValue = null;\r\n    var source = this.getSource();\r\n    return (0 <= index && index < source.length)\r\n        ? source[index]\r\n        : defaultValue;\r\n};\r\n\r\nArrayEnumerable.prototype.first = function (predicate) {\r\n    var source = this.getSource();\r\n    return (predicate == null && source.length > 0)\r\n        ? source[0]\r\n        : Enumerable.prototype.first.apply(this, arguments);\r\n};\r\n\r\nArrayEnumerable.prototype.firstOrDefault = function (predicate, defaultValue) {\r\n    if (predicate !== undefined) {\r\n        return Enumerable.prototype.firstOrDefault.apply(this, arguments);\r\n    }\r\n    defaultValue = predicate;\r\n\r\n    var source = this.getSource();\r\n    return source.length > 0 ? source[0] : defaultValue;\r\n};\r\n\r\nArrayEnumerable.prototype.last = function (predicate) {\r\n    var source = this.getSource();\r\n    return (predicate == null && source.length > 0)\r\n        ? source[source.length - 1]\r\n        : Enumerable.prototype.last.apply(this, arguments);\r\n};\r\n\r\nArrayEnumerable.prototype.lastOrDefault = function (predicate, defaultValue) {\r\n    if (predicate !== undefined) {\r\n        return Enumerable.prototype.lastOrDefault.apply(this, arguments);\r\n    }\r\n    defaultValue = predicate;\r\n\r\n    var source = this.getSource();\r\n    return source.length > 0 ? source[source.length - 1] : defaultValue;\r\n};\r\n\r\nArrayEnumerable.prototype.skip = function (count) {\r\n    var source = this.getSource();\r\n\r\n    return new Enumerable(function () {\r\n        var index;\r\n\r\n        return new IEnumerator(\r\n            function () { index = (count < 0) ? 0 : count; },\r\n            function () {\r\n                return (index < source.length)\r\n                    ? this.yieldReturn(source[index++])\r\n                    : false;\r\n            },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\nArrayEnumerable.prototype.takeExceptLast = function (count) {\r\n    if (count == null) count = 1;\r\n    return this.take(this.getSource().length - count);\r\n};\r\n\r\nArrayEnumerable.prototype.takeFromLast = function (count) {\r\n    return this.skip(this.getSource().length - count);\r\n};\r\n\r\nArrayEnumerable.prototype.reverse = function () {\r\n    var source = this.getSource();\r\n\r\n    return new Enumerable(function () {\r\n        var index;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                index = source.length;\r\n            },\r\n            function () {\r\n                return (index > 0)\r\n                    ? this.yieldReturn(source[--index])\r\n                    : false;\r\n            },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\nArrayEnumerable.prototype.sequenceEqual = function (second, compareSelector) {\r\n    if ((second instanceof ArrayEnumerable || second instanceof Array)\r\n        && compareSelector == null\r\n        && Enumerable.from(second).count() != this.count()) {\r\n        return false;\r\n    }\r\n\r\n    return Enumerable.prototype.sequenceEqual.apply(this, arguments);\r\n};\r\n\r\nArrayEnumerable.prototype.toJoinedString = function (separator, selector) {\r\n    var source = this.getSource();\r\n    if (selector != null || !(source instanceof Array)) {\r\n        return Enumerable.prototype.toJoinedString.apply(this, arguments);\r\n    }\r\n\r\n    if (separator == null) separator = \"\";\r\n    return source.join(separator);\r\n};\r\n\r\nArrayEnumerable.prototype.getEnumerator = function () {\r\n    var source = this.getSource();\r\n    var index = -1;\r\n\r\n    // fast and simple enumerator\r\n    return {\r\n        current: function () { return source[index]; },\r\n        moveNext: function () {\r\n            return ++index < source.length;\r\n        },\r\n        dispose: Functions.Blank\r\n    };\r\n};\r\n\r\n// optimization for multiple where and multiple select and whereselect\r\n\r\nvar WhereEnumerable = function (source, predicate) {\r\n    this.prevSource = source;\r\n    this.prevPredicate = predicate; // predicate.length always <= 1\r\n};\r\nWhereEnumerable.prototype = new Enumerable();\r\n\r\nWhereEnumerable.prototype.where = function (predicate) {\r\n    predicate = Utils.createLambda(predicate);\r\n\r\n    if (predicate.length <= 1) {\r\n        const prevPredicate = this.prevPredicate;\r\n        const composedPredicate = function (x) { return prevPredicate(x) && predicate(x); };\r\n        return new WhereEnumerable(this.prevSource, composedPredicate);\r\n    }\r\n    else {\r\n        // if predicate use index, can't compose\r\n        return Enumerable.prototype.where.call(this, predicate);\r\n    }\r\n};\r\n\r\nWhereEnumerable.prototype.select = function (selector) {\r\n    selector = Utils.createLambda(selector);\r\n\r\n    return (selector.length <= 1)\r\n        ? new WhereSelectEnumerable(this.prevSource, this.prevPredicate, selector)\r\n        : Enumerable.prototype.select.call(this, selector);\r\n};\r\n\r\nWhereEnumerable.prototype.getEnumerator = function () {\r\n    var predicate = this.prevPredicate;\r\n    var source = this.prevSource;\r\n    var enumerator;\r\n\r\n    return new IEnumerator(\r\n        function () { enumerator = source.getEnumerator(); },\r\n        function () {\r\n            while (enumerator.moveNext()) {\r\n                if (predicate(enumerator.current())) {\r\n                    return this.yieldReturn(enumerator.current());\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        function () { Utils.dispose(enumerator); });\r\n};\r\n\r\nvar WhereSelectEnumerable = function (source, predicate, selector) {\r\n    this.prevSource = source;\r\n    this.prevPredicate = predicate; // predicate.length always <= 1 or null\r\n    this.prevSelector = selector; // selector.length always <= 1\r\n};\r\nWhereSelectEnumerable.prototype = new Enumerable();\r\n\r\nWhereSelectEnumerable.prototype.where = function (predicate) {\r\n    predicate = Utils.createLambda(predicate);\r\n\r\n    return (predicate.length <= 1)\r\n        ? new WhereEnumerable(this, predicate)\r\n        : Enumerable.prototype.where.call(this, predicate);\r\n};\r\n\r\nWhereSelectEnumerable.prototype.select = function (selector) {\r\n    selector = Utils.createLambda(selector);\r\n\r\n    if (selector.length <= 1) {\r\n        const prevSelector = this.prevSelector;\r\n        const composedSelector = function (x) { return selector(prevSelector(x)); };\r\n        return new WhereSelectEnumerable(this.prevSource, this.prevPredicate, composedSelector);\r\n    }\r\n    else {\r\n        // if selector uses index, can't compose\r\n        return Enumerable.prototype.select.call(this, selector);\r\n    }\r\n};\r\n\r\nWhereSelectEnumerable.prototype.getEnumerator = function () {\r\n    var predicate = this.prevPredicate;\r\n    var selector = this.prevSelector;\r\n    var source = this.prevSource;\r\n    var enumerator;\r\n\r\n    return new IEnumerator(\r\n        function () { enumerator = source.getEnumerator(); },\r\n        function () {\r\n            while (enumerator.moveNext()) {\r\n                if (predicate == null || predicate(enumerator.current())) {\r\n                    return this.yieldReturn(selector(enumerator.current()));\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        function () { Utils.dispose(enumerator); });\r\n};\r\n\r\n///////////////\r\n// Collections\r\n\r\nvar Dictionary = (function () {\r\n    // static utility methods\r\n    var callHasOwnProperty = function (target, key) {\r\n        return Object.prototype.hasOwnProperty.call(target, key);\r\n    };\r\n\r\n    var computeHashCode = function (obj) {\r\n        if (obj === null) return \"null\";\r\n        if (obj === undefined) return \"undefined\";\r\n\r\n        return (typeof obj.toString === Types.Function)\r\n            ? obj.toString()\r\n            : Object.prototype.toString.call(obj);\r\n    };\r\n\r\n    // LinkedList for Dictionary\r\n    var HashEntry = function (key, value) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.prev = null;\r\n        this.next = null;\r\n    };\r\n\r\n    var EntryList = function () {\r\n        this.first = null;\r\n        this.last = null;\r\n    };\r\n    EntryList.prototype =\r\n    {\r\n        addLast: function (entry) {\r\n            if (this.last != null) {\r\n                this.last.next = entry;\r\n                entry.prev = this.last;\r\n                this.last = entry;\r\n            } else this.first = this.last = entry;\r\n        },\r\n\r\n        replace: function (entry, newEntry) {\r\n            if (entry.prev != null) {\r\n                entry.prev.next = newEntry;\r\n                newEntry.prev = entry.prev;\r\n            } else this.first = newEntry;\r\n\r\n            if (entry.next != null) {\r\n                entry.next.prev = newEntry;\r\n                newEntry.next = entry.next;\r\n            } else this.last = newEntry;\r\n\r\n        },\r\n\r\n        remove: function (entry) {\r\n            if (entry.prev != null) entry.prev.next = entry.next;\r\n            else this.first = entry.next;\r\n\r\n            if (entry.next != null) entry.next.prev = entry.prev;\r\n            else this.last = entry.prev;\r\n        }\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(compareSelector)\r\n    var Dictionary = function (compareSelector) {\r\n        this.countField = 0;\r\n        this.entryList = new EntryList();\r\n        this.buckets = {}; // as Dictionary<string,List<object>>\r\n        this.compareSelector = (compareSelector == null) ? Functions.Identity : compareSelector;\r\n    };\r\n    Dictionary.prototype =\r\n    {\r\n        add: function (key, value) {\r\n            var compareKey = this.compareSelector(key);\r\n            var hash = computeHashCode(compareKey);\r\n            var entry = new HashEntry(key, value);\r\n            if (callHasOwnProperty(this.buckets, hash)) {\r\n                const array = this.buckets[hash];\r\n                for (let i = 0; i < array.length; i++) {\r\n                    if (this.compareSelector(array[i].key) === compareKey) {\r\n                        this.entryList.replace(array[i], entry);\r\n                        array[i] = entry;\r\n                        return;\r\n                    }\r\n                }\r\n                array.push(entry);\r\n            } else {\r\n                this.buckets[hash] = [entry];\r\n            }\r\n            this.countField++;\r\n            this.entryList.addLast(entry);\r\n        },\r\n\r\n        get: function (key) {\r\n            var compareKey = this.compareSelector(key);\r\n            var hash = computeHashCode(compareKey);\r\n            if (!callHasOwnProperty(this.buckets, hash)) return undefined;\r\n\r\n            var array = this.buckets[hash];\r\n            for (let i = 0; i < array.length; i++) {\r\n                const entry = array[i];\r\n                if (this.compareSelector(entry.key) === compareKey) return entry.value;\r\n            }\r\n            return undefined;\r\n        },\r\n\r\n        set: function (key, value) {\r\n            var compareKey = this.compareSelector(key);\r\n            var hash = computeHashCode(compareKey);\r\n            if (callHasOwnProperty(this.buckets, hash)) {\r\n                const array = this.buckets[hash];\r\n                for (let i = 0; i < array.length; i++) {\r\n                    if (this.compareSelector(array[i].key) === compareKey) {\r\n                        const newEntry = new HashEntry(key, value);\r\n                        this.entryList.replace(array[i], newEntry);\r\n                        array[i] = newEntry;\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        contains: function (key) {\r\n            var compareKey = this.compareSelector(key);\r\n            var hash = computeHashCode(compareKey);\r\n            if (!callHasOwnProperty(this.buckets, hash)) return false;\r\n\r\n            var array = this.buckets[hash];\r\n            for (let i = 0; i < array.length; i++) {\r\n                if (this.compareSelector(array[i].key) === compareKey) return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        clear: function () {\r\n            this.countField = 0;\r\n            this.buckets = {};\r\n            this.entryList = new EntryList();\r\n        },\r\n\r\n        remove: function (key) {\r\n            var compareKey = this.compareSelector(key);\r\n            var hash = computeHashCode(compareKey);\r\n            if (!callHasOwnProperty(this.buckets, hash)) return;\r\n\r\n            var array = this.buckets[hash];\r\n            for (let i = 0; i < array.length; i++) {\r\n                if (this.compareSelector(array[i].key) === compareKey) {\r\n                    this.entryList.remove(array[i]);\r\n                    array.splice(i, 1);\r\n                    if (array.length == 0) delete this.buckets[hash];\r\n                    this.countField--;\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n\r\n        count: function () {\r\n            return this.countField;\r\n        },\r\n\r\n        toEnumerable: function () {\r\n            var self = this;\r\n            return new Enumerable(function () {\r\n                var currentEntry;\r\n\r\n                return new IEnumerator(\r\n                    function () { currentEntry = self.entryList.first; },\r\n                    function () {\r\n                        if (currentEntry != null) {\r\n                            const result = { key: currentEntry.key, value: currentEntry.value };\r\n                            currentEntry = currentEntry.next;\r\n                            return this.yieldReturn(result);\r\n                        }\r\n                        return false;\r\n                    },\r\n                    Functions.Blank);\r\n            });\r\n        }\r\n    };\r\n\r\n    return Dictionary;\r\n})();\r\n\r\n// dictionary = Dictionary<TKey, TValue[]>\r\nvar Lookup = function (dictionary) {\r\n    this.count = function () {\r\n        return dictionary.count();\r\n    };\r\n    this.get = function (key) {\r\n        return Enumerable.from(dictionary.get(key));\r\n    };\r\n    this.contains = function (key) {\r\n        return dictionary.contains(key);\r\n    };\r\n    this.toEnumerable = function () {\r\n        return dictionary.toEnumerable().select(function (kvp) {\r\n            return new Grouping(kvp.key, kvp.value);\r\n        });\r\n    };\r\n};\r\n\r\nvar Grouping = function (groupKey, elements) {\r\n    this.key = function () {\r\n        return groupKey;\r\n    };\r\n    ArrayEnumerable.call(this, elements);\r\n};\r\nGrouping.prototype = new ArrayEnumerable();\r\n\r\nexport default Enumerable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}