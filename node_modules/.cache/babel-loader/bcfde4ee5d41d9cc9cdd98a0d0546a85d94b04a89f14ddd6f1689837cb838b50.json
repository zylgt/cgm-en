{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar _classPrivateMethodInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateMethodInitSpec.js\").default;\nvar _classPrivateFieldInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _classPrivateFieldGet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldGet2.js\").default;\nvar _assertClassBrand = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/assertClassBrand.js\").default;\nvar _classPrivateFieldSet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldSet2.js\").default;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeProgressCallback = exports.CLI = void 0;\nconst process_1 = require(\"process\");\nconst readline = __importStar(require(\"readline\"));\nconst progress_1 = __importDefault(require(\"progress\"));\nconst helpers_1 = require(\"yargs/helpers\");\nconst yargs_1 = __importDefault(require(\"yargs/yargs\"));\nconst browser_data_js_1 = require(\"./browser-data/browser-data.js\");\nconst Cache_js_1 = require(\"./Cache.js\");\nconst detectPlatform_js_1 = require(\"./detectPlatform.js\");\nconst install_js_1 = require(\"./install.js\");\nconst launch_js_1 = require(\"./launch.js\");\n/**\n * @public\n */\nvar _cachePath = /*#__PURE__*/new WeakMap();\nvar _rl = /*#__PURE__*/new WeakMap();\nvar _scriptName = /*#__PURE__*/new WeakMap();\nvar _allowCachePathOverride = /*#__PURE__*/new WeakMap();\nvar _pinnedBrowsers = /*#__PURE__*/new WeakMap();\nvar _prefixCommand = /*#__PURE__*/new WeakMap();\nvar _CLI_brand = /*#__PURE__*/new WeakSet();\nclass CLI {\n  constructor(opts, _rl2) {\n    _classPrivateMethodInitSpec(this, _CLI_brand);\n    _classPrivateFieldInitSpec(this, _cachePath, void 0);\n    _classPrivateFieldInitSpec(this, _rl, void 0);\n    _classPrivateFieldInitSpec(this, _scriptName, '');\n    _classPrivateFieldInitSpec(this, _allowCachePathOverride, true);\n    _classPrivateFieldInitSpec(this, _pinnedBrowsers, void 0);\n    _classPrivateFieldInitSpec(this, _prefixCommand, void 0);\n    if (!opts) {\n      opts = {};\n    }\n    if (typeof opts === 'string') {\n      opts = {\n        cachePath: opts\n      };\n    }\n    _classPrivateFieldSet(_cachePath, this, opts.cachePath ?? process.cwd());\n    _classPrivateFieldSet(_rl, this, _rl2);\n    _classPrivateFieldSet(_scriptName, this, opts.scriptName ?? '@puppeteer/browsers');\n    _classPrivateFieldSet(_allowCachePathOverride, this, opts.allowCachePathOverride ?? true);\n    _classPrivateFieldSet(_pinnedBrowsers, this, opts.pinnedBrowsers);\n    _classPrivateFieldSet(_prefixCommand, this, opts.prefixCommand);\n  }\n  async run(argv) {\n    const yargsInstance = (0, yargs_1.default)((0, helpers_1.hideBin)(argv));\n    let target = yargsInstance.scriptName(_classPrivateFieldGet(_scriptName, this));\n    if (_classPrivateFieldGet(_prefixCommand, this)) {\n      target = target.command(_classPrivateFieldGet(_prefixCommand, this).cmd, _classPrivateFieldGet(_prefixCommand, this).description, yargs => {\n        return _assertClassBrand(_CLI_brand, this, _build).call(this, yargs);\n      });\n    } else {\n      target = _assertClassBrand(_CLI_brand, this, _build).call(this, target);\n    }\n    await target.demandCommand(1).help().wrap(Math.min(120, yargsInstance.terminalWidth())).parse();\n  }\n}\nfunction _defineBrowserParameter(yargs) {\n  yargs.positional('browser', {\n    description: 'Which browser to install <browser>[@<buildId|latest>]. `latest` will try to find the latest available build. `buildId` is a browser-specific identifier such as a version or a revision.',\n    type: 'string',\n    coerce: opt => {\n      return {\n        name: _assertClassBrand(_CLI_brand, this, _parseBrowser).call(this, opt),\n        buildId: _assertClassBrand(_CLI_brand, this, _parseBuildId).call(this, opt)\n      };\n    }\n  });\n}\nfunction _definePlatformParameter(yargs) {\n  yargs.option('platform', {\n    type: 'string',\n    desc: 'Platform that the binary needs to be compatible with.',\n    choices: Object.values(browser_data_js_1.BrowserPlatform),\n    defaultDescription: 'Auto-detected'\n  });\n}\nfunction _definePathParameter(yargs, required = false) {\n  if (!_classPrivateFieldGet(_allowCachePathOverride, this)) {\n    return;\n  }\n  yargs.option('path', {\n    type: 'string',\n    desc: 'Path to the root folder for the browser downloads and installation. The installation folder structure is compatible with the cache structure used by Puppeteer.',\n    defaultDescription: 'Current working directory',\n    ...(required ? {} : {\n      default: process.cwd()\n    })\n  });\n  if (required) {\n    yargs.demandOption('path');\n  }\n}\nfunction _build(yargs) {\n  const latestOrPinned = _classPrivateFieldGet(_pinnedBrowsers, this) ? 'pinned' : 'latest';\n  return yargs.command('install <browser>', 'Download and install the specified browser. If successful, the command outputs the actual browser buildId that was installed and the absolute path to the browser executable (format: <browser>@<buildID> <path>).', yargs => {\n    _assertClassBrand(_CLI_brand, this, _defineBrowserParameter).call(this, yargs);\n    _assertClassBrand(_CLI_brand, this, _definePlatformParameter).call(this, yargs);\n    _assertClassBrand(_CLI_brand, this, _definePathParameter).call(this, yargs);\n    yargs.option('base-url', {\n      type: 'string',\n      desc: 'Base URL to download from'\n    });\n    yargs.example('$0 install chrome', `Install the ${latestOrPinned} available build of the Chrome browser.`);\n    yargs.example('$0 install chrome@latest', 'Install the latest available build for the Chrome browser.');\n    yargs.example('$0 install chrome@stable', 'Install the latest available build for the Chrome browser from the stable channel.');\n    yargs.example('$0 install chrome@beta', 'Install the latest available build for the Chrome browser from the beta channel.');\n    yargs.example('$0 install chrome@dev', 'Install the latest available build for the Chrome browser from the dev channel.');\n    yargs.example('$0 install chrome@canary', 'Install the latest available build for the Chrome Canary browser.');\n    yargs.example('$0 install chrome@115', 'Install the latest available build for Chrome 115.');\n    yargs.example('$0 install chromedriver@canary', 'Install the latest available build for ChromeDriver Canary.');\n    yargs.example('$0 install chromedriver@115', 'Install the latest available build for ChromeDriver 115.');\n    yargs.example('$0 install chromedriver@115.0.5790', 'Install the latest available patch (115.0.5790.X) build for ChromeDriver.');\n    yargs.example('$0 install chrome-headless-shell', 'Install the latest available chrome-headless-shell build.');\n    yargs.example('$0 install chrome-headless-shell@beta', 'Install the latest available chrome-headless-shell build corresponding to the Beta channel.');\n    yargs.example('$0 install chrome-headless-shell@118', 'Install the latest available chrome-headless-shell 118 build.');\n    yargs.example('$0 install chromium@1083080', 'Install the revision 1083080 of the Chromium browser.');\n    yargs.example('$0 install firefox', 'Install the latest nightly available build of the Firefox browser.');\n    yargs.example('$0 install firefox@stable', 'Install the latest stable build of the Firefox browser.');\n    yargs.example('$0 install firefox@beta', 'Install the latest beta build of the Firefox browser.');\n    yargs.example('$0 install firefox@devedition', 'Install the latest devedition build of the Firefox browser.');\n    yargs.example('$0 install firefox@esr', 'Install the latest ESR build of the Firefox browser.');\n    yargs.example('$0 install firefox@nightly', 'Install the latest nightly build of the Firefox browser.');\n    yargs.example('$0 install firefox@stable_111.0.1', 'Install a specific version of the Firefox browser.');\n    yargs.example('$0 install firefox --platform mac', 'Install the latest Mac (Intel) build of the Firefox browser.');\n    if (_classPrivateFieldGet(_allowCachePathOverride, this)) {\n      yargs.example('$0 install firefox --path /tmp/my-browser-cache', 'Install to the specified cache directory.');\n    }\n  }, async argv => {\n    const args = argv;\n    args.platform ??= (0, detectPlatform_js_1.detectBrowserPlatform)();\n    if (!args.platform) {\n      throw new Error(`Could not resolve the current platform`);\n    }\n    if (args.browser.buildId === 'pinned') {\n      const pinnedVersion = _classPrivateFieldGet(_pinnedBrowsers, this)?.[args.browser.name];\n      if (!pinnedVersion) {\n        throw new Error(`No pinned version found for ${args.browser.name}`);\n      }\n      args.browser.buildId = pinnedVersion;\n    }\n    const originalBuildId = args.browser.buildId;\n    args.browser.buildId = await (0, browser_data_js_1.resolveBuildId)(args.browser.name, args.platform, args.browser.buildId);\n    await (0, install_js_1.install)({\n      browser: args.browser.name,\n      buildId: args.browser.buildId,\n      platform: args.platform,\n      cacheDir: args.path ?? _classPrivateFieldGet(_cachePath, this),\n      downloadProgressCallback: makeProgressCallback(args.browser.name, args.browser.buildId),\n      baseUrl: args.baseUrl,\n      buildIdAlias: originalBuildId !== args.browser.buildId ? originalBuildId : undefined\n    });\n    console.log(`${args.browser.name}@${args.browser.buildId} ${(0, launch_js_1.computeExecutablePath)({\n      browser: args.browser.name,\n      buildId: args.browser.buildId,\n      cacheDir: args.path ?? _classPrivateFieldGet(_cachePath, this),\n      platform: args.platform\n    })}`);\n  }).command('launch <browser>', 'Launch the specified browser', yargs => {\n    _assertClassBrand(_CLI_brand, this, _defineBrowserParameter).call(this, yargs);\n    _assertClassBrand(_CLI_brand, this, _definePlatformParameter).call(this, yargs);\n    _assertClassBrand(_CLI_brand, this, _definePathParameter).call(this, yargs);\n    yargs.option('detached', {\n      type: 'boolean',\n      desc: 'Detach the child process.',\n      default: false\n    });\n    yargs.option('system', {\n      type: 'boolean',\n      desc: 'Search for a browser installed on the system instead of the cache folder.',\n      default: false\n    });\n    yargs.example('$0 launch chrome@115.0.5790.170', 'Launch Chrome 115.0.5790.170');\n    yargs.example('$0 launch firefox@112.0a1', 'Launch the Firefox browser identified by the milestone 112.0a1.');\n    yargs.example('$0 launch chrome@115.0.5790.170 --detached', 'Launch the browser but detach the sub-processes.');\n    yargs.example('$0 launch chrome@canary --system', 'Try to locate the Canary build of Chrome installed on the system and launch it.');\n  }, async argv => {\n    const args = argv;\n    const executablePath = args.system ? (0, launch_js_1.computeSystemExecutablePath)({\n      browser: args.browser.name,\n      // TODO: throw an error if not a ChromeReleaseChannel is provided.\n      channel: args.browser.buildId,\n      platform: args.platform\n    }) : (0, launch_js_1.computeExecutablePath)({\n      browser: args.browser.name,\n      buildId: args.browser.buildId,\n      cacheDir: args.path ?? _classPrivateFieldGet(_cachePath, this),\n      platform: args.platform\n    });\n    (0, launch_js_1.launch)({\n      executablePath,\n      detached: args.detached\n    });\n  }).command('clear', _classPrivateFieldGet(_allowCachePathOverride, this) ? 'Removes all installed browsers from the specified cache directory' : `Removes all installed browsers from ${_classPrivateFieldGet(_cachePath, this)}`, yargs => {\n    _assertClassBrand(_CLI_brand, this, _definePathParameter).call(this, yargs, true);\n  }, async argv => {\n    const args = argv;\n    const cacheDir = args.path ?? _classPrivateFieldGet(_cachePath, this);\n    const rl = _classPrivateFieldGet(_rl, this) ?? readline.createInterface({\n      input: process_1.stdin,\n      output: process_1.stdout\n    });\n    rl.question(`Do you want to permanently and recursively delete the content of ${cacheDir} (yes/No)? `, answer => {\n      rl.close();\n      if (!['y', 'yes'].includes(answer.toLowerCase().trim())) {\n        console.log('Cancelled.');\n        return;\n      }\n      const cache = new Cache_js_1.Cache(cacheDir);\n      cache.clear();\n      console.log(`${cacheDir} cleared.`);\n    });\n  }).demandCommand(1).help();\n}\nfunction _parseBrowser(version) {\n  return version.split('@').shift();\n}\nfunction _parseBuildId(version) {\n  const parts = version.split('@');\n  return parts.length === 2 ? parts[1] : _classPrivateFieldGet(_pinnedBrowsers, this) ? 'pinned' : 'latest';\n}\nexports.CLI = CLI;\n/**\n * @public\n */\nfunction makeProgressCallback(browser, buildId) {\n  let progressBar;\n  let lastDownloadedBytes = 0;\n  return (downloadedBytes, totalBytes) => {\n    if (!progressBar) {\n      progressBar = new progress_1.default(`Downloading ${browser} ${buildId} - ${toMegabytes(totalBytes)} [:bar] :percent :etas `, {\n        complete: '=',\n        incomplete: ' ',\n        width: 20,\n        total: totalBytes\n      });\n    }\n    const delta = downloadedBytes - lastDownloadedBytes;\n    lastDownloadedBytes = downloadedBytes;\n    progressBar.tick(delta);\n  };\n}\nexports.makeProgressCallback = makeProgressCallback;\nfunction toMegabytes(bytes) {\n  const mb = bytes / 1000 / 1000;\n  return `${Math.round(mb * 10) / 10} MB`;\n}","map":{"version":3,"names":["_classPrivateMethodInitSpec","require","default","_classPrivateFieldInitSpec","_classPrivateFieldGet","_assertClassBrand","_classPrivateFieldSet","process_1","readline","__importStar","progress_1","__importDefault","helpers_1","yargs_1","browser_data_js_1","Cache_js_1","detectPlatform_js_1","install_js_1","launch_js_1","_cachePath","WeakMap","_rl","_scriptName","_allowCachePathOverride","_pinnedBrowsers","_prefixCommand","_CLI_brand","WeakSet","CLI","constructor","opts","rl","cachePath","process","cwd","scriptName","allowCachePathOverride","pinnedBrowsers","prefixCommand","run","argv","yargsInstance","hideBin","target","command","cmd","description","yargs","_build","call","demandCommand","help","wrap","Math","min","terminalWidth","parse","_defineBrowserParameter","positional","type","coerce","opt","name","_parseBrowser","buildId","_parseBuildId","_definePlatformParameter","option","desc","choices","Object","values","BrowserPlatform","defaultDescription","_definePathParameter","required","demandOption","latestOrPinned","example","args","platform","detectBrowserPlatform","Error","browser","pinnedVersion","originalBuildId","resolveBuildId","install","cacheDir","path","downloadProgressCallback","makeProgressCallback","baseUrl","buildIdAlias","undefined","console","log","computeExecutablePath","executablePath","system","computeSystemExecutablePath","channel","launch","detached","createInterface","input","stdin","output","stdout","question","answer","close","includes","toLowerCase","trim","cache","Cache","clear","version","split","shift","parts","length","exports","progressBar","lastDownloadedBytes","downloadedBytes","totalBytes","toMegabytes","complete","incomplete","width","total","delta","tick","bytes","mb","round"],"sources":["../../src/CLI.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}