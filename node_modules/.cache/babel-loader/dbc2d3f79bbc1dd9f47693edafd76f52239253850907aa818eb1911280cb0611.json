{"ast":null,"code":"import _classPrivateGetter from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateGetter.js\";\nimport _classPrivateMethodInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateMethodInitSpec.js\";\nimport _defineProperty from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classPrivateFieldInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldGet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\nimport _assertClassBrand from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/assertClassBrand.js\";\nimport _classPrivateFieldSet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\nimport \"core-js/modules/es.array.push.js\";\n/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Keyboard, Mouse, MouseButton, Touchscreen } from '../api/Input.js';\nimport { _keyDefinitions } from '../common/USKeyboardLayout.js';\nimport { assert } from '../util/assert.js';\n/**\n * @internal\n */\nvar _client = /*#__PURE__*/new WeakMap();\nvar _pressedKeys = /*#__PURE__*/new WeakMap();\nvar _CdpKeyboard_brand = /*#__PURE__*/new WeakSet();\nexport class CdpKeyboard extends Keyboard {\n  constructor(client) {\n    super();\n    _classPrivateMethodInitSpec(this, _CdpKeyboard_brand);\n    _classPrivateFieldInitSpec(this, _client, void 0);\n    _classPrivateFieldInitSpec(this, _pressedKeys, new Set());\n    _defineProperty(this, \"_modifiers\", 0);\n    _classPrivateFieldSet(_client, this, client);\n  }\n  updateClient(client) {\n    _classPrivateFieldSet(_client, this, client);\n  }\n  async down(key, options = {\n    text: undefined,\n    commands: []\n  }) {\n    const description = _assertClassBrand(_CdpKeyboard_brand, this, _keyDescriptionForString).call(this, key);\n    const autoRepeat = _classPrivateFieldGet(_pressedKeys, this).has(description.code);\n    _classPrivateFieldGet(_pressedKeys, this).add(description.code);\n    this._modifiers |= _assertClassBrand(_CdpKeyboard_brand, this, _modifierBit).call(this, description.key);\n    const text = options.text === undefined ? description.text : options.text;\n    await _classPrivateFieldGet(_client, this).send('Input.dispatchKeyEvent', {\n      type: text ? 'keyDown' : 'rawKeyDown',\n      modifiers: this._modifiers,\n      windowsVirtualKeyCode: description.keyCode,\n      code: description.code,\n      key: description.key,\n      text: text,\n      unmodifiedText: text,\n      autoRepeat,\n      location: description.location,\n      isKeypad: description.location === 3,\n      commands: options.commands\n    });\n  }\n  async up(key) {\n    const description = _assertClassBrand(_CdpKeyboard_brand, this, _keyDescriptionForString).call(this, key);\n    this._modifiers &= ~_assertClassBrand(_CdpKeyboard_brand, this, _modifierBit).call(this, description.key);\n    _classPrivateFieldGet(_pressedKeys, this).delete(description.code);\n    await _classPrivateFieldGet(_client, this).send('Input.dispatchKeyEvent', {\n      type: 'keyUp',\n      modifiers: this._modifiers,\n      key: description.key,\n      windowsVirtualKeyCode: description.keyCode,\n      code: description.code,\n      location: description.location\n    });\n  }\n  async sendCharacter(char) {\n    await _classPrivateFieldGet(_client, this).send('Input.insertText', {\n      text: char\n    });\n  }\n  charIsKey(char) {\n    return !!_keyDefinitions[char];\n  }\n  async type(text, options = {}) {\n    const delay = options.delay || undefined;\n    for (const char of text) {\n      if (this.charIsKey(char)) {\n        await this.press(char, {\n          delay\n        });\n      } else {\n        if (delay) {\n          await new Promise(f => {\n            return setTimeout(f, delay);\n          });\n        }\n        await this.sendCharacter(char);\n      }\n    }\n  }\n  async press(key, options = {}) {\n    const {\n      delay = null\n    } = options;\n    await this.down(key, options);\n    if (delay) {\n      await new Promise(f => {\n        return setTimeout(f, options.delay);\n      });\n    }\n    await this.up(key);\n  }\n}\nfunction _modifierBit(key) {\n  if (key === 'Alt') {\n    return 1;\n  }\n  if (key === 'Control') {\n    return 2;\n  }\n  if (key === 'Meta') {\n    return 4;\n  }\n  if (key === 'Shift') {\n    return 8;\n  }\n  return 0;\n}\nfunction _keyDescriptionForString(keyString) {\n  const shift = this._modifiers & 8;\n  const description = {\n    key: '',\n    keyCode: 0,\n    code: '',\n    text: '',\n    location: 0\n  };\n  const definition = _keyDefinitions[keyString];\n  assert(definition, `Unknown key: \"${keyString}\"`);\n  if (definition.key) {\n    description.key = definition.key;\n  }\n  if (shift && definition.shiftKey) {\n    description.key = definition.shiftKey;\n  }\n  if (definition.keyCode) {\n    description.keyCode = definition.keyCode;\n  }\n  if (shift && definition.shiftKeyCode) {\n    description.keyCode = definition.shiftKeyCode;\n  }\n  if (definition.code) {\n    description.code = definition.code;\n  }\n  if (definition.location) {\n    description.location = definition.location;\n  }\n  if (description.key.length === 1) {\n    description.text = description.key;\n  }\n  if (definition.text) {\n    description.text = definition.text;\n  }\n  if (shift && definition.shiftText) {\n    description.text = definition.shiftText;\n  }\n  // if any modifiers besides shift are pressed, no text should be sent\n  if (this._modifiers & ~8) {\n    description.text = '';\n  }\n  return description;\n}\nconst getFlag = button => {\n  switch (button) {\n    case MouseButton.Left:\n      return 1 /* MouseButtonFlag.Left */;\n    case MouseButton.Right:\n      return 2 /* MouseButtonFlag.Right */;\n    case MouseButton.Middle:\n      return 4 /* MouseButtonFlag.Middle */;\n    case MouseButton.Back:\n      return 8 /* MouseButtonFlag.Back */;\n    case MouseButton.Forward:\n      return 16 /* MouseButtonFlag.Forward */;\n  }\n};\n/**\n * This should match\n * https://source.chromium.org/chromium/chromium/src/+/refs/heads/main:content/browser/renderer_host/input/web_input_event_builders_mac.mm;drc=a61b95c63b0b75c1cfe872d9c8cdf927c226046e;bpv=1;bpt=1;l=221.\n */\nconst getButtonFromPressedButtons = buttons => {\n  if (buttons & 1 /* MouseButtonFlag.Left */) {\n    return MouseButton.Left;\n  } else if (buttons & 2 /* MouseButtonFlag.Right */) {\n    return MouseButton.Right;\n  } else if (buttons & 4 /* MouseButtonFlag.Middle */) {\n    return MouseButton.Middle;\n  } else if (buttons & 8 /* MouseButtonFlag.Back */) {\n    return MouseButton.Back;\n  } else if (buttons & 16 /* MouseButtonFlag.Forward */) {\n    return MouseButton.Forward;\n  }\n  return 'none';\n};\n/**\n * @internal\n */\nvar _client2 = /*#__PURE__*/new WeakMap();\nvar _keyboard = /*#__PURE__*/new WeakMap();\nvar _state = /*#__PURE__*/new WeakMap();\nvar _CdpMouse_brand = /*#__PURE__*/new WeakSet();\nvar _transactions = /*#__PURE__*/new WeakMap();\nexport class CdpMouse extends Mouse {\n  constructor(client, keyboard) {\n    super();\n    _classPrivateMethodInitSpec(this, _CdpMouse_brand);\n    _classPrivateFieldInitSpec(this, _client2, void 0);\n    _classPrivateFieldInitSpec(this, _keyboard, void 0);\n    _classPrivateFieldInitSpec(this, _state, {\n      position: {\n        x: 0,\n        y: 0\n      },\n      buttons: 0 /* MouseButtonFlag.None */\n    });\n    // Transactions can run in parallel, so we store each of thme in this array.\n    _classPrivateFieldInitSpec(this, _transactions, []);\n    _classPrivateFieldSet(_client2, this, client);\n    _classPrivateFieldSet(_keyboard, this, keyboard);\n  }\n  updateClient(client) {\n    _classPrivateFieldSet(_client2, this, client);\n  }\n  async reset() {\n    const actions = [];\n    for (const [flag, button] of [[1 /* MouseButtonFlag.Left */, MouseButton.Left], [4 /* MouseButtonFlag.Middle */, MouseButton.Middle], [2 /* MouseButtonFlag.Right */, MouseButton.Right], [16 /* MouseButtonFlag.Forward */, MouseButton.Forward], [8 /* MouseButtonFlag.Back */, MouseButton.Back]]) {\n      if (_classPrivateGetter(_CdpMouse_brand, this, _get_state).buttons & flag) {\n        actions.push(this.up({\n          button: button\n        }));\n      }\n    }\n    if (_classPrivateGetter(_CdpMouse_brand, this, _get_state).position.x !== 0 || _classPrivateGetter(_CdpMouse_brand, this, _get_state).position.y !== 0) {\n      actions.push(this.move(0, 0));\n    }\n    await Promise.all(actions);\n  }\n  async move(x, y, options = {}) {\n    const {\n      steps = 1\n    } = options;\n    const from = _classPrivateGetter(_CdpMouse_brand, this, _get_state).position;\n    const to = {\n      x,\n      y\n    };\n    for (let i = 1; i <= steps; i++) {\n      await _assertClassBrand(_CdpMouse_brand, this, _withTransaction).call(this, updateState => {\n        updateState({\n          position: {\n            x: from.x + (to.x - from.x) * (i / steps),\n            y: from.y + (to.y - from.y) * (i / steps)\n          }\n        });\n        const {\n          buttons,\n          position\n        } = _classPrivateGetter(_CdpMouse_brand, this, _get_state);\n        return _classPrivateFieldGet(_client2, this).send('Input.dispatchMouseEvent', {\n          type: 'mouseMoved',\n          modifiers: _classPrivateFieldGet(_keyboard, this)._modifiers,\n          buttons,\n          button: getButtonFromPressedButtons(buttons),\n          ...position\n        });\n      });\n    }\n  }\n  async down(options = {}) {\n    const {\n      button = MouseButton.Left,\n      clickCount = 1\n    } = options;\n    const flag = getFlag(button);\n    if (!flag) {\n      throw new Error(`Unsupported mouse button: ${button}`);\n    }\n    if (_classPrivateGetter(_CdpMouse_brand, this, _get_state).buttons & flag) {\n      throw new Error(`'${button}' is already pressed.`);\n    }\n    await _assertClassBrand(_CdpMouse_brand, this, _withTransaction).call(this, updateState => {\n      updateState({\n        buttons: _classPrivateGetter(_CdpMouse_brand, this, _get_state).buttons | flag\n      });\n      const {\n        buttons,\n        position\n      } = _classPrivateGetter(_CdpMouse_brand, this, _get_state);\n      return _classPrivateFieldGet(_client2, this).send('Input.dispatchMouseEvent', {\n        type: 'mousePressed',\n        modifiers: _classPrivateFieldGet(_keyboard, this)._modifiers,\n        clickCount,\n        buttons,\n        button,\n        ...position\n      });\n    });\n  }\n  async up(options = {}) {\n    const {\n      button = MouseButton.Left,\n      clickCount = 1\n    } = options;\n    const flag = getFlag(button);\n    if (!flag) {\n      throw new Error(`Unsupported mouse button: ${button}`);\n    }\n    if (!(_classPrivateGetter(_CdpMouse_brand, this, _get_state).buttons & flag)) {\n      throw new Error(`'${button}' is not pressed.`);\n    }\n    await _assertClassBrand(_CdpMouse_brand, this, _withTransaction).call(this, updateState => {\n      updateState({\n        buttons: _classPrivateGetter(_CdpMouse_brand, this, _get_state).buttons & ~flag\n      });\n      const {\n        buttons,\n        position\n      } = _classPrivateGetter(_CdpMouse_brand, this, _get_state);\n      return _classPrivateFieldGet(_client2, this).send('Input.dispatchMouseEvent', {\n        type: 'mouseReleased',\n        modifiers: _classPrivateFieldGet(_keyboard, this)._modifiers,\n        clickCount,\n        buttons,\n        button,\n        ...position\n      });\n    });\n  }\n  async click(x, y, options = {}) {\n    const {\n      delay,\n      count = 1,\n      clickCount = count\n    } = options;\n    if (count < 1) {\n      throw new Error('Click must occur a positive number of times.');\n    }\n    const actions = [this.move(x, y)];\n    if (clickCount === count) {\n      for (let i = 1; i < count; ++i) {\n        actions.push(this.down({\n          ...options,\n          clickCount: i\n        }), this.up({\n          ...options,\n          clickCount: i\n        }));\n      }\n    }\n    actions.push(this.down({\n      ...options,\n      clickCount\n    }));\n    if (typeof delay === 'number') {\n      await Promise.all(actions);\n      actions.length = 0;\n      await new Promise(resolve => {\n        setTimeout(resolve, delay);\n      });\n    }\n    actions.push(this.up({\n      ...options,\n      clickCount\n    }));\n    await Promise.all(actions);\n  }\n  async wheel(options = {}) {\n    const {\n      deltaX = 0,\n      deltaY = 0\n    } = options;\n    const {\n      position,\n      buttons\n    } = _classPrivateGetter(_CdpMouse_brand, this, _get_state);\n    await _classPrivateFieldGet(_client2, this).send('Input.dispatchMouseEvent', {\n      type: 'mouseWheel',\n      pointerType: 'mouse',\n      modifiers: _classPrivateFieldGet(_keyboard, this)._modifiers,\n      deltaY,\n      deltaX,\n      buttons,\n      ...position\n    });\n  }\n  async drag(start, target) {\n    const promise = new Promise(resolve => {\n      _classPrivateFieldGet(_client2, this).once('Input.dragIntercepted', event => {\n        return resolve(event.data);\n      });\n    });\n    await this.move(start.x, start.y);\n    await this.down();\n    await this.move(target.x, target.y);\n    return await promise;\n  }\n  async dragEnter(target, data) {\n    await _classPrivateFieldGet(_client2, this).send('Input.dispatchDragEvent', {\n      type: 'dragEnter',\n      x: target.x,\n      y: target.y,\n      modifiers: _classPrivateFieldGet(_keyboard, this)._modifiers,\n      data\n    });\n  }\n  async dragOver(target, data) {\n    await _classPrivateFieldGet(_client2, this).send('Input.dispatchDragEvent', {\n      type: 'dragOver',\n      x: target.x,\n      y: target.y,\n      modifiers: _classPrivateFieldGet(_keyboard, this)._modifiers,\n      data\n    });\n  }\n  async drop(target, data) {\n    await _classPrivateFieldGet(_client2, this).send('Input.dispatchDragEvent', {\n      type: 'drop',\n      x: target.x,\n      y: target.y,\n      modifiers: _classPrivateFieldGet(_keyboard, this)._modifiers,\n      data\n    });\n  }\n  async dragAndDrop(start, target, options = {}) {\n    const {\n      delay = null\n    } = options;\n    const data = await this.drag(start, target);\n    await this.dragEnter(target, data);\n    await this.dragOver(target, data);\n    if (delay) {\n      await new Promise(resolve => {\n        return setTimeout(resolve, delay);\n      });\n    }\n    await this.drop(target, data);\n    await this.up();\n  }\n}\n/**\n * @internal\n */\nfunction _get_state(_this) {\n  return Object.assign({\n    ..._classPrivateFieldGet(_state, _this)\n  }, ..._classPrivateFieldGet(_transactions, _this));\n}\nfunction _createTransaction() {\n  const transaction = {};\n  _classPrivateFieldGet(_transactions, this).push(transaction);\n  const popTransaction = () => {\n    _classPrivateFieldGet(_transactions, this).splice(_classPrivateFieldGet(_transactions, this).indexOf(transaction), 1);\n  };\n  return {\n    update: updates => {\n      Object.assign(transaction, updates);\n    },\n    commit: () => {\n      _classPrivateFieldSet(_state, this, {\n        ..._classPrivateFieldGet(_state, this),\n        ...transaction\n      });\n      popTransaction();\n    },\n    rollback: popTransaction\n  };\n}\n/**\n * This is a shortcut for a typical update, commit/rollback lifecycle based on\n * the error of the action.\n */\nasync function _withTransaction(action) {\n  const {\n    update,\n    commit,\n    rollback\n  } = _assertClassBrand(_CdpMouse_brand, this, _createTransaction).call(this);\n  try {\n    await action(update);\n    commit();\n  } catch (error) {\n    rollback();\n    throw error;\n  }\n}\nvar _client3 = /*#__PURE__*/new WeakMap();\nvar _keyboard2 = /*#__PURE__*/new WeakMap();\nexport class CdpTouchscreen extends Touchscreen {\n  constructor(client, keyboard) {\n    super();\n    _classPrivateFieldInitSpec(this, _client3, void 0);\n    _classPrivateFieldInitSpec(this, _keyboard2, void 0);\n    _classPrivateFieldSet(_client3, this, client);\n    _classPrivateFieldSet(_keyboard2, this, keyboard);\n  }\n  updateClient(client) {\n    _classPrivateFieldSet(_client3, this, client);\n  }\n  async touchStart(x, y) {\n    await _classPrivateFieldGet(_client3, this).send('Input.dispatchTouchEvent', {\n      type: 'touchStart',\n      touchPoints: [{\n        x: Math.round(x),\n        y: Math.round(y),\n        radiusX: 0.5,\n        radiusY: 0.5,\n        force: 0.5\n      }],\n      modifiers: _classPrivateFieldGet(_keyboard2, this)._modifiers\n    });\n  }\n  async touchMove(x, y) {\n    await _classPrivateFieldGet(_client3, this).send('Input.dispatchTouchEvent', {\n      type: 'touchMove',\n      touchPoints: [{\n        x: Math.round(x),\n        y: Math.round(y),\n        radiusX: 0.5,\n        radiusY: 0.5,\n        force: 0.5\n      }],\n      modifiers: _classPrivateFieldGet(_keyboard2, this)._modifiers\n    });\n  }\n  async touchEnd() {\n    await _classPrivateFieldGet(_client3, this).send('Input.dispatchTouchEvent', {\n      type: 'touchEnd',\n      touchPoints: [],\n      modifiers: _classPrivateFieldGet(_keyboard2, this)._modifiers\n    });\n  }\n}","map":{"version":3,"names":["Keyboard","Mouse","MouseButton","Touchscreen","_keyDefinitions","assert","_client","WeakMap","_pressedKeys","_CdpKeyboard_brand","WeakSet","CdpKeyboard","constructor","client","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","Set","_defineProperty","_classPrivateFieldSet","updateClient","down","key","options","text","undefined","commands","description","_assertClassBrand","_keyDescriptionForString","call","autoRepeat","_classPrivateFieldGet","has","code","add","_modifiers","_modifierBit","send","type","modifiers","windowsVirtualKeyCode","keyCode","unmodifiedText","location","isKeypad","up","delete","sendCharacter","char","charIsKey","delay","press","Promise","f","setTimeout","keyString","shift","definition","shiftKey","shiftKeyCode","length","shiftText","getFlag","button","Left","Right","Middle","Back","Forward","getButtonFromPressedButtons","buttons","_client2","_keyboard","_state","_CdpMouse_brand","_transactions","CdpMouse","keyboard","position","x","y","reset","actions","flag","_classPrivateGetter","_get_state","push","move","all","steps","from","to","i","_withTransaction","updateState","clickCount","Error","click","count","resolve","wheel","deltaX","deltaY","pointerType","drag","start","target","promise","once","event","data","dragEnter","dragOver","drop","dragAndDrop","_this","Object","assign","_createTransaction","transaction","popTransaction","splice","indexOf","update","updates","commit","rollback","action","error","_client3","_keyboard2","CdpTouchscreen","touchStart","touchPoints","Math","round","radiusX","radiusY","force","touchMove","touchEnd"],"sources":["../../../../src/cdp/Input.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}