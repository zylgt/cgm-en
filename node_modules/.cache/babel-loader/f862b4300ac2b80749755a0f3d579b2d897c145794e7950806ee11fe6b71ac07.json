{"ast":null,"code":"import TChart from '@/views/components/TChart';\nimport { hasEventListener } from \"@/utils/utils\";\nimport { formatDate } from '@/utils/formatTime';\nimport { GlucoseUtils } from \"@/utils/algorithm/Glucose\";\nexport default {\n  data() {\n    return {\n      initOptions: {\n        renderer: 'svg'\n      },\n      option: {\n        grid: [{\n          show: true,\n          left: 40,\n          right: 0,\n          top: 0,\n          bottom: 0,\n          height: 120,\n          containLabel: false,\n          borderColor: 'var(--color-black-10)'\n        }],\n        xAxis: [{\n          type: 'category',\n          show: false\n        }],\n        yAxis: {\n          type: 'value',\n          show: false\n        },\n        series: [{\n          type: 'line',\n          data: [1, 2, 3, 4, 5, 6, 7, 8, 9, 0],\n          itemStyle: {\n            color: 'var(--color-primary)'\n          },\n          showSymbol: false,\n          lineStyle: {\n            width: 2\n          },\n          markArea: {\n            data: [[{\n              yAxis: 3.9\n            }, {\n              yAxis: 10\n            }]],\n            label: {\n              show: true,\n              color: 'var(--color-black-60)',\n              fontSize: 16,\n              distance: 10,\n              position: 'left'\n            },\n            itemStyle: {\n              color: 'rgba(50, 186, 192, 0.08)'\n            }\n          }\n        }]\n      },\n      dayList: ''\n    };\n  },\n  components: {\n    TChart\n  },\n  mounted() {\n    // if(!hasEventListener(this.$bus,'getData')){\n    //     this.$bus.$on('getData',(data)=>{\n    //       this.manageData(data)  \n    //     })\n    // }\n    this.manageData();\n  },\n  methods: {\n    // 管理数据\n    manageData(data) {\n      let array = [{\n        DataTs: 1715129400,\n        Value: 171\n      }, {\n        DataTs: 1715043000,\n        Value: 239\n      }, {\n        DataTs: 1714956600,\n        Value: 164\n      }, {\n        DataTs: 1714956660,\n        Value: 388\n      }, {\n        DataTs: 1715043060,\n        Value: 218\n      }, {\n        DataTs: 1715129460,\n        Value: 230\n      }, {\n        DataTs: 1715129520,\n        Value: 158\n      }, {\n        DataTs: 1715043120,\n        Value: 267\n      }, {\n        DataTs: 1714956720,\n        Value: 180\n      }, {\n        DataTs: 1714870320,\n        Value: 192\n      }, {\n        DataTs: 1714783920,\n        Value: 255\n      }, {\n        DataTs: 1714697520,\n        Value: 236\n      }, {\n        DataTs: 1714697460,\n        Value: 360\n      }, {\n        DataTs: 1714783860,\n        Value: 397\n      }, {\n        DataTs: 1714870260,\n        Value: 356\n      }, {\n        DataTs: 1714870200,\n        Value: 230\n      }, {\n        DataTs: 1714783800,\n        Value: 387\n      }, {\n        DataTs: 1714697400,\n        Value: 199\n      }, {\n        DataTs: 1714969171,\n        Value: 169\n      }, {\n        DataTs: 1714882771,\n        Value: 159\n      }];\n\n      // 将数组按天分割\n      let dayMap = new Map();\n      array.forEach(item => {\n        item.day = formatDate(item.DataTs * 1000, 'mm.dd');\n        item.moment = Number(formatDate(item.DataTs * 1000, 'HH')) * 60 + Number(formatDate(item.DataTs * 1000, 'MM'));\n        item.dayArray = new Array(24 * 60);\n        item.dayArray[item.moment] = item.Value;\n        dayMap.has(item.day) ? dayMap.get(item.day)[item.moment] = item.Value : dayMap.set(item.day, item.dayArray);\n      });\n      // x轴数据\n      this.dayList = dayMap;\n      // let xData = Array.from({length:60*24}, (_, index) => index)\n      // this.option.xAxis[0].data = xData\n      // this.option.series[0].data = agp05\n    }\n  },\n  beforeDestroy() {\n    this.$bus.$off('getData');\n  }\n};","map":{"version":3,"names":["TChart","hasEventListener","formatDate","GlucoseUtils","data","initOptions","renderer","option","grid","show","left","right","top","bottom","height","containLabel","borderColor","xAxis","type","yAxis","series","itemStyle","color","showSymbol","lineStyle","width","markArea","label","fontSize","distance","position","dayList","components","mounted","manageData","methods","array","DataTs","Value","dayMap","Map","forEach","item","day","moment","Number","dayArray","Array","has","get","set","beforeDestroy","$bus","$off"],"sources":["src/views/components/Chart/DayChart.vue"],"sourcesContent":["<template>\n    <div>\n        <!-- <div class='dayItem' v-for='(value,key) in dayList' :key='key'>\n            <div class='day-week'>周一</div>\n\n            <t-chart\n                style=\"width: 100%;height:80px;\"\n                :option=\"option\"\n                :init-options=\"initOptions\"\n                theme=\"tduck-echarts-theme\"\n            />\n        </div> -->\n        <div class='chart-box' >\n            <t-chart\n                style=\"width: 100%;height:120px;\"\n                :option=\"option\"\n                :init-options=\"initOptions\"\n                theme=\"tduck-echarts-theme\"\n            />\n        </div>\n    </div>\n</template>\n<script>\nimport TChart from '@/views/components/TChart'\nimport { hasEventListener } from \"@/utils/utils\";\nimport {formatDate} from '@/utils/formatTime'\nimport { GlucoseUtils } from \"@/utils/algorithm/Glucose\";\nexport default {\n    data(){\n        return{\n            initOptions: {\n                renderer: 'svg'\n            },\n            option: {\n                grid:[\n                    {   \n                        show:true,\n                        left:40,\n                        right:0,\n                        top:0,\n                        bottom:0,\n                        height:120,\n                        containLabel:false,\n                        borderColor:'var(--color-black-10)'\n\n                    }\n                ],\n                xAxis: [\n                    {\n                        type: 'category',\n                        show:false\n                    }\n                ],\n                yAxis: {\n                        type: 'value',\n                        show:false,\n                    },\n                series: [\n                    {\n                        type: 'line',\n                        data: [1,2,3,4,5,6,7,8,9,0],\n                        itemStyle: {\n                        color:'var(--color-primary)',\n                        },\n                        showSymbol: false,\n                        lineStyle: {\n                        width: 2,\n                        },\n                        markArea:{\n                            data:[\n                                [{\n                                    yAxis: 3.9\n                                },\n                                {\n                                    yAxis: 10\n                                }]\n                            ],\n                            label: {\n                                show:true,\n                                color: 'var(--color-black-60)',\n                                fontSize: 16,\n                                distance: 10,\n                                position:'left'\n                            },\n                            itemStyle:{\n                                color:'rgba(50, 186, 192, 0.08)'\n                            }\n                        }\n                    },\n                ],\n\n              \n            },\n            dayList:''\n        }\n    },\n    components: {\n        TChart\n    },\n    mounted(){\n        // if(!hasEventListener(this.$bus,'getData')){\n        //     this.$bus.$on('getData',(data)=>{\n        //       this.manageData(data)  \n        //     })\n        // }\n        this.manageData()\n    },\n    methods:{\n        // 管理数据\n        manageData(data){\n            let array = [{DataTs:1715129400,Value:171},\n            {DataTs:1715043000,Value:239},\n            {DataTs:1714956600,Value:164},\n            {DataTs:1714956660,Value:388},\n            {DataTs:1715043060,Value:218},\n            {DataTs:1715129460,Value:230},\n            {DataTs:1715129520,Value:158},\n            {DataTs:1715043120,Value:267},\n            {DataTs:1714956720,Value:180},\n            {DataTs:1714870320,Value:192},\n            {DataTs:1714783920,Value:255},\n            {DataTs:1714697520,Value:236},\n            {DataTs:1714697460,Value:360},\n            {DataTs:1714783860,Value:397},\n            {DataTs:1714870260,Value:356},\n            {DataTs:1714870200,Value:230},\n            {DataTs:1714783800,Value:387},\n            {DataTs:1714697400,Value:199},\n            {DataTs:1714969171,Value:169},\n            {DataTs:1714882771,Value:159},\n            ]\n\n\n            // 将数组按天分割\n            let dayMap = new Map()\n             array.forEach(item=>{\n                item.day = formatDate(item.DataTs*1000,'mm.dd')\n                item.moment = Number(formatDate(item.DataTs*1000,'HH'))*60+Number(formatDate(item.DataTs*1000,'MM'))\n                item.dayArray = new Array(24*60)\n                item.dayArray[item.moment] = item.Value\n                dayMap.has(item.day) ? dayMap.get(item.day)[item.moment]=item.Value: dayMap.set(item.day, item.dayArray);\n            })\n            // x轴数据\n            this.dayList = dayMap\n            // let xData = Array.from({length:60*24}, (_, index) => index)\n            // this.option.xAxis[0].data = xData\n            // this.option.series[0].data = agp05\n           \n        },\n    },\n    \n    beforeDestroy(){\n        this.$bus.$off('getData')\n    }\n}\n</script>\n<style scoped>\n    .chart-box{\n        width:180px;\n        height:150px;\n    }\n</style>"],"mappings":"AAuBA,OAAAA,MAAA;AACA,SAAAC,gBAAA;AACA,SAAAC,UAAA;AACA,SAAAC,YAAA;AACA;EACAC,KAAA;IACA;MACAC,WAAA;QACAC,QAAA;MACA;MACAC,MAAA;QACAC,IAAA,GACA;UACAC,IAAA;UACAC,IAAA;UACAC,KAAA;UACAC,GAAA;UACAC,MAAA;UACAC,MAAA;UACAC,YAAA;UACAC,WAAA;QAEA,EACA;QACAC,KAAA,GACA;UACAC,IAAA;UACAT,IAAA;QACA,EACA;QACAU,KAAA;UACAD,IAAA;UACAT,IAAA;QACA;QACAW,MAAA,GACA;UACAF,IAAA;UACAd,IAAA;UACAiB,SAAA;YACAC,KAAA;UACA;UACAC,UAAA;UACAC,SAAA;YACAC,KAAA;UACA;UACAC,QAAA;YACAtB,IAAA,GACA;cACAe,KAAA;YACA,GACA;cACAA,KAAA;YACA,GACA;YACAQ,KAAA;cACAlB,IAAA;cACAa,KAAA;cACAM,QAAA;cACAC,QAAA;cACAC,QAAA;YACA;YACAT,SAAA;cACAC,KAAA;YACA;UACA;QACA;MAIA;MACAS,OAAA;IACA;EACA;EACAC,UAAA;IACAhC;EACA;EACAiC,QAAA;IACA;IACA;IACA;IACA;IACA;IACA,KAAAC,UAAA;EACA;EACAC,OAAA;IACA;IACAD,WAAA9B,IAAA;MACA,IAAAgC,KAAA;QAAAC,MAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,MAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,MAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,MAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,MAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,MAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,MAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,MAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,MAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,MAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,MAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,MAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,MAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,MAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,MAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,MAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,MAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,MAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,MAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,MAAA;QAAAC,KAAA;MAAA,EACA;;MAGA;MACA,IAAAC,MAAA,OAAAC,GAAA;MACAJ,KAAA,CAAAK,OAAA,CAAAC,IAAA;QACAA,IAAA,CAAAC,GAAA,GAAAzC,UAAA,CAAAwC,IAAA,CAAAL,MAAA;QACAK,IAAA,CAAAE,MAAA,GAAAC,MAAA,CAAA3C,UAAA,CAAAwC,IAAA,CAAAL,MAAA,uBAAAQ,MAAA,CAAA3C,UAAA,CAAAwC,IAAA,CAAAL,MAAA;QACAK,IAAA,CAAAI,QAAA,OAAAC,KAAA;QACAL,IAAA,CAAAI,QAAA,CAAAJ,IAAA,CAAAE,MAAA,IAAAF,IAAA,CAAAJ,KAAA;QACAC,MAAA,CAAAS,GAAA,CAAAN,IAAA,CAAAC,GAAA,IAAAJ,MAAA,CAAAU,GAAA,CAAAP,IAAA,CAAAC,GAAA,EAAAD,IAAA,CAAAE,MAAA,IAAAF,IAAA,CAAAJ,KAAA,GAAAC,MAAA,CAAAW,GAAA,CAAAR,IAAA,CAAAC,GAAA,EAAAD,IAAA,CAAAI,QAAA;MACA;MACA;MACA,KAAAf,OAAA,GAAAQ,MAAA;MACA;MACA;MACA;IAEA;EACA;EAEAY,cAAA;IACA,KAAAC,IAAA,CAAAC,IAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}