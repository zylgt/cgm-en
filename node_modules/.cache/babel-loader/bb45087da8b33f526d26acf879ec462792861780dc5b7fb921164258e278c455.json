{"ast":null,"code":"import { scrollTo } from '@/utils/scroll-to';\nexport default {\n  name: 'Pagination',\n  props: {\n    total: {\n      required: true,\n      type: Number\n    },\n    page: {\n      type: Number,\n      default: 1\n    },\n    limit: {\n      type: Number,\n      default: 20\n    },\n    sizes: {\n      type: Array,\n      default() {\n        return [5, 10, 20, 30, 50];\n      }\n    },\n    // 移动端页码按钮的数量端默认值5\n    pagerCount: {\n      type: Number,\n      default: document.body.clientWidth < 992 ? 5 : 7\n    },\n    layout: {\n      type: String,\n      default: 'total, sizes, prev, pager, next, jumper'\n    },\n    background: {\n      type: Boolean,\n      default: true\n    },\n    autoScroll: {\n      type: Boolean,\n      default: true\n    },\n    hidden: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    currentPage: {\n      get() {\n        return this.page;\n      },\n      set(val) {\n        this.$emit('update:page', val);\n      }\n    },\n    size: {\n      get() {\n        return this.limit;\n      },\n      set(val) {\n        this.$emit('update:limit', val);\n      }\n    }\n  },\n  methods: {\n    handleSizeChange(val) {\n      this.$emit('pagination', {\n        page: this.currentPage,\n        limit: val\n      });\n      if (this.autoScroll) {\n        scrollTo(0, 800);\n      }\n    },\n    handleCurrentChange(val) {\n      this.$emit('pagination', {\n        page: val,\n        limit: this.size\n      });\n      if (this.autoScroll) {\n        scrollTo(0, 800);\n      }\n    }\n  }\n};","map":{"version":3,"names":["scrollTo","name","props","total","required","type","Number","page","default","limit","sizes","Array","pagerCount","document","body","clientWidth","layout","String","background","Boolean","autoScroll","hidden","computed","currentPage","get","set","val","$emit","size","methods","handleSizeChange","handleCurrentChange"],"sources":["src/components/Pagination/index.vue"],"sourcesContent":["<template>\n  <div :class=\"{'hidden':hidden}\" class=\"pagination-container\">\n    <el-pagination\n      :background=\"background\"\n      :current-page.sync=\"currentPage\"\n      :page-size.sync=\"size\"\n      :layout=\"layout\"\n      :page-sizes=\"sizes\"\n      :pager-count=\"pagerCount\"\n      :total=\"total\"\n      v-bind=\"$attrs\"\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n    />\n  </div>\n</template>\n\n<script>\nimport { scrollTo } from '@/utils/scroll-to'\n\nexport default {\n    name: 'Pagination',\n    props: {\n        total: {\n            required: true,\n            type: Number\n        },\n        page: {\n            type: Number,\n            default: 1\n        },\n        limit: {\n            type: Number,\n            default: 20\n        },\n        sizes: {\n            type: Array,\n            default() {\n                return [5, 10, 20, 30, 50]\n            }\n        },\n        // 移动端页码按钮的数量端默认值5\n        pagerCount: {\n            type: Number,\n            default: document.body.clientWidth < 992 ? 5 : 7\n        },\n        layout: {\n            type: String,\n            default: 'total, sizes, prev, pager, next, jumper'\n        },\n        background: {\n            type: Boolean,\n            default: true\n        },\n        autoScroll: {\n            type: Boolean,\n            default: true\n        },\n        hidden: {\n            type: Boolean,\n            default: false\n        }\n    },\n    computed: {\n        currentPage: {\n            get() {\n                return this.page\n            },\n            set(val) {\n                this.$emit('update:page', val)\n            }\n        },\n        size: {\n            get() {\n                return this.limit\n            },\n            set(val) {\n                this.$emit('update:limit', val)\n            }\n        }\n    },\n    methods: {\n        handleSizeChange(val) {\n            this.$emit('pagination', { page: this.currentPage, limit: val })\n            if (this.autoScroll) {\n                scrollTo(0, 800)\n            }\n        },\n        handleCurrentChange(val) {\n            this.$emit('pagination', { page: val, limit: this.size })\n            if (this.autoScroll) {\n                scrollTo(0, 800)\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n.pagination-container {\n  background: #fff;\n  padding: 32px 16px;\n}\n.pagination-container.hidden {\n  display: none;\n}\n</style>\n"],"mappings":"AAkBA,SAAAA,QAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACAC,KAAA;MACAC,QAAA;MACAC,IAAA,EAAAC;IACA;IACAC,IAAA;MACAF,IAAA,EAAAC,MAAA;MACAE,OAAA;IACA;IACAC,KAAA;MACAJ,IAAA,EAAAC,MAAA;MACAE,OAAA;IACA;IACAE,KAAA;MACAL,IAAA,EAAAM,KAAA;MACAH,QAAA;QACA;MACA;IACA;IACA;IACAI,UAAA;MACAP,IAAA,EAAAC,MAAA;MACAE,OAAA,EAAAK,QAAA,CAAAC,IAAA,CAAAC,WAAA;IACA;IACAC,MAAA;MACAX,IAAA,EAAAY,MAAA;MACAT,OAAA;IACA;IACAU,UAAA;MACAb,IAAA,EAAAc,OAAA;MACAX,OAAA;IACA;IACAY,UAAA;MACAf,IAAA,EAAAc,OAAA;MACAX,OAAA;IACA;IACAa,MAAA;MACAhB,IAAA,EAAAc,OAAA;MACAX,OAAA;IACA;EACA;EACAc,QAAA;IACAC,WAAA;MACAC,IAAA;QACA,YAAAjB,IAAA;MACA;MACAkB,IAAAC,GAAA;QACA,KAAAC,KAAA,gBAAAD,GAAA;MACA;IACA;IACAE,IAAA;MACAJ,IAAA;QACA,YAAAf,KAAA;MACA;MACAgB,IAAAC,GAAA;QACA,KAAAC,KAAA,iBAAAD,GAAA;MACA;IACA;EACA;EACAG,OAAA;IACAC,iBAAAJ,GAAA;MACA,KAAAC,KAAA;QAAApB,IAAA,OAAAgB,WAAA;QAAAd,KAAA,EAAAiB;MAAA;MACA,SAAAN,UAAA;QACApB,QAAA;MACA;IACA;IACA+B,oBAAAL,GAAA;MACA,KAAAC,KAAA;QAAApB,IAAA,EAAAmB,GAAA;QAAAjB,KAAA,OAAAmB;MAAA;MACA,SAAAR,UAAA;QACApB,QAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}