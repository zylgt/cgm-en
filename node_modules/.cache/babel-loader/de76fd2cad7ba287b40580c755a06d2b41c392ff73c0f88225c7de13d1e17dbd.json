{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _classPrivateMethodInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateMethodInitSpec.js\").default;\nvar _classPrivateFieldInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _defineProperty = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nvar _classPrivateGetter = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateGetter.js\").default;\nvar _classPrivateFieldGet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldGet2.js\").default;\nvar _assertClassBrand = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/assertClassBrand.js\").default;\nvar _classPrivateFieldSet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldSet2.js\").default;\nvar _BrowsingContextImpl;\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/web.url-search-params.delete.js\");\nrequire(\"core-js/modules/web.url-search-params.has.js\");\nrequire(\"core-js/modules/web.url-search-params.size.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serializeOrigin = exports.BrowsingContextImpl = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst assert_js_1 = require(\"../../../utils/assert.js\");\nconst Deferred_js_1 = require(\"../../../utils/Deferred.js\");\nconst log_js_1 = require(\"../../../utils/log.js\");\nconst unitConversions_js_1 = require(\"../../../utils/unitConversions.js\");\nconst WindowRealm_js_1 = require(\"../script/WindowRealm.js\");\nvar _id = /*#__PURE__*/new WeakMap();\nvar _parentId = /*#__PURE__*/new WeakMap();\nvar _children = /*#__PURE__*/new WeakMap();\nvar _browsingContextStorage = /*#__PURE__*/new WeakMap();\nvar _lifecycle = /*#__PURE__*/new WeakMap();\nvar _navigation = /*#__PURE__*/new WeakMap();\nvar _url = /*#__PURE__*/new WeakMap();\nvar _eventManager = /*#__PURE__*/new WeakMap();\nvar _realmStorage = /*#__PURE__*/new WeakMap();\nvar _loaderId = /*#__PURE__*/new WeakMap();\nvar _cdpTarget = /*#__PURE__*/new WeakMap();\nvar _maybeDefaultRealm = /*#__PURE__*/new WeakMap();\nvar _logger = /*#__PURE__*/new WeakMap();\nvar _previousViewport = /*#__PURE__*/new WeakMap();\nvar _BrowsingContextImpl_brand = /*#__PURE__*/new WeakSet();\nclass BrowsingContextImpl {\n  constructor(_id2, parentId, userContext, cdpTarget, eventManager, browsingContextStorage, realmStorage, logger) {\n    _classPrivateMethodInitSpec(this, _BrowsingContextImpl_brand);\n    /** The ID of this browsing context. */\n    _classPrivateFieldInitSpec(this, _id, void 0);\n    _defineProperty(this, \"userContext\", void 0);\n    /**\n     * The ID of the parent browsing context.\n     * If null, this is a top-level context.\n     */\n    _classPrivateFieldInitSpec(this, _parentId, void 0);\n    /** Direct children browsing contexts. */\n    _classPrivateFieldInitSpec(this, _children, new Set());\n    _classPrivateFieldInitSpec(this, _browsingContextStorage, void 0);\n    _classPrivateFieldInitSpec(this, _lifecycle, {\n      DOMContentLoaded: new Deferred_js_1.Deferred(),\n      load: new Deferred_js_1.Deferred()\n    });\n    _classPrivateFieldInitSpec(this, _navigation, {\n      withinDocument: new Deferred_js_1.Deferred()\n    });\n    _classPrivateFieldInitSpec(this, _url, 'about:blank');\n    _classPrivateFieldInitSpec(this, _eventManager, void 0);\n    _classPrivateFieldInitSpec(this, _realmStorage, void 0);\n    _classPrivateFieldInitSpec(this, _loaderId, void 0);\n    _classPrivateFieldInitSpec(this, _cdpTarget, void 0);\n    _classPrivateFieldInitSpec(this, _maybeDefaultRealm, void 0);\n    _classPrivateFieldInitSpec(this, _logger, void 0);\n    // Keeps track of the previously set viewport.\n    _classPrivateFieldInitSpec(this, _previousViewport, {\n      width: 0,\n      height: 0\n    });\n    _classPrivateFieldSet(_cdpTarget, this, cdpTarget);\n    _classPrivateFieldSet(_id, this, _id2);\n    _classPrivateFieldSet(_parentId, this, parentId);\n    this.userContext = userContext;\n    _classPrivateFieldSet(_eventManager, this, eventManager);\n    _classPrivateFieldSet(_browsingContextStorage, this, browsingContextStorage);\n    _classPrivateFieldSet(_realmStorage, this, realmStorage);\n    _classPrivateFieldSet(_logger, this, logger);\n  }\n  static create(id, parentId, userContext, cdpTarget, eventManager, browsingContextStorage, realmStorage, logger) {\n    const context = new BrowsingContextImpl(id, parentId, userContext, cdpTarget, eventManager, browsingContextStorage, realmStorage, logger);\n    _assertClassBrand(_BrowsingContextImpl_brand, context, _initListeners).call(context);\n    browsingContextStorage.addContext(context);\n    if (!context.isTopLevelContext()) {\n      context.parent.addChild(context.id);\n    }\n    eventManager.registerEvent({\n      type: 'event',\n      method: protocol_js_1.ChromiumBidi.BrowsingContext.EventNames.ContextCreated,\n      params: context.serializeToBidiValue()\n    }, context.id);\n    return context;\n  }\n  static getTimestamp() {\n    // `timestamp` from the event is MonotonicTime, not real time, so\n    // the best Mapper can do is to set the timestamp to the epoch time\n    // of the event arrived.\n    // https://chromedevtools.github.io/devtools-protocol/tot/Network/#type-MonotonicTime\n    return new Date().getTime();\n  }\n  /**\n   * @see https://html.spec.whatwg.org/multipage/document-sequences.html#navigable\n   */\n  get navigableId() {\n    return _classPrivateFieldGet(_loaderId, this);\n  }\n  dispose() {\n    _assertClassBrand(_BrowsingContextImpl_brand, this, _deleteAllChildren).call(this);\n    _classPrivateFieldGet(_realmStorage, this).deleteRealms({\n      browsingContextId: this.id\n    });\n    // Remove context from the parent.\n    if (!this.isTopLevelContext()) {\n      _classPrivateFieldGet(_children, this.parent).delete(this.id);\n    }\n    // Fail all ongoing navigations.\n    _assertClassBrand(_BrowsingContextImpl_brand, this, _failLifecycleIfNotFinished).call(this);\n    _classPrivateFieldGet(_eventManager, this).registerEvent({\n      type: 'event',\n      method: protocol_js_1.ChromiumBidi.BrowsingContext.EventNames.ContextDestroyed,\n      params: this.serializeToBidiValue()\n    }, this.id);\n    _classPrivateFieldGet(_browsingContextStorage, this).deleteContextById(this.id);\n  }\n  /** Returns the ID of this context. */\n  get id() {\n    return _classPrivateFieldGet(_id, this);\n  }\n  /** Returns the parent context ID. */\n  get parentId() {\n    return _classPrivateFieldGet(_parentId, this);\n  }\n  /** Returns the parent context. */\n  get parent() {\n    if (this.parentId === null) {\n      return null;\n    }\n    return _classPrivateFieldGet(_browsingContextStorage, this).getContext(this.parentId);\n  }\n  /** Returns all direct children contexts. */\n  get directChildren() {\n    return [..._classPrivateFieldGet(_children, this)].map(id => _classPrivateFieldGet(_browsingContextStorage, this).getContext(id));\n  }\n  /** Returns all children contexts, flattened. */\n  get allChildren() {\n    const children = this.directChildren;\n    return children.concat(...children.map(child => child.allChildren));\n  }\n  /**\n   * Returns true if this is a top-level context.\n   * This is the case whenever the parent context ID is null.\n   */\n  isTopLevelContext() {\n    return _classPrivateFieldGet(_parentId, this) === null;\n  }\n  get top() {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let topContext = this;\n    let parent = topContext.parent;\n    while (parent) {\n      topContext = parent;\n      parent = topContext.parent;\n    }\n    return topContext;\n  }\n  addChild(childId) {\n    _classPrivateFieldGet(_children, this).add(childId);\n  }\n  get cdpTarget() {\n    return _classPrivateFieldGet(_cdpTarget, this);\n  }\n  updateCdpTarget(cdpTarget) {\n    _classPrivateFieldSet(_cdpTarget, this, cdpTarget);\n    _assertClassBrand(_BrowsingContextImpl_brand, this, _initListeners).call(this);\n  }\n  get url() {\n    return _classPrivateFieldGet(_url, this);\n  }\n  async lifecycleLoaded() {\n    await _classPrivateFieldGet(_lifecycle, this).load;\n  }\n  async targetUnblockedOrThrow() {\n    const result = await _classPrivateFieldGet(_cdpTarget, this).unblocked;\n    if (result.kind === 'error') {\n      throw result.error;\n    }\n  }\n  async getOrCreateSandbox(sandbox) {\n    if (sandbox === undefined || sandbox === '') {\n      return _classPrivateGetter(_BrowsingContextImpl_brand, this, _get_defaultRealm);\n    }\n    let maybeSandboxes = _classPrivateFieldGet(_realmStorage, this).findRealms({\n      browsingContextId: this.id,\n      sandbox\n    });\n    if (maybeSandboxes.length === 0) {\n      await _classPrivateFieldGet(_cdpTarget, this).cdpClient.sendCommand('Page.createIsolatedWorld', {\n        frameId: this.id,\n        worldName: sandbox\n      });\n      // `Runtime.executionContextCreated` should be emitted by the time the\n      // previous command is done.\n      maybeSandboxes = _classPrivateFieldGet(_realmStorage, this).findRealms({\n        browsingContextId: this.id,\n        sandbox\n      });\n      (0, assert_js_1.assert)(maybeSandboxes.length !== 0);\n    }\n    // It's possible for more than one sandbox to be created due to provisional\n    // frames. In this case, it's always the first one (i.e. the oldest one)\n    // that is more relevant since the user may have set that one up already\n    // through evaluation.\n    return maybeSandboxes[0];\n  }\n  serializeToBidiValue(maxDepth = 0, addParentField = true) {\n    return {\n      context: _classPrivateFieldGet(_id, this),\n      url: this.url,\n      userContext: this.userContext,\n      children: maxDepth > 0 ? this.directChildren.map(c => c.serializeToBidiValue(maxDepth - 1, false)) : null,\n      ...(addParentField ? {\n        parent: _classPrivateFieldGet(_parentId, this)\n      } : {})\n    };\n  }\n  onTargetInfoChanged(params) {\n    _classPrivateFieldSet(_url, this, params.targetInfo.url);\n  }\n  async navigate(url, wait) {\n    try {\n      new URL(url);\n    } catch {\n      throw new protocol_js_1.InvalidArgumentException(`Invalid URL: ${url}`);\n    }\n    await this.targetUnblockedOrThrow();\n    // TODO: handle loading errors.\n    const cdpNavigateResult = await _classPrivateFieldGet(_cdpTarget, this).cdpClient.sendCommand('Page.navigate', {\n      url,\n      frameId: this.id\n    });\n    if (cdpNavigateResult.errorText) {\n      _classPrivateFieldGet(_eventManager, this).registerEvent({\n        type: 'event',\n        method: protocol_js_1.ChromiumBidi.BrowsingContext.EventNames.NavigationFailed,\n        params: {\n          context: this.id,\n          navigation: cdpNavigateResult.loaderId ?? null,\n          timestamp: BrowsingContextImpl.getTimestamp(),\n          url\n        }\n      }, this.id);\n      throw new protocol_js_1.UnknownErrorException(cdpNavigateResult.errorText);\n    }\n    _assertClassBrand(_BrowsingContextImpl_brand, this, _documentChanged).call(this, cdpNavigateResult.loaderId);\n    switch (wait) {\n      case \"none\" /* BrowsingContext.ReadinessState.None */:\n        break;\n      case \"interactive\" /* BrowsingContext.ReadinessState.Interactive */:\n        // No `loaderId` means same-document navigation.\n        if (cdpNavigateResult.loaderId === undefined) {\n          await _classPrivateFieldGet(_navigation, this).withinDocument;\n        } else {\n          await _classPrivateFieldGet(_lifecycle, this).DOMContentLoaded;\n        }\n        break;\n      case \"complete\" /* BrowsingContext.ReadinessState.Complete */:\n        // No `loaderId` means same-document navigation.\n        if (cdpNavigateResult.loaderId === undefined) {\n          await _classPrivateFieldGet(_navigation, this).withinDocument;\n        } else {\n          await _classPrivateFieldGet(_lifecycle, this).load;\n        }\n        break;\n    }\n    return {\n      navigation: cdpNavigateResult.loaderId ?? null,\n      // Url can change due to redirect get the latest one.\n      url: wait === \"none\" /* BrowsingContext.ReadinessState.None */ ? url : _classPrivateFieldGet(_url, this)\n    };\n  }\n  async reload(ignoreCache, wait) {\n    await this.targetUnblockedOrThrow();\n    _assertClassBrand(_BrowsingContextImpl_brand, this, _resetLifecycleIfFinished).call(this);\n    await _classPrivateFieldGet(_cdpTarget, this).cdpClient.sendCommand('Page.reload', {\n      ignoreCache\n    });\n    switch (wait) {\n      case \"none\" /* BrowsingContext.ReadinessState.None */:\n        break;\n      case \"interactive\" /* BrowsingContext.ReadinessState.Interactive */:\n        await _classPrivateFieldGet(_lifecycle, this).DOMContentLoaded;\n        break;\n      case \"complete\" /* BrowsingContext.ReadinessState.Complete */:\n        await _classPrivateFieldGet(_lifecycle, this).load;\n        break;\n    }\n    return {\n      navigation: wait === \"none\" /* BrowsingContext.ReadinessState.None */ ? null : this.navigableId ?? null,\n      url: this.url\n    };\n  }\n  async setViewport(viewport, devicePixelRatio) {\n    if (viewport === null && devicePixelRatio === null) {\n      await _classPrivateFieldGet(_cdpTarget, this).cdpClient.sendCommand('Emulation.clearDeviceMetricsOverride');\n    } else {\n      try {\n        let appliedViewport;\n        if (viewport === undefined) {\n          appliedViewport = _classPrivateFieldGet(_previousViewport, this);\n        } else if (viewport === null) {\n          appliedViewport = {\n            width: 0,\n            height: 0\n          };\n        } else {\n          appliedViewport = viewport;\n        }\n        _classPrivateFieldSet(_previousViewport, this, appliedViewport);\n        await _classPrivateFieldGet(_cdpTarget, this).cdpClient.sendCommand('Emulation.setDeviceMetricsOverride', {\n          width: _classPrivateFieldGet(_previousViewport, this).width,\n          height: _classPrivateFieldGet(_previousViewport, this).height,\n          deviceScaleFactor: devicePixelRatio ? devicePixelRatio : 0,\n          mobile: false,\n          dontSetVisibleSize: true\n        });\n      } catch (err) {\n        if (err.message.startsWith(\n        // https://crsrc.org/c/content/browser/devtools/protocol/emulation_handler.cc;l=257;drc=2f6eee84cf98d4227e7c41718dd71b82f26d90ff\n        'Width and height values must be positive')) {\n          throw new protocol_js_1.UnsupportedOperationException('Provided viewport dimensions are not supported');\n        }\n        throw err;\n      }\n    }\n  }\n  async handleUserPrompt(params) {\n    await _classPrivateFieldGet(_cdpTarget, this).cdpClient.sendCommand('Page.handleJavaScriptDialog', {\n      accept: params.accept ?? true,\n      promptText: params.userText\n    });\n  }\n  async activate() {\n    await _classPrivateFieldGet(_cdpTarget, this).cdpClient.sendCommand('Page.bringToFront');\n  }\n  async captureScreenshot(params) {\n    if (!this.isTopLevelContext()) {\n      throw new protocol_js_1.UnsupportedOperationException(`Non-top-level 'context' (${params.context}) is currently not supported`);\n    }\n    const formatParameters = getImageFormatParameters(params);\n    // XXX: Focus the original tab after the screenshot is taken.\n    // This is needed because the screenshot gets blocked until the active tab gets focus.\n    await _classPrivateFieldGet(_cdpTarget, this).cdpClient.sendCommand('Page.bringToFront');\n    let captureBeyondViewport = false;\n    let script;\n    params.origin ??= 'viewport';\n    switch (params.origin) {\n      case 'document':\n        {\n          script = String(() => {\n            const element = document.documentElement;\n            return {\n              x: 0,\n              y: 0,\n              width: element.scrollWidth,\n              height: element.scrollHeight\n            };\n          });\n          captureBeyondViewport = true;\n          break;\n        }\n      case 'viewport':\n        {\n          script = String(() => {\n            const viewport = window.visualViewport;\n            return {\n              x: viewport.pageLeft,\n              y: viewport.pageTop,\n              width: viewport.width,\n              height: viewport.height\n            };\n          });\n          break;\n        }\n    }\n    const realm = await this.getOrCreateSandbox(undefined);\n    const originResult = await realm.callFunction(script, false);\n    (0, assert_js_1.assert)(originResult.type === 'success');\n    const origin = deserializeDOMRect(originResult.result);\n    (0, assert_js_1.assert)(origin);\n    const rect = params.clip ? getIntersectionRect(await _assertClassBrand(_BrowsingContextImpl_brand, this, _parseRect).call(this, params.clip), origin) : origin;\n    if (rect.width === 0 || rect.height === 0) {\n      throw new protocol_js_1.UnableToCaptureScreenException(`Unable to capture screenshot with zero dimensions: width=${rect.width}, height=${rect.height}`);\n    }\n    return await _classPrivateFieldGet(_cdpTarget, this).cdpClient.sendCommand('Page.captureScreenshot', {\n      clip: {\n        ...rect,\n        scale: 1.0\n      },\n      ...formatParameters,\n      captureBeyondViewport\n    });\n  }\n  async print(params) {\n    const cdpParams = {};\n    if (params.background !== undefined) {\n      cdpParams.printBackground = params.background;\n    }\n    if (params.margin?.bottom !== undefined) {\n      cdpParams.marginBottom = (0, unitConversions_js_1.inchesFromCm)(params.margin.bottom);\n    }\n    if (params.margin?.left !== undefined) {\n      cdpParams.marginLeft = (0, unitConversions_js_1.inchesFromCm)(params.margin.left);\n    }\n    if (params.margin?.right !== undefined) {\n      cdpParams.marginRight = (0, unitConversions_js_1.inchesFromCm)(params.margin.right);\n    }\n    if (params.margin?.top !== undefined) {\n      cdpParams.marginTop = (0, unitConversions_js_1.inchesFromCm)(params.margin.top);\n    }\n    if (params.orientation !== undefined) {\n      cdpParams.landscape = params.orientation === 'landscape';\n    }\n    if (params.page?.height !== undefined) {\n      cdpParams.paperHeight = (0, unitConversions_js_1.inchesFromCm)(params.page.height);\n    }\n    if (params.page?.width !== undefined) {\n      cdpParams.paperWidth = (0, unitConversions_js_1.inchesFromCm)(params.page.width);\n    }\n    if (params.pageRanges !== undefined) {\n      for (const range of params.pageRanges) {\n        if (typeof range === 'number') {\n          continue;\n        }\n        const rangeParts = range.split('-');\n        if (rangeParts.length < 1 || rangeParts.length > 2) {\n          throw new protocol_js_1.InvalidArgumentException(`Invalid page range: ${range} is not a valid integer range.`);\n        }\n        if (rangeParts.length === 1) {\n          void parseInteger(rangeParts[0] ?? '');\n          continue;\n        }\n        let lowerBound;\n        let upperBound;\n        const [rangeLowerPart = '', rangeUpperPart = ''] = rangeParts;\n        if (rangeLowerPart === '') {\n          lowerBound = 1;\n        } else {\n          lowerBound = parseInteger(rangeLowerPart);\n        }\n        if (rangeUpperPart === '') {\n          upperBound = Number.MAX_SAFE_INTEGER;\n        } else {\n          upperBound = parseInteger(rangeUpperPart);\n        }\n        if (lowerBound > upperBound) {\n          throw new protocol_js_1.InvalidArgumentException(`Invalid page range: ${rangeLowerPart} > ${rangeUpperPart}`);\n        }\n      }\n      cdpParams.pageRanges = params.pageRanges.join(',');\n    }\n    if (params.scale !== undefined) {\n      cdpParams.scale = params.scale;\n    }\n    if (params.shrinkToFit !== undefined) {\n      cdpParams.preferCSSPageSize = !params.shrinkToFit;\n    }\n    try {\n      const result = await _classPrivateFieldGet(_cdpTarget, this).cdpClient.sendCommand('Page.printToPDF', cdpParams);\n      return {\n        data: result.data\n      };\n    } catch (error) {\n      // Effectively zero dimensions.\n      if (error.message === 'invalid print parameters: content area is empty') {\n        throw new protocol_js_1.UnsupportedOperationException(error.message);\n      }\n      throw error;\n    }\n  }\n  /**\n   * See\n   * https://w3c.github.io/webdriver-bidi/#:~:text=If%20command%20parameters%20contains%20%22clip%22%3A\n   */\n\n  async close() {\n    await _classPrivateFieldGet(_cdpTarget, this).cdpClient.sendCommand('Page.close');\n  }\n  async traverseHistory(delta) {\n    if (delta === 0) {\n      return;\n    }\n    const history = await _classPrivateFieldGet(_cdpTarget, this).cdpClient.sendCommand('Page.getNavigationHistory');\n    const entry = history.entries[history.currentIndex + delta];\n    if (!entry) {\n      throw new protocol_js_1.NoSuchHistoryEntryException(`No history entry at delta ${delta}`);\n    }\n    await _classPrivateFieldGet(_cdpTarget, this).cdpClient.sendCommand('Page.navigateToHistoryEntry', {\n      entryId: entry.id\n    });\n  }\n  async toggleModulesIfNeeded() {\n    await _classPrivateFieldGet(_cdpTarget, this).toggleNetworkIfNeeded();\n  }\n  async locateNodes(params) {\n    // TODO: create a dedicated sandbox instead of `#defaultRealm`.\n    return await _assertClassBrand(_BrowsingContextImpl_brand, this, _locateNodesByLocator).call(this, _classPrivateGetter(_BrowsingContextImpl_brand, this, _get_defaultRealm), params.locator, params.startNodes ?? [], params.maxNodeCount, params.serializationOptions);\n  }\n}\n_BrowsingContextImpl = BrowsingContextImpl;\nfunction _deleteAllChildren() {\n  this.directChildren.map(child => child.dispose());\n}\nfunction _get_defaultRealm(_this) {\n  (0, assert_js_1.assert)(_classPrivateFieldGet(_maybeDefaultRealm, _this), `No default realm for browsing context ${_classPrivateFieldGet(_id, _this)}`);\n  return _classPrivateFieldGet(_maybeDefaultRealm, _this);\n}\nfunction _initListeners() {\n  _classPrivateFieldGet(_cdpTarget, this).cdpClient.on('Page.frameNavigated', params => {\n    if (this.id !== params.frame.id) {\n      return;\n    }\n    _classPrivateFieldSet(_url, this, params.frame.url + (params.frame.urlFragment ?? ''));\n    // At the point the page is initialized, all the nested iframes from the\n    // previous page are detached and realms are destroyed.\n    // Remove children from context.\n    _assertClassBrand(_BrowsingContextImpl_brand, this, _deleteAllChildren).call(this);\n  });\n  _classPrivateFieldGet(_cdpTarget, this).cdpClient.on('Page.navigatedWithinDocument', params => {\n    if (this.id !== params.frameId) {\n      return;\n    }\n    const timestamp = _BrowsingContextImpl.getTimestamp();\n    _classPrivateFieldSet(_url, this, params.url);\n    _classPrivateFieldGet(_navigation, this).withinDocument.resolve();\n    _classPrivateFieldGet(_eventManager, this).registerEvent({\n      type: 'event',\n      method: protocol_js_1.ChromiumBidi.BrowsingContext.EventNames.FragmentNavigated,\n      params: {\n        context: this.id,\n        navigation: null,\n        timestamp,\n        url: _classPrivateFieldGet(_url, this)\n      }\n    }, this.id);\n  });\n  _classPrivateFieldGet(_cdpTarget, this).cdpClient.on('Page.frameStartedLoading', params => {\n    if (this.id !== params.frameId) {\n      return;\n    }\n    _classPrivateFieldGet(_eventManager, this).registerEvent({\n      type: 'event',\n      method: protocol_js_1.ChromiumBidi.BrowsingContext.EventNames.NavigationStarted,\n      params: {\n        context: this.id,\n        navigation: null,\n        timestamp: _BrowsingContextImpl.getTimestamp(),\n        url: ''\n      }\n    }, this.id);\n  });\n  _classPrivateFieldGet(_cdpTarget, this).cdpClient.on('Page.lifecycleEvent', params => {\n    if (this.id !== params.frameId) {\n      return;\n    }\n    if (params.name === 'init') {\n      _assertClassBrand(_BrowsingContextImpl_brand, this, _documentChanged).call(this, params.loaderId);\n      return;\n    }\n    if (params.name === 'commit') {\n      _classPrivateFieldSet(_loaderId, this, params.loaderId);\n      return;\n    }\n    // If mapper attached to the page late, it might miss init and\n    // commit events. In that case, save the first loaderId for this\n    // frameId.\n    if (!_classPrivateFieldGet(_loaderId, this)) {\n      _classPrivateFieldSet(_loaderId, this, params.loaderId);\n    }\n    // Ignore event from not current navigation.\n    if (params.loaderId !== _classPrivateFieldGet(_loaderId, this)) {\n      return;\n    }\n    const timestamp = _BrowsingContextImpl.getTimestamp();\n    switch (params.name) {\n      case 'DOMContentLoaded':\n        _classPrivateFieldGet(_eventManager, this).registerEvent({\n          type: 'event',\n          method: protocol_js_1.ChromiumBidi.BrowsingContext.EventNames.DomContentLoaded,\n          params: {\n            context: this.id,\n            navigation: _classPrivateFieldGet(_loaderId, this) ?? null,\n            timestamp,\n            url: _classPrivateFieldGet(_url, this)\n          }\n        }, this.id);\n        _classPrivateFieldGet(_lifecycle, this).DOMContentLoaded.resolve();\n        break;\n      case 'load':\n        _classPrivateFieldGet(_eventManager, this).registerEvent({\n          type: 'event',\n          method: protocol_js_1.ChromiumBidi.BrowsingContext.EventNames.Load,\n          params: {\n            context: this.id,\n            navigation: _classPrivateFieldGet(_loaderId, this) ?? null,\n            timestamp,\n            url: _classPrivateFieldGet(_url, this)\n          }\n        }, this.id);\n        _classPrivateFieldGet(_lifecycle, this).load.resolve();\n        break;\n    }\n  });\n  _classPrivateFieldGet(_cdpTarget, this).cdpClient.on('Runtime.executionContextCreated', params => {\n    const {\n      auxData,\n      name,\n      uniqueId,\n      id\n    } = params.context;\n    if (!auxData || auxData.frameId !== this.id) {\n      return;\n    }\n    let origin;\n    let sandbox;\n    // Only these execution contexts are supported for now.\n    switch (auxData.type) {\n      case 'isolated':\n        sandbox = name;\n        // Sandbox should have the same origin as the context itself, but in CDP\n        // it has an empty one.\n        origin = _classPrivateGetter(_BrowsingContextImpl_brand, this, _get_defaultRealm).origin;\n        break;\n      case 'default':\n        origin = serializeOrigin(params.context.origin);\n        break;\n      default:\n        return;\n    }\n    const realm = new WindowRealm_js_1.WindowRealm(this.id, _classPrivateFieldGet(_browsingContextStorage, this), _classPrivateFieldGet(_cdpTarget, this).cdpClient, _classPrivateFieldGet(_eventManager, this), id, _classPrivateFieldGet(_logger, this), origin, uniqueId, _classPrivateFieldGet(_realmStorage, this), sandbox);\n    if (auxData.isDefault) {\n      _classPrivateFieldSet(_maybeDefaultRealm, this, realm);\n      // Initialize ChannelProxy listeners for all the channels of all the\n      // preload scripts related to this BrowsingContext.\n      // TODO: extend for not default realms by the sandbox name.\n      void Promise.all(_classPrivateFieldGet(_cdpTarget, this).getChannels().map(channel => channel.startListenerFromWindow(realm, _classPrivateFieldGet(_eventManager, this))));\n    }\n  });\n  _classPrivateFieldGet(_cdpTarget, this).cdpClient.on('Runtime.executionContextDestroyed', params => {\n    _classPrivateFieldGet(_realmStorage, this).deleteRealms({\n      cdpSessionId: _classPrivateFieldGet(_cdpTarget, this).cdpSessionId,\n      executionContextId: params.executionContextId\n    });\n  });\n  _classPrivateFieldGet(_cdpTarget, this).cdpClient.on('Runtime.executionContextsCleared', () => {\n    _classPrivateFieldGet(_realmStorage, this).deleteRealms({\n      cdpSessionId: _classPrivateFieldGet(_cdpTarget, this).cdpSessionId\n    });\n  });\n  _classPrivateFieldGet(_cdpTarget, this).cdpClient.on('Page.javascriptDialogClosed', params => {\n    const accepted = params.result;\n    _classPrivateFieldGet(_eventManager, this).registerEvent({\n      type: 'event',\n      method: protocol_js_1.ChromiumBidi.BrowsingContext.EventNames.UserPromptClosed,\n      params: {\n        context: this.id,\n        accepted,\n        userText: accepted && params.userInput ? params.userInput : undefined\n      }\n    }, this.id);\n  });\n  _classPrivateFieldGet(_cdpTarget, this).cdpClient.on('Page.javascriptDialogOpening', params => {\n    _classPrivateFieldGet(_eventManager, this).registerEvent({\n      type: 'event',\n      method: protocol_js_1.ChromiumBidi.BrowsingContext.EventNames.UserPromptOpened,\n      params: {\n        context: this.id,\n        type: params.type,\n        message: params.message,\n        // Don't set the value if empty string\n        defaultValue: params.defaultPrompt || undefined\n      }\n    }, this.id);\n  });\n}\nfunction _documentChanged(loaderId) {\n  // Same document navigation.\n  if (loaderId === undefined || _classPrivateFieldGet(_loaderId, this) === loaderId) {\n    if (_classPrivateFieldGet(_navigation, this).withinDocument.isFinished) {\n      _classPrivateFieldGet(_navigation, this).withinDocument = new Deferred_js_1.Deferred();\n    } else {\n      _classPrivateFieldGet(_logger, this)?.call(this, _BrowsingContextImpl.LOGGER_PREFIX, 'Document changed (navigatedWithinDocument)');\n    }\n    return;\n  }\n  _assertClassBrand(_BrowsingContextImpl_brand, this, _resetLifecycleIfFinished).call(this);\n  _classPrivateFieldSet(_loaderId, this, loaderId);\n}\nfunction _resetLifecycleIfFinished() {\n  if (_classPrivateFieldGet(_lifecycle, this).DOMContentLoaded.isFinished) {\n    _classPrivateFieldGet(_lifecycle, this).DOMContentLoaded = new Deferred_js_1.Deferred();\n  } else {\n    _classPrivateFieldGet(_logger, this)?.call(this, _BrowsingContextImpl.LOGGER_PREFIX, 'Document changed (DOMContentLoaded)');\n  }\n  if (_classPrivateFieldGet(_lifecycle, this).load.isFinished) {\n    _classPrivateFieldGet(_lifecycle, this).load = new Deferred_js_1.Deferred();\n  } else {\n    _classPrivateFieldGet(_logger, this)?.call(this, _BrowsingContextImpl.LOGGER_PREFIX, 'Document changed (load)');\n  }\n}\nfunction _failLifecycleIfNotFinished() {\n  if (!_classPrivateFieldGet(_lifecycle, this).DOMContentLoaded.isFinished) {\n    _classPrivateFieldGet(_lifecycle, this).DOMContentLoaded.reject(new protocol_js_1.UnknownErrorException('navigation canceled'));\n  }\n  if (!_classPrivateFieldGet(_lifecycle, this).load.isFinished) {\n    _classPrivateFieldGet(_lifecycle, this).load.reject(new protocol_js_1.UnknownErrorException('navigation canceled'));\n  }\n}\nasync function _parseRect(clip) {\n  switch (clip.type) {\n    case 'box':\n      return {\n        x: clip.x,\n        y: clip.y,\n        width: clip.width,\n        height: clip.height\n      };\n    case 'element':\n      {\n        // TODO: #1213: Use custom sandbox specifically for Chromium BiDi\n        const sandbox = await this.getOrCreateSandbox(undefined);\n        const result = await sandbox.callFunction(String(element => {\n          return element instanceof Element;\n        }), false, {\n          type: 'undefined'\n        }, [clip.element]);\n        if (result.type === 'exception') {\n          throw new protocol_js_1.NoSuchElementException(`Element '${clip.element.sharedId}' was not found`);\n        }\n        (0, assert_js_1.assert)(result.result.type === 'boolean');\n        if (!result.result.value) {\n          throw new protocol_js_1.NoSuchElementException(`Node '${clip.element.sharedId}' is not an Element`);\n        }\n        {\n          const result = await sandbox.callFunction(String(element => {\n            const rect = element.getBoundingClientRect();\n            return {\n              x: rect.x,\n              y: rect.y,\n              height: rect.height,\n              width: rect.width\n            };\n          }), false, {\n            type: 'undefined'\n          }, [clip.element]);\n          (0, assert_js_1.assert)(result.type === 'success');\n          const rect = deserializeDOMRect(result.result);\n          if (!rect) {\n            throw new protocol_js_1.UnableToCaptureScreenException(`Could not get bounding box for Element '${clip.element.sharedId}'`);\n          }\n          return rect;\n        }\n      }\n  }\n}\nasync function _getLocatorDelegate(realm, locator, maxNodeCount, startNodes) {\n  switch (locator.type) {\n    case 'css':\n      return {\n        functionDeclaration: String((cssSelector, maxNodeCount, ...startNodes) => {\n          const locateNodesUsingCss = element => {\n            if (!(element instanceof HTMLElement)) {\n              throw new Error('startNodes in css selector should be HTMLElement');\n            }\n            return [...element.querySelectorAll(cssSelector)];\n          };\n          startNodes = startNodes.length > 0 ? startNodes : [document.body];\n          const returnedNodes = startNodes.map(startNode =>\n          // TODO: stop search early if `maxNodeCount` is reached.\n          locateNodesUsingCss(startNode)).flat(1);\n          return maxNodeCount === 0 ? returnedNodes : returnedNodes.slice(0, maxNodeCount);\n        }),\n        argumentsLocalValues: [\n        // `cssSelector`\n        {\n          type: 'string',\n          value: locator.value\n        },\n        // `maxNodeCount` with `0` means no limit.\n        {\n          type: 'number',\n          value: maxNodeCount ?? 0\n        },\n        // `startNodes`\n        ...startNodes]\n      };\n    case 'xpath':\n      return {\n        functionDeclaration: String((xPathSelector, maxNodeCount, ...startNodes) => {\n          // https://w3c.github.io/webdriver-bidi/#locate-nodes-using-xpath\n          const evaluator = new XPathEvaluator();\n          const expression = evaluator.createExpression(xPathSelector);\n          const locateNodesUsingXpath = element => {\n            const xPathResult = expression.evaluate(element, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE);\n            const returnedNodes = [];\n            for (let i = 0; i < xPathResult.snapshotLength; i++) {\n              returnedNodes.push(xPathResult.snapshotItem(i));\n            }\n            return returnedNodes;\n          };\n          startNodes = startNodes.length > 0 ? startNodes : [document.body];\n          const returnedNodes = startNodes.map(startNode =>\n          // TODO: stop search early if `maxNodeCount` is reached.\n          locateNodesUsingXpath(startNode)).flat(1);\n          return maxNodeCount === 0 ? returnedNodes : returnedNodes.slice(0, maxNodeCount);\n        }),\n        argumentsLocalValues: [\n        // `xPathSelector`\n        {\n          type: 'string',\n          value: locator.value\n        },\n        // `maxNodeCount` with `0` means no limit.\n        {\n          type: 'number',\n          value: maxNodeCount ?? 0\n        },\n        // `startNodes`\n        ...startNodes]\n      };\n    case 'innerText':\n      // https://w3c.github.io/webdriver-bidi/#locate-nodes-using-inner-text\n      if (locator.value === '') {\n        throw new protocol_js_1.InvalidSelectorException('innerText locator cannot be empty');\n      }\n      return {\n        functionDeclaration: String((innerTextSelector, fullMatch, ignoreCase, maxNodeCount, maxDepth, ...startNodes) => {\n          const searchText = ignoreCase ? innerTextSelector.toUpperCase() : innerTextSelector;\n          const locateNodesUsingInnerText = (element, currentMaxDepth) => {\n            const returnedNodes = [];\n            const nodeInnerText = ignoreCase ? element.innerText?.toUpperCase() : element.innerText;\n            if (!nodeInnerText.includes(searchText)) {\n              return [];\n            }\n            const childNodes = [];\n            for (const child of element.children) {\n              if (child instanceof HTMLElement) {\n                childNodes.push(child);\n              }\n            }\n            if (childNodes.length === 0) {\n              if (fullMatch && nodeInnerText === searchText) {\n                returnedNodes.push(element);\n              } else {\n                if (!fullMatch) {\n                  // Note: `nodeInnerText.includes(searchText)` is already checked\n                  returnedNodes.push(element);\n                }\n              }\n            } else {\n              const childNodeMatches =\n              // Don't search deeper if `maxDepth` is reached.\n              currentMaxDepth === 0 ? [] : childNodes.map(child => locateNodesUsingInnerText(child, currentMaxDepth - 1)).flat(1);\n              if (childNodeMatches.length === 0) {\n                // Note: `nodeInnerText.includes(searchText)` is already checked\n                if (!fullMatch || nodeInnerText === searchText) {\n                  returnedNodes.push(element);\n                }\n              } else {\n                returnedNodes.push(...childNodeMatches);\n              }\n            }\n            // TODO: stop search early if `maxNodeCount` is reached.\n            return returnedNodes;\n          };\n          // TODO: add maxDepth.\n          // TODO: stop search early if `maxNodeCount` is reached.\n          startNodes = startNodes.length > 0 ? startNodes : [document.body];\n          const returnedNodes = startNodes.map(startNode =>\n          // TODO: stop search early if `maxNodeCount` is reached.\n          locateNodesUsingInnerText(startNode, maxDepth)).flat(1);\n          return maxNodeCount === 0 ? returnedNodes : returnedNodes.slice(0, maxNodeCount);\n        }),\n        argumentsLocalValues: [\n        // `innerTextSelector`\n        {\n          type: 'string',\n          value: locator.value\n        },\n        // `fullMatch` with default `true`.\n        {\n          type: 'boolean',\n          value: locator.matchType !== 'partial'\n        },\n        // `ignoreCase` with default `false`.\n        {\n          type: 'boolean',\n          value: locator.ignoreCase === true\n        },\n        // `maxNodeCount` with `0` means no limit.\n        {\n          type: 'number',\n          value: maxNodeCount ?? 0\n        },\n        // `maxDepth` with default `1000` (same as default full serialization depth).\n        {\n          type: 'number',\n          value: locator.maxDepth ?? 1000\n        },\n        // `startNodes`\n        ...startNodes]\n      };\n    case 'accessibility':\n      {\n        // https://w3c.github.io/webdriver-bidi/#locate-nodes-using-accessibility-attributes\n        if (!locator.value.name && !locator.value.role) {\n          throw new protocol_js_1.InvalidSelectorException('Either name or role has to be specified');\n        }\n        // The next two commands cause a11y caches for the target to be\n        // preserved. We probably do not need to disable them if the\n        // client is using a11y features but we could by calling\n        // Accessibility.disable.\n        await Promise.all([_classPrivateFieldGet(_cdpTarget, this).cdpClient.sendCommand('Accessibility.enable'), _classPrivateFieldGet(_cdpTarget, this).cdpClient.sendCommand('Accessibility.getRootAXNode')]);\n        const bindings = await realm.evaluate( /* expression=*/'({getAccessibleName, getAccessibleRole})', /* awaitPromise=*/false, \"root\" /* Script.ResultOwnership.Root */, /* serializationOptions= */undefined, /* userActivation=*/false, /* includeCommandLineApi=*/true);\n        if (bindings.type !== 'success') {\n          throw new Error('Could not get bindings');\n        }\n        if (bindings.result.type !== 'object') {\n          throw new Error('Could not get bindings');\n        }\n        return {\n          functionDeclaration: String((name, role, bindings, maxNodeCount, ...startNodes) => {\n            const returnedNodes = [];\n            let aborted = false;\n            function collect(contextNodes, selector) {\n              if (aborted) {\n                return;\n              }\n              for (const contextNode of contextNodes) {\n                let match = true;\n                if (selector.role) {\n                  const role = bindings.getAccessibleRole(contextNode);\n                  if (selector.role !== role) {\n                    match = false;\n                  }\n                }\n                if (selector.name) {\n                  const name = bindings.getAccessibleName(contextNode);\n                  if (selector.name !== name) {\n                    match = false;\n                  }\n                }\n                if (match) {\n                  if (maxNodeCount !== 0 && returnedNodes.length === maxNodeCount) {\n                    aborted = true;\n                    break;\n                  }\n                  returnedNodes.push(contextNode);\n                }\n                const childNodes = [];\n                for (const child of contextNode.children) {\n                  if (child instanceof HTMLElement) {\n                    childNodes.push(child);\n                  }\n                }\n                collect(childNodes, selector);\n              }\n            }\n            startNodes = startNodes.length > 0 ? startNodes : [document.body];\n            collect(startNodes, {\n              role,\n              name\n            });\n            return returnedNodes;\n          }),\n          argumentsLocalValues: [\n          // `name`\n          {\n            type: 'string',\n            value: locator.value.name || ''\n          },\n          // `role`\n          {\n            type: 'string',\n            value: locator.value.role || ''\n          },\n          // `bindings`.\n          {\n            handle: bindings.result.handle\n          },\n          // `maxNodeCount` with `0` means no limit.\n          {\n            type: 'number',\n            value: maxNodeCount ?? 0\n          },\n          // `startNodes`\n          ...startNodes]\n        };\n      }\n  }\n}\nasync function _locateNodesByLocator(realm, locator, startNodes, maxNodeCount, serializationOptions) {\n  const locatorDelegate = await _assertClassBrand(_BrowsingContextImpl_brand, this, _getLocatorDelegate).call(this, realm, locator, maxNodeCount, startNodes);\n  serializationOptions = {\n    ...serializationOptions,\n    // The returned object is an array of nodes, so no need in deeper JS serialization.\n    maxObjectDepth: 1\n  };\n  const locatorResult = await realm.callFunction(locatorDelegate.functionDeclaration, false, {\n    type: 'undefined'\n  }, locatorDelegate.argumentsLocalValues, \"none\" /* Script.ResultOwnership.None */, serializationOptions);\n  if (locatorResult.type !== 'success') {\n    _classPrivateFieldGet(_logger, this)?.call(this, _BrowsingContextImpl.LOGGER_PREFIX, 'Failed locateNodesByLocator', locatorResult);\n    // Heuristic to detect invalid selector for different types of selectors.\n    if (\n    // CSS selector.\n    locatorResult.exceptionDetails.text?.endsWith('is not a valid selector.') ||\n    // XPath selector.\n    locatorResult.exceptionDetails.text?.endsWith('is not a valid XPath expression.')) {\n      throw new protocol_js_1.InvalidSelectorException(`Not valid selector ${typeof locator.value === 'string' ? locator.value : JSON.stringify(locator.value)}`);\n    }\n    // Heuristic to detect if the `startNode` is not an `HTMLElement` in css selector.\n    if (locatorResult.exceptionDetails.text === 'Error: startNodes in css selector should be HTMLElement') {\n      throw new protocol_js_1.InvalidArgumentException(`startNodes in css selector should be HTMLElement`);\n    }\n    throw new protocol_js_1.UnknownErrorException(`Unexpected error in selector script: ${locatorResult.exceptionDetails.text}`);\n  }\n  if (locatorResult.result.type !== 'array') {\n    throw new protocol_js_1.UnknownErrorException(`Unexpected selector script result type: ${locatorResult.result.type}`);\n  }\n  // Check there are no non-node elements in the result.\n  const nodes = locatorResult.result.value.map(value => {\n    if (value.type !== 'node') {\n      throw new protocol_js_1.UnknownErrorException(`Unexpected selector script result element: ${value.type}`);\n    }\n    return value;\n  });\n  return {\n    nodes\n  };\n}\n_defineProperty(BrowsingContextImpl, \"LOGGER_PREFIX\", `${log_js_1.LogType.debug}:browsingContext`);\nexports.BrowsingContextImpl = BrowsingContextImpl;\nfunction serializeOrigin(origin) {\n  // https://html.spec.whatwg.org/multipage/origin.html#ascii-serialisation-of-an-origin\n  if (['://', ''].includes(origin)) {\n    origin = 'null';\n  }\n  return origin;\n}\nexports.serializeOrigin = serializeOrigin;\nfunction getImageFormatParameters(params) {\n  const {\n    quality,\n    type\n  } = params.format ?? {\n    type: 'image/png'\n  };\n  switch (type) {\n    case 'image/png':\n      {\n        return {\n          format: 'png'\n        };\n      }\n    case 'image/jpeg':\n      {\n        return {\n          format: 'jpeg',\n          ...(quality === undefined ? {} : {\n            quality: Math.round(quality * 100)\n          })\n        };\n      }\n    case 'image/webp':\n      {\n        return {\n          format: 'webp',\n          ...(quality === undefined ? {} : {\n            quality: Math.round(quality * 100)\n          })\n        };\n      }\n  }\n  throw new protocol_js_1.InvalidArgumentException(`Image format '${type}' is not a supported format`);\n}\nfunction deserializeDOMRect(result) {\n  if (result.type !== 'object' || result.value === undefined) {\n    return;\n  }\n  const x = result.value.find(([key]) => {\n    return key === 'x';\n  })?.[1];\n  const y = result.value.find(([key]) => {\n    return key === 'y';\n  })?.[1];\n  const height = result.value.find(([key]) => {\n    return key === 'height';\n  })?.[1];\n  const width = result.value.find(([key]) => {\n    return key === 'width';\n  })?.[1];\n  if (x?.type !== 'number' || y?.type !== 'number' || height?.type !== 'number' || width?.type !== 'number') {\n    return;\n  }\n  return {\n    x: x.value,\n    y: y.value,\n    width: width.value,\n    height: height.value\n  };\n}\n/** @see https://w3c.github.io/webdriver-bidi/#normalize-rect */\nfunction normalizeRect(box) {\n  return {\n    ...(box.width < 0 ? {\n      x: box.x + box.width,\n      width: -box.width\n    } : {\n      x: box.x,\n      width: box.width\n    }),\n    ...(box.height < 0 ? {\n      y: box.y + box.height,\n      height: -box.height\n    } : {\n      y: box.y,\n      height: box.height\n    })\n  };\n}\n/** @see https://w3c.github.io/webdriver-bidi/#rectangle-intersection */\nfunction getIntersectionRect(first, second) {\n  first = normalizeRect(first);\n  second = normalizeRect(second);\n  const x = Math.max(first.x, second.x);\n  const y = Math.max(first.y, second.y);\n  return {\n    x,\n    y,\n    width: Math.max(Math.min(first.x + first.width, second.x + second.width) - x, 0),\n    height: Math.max(Math.min(first.y + first.height, second.y + second.height) - y, 0)\n  };\n}\nfunction parseInteger(value) {\n  value = value.trim();\n  if (!/^[0-9]+$/.test(value)) {\n    throw new protocol_js_1.InvalidArgumentException(`Invalid integer: ${value}`);\n  }\n  return parseInt(value);\n}","map":{"version":3,"names":["_classPrivateMethodInitSpec","require","default","_classPrivateFieldInitSpec","_defineProperty","_classPrivateGetter","_classPrivateFieldGet","_assertClassBrand","_classPrivateFieldSet","_BrowsingContextImpl","protocol_js_1","assert_js_1","Deferred_js_1","log_js_1","unitConversions_js_1","WindowRealm_js_1","_id","WeakMap","_parentId","_children","_browsingContextStorage","_lifecycle","_navigation","_url","_eventManager","_realmStorage","_loaderId","_cdpTarget","_maybeDefaultRealm","_logger","_previousViewport","_BrowsingContextImpl_brand","WeakSet","BrowsingContextImpl","constructor","id","parentId","userContext","cdpTarget","eventManager","browsingContextStorage","realmStorage","logger","Set","DOMContentLoaded","Deferred","load","withinDocument","width","height","create","context","_initListeners","call","addContext","isTopLevelContext","parent","addChild","registerEvent","type","method","ChromiumBidi","BrowsingContext","EventNames","ContextCreated","params","serializeToBidiValue","getTimestamp","Date","getTime","navigableId","dispose","_deleteAllChildren","deleteRealms","browsingContextId","delete","_failLifecycleIfNotFinished","ContextDestroyed","deleteContextById","getContext","directChildren","map","allChildren","children","concat","child","top","topContext","childId","add","updateCdpTarget","url","lifecycleLoaded","targetUnblockedOrThrow","result","unblocked","kind","error","getOrCreateSandbox","sandbox","undefined","_get_defaultRealm","maybeSandboxes","findRealms","length","cdpClient","sendCommand","frameId","worldName","assert","maxDepth","addParentField","c","onTargetInfoChanged","targetInfo","navigate","wait","URL","InvalidArgumentException","cdpNavigateResult","errorText","NavigationFailed","navigation","loaderId","timestamp","UnknownErrorException","_documentChanged","reload","ignoreCache","_resetLifecycleIfFinished","setViewport","viewport","devicePixelRatio","appliedViewport","deviceScaleFactor","mobile","dontSetVisibleSize","err","message","startsWith","UnsupportedOperationException","handleUserPrompt","accept","promptText","userText","activate","captureScreenshot","formatParameters","getImageFormatParameters","captureBeyondViewport","script","origin","String","element","document","documentElement","x","y","scrollWidth","scrollHeight","window","visualViewport","pageLeft","pageTop","realm","originResult","callFunction","deserializeDOMRect","rect","clip","getIntersectionRect","_parseRect","UnableToCaptureScreenException","scale","print","cdpParams","background","printBackground","margin","bottom","marginBottom","inchesFromCm","left","marginLeft","right","marginRight","marginTop","orientation","landscape","page","paperHeight","paperWidth","pageRanges","range","rangeParts","split","parseInteger","lowerBound","upperBound","rangeLowerPart","rangeUpperPart","Number","MAX_SAFE_INTEGER","join","shrinkToFit","preferCSSPageSize","data","close","traverseHistory","delta","history","entry","entries","currentIndex","NoSuchHistoryEntryException","entryId","toggleModulesIfNeeded","toggleNetworkIfNeeded","locateNodes","_locateNodesByLocator","locator","startNodes","maxNodeCount","serializationOptions","_this","on","frame","urlFragment","resolve","FragmentNavigated","NavigationStarted","name","DomContentLoaded","Load","auxData","uniqueId","serializeOrigin","WindowRealm","isDefault","Promise","all","getChannels","channel","startListenerFromWindow","cdpSessionId","executionContextId","accepted","UserPromptClosed","userInput","UserPromptOpened","defaultValue","defaultPrompt","isFinished","LOGGER_PREFIX","reject","Element","NoSuchElementException","sharedId","value","getBoundingClientRect","_getLocatorDelegate","functionDeclaration","cssSelector","locateNodesUsingCss","HTMLElement","Error","querySelectorAll","body","returnedNodes","startNode","flat","slice","argumentsLocalValues","xPathSelector","evaluator","XPathEvaluator","expression","createExpression","locateNodesUsingXpath","xPathResult","evaluate","XPathResult","ORDERED_NODE_SNAPSHOT_TYPE","i","snapshotLength","push","snapshotItem","InvalidSelectorException","innerTextSelector","fullMatch","ignoreCase","searchText","toUpperCase","locateNodesUsingInnerText","currentMaxDepth","nodeInnerText","innerText","includes","childNodes","childNodeMatches","matchType","role","bindings","aborted","collect","contextNodes","selector","contextNode","match","getAccessibleRole","getAccessibleName","handle","locatorDelegate","maxObjectDepth","locatorResult","exceptionDetails","text","endsWith","JSON","stringify","nodes","LogType","debug","exports","quality","format","Math","round","find","key","normalizeRect","box","first","second","max","min","trim","test","parseInt"],"sources":["../../../../../src/bidiMapper/modules/context/BrowsingContextImpl.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}