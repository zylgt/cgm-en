{"ast":null,"code":"import _classPrivateMethodInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateMethodInitSpec.js\";\nimport _defineProperty from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classPrivateFieldInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _assertClassBrand from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/assertClassBrand.js\";\nimport _classPrivateFieldSet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\nimport _classPrivateFieldGet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\n/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { CDPSessionEvent } from '../api/CDPSession.js';\nimport { FrameEvent } from '../api/Frame.js';\nimport { EventEmitter } from '../common/EventEmitter.js';\nimport { debugError, PuppeteerURL, UTILITY_WORLD_NAME } from '../common/util.js';\nimport { assert } from '../util/assert.js';\nimport { Deferred } from '../util/Deferred.js';\nimport { disposeSymbol } from '../util/disposable.js';\nimport { isErrorLike } from '../util/ErrorLike.js';\nimport { CdpCDPSession } from './CDPSession.js';\nimport { isTargetClosedError } from './Connection.js';\nimport { DeviceRequestPromptManager } from './DeviceRequestPrompt.js';\nimport { ExecutionContext } from './ExecutionContext.js';\nimport { CdpFrame } from './Frame.js';\nimport { FrameManagerEvent } from './FrameManagerEvents.js';\nimport { FrameTree } from './FrameTree.js';\nimport { MAIN_WORLD, PUPPETEER_WORLD } from './IsolatedWorlds.js';\nimport { NetworkManager } from './NetworkManager.js';\nconst TIME_FOR_WAITING_FOR_SWAP = 100; // ms.\n/**\n * A frame manager manages the frames for a given {@link Page | page}.\n *\n * @internal\n */\nvar _page = /*#__PURE__*/new WeakMap();\nvar _networkManager = /*#__PURE__*/new WeakMap();\nvar _timeoutSettings = /*#__PURE__*/new WeakMap();\nvar _isolatedWorlds = /*#__PURE__*/new WeakMap();\nvar _client = /*#__PURE__*/new WeakMap();\nvar _frameNavigatedReceived = /*#__PURE__*/new WeakMap();\nvar _deviceRequestPromptManagerMap = /*#__PURE__*/new WeakMap();\nvar _frameTreeHandled = /*#__PURE__*/new WeakMap();\nvar _FrameManager_brand = /*#__PURE__*/new WeakSet();\nexport class FrameManager extends EventEmitter {\n  get timeoutSettings() {\n    return _classPrivateFieldGet(_timeoutSettings, this);\n  }\n  get networkManager() {\n    return _classPrivateFieldGet(_networkManager, this);\n  }\n  get client() {\n    return _classPrivateFieldGet(_client, this);\n  }\n  constructor(client, page, timeoutSettings) {\n    super();\n    /**\n     * Called when the frame's client is disconnected. We don't know if the\n     * disconnect means that the frame is removed or if it will be replaced by a\n     * new frame. Therefore, we wait for a swap event.\n     */\n    _classPrivateMethodInitSpec(this, _FrameManager_brand);\n    _classPrivateFieldInitSpec(this, _page, void 0);\n    _classPrivateFieldInitSpec(this, _networkManager, void 0);\n    _classPrivateFieldInitSpec(this, _timeoutSettings, void 0);\n    _classPrivateFieldInitSpec(this, _isolatedWorlds, new Set());\n    _classPrivateFieldInitSpec(this, _client, void 0);\n    _defineProperty(this, \"_frameTree\", new FrameTree());\n    /**\n     * Set of frame IDs stored to indicate if a frame has received a\n     * frameNavigated event so that frame tree responses could be ignored as the\n     * frameNavigated event usually contains the latest information.\n     */\n    _classPrivateFieldInitSpec(this, _frameNavigatedReceived, new Set());\n    _classPrivateFieldInitSpec(this, _deviceRequestPromptManagerMap, new WeakMap());\n    _classPrivateFieldInitSpec(this, _frameTreeHandled, void 0);\n    _classPrivateFieldSet(_client, this, client);\n    _classPrivateFieldSet(_page, this, page);\n    _classPrivateFieldSet(_networkManager, this, new NetworkManager(this));\n    _classPrivateFieldSet(_timeoutSettings, this, timeoutSettings);\n    this.setupEventListeners(_classPrivateFieldGet(_client, this));\n    client.once(CDPSessionEvent.Disconnected, () => {\n      _assertClassBrand(_FrameManager_brand, this, _onClientDisconnect).call(this).catch(debugError);\n    });\n  }\n  /**\n   * When the main frame is replaced by another main frame,\n   * we maintain the main frame object identity while updating\n   * its frame tree and ID.\n   */\n  async swapFrameTree(client) {\n    _classPrivateFieldSet(_client, this, client);\n    assert(_classPrivateFieldGet(_client, this) instanceof CdpCDPSession, 'CDPSession is not an instance of CDPSessionImpl.');\n    const frame = this._frameTree.getMainFrame();\n    if (frame) {\n      _classPrivateFieldGet(_frameNavigatedReceived, this).add(_classPrivateFieldGet(_client, this)._target()._targetId);\n      this._frameTree.removeFrame(frame);\n      frame.updateId(_classPrivateFieldGet(_client, this)._target()._targetId);\n      this._frameTree.addFrame(frame);\n      frame.updateClient(client);\n    }\n    this.setupEventListeners(client);\n    client.once(CDPSessionEvent.Disconnected, () => {\n      _assertClassBrand(_FrameManager_brand, this, _onClientDisconnect).call(this).catch(debugError);\n    });\n    await this.initialize(client);\n    await _classPrivateFieldGet(_networkManager, this).addClient(client);\n    if (frame) {\n      frame.emit(FrameEvent.FrameSwappedByActivation, undefined);\n    }\n  }\n  async registerSpeculativeSession(client) {\n    await _classPrivateFieldGet(_networkManager, this).addClient(client);\n  }\n  setupEventListeners(session) {\n    session.on('Page.frameAttached', async event => {\n      await _classPrivateFieldGet(_frameTreeHandled, this)?.valueOrThrow();\n      _assertClassBrand(_FrameManager_brand, this, _onFrameAttached).call(this, session, event.frameId, event.parentFrameId);\n    });\n    session.on('Page.frameNavigated', async event => {\n      _classPrivateFieldGet(_frameNavigatedReceived, this).add(event.frame.id);\n      await _classPrivateFieldGet(_frameTreeHandled, this)?.valueOrThrow();\n      void _assertClassBrand(_FrameManager_brand, this, _onFrameNavigated).call(this, event.frame, event.type);\n    });\n    session.on('Page.navigatedWithinDocument', async event => {\n      await _classPrivateFieldGet(_frameTreeHandled, this)?.valueOrThrow();\n      _assertClassBrand(_FrameManager_brand, this, _onFrameNavigatedWithinDocument).call(this, event.frameId, event.url);\n    });\n    session.on('Page.frameDetached', async event => {\n      await _classPrivateFieldGet(_frameTreeHandled, this)?.valueOrThrow();\n      _assertClassBrand(_FrameManager_brand, this, _onFrameDetached).call(this, event.frameId, event.reason);\n    });\n    session.on('Page.frameStartedLoading', async event => {\n      await _classPrivateFieldGet(_frameTreeHandled, this)?.valueOrThrow();\n      _assertClassBrand(_FrameManager_brand, this, _onFrameStartedLoading).call(this, event.frameId);\n    });\n    session.on('Page.frameStoppedLoading', async event => {\n      await _classPrivateFieldGet(_frameTreeHandled, this)?.valueOrThrow();\n      _assertClassBrand(_FrameManager_brand, this, _onFrameStoppedLoading).call(this, event.frameId);\n    });\n    session.on('Runtime.executionContextCreated', async event => {\n      await _classPrivateFieldGet(_frameTreeHandled, this)?.valueOrThrow();\n      _assertClassBrand(_FrameManager_brand, this, _onExecutionContextCreated).call(this, event.context, session);\n    });\n    session.on('Page.lifecycleEvent', async event => {\n      await _classPrivateFieldGet(_frameTreeHandled, this)?.valueOrThrow();\n      _assertClassBrand(_FrameManager_brand, this, _onLifecycleEvent).call(this, event);\n    });\n  }\n  async initialize(client) {\n    try {\n      _classPrivateFieldGet(_frameTreeHandled, this)?.resolve();\n      _classPrivateFieldSet(_frameTreeHandled, this, Deferred.create());\n      // We need to schedule all these commands while the target is paused,\n      // therefore, it needs to happen synchroniously. At the same time we\n      // should not start processing execution context and frame events before\n      // we received the initial information about the frame tree.\n      await Promise.all([_classPrivateFieldGet(_networkManager, this).addClient(client), client.send('Page.enable'), client.send('Page.getFrameTree').then(({\n        frameTree\n      }) => {\n        _assertClassBrand(_FrameManager_brand, this, _handleFrameTree).call(this, client, frameTree);\n        _classPrivateFieldGet(_frameTreeHandled, this)?.resolve();\n      }), client.send('Page.setLifecycleEventsEnabled', {\n        enabled: true\n      }), client.send('Runtime.enable').then(() => {\n        return _assertClassBrand(_FrameManager_brand, this, _createIsolatedWorld).call(this, client, UTILITY_WORLD_NAME);\n      })]);\n    } catch (error) {\n      _classPrivateFieldGet(_frameTreeHandled, this)?.resolve();\n      // The target might have been closed before the initialization finished.\n      if (isErrorLike(error) && isTargetClosedError(error)) {\n        return;\n      }\n      throw error;\n    }\n  }\n  page() {\n    return _classPrivateFieldGet(_page, this);\n  }\n  mainFrame() {\n    const mainFrame = this._frameTree.getMainFrame();\n    assert(mainFrame, 'Requesting main frame too early!');\n    return mainFrame;\n  }\n  frames() {\n    return Array.from(this._frameTree.frames());\n  }\n  frame(frameId) {\n    return this._frameTree.getById(frameId) || null;\n  }\n  onAttachedToTarget(target) {\n    if (target._getTargetInfo().type !== 'iframe') {\n      return;\n    }\n    const frame = this.frame(target._getTargetInfo().targetId);\n    if (frame) {\n      frame.updateClient(target._session());\n    }\n    this.setupEventListeners(target._session());\n    void this.initialize(target._session());\n  }\n  _deviceRequestPromptManager(client) {\n    let manager = _classPrivateFieldGet(_deviceRequestPromptManagerMap, this).get(client);\n    if (manager === undefined) {\n      manager = new DeviceRequestPromptManager(client, _classPrivateFieldGet(_timeoutSettings, this));\n      _classPrivateFieldGet(_deviceRequestPromptManagerMap, this).set(client, manager);\n    }\n    return manager;\n  }\n}\nasync function _onClientDisconnect() {\n  const mainFrame = this._frameTree.getMainFrame();\n  if (!mainFrame) {\n    return;\n  }\n  for (const child of mainFrame.childFrames()) {\n    _assertClassBrand(_FrameManager_brand, this, _removeFramesRecursively).call(this, child);\n  }\n  const swapped = Deferred.create({\n    timeout: TIME_FOR_WAITING_FOR_SWAP,\n    message: 'Frame was not swapped'\n  });\n  mainFrame.once(FrameEvent.FrameSwappedByActivation, () => {\n    swapped.resolve();\n  });\n  try {\n    await swapped.valueOrThrow();\n  } catch (err) {\n    _assertClassBrand(_FrameManager_brand, this, _removeFramesRecursively).call(this, mainFrame);\n  }\n}\nfunction _onLifecycleEvent(event) {\n  const frame = this.frame(event.frameId);\n  if (!frame) {\n    return;\n  }\n  frame._onLifecycleEvent(event.loaderId, event.name);\n  this.emit(FrameManagerEvent.LifecycleEvent, frame);\n  frame.emit(FrameEvent.LifecycleEvent, undefined);\n}\nfunction _onFrameStartedLoading(frameId) {\n  const frame = this.frame(frameId);\n  if (!frame) {\n    return;\n  }\n  frame._onLoadingStarted();\n}\nfunction _onFrameStoppedLoading(frameId) {\n  const frame = this.frame(frameId);\n  if (!frame) {\n    return;\n  }\n  frame._onLoadingStopped();\n  this.emit(FrameManagerEvent.LifecycleEvent, frame);\n  frame.emit(FrameEvent.LifecycleEvent, undefined);\n}\nfunction _handleFrameTree(session, frameTree) {\n  if (frameTree.frame.parentId) {\n    _assertClassBrand(_FrameManager_brand, this, _onFrameAttached).call(this, session, frameTree.frame.id, frameTree.frame.parentId);\n  }\n  if (!_classPrivateFieldGet(_frameNavigatedReceived, this).has(frameTree.frame.id)) {\n    void _assertClassBrand(_FrameManager_brand, this, _onFrameNavigated).call(this, frameTree.frame, 'Navigation');\n  } else {\n    _classPrivateFieldGet(_frameNavigatedReceived, this).delete(frameTree.frame.id);\n  }\n  if (!frameTree.childFrames) {\n    return;\n  }\n  for (const child of frameTree.childFrames) {\n    _assertClassBrand(_FrameManager_brand, this, _handleFrameTree).call(this, session, child);\n  }\n}\nfunction _onFrameAttached(session, frameId, parentFrameId) {\n  let frame = this.frame(frameId);\n  if (frame) {\n    if (session && frame.isOOPFrame()) {\n      // If an OOP iframes becomes a normal iframe again\n      // it is first attached to the parent page before\n      // the target is removed.\n      frame.updateClient(session);\n    }\n    return;\n  }\n  frame = new CdpFrame(this, frameId, parentFrameId, session);\n  this._frameTree.addFrame(frame);\n  this.emit(FrameManagerEvent.FrameAttached, frame);\n}\nasync function _onFrameNavigated(framePayload, navigationType) {\n  const frameId = framePayload.id;\n  const isMainFrame = !framePayload.parentId;\n  let frame = this._frameTree.getById(frameId);\n  // Detach all child frames first.\n  if (frame) {\n    for (const child of frame.childFrames()) {\n      _assertClassBrand(_FrameManager_brand, this, _removeFramesRecursively).call(this, child);\n    }\n  }\n  // Update or create main frame.\n  if (isMainFrame) {\n    if (frame) {\n      // Update frame id to retain frame identity on cross-process navigation.\n      this._frameTree.removeFrame(frame);\n      frame._id = frameId;\n    } else {\n      // Initial main frame navigation.\n      frame = new CdpFrame(this, frameId, undefined, _classPrivateFieldGet(_client, this));\n    }\n    this._frameTree.addFrame(frame);\n  }\n  frame = await this._frameTree.waitForFrame(frameId);\n  frame._navigated(framePayload);\n  this.emit(FrameManagerEvent.FrameNavigated, frame);\n  frame.emit(FrameEvent.FrameNavigated, navigationType);\n}\nasync function _createIsolatedWorld(session, name) {\n  const key = `${session.id()}:${name}`;\n  if (_classPrivateFieldGet(_isolatedWorlds, this).has(key)) {\n    return;\n  }\n  await session.send('Page.addScriptToEvaluateOnNewDocument', {\n    source: `//# sourceURL=${PuppeteerURL.INTERNAL_URL}`,\n    worldName: name\n  });\n  await Promise.all(this.frames().filter(frame => {\n    return frame.client === session;\n  }).map(frame => {\n    // Frames might be removed before we send this, so we don't want to\n    // throw an error.\n    return session.send('Page.createIsolatedWorld', {\n      frameId: frame._id,\n      worldName: name,\n      grantUniveralAccess: true\n    }).catch(debugError);\n  }));\n  _classPrivateFieldGet(_isolatedWorlds, this).add(key);\n}\nfunction _onFrameNavigatedWithinDocument(frameId, url) {\n  const frame = this.frame(frameId);\n  if (!frame) {\n    return;\n  }\n  frame._navigatedWithinDocument(url);\n  this.emit(FrameManagerEvent.FrameNavigatedWithinDocument, frame);\n  frame.emit(FrameEvent.FrameNavigatedWithinDocument, undefined);\n  this.emit(FrameManagerEvent.FrameNavigated, frame);\n  frame.emit(FrameEvent.FrameNavigated, 'Navigation');\n}\nfunction _onFrameDetached(frameId, reason) {\n  const frame = this.frame(frameId);\n  if (!frame) {\n    return;\n  }\n  switch (reason) {\n    case 'remove':\n      // Only remove the frame if the reason for the detached event is\n      // an actual removement of the frame.\n      // For frames that become OOP iframes, the reason would be 'swap'.\n      _assertClassBrand(_FrameManager_brand, this, _removeFramesRecursively).call(this, frame);\n      break;\n    case 'swap':\n      this.emit(FrameManagerEvent.FrameSwapped, frame);\n      frame.emit(FrameEvent.FrameSwapped, undefined);\n      break;\n  }\n}\nfunction _onExecutionContextCreated(contextPayload, session) {\n  const auxData = contextPayload.auxData;\n  const frameId = auxData && auxData.frameId;\n  const frame = typeof frameId === 'string' ? this.frame(frameId) : undefined;\n  let world;\n  if (frame) {\n    // Only care about execution contexts created for the current session.\n    if (frame.client !== session) {\n      return;\n    }\n    if (contextPayload.auxData && contextPayload.auxData['isDefault']) {\n      world = frame.worlds[MAIN_WORLD];\n    } else if (contextPayload.name === UTILITY_WORLD_NAME && !frame.worlds[PUPPETEER_WORLD].hasContext()) {\n      // In case of multiple sessions to the same target, there's a race between\n      // connections so we might end up creating multiple isolated worlds.\n      // We can use either.\n      world = frame.worlds[PUPPETEER_WORLD];\n    }\n  }\n  // If there is no world, the context is not meant to be handled by us.\n  if (!world) {\n    return;\n  }\n  const context = new ExecutionContext(frame?.client || _classPrivateFieldGet(_client, this), contextPayload, world);\n  world.setContext(context);\n}\nfunction _removeFramesRecursively(frame) {\n  for (const child of frame.childFrames()) {\n    _assertClassBrand(_FrameManager_brand, this, _removeFramesRecursively).call(this, child);\n  }\n  frame[disposeSymbol]();\n  this._frameTree.removeFrame(frame);\n  this.emit(FrameManagerEvent.FrameDetached, frame);\n  frame.emit(FrameEvent.FrameDetached, frame);\n}","map":{"version":3,"names":["CDPSessionEvent","FrameEvent","EventEmitter","debugError","PuppeteerURL","UTILITY_WORLD_NAME","assert","Deferred","disposeSymbol","isErrorLike","CdpCDPSession","isTargetClosedError","DeviceRequestPromptManager","ExecutionContext","CdpFrame","FrameManagerEvent","FrameTree","MAIN_WORLD","PUPPETEER_WORLD","NetworkManager","TIME_FOR_WAITING_FOR_SWAP","_page","WeakMap","_networkManager","_timeoutSettings","_isolatedWorlds","_client","_frameNavigatedReceived","_deviceRequestPromptManagerMap","_frameTreeHandled","_FrameManager_brand","WeakSet","FrameManager","timeoutSettings","_classPrivateFieldGet","networkManager","client","constructor","page","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","Set","_defineProperty","_classPrivateFieldSet","setupEventListeners","once","Disconnected","_assertClassBrand","_onClientDisconnect","call","catch","swapFrameTree","frame","_frameTree","getMainFrame","add","_target","_targetId","removeFrame","updateId","addFrame","updateClient","initialize","addClient","emit","FrameSwappedByActivation","undefined","registerSpeculativeSession","session","on","event","valueOrThrow","_onFrameAttached","frameId","parentFrameId","id","_onFrameNavigated","type","_onFrameNavigatedWithinDocument","url","_onFrameDetached","reason","_onFrameStartedLoading","_onFrameStoppedLoading","_onExecutionContextCreated","context","_onLifecycleEvent","resolve","create","Promise","all","send","then","frameTree","_handleFrameTree","enabled","_createIsolatedWorld","error","mainFrame","frames","Array","from","getById","onAttachedToTarget","target","_getTargetInfo","targetId","_session","_deviceRequestPromptManager","manager","get","set","child","childFrames","_removeFramesRecursively","swapped","timeout","message","err","loaderId","name","LifecycleEvent","_onLoadingStarted","_onLoadingStopped","parentId","has","delete","isOOPFrame","FrameAttached","framePayload","navigationType","isMainFrame","_id","waitForFrame","_navigated","FrameNavigated","key","source","INTERNAL_URL","worldName","filter","map","grantUniveralAccess","_navigatedWithinDocument","FrameNavigatedWithinDocument","FrameSwapped","contextPayload","auxData","world","worlds","hasContext","setContext","FrameDetached"],"sources":["../../../../src/cdp/FrameManager.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}