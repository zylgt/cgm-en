{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HTTPResponse = void 0;\n/**\n * The HTTPResponse class represents responses which are received by the\n * {@link Page} class.\n *\n * @public\n */\nclass HTTPResponse {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * True if the response was successful (status in the range 200-299).\n   */\n  ok() {\n    // TODO: document === 0 case?\n    const status = this.status();\n    return status === 0 || status >= 200 && status <= 299;\n  }\n  /**\n   * Promise which resolves to a text (utf8) representation of response body.\n   */\n  async text() {\n    const content = await this.buffer();\n    return content.toString('utf8');\n  }\n  /**\n   * Promise which resolves to a JSON representation of response body.\n   *\n   * @remarks\n   *\n   * This method will throw if the response body is not parsable via\n   * `JSON.parse`.\n   */\n  async json() {\n    const content = await this.text();\n    return JSON.parse(content);\n  }\n}\nexports.HTTPResponse = HTTPResponse;","map":{"version":3,"names":["HTTPResponse","constructor","ok","status","text","content","buffer","toString","json","JSON","parse","exports"],"sources":["../../../../src/api/HTTPResponse.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;AAqBA;;;;;;AAMA,MAAsBA,YAAY;EAChC;;;EAGAC,YAAA,GAAe;EAaf;;;EAGAC,EAAEA,CAAA;IACA;IACA,MAAMC,MAAM,GAAG,IAAI,CAACA,MAAM,EAAE;IAC5B,OAAOA,MAAM,KAAK,CAAC,IAAKA,MAAM,IAAI,GAAG,IAAIA,MAAM,IAAI,GAAI;EACzD;EA0CA;;;EAGA,MAAMC,IAAIA,CAAA;IACR,MAAMC,OAAO,GAAG,MAAM,IAAI,CAACC,MAAM,EAAE;IACnC,OAAOD,OAAO,CAACE,QAAQ,CAAC,MAAM,CAAC;EACjC;EAEA;;;;;;;;EAQA,MAAMC,IAAIA,CAAA;IACR,MAAMH,OAAO,GAAG,MAAM,IAAI,CAACD,IAAI,EAAE;IACjC,OAAOK,IAAI,CAACC,KAAK,CAACL,OAAO,CAAC;EAC5B;;AArFFM,OAAA,CAAAX,YAAA,GAAAA,YAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}