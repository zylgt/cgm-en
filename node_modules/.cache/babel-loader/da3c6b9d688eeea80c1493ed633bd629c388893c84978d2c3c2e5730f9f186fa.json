{"ast":null,"code":"import { formatDate } from '@/utils/formatTime';\nimport { TIRUtils } from \"@/utils/algorithm/TIR\";\nimport { GlucoseUtils } from \"@/utils/algorithm/Glucose\";\n// 监听主线程传来的消息\nself.addEventListener('message', e => {\n  // heavyCalculation(e.data)\n  self.postMessage(heavyCalculation(e.data));\n});\n// 处理数据\nfunction heavyCalculation(data) {\n  let array = data;\n  // 将数组按天分割\n  let dayMap = new Map();\n  array.forEach((item, index) => {\n    if (dayMap.size < 14) {\n      item.day = formatDate(item.DataTs * 1000, 'mm.dd');\n      item.week = formatDate(item.DataTs * 1000, 'WW');\n      item.moment = Number(formatDate(item.DataTs * 1000, 'HH')) * 60 + Number(formatDate(item.DataTs * 1000, 'MM'));\n      item.dayArray = new Array(24 * 60);\n      item.dayArray[item.moment] = GlucoseUtils.mgdlToMmol(item.Value);\n      dayMap.has(item.day) ? dayMap.get(item.day).value[item.moment] = GlucoseUtils.mgdlToMmol(item.Value) : dayMap.set(item.day, {\n        value: item.dayArray,\n        week: item.week,\n        tir: TIRUtils.getTIRResult(item.dayArray) ? TIRUtils.getTIRResult(item.dayArray).normalRate : 0\n      });\n    }\n  });\n  return dayMap;\n}","map":{"version":3,"names":["formatDate","TIRUtils","GlucoseUtils","self","addEventListener","e","postMessage","heavyCalculation","data","array","dayMap","Map","forEach","item","index","size","day","DataTs","week","moment","Number","dayArray","Array","mgdlToMmol","Value","has","get","value","set","tir","getTIRResult","normalRate"],"sources":["/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/src/workers/day_worker.js"],"sourcesContent":["import {formatDate} from '@/utils/formatTime'\nimport { TIRUtils } from \"@/utils/algorithm/TIR\";\nimport { GlucoseUtils } from \"@/utils/algorithm/Glucose\";\n// 监听主线程传来的消息\nself.addEventListener('message',(e)=>{\n    // heavyCalculation(e.data)\n    self.postMessage(heavyCalculation(e.data))\n})\n// 处理数据\nfunction heavyCalculation(data){\n    let array = data\n     // 将数组按天分割\n     let dayMap = new Map()\n     array.forEach((item,index)=>{\n        if(dayMap.size<14){\n            item.day = formatDate(item.DataTs*1000,'mm.dd')\n            item.week = formatDate(item.DataTs*1000,'WW')\n            item.moment = Number(formatDate(item.DataTs*1000,'HH'))*60+Number(formatDate(item.DataTs*1000,'MM'))\n            item.dayArray = new Array(24*60)\n            item.dayArray[item.moment] = GlucoseUtils.mgdlToMmol(item.Value)\n            dayMap.has(item.day) ? dayMap.get(item.day).value[item.moment]=GlucoseUtils.mgdlToMmol(item.Value): dayMap.set(item.day, {value:item.dayArray,week:item.week,tir:TIRUtils.getTIRResult(item.dayArray)?TIRUtils.getTIRResult(item.dayArray).normalRate:0});\n        }\n    })\n    return dayMap\n}"],"mappings":"AAAA,SAAQA,UAAU,QAAO,oBAAoB;AAC7C,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,YAAY,QAAQ,2BAA2B;AACxD;AACAC,IAAI,CAACC,gBAAgB,CAAC,SAAS,EAAEC,CAAC,IAAG;EACjC;EACAF,IAAI,CAACG,WAAW,CAACC,gBAAgB,CAACF,CAAC,CAACG,IAAI,CAAC,CAAC;AAC9C,CAAC,CAAC;AACF;AACA,SAASD,gBAAgBA,CAACC,IAAI,EAAC;EAC3B,IAAIC,KAAK,GAAGD,IAAI;EACf;EACA,IAAIE,MAAM,GAAG,IAAIC,GAAG,CAAC,CAAC;EACtBF,KAAK,CAACG,OAAO,CAAC,CAACC,IAAI,EAACC,KAAK,KAAG;IACzB,IAAGJ,MAAM,CAACK,IAAI,GAAC,EAAE,EAAC;MACdF,IAAI,CAACG,GAAG,GAAGhB,UAAU,CAACa,IAAI,CAACI,MAAM,GAAC,IAAI,EAAC,OAAO,CAAC;MAC/CJ,IAAI,CAACK,IAAI,GAAGlB,UAAU,CAACa,IAAI,CAACI,MAAM,GAAC,IAAI,EAAC,IAAI,CAAC;MAC7CJ,IAAI,CAACM,MAAM,GAAGC,MAAM,CAACpB,UAAU,CAACa,IAAI,CAACI,MAAM,GAAC,IAAI,EAAC,IAAI,CAAC,CAAC,GAAC,EAAE,GAACG,MAAM,CAACpB,UAAU,CAACa,IAAI,CAACI,MAAM,GAAC,IAAI,EAAC,IAAI,CAAC,CAAC;MACpGJ,IAAI,CAACQ,QAAQ,GAAG,IAAIC,KAAK,CAAC,EAAE,GAAC,EAAE,CAAC;MAChCT,IAAI,CAACQ,QAAQ,CAACR,IAAI,CAACM,MAAM,CAAC,GAAGjB,YAAY,CAACqB,UAAU,CAACV,IAAI,CAACW,KAAK,CAAC;MAChEd,MAAM,CAACe,GAAG,CAACZ,IAAI,CAACG,GAAG,CAAC,GAAGN,MAAM,CAACgB,GAAG,CAACb,IAAI,CAACG,GAAG,CAAC,CAACW,KAAK,CAACd,IAAI,CAACM,MAAM,CAAC,GAACjB,YAAY,CAACqB,UAAU,CAACV,IAAI,CAACW,KAAK,CAAC,GAAEd,MAAM,CAACkB,GAAG,CAACf,IAAI,CAACG,GAAG,EAAE;QAACW,KAAK,EAACd,IAAI,CAACQ,QAAQ;QAACH,IAAI,EAACL,IAAI,CAACK,IAAI;QAACW,GAAG,EAAC5B,QAAQ,CAAC6B,YAAY,CAACjB,IAAI,CAACQ,QAAQ,CAAC,GAACpB,QAAQ,CAAC6B,YAAY,CAACjB,IAAI,CAACQ,QAAQ,CAAC,CAACU,UAAU,GAAC;MAAC,CAAC,CAAC;IAC7P;EACJ,CAAC,CAAC;EACF,OAAOrB,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}