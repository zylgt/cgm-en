{"ast":null,"code":"\"use strict\";\n\nvar _classPrivateMethodInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateMethodInitSpec.js\").default;\nvar _classPrivateFieldInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _classPrivateFieldGet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldGet2.js\").default;\nvar _classPrivateFieldSet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldSet2.js\").default;\nvar _assertClassBrand = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/assertClassBrand.js\").default;\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CdpTarget = void 0;\nconst chromium_bidi_js_1 = require(\"../../../protocol/chromium-bidi.js\");\nconst Deferred_js_1 = require(\"../../../utils/Deferred.js\");\nconst LogManager_js_1 = require(\"../log/LogManager.js\");\nvar _id = /*#__PURE__*/new WeakMap();\nvar _cdpClient = /*#__PURE__*/new WeakMap();\nvar _browserCdpClient = /*#__PURE__*/new WeakMap();\nvar _eventManager = /*#__PURE__*/new WeakMap();\nvar _preloadScriptStorage = /*#__PURE__*/new WeakMap();\nvar _browsingContextStorage = /*#__PURE__*/new WeakMap();\nvar _networkStorage = /*#__PURE__*/new WeakMap();\nvar _unblocked = /*#__PURE__*/new WeakMap();\nvar _acceptInsecureCerts = /*#__PURE__*/new WeakMap();\nvar _networkDomainEnabled = /*#__PURE__*/new WeakMap();\nvar _fetchDomainStages = /*#__PURE__*/new WeakMap();\nvar _CdpTarget_brand = /*#__PURE__*/new WeakSet();\nclass CdpTarget {\n  static create(targetId, cdpClient, browserCdpClient, realmStorage, eventManager, preloadScriptStorage, browsingContextStorage, networkStorage, acceptInsecureCerts, logger) {\n    const cdpTarget = new CdpTarget(targetId, cdpClient, browserCdpClient, eventManager, preloadScriptStorage, browsingContextStorage, networkStorage, acceptInsecureCerts);\n    LogManager_js_1.LogManager.create(cdpTarget, realmStorage, eventManager, logger);\n    _assertClassBrand(_CdpTarget_brand, cdpTarget, _setEventListeners).call(cdpTarget);\n    // No need to await.\n    // Deferred will be resolved when the target is unblocked.\n    void _assertClassBrand(_CdpTarget_brand, cdpTarget, _unblock).call(cdpTarget);\n    return cdpTarget;\n  }\n  constructor(targetId, cdpClient, browserCdpClient, eventManager, preloadScriptStorage, browsingContextStorage, networkStorage, acceptInsecureCerts) {\n    /**\n     * Enables all the required CDP domains and unblocks the target.\n     */\n    _classPrivateMethodInitSpec(this, _CdpTarget_brand);\n    _classPrivateFieldInitSpec(this, _id, void 0);\n    _classPrivateFieldInitSpec(this, _cdpClient, void 0);\n    _classPrivateFieldInitSpec(this, _browserCdpClient, void 0);\n    _classPrivateFieldInitSpec(this, _eventManager, void 0);\n    _classPrivateFieldInitSpec(this, _preloadScriptStorage, void 0);\n    _classPrivateFieldInitSpec(this, _browsingContextStorage, void 0);\n    _classPrivateFieldInitSpec(this, _networkStorage, void 0);\n    _classPrivateFieldInitSpec(this, _unblocked, new Deferred_js_1.Deferred());\n    _classPrivateFieldInitSpec(this, _acceptInsecureCerts, void 0);\n    _classPrivateFieldInitSpec(this, _networkDomainEnabled, false);\n    _classPrivateFieldInitSpec(this, _fetchDomainStages, {\n      request: false,\n      response: false,\n      auth: false\n    });\n    _classPrivateFieldSet(_id, this, targetId);\n    _classPrivateFieldSet(_cdpClient, this, cdpClient);\n    _classPrivateFieldSet(_browserCdpClient, this, browserCdpClient);\n    _classPrivateFieldSet(_eventManager, this, eventManager);\n    _classPrivateFieldSet(_preloadScriptStorage, this, preloadScriptStorage);\n    _classPrivateFieldSet(_networkStorage, this, networkStorage);\n    _classPrivateFieldSet(_browsingContextStorage, this, browsingContextStorage);\n    _classPrivateFieldSet(_acceptInsecureCerts, this, acceptInsecureCerts);\n  }\n  /** Returns a deferred that resolves when the target is unblocked. */\n  get unblocked() {\n    return _classPrivateFieldGet(_unblocked, this);\n  }\n  get id() {\n    return _classPrivateFieldGet(_id, this);\n  }\n  get cdpClient() {\n    return _classPrivateFieldGet(_cdpClient, this);\n  }\n  get browserCdpClient() {\n    return _classPrivateFieldGet(_browserCdpClient, this);\n  }\n  /** Needed for CDP escape path. */\n  get cdpSessionId() {\n    // SAFETY we got the client by it's id for creating\n    return _classPrivateFieldGet(_cdpClient, this).sessionId;\n  }\n  async toggleFetchIfNeeded() {\n    const stages = _classPrivateFieldGet(_networkStorage, this).getInterceptionStages(this.topLevelId);\n    if (\n    // Only toggle interception when Network is enabled\n    !_classPrivateFieldGet(_networkDomainEnabled, this) || _classPrivateFieldGet(_fetchDomainStages, this).request === stages.request && _classPrivateFieldGet(_fetchDomainStages, this).response === stages.response && _classPrivateFieldGet(_fetchDomainStages, this).auth === stages.auth) {\n      return;\n    }\n    const patterns = [];\n    _classPrivateFieldSet(_fetchDomainStages, this, stages);\n    if (stages.request || stages.auth) {\n      // CDP quirk we need request interception when we intercept auth\n      patterns.push({\n        urlPattern: '*',\n        requestStage: 'Request'\n      });\n    }\n    if (stages.response) {\n      patterns.push({\n        urlPattern: '*',\n        requestStage: 'Response'\n      });\n    }\n    if (patterns.length) {\n      await _classPrivateFieldGet(_cdpClient, this).sendCommand('Fetch.enable', {\n        patterns,\n        handleAuthRequests: stages.auth\n      });\n    } else {\n      await _classPrivateFieldGet(_cdpClient, this).sendCommand('Fetch.disable');\n    }\n  }\n  /**\n   * Toggles both Network and Fetch domains.\n   */\n  async toggleNetworkIfNeeded() {\n    const enabled = this.isSubscribedTo(chromium_bidi_js_1.BiDiModule.Network);\n    if (enabled === _classPrivateFieldGet(_networkDomainEnabled, this)) {\n      return;\n    }\n    _classPrivateFieldSet(_networkDomainEnabled, this, enabled);\n    try {\n      await Promise.all([_classPrivateFieldGet(_cdpClient, this).sendCommand(enabled ? 'Network.enable' : 'Network.disable'), this.toggleFetchIfNeeded()]);\n    } catch (err) {\n      _classPrivateFieldSet(_networkDomainEnabled, this, !enabled);\n    }\n  }\n  /**\n   * All the ProxyChannels from all the preload scripts of the given\n   * BrowsingContext.\n   */\n  getChannels() {\n    return _classPrivateFieldGet(_preloadScriptStorage, this).find().flatMap(script => script.channels);\n  }\n  /** Loads all top-level preload scripts. */\n\n  get topLevelId() {\n    return _classPrivateFieldGet(_browsingContextStorage, this).findTopLevelContextId(this.id) ?? this.id;\n  }\n  isSubscribedTo(moduleOrEvent) {\n    return _classPrivateFieldGet(_eventManager, this).subscriptionManager.isSubscribedTo(moduleOrEvent, this.topLevelId);\n  }\n}\nasync function _unblock() {\n  try {\n    await Promise.all([_classPrivateFieldGet(_cdpClient, this).sendCommand('Runtime.enable'), _classPrivateFieldGet(_cdpClient, this).sendCommand('Page.enable'), _classPrivateFieldGet(_cdpClient, this).sendCommand('Page.setLifecycleEventsEnabled', {\n      enabled: true\n    }),\n    // Set ignore certificate errors for each target.\n    _classPrivateFieldGet(_cdpClient, this).sendCommand('Security.setIgnoreCertificateErrors', {\n      ignore: _classPrivateFieldGet(_acceptInsecureCerts, this)\n    }), this.toggleNetworkIfNeeded(), _classPrivateFieldGet(_cdpClient, this).sendCommand('Target.setAutoAttach', {\n      autoAttach: true,\n      waitForDebuggerOnStart: true,\n      flatten: true\n    }), _assertClassBrand(_CdpTarget_brand, this, _initAndEvaluatePreloadScripts).call(this), _classPrivateFieldGet(_cdpClient, this).sendCommand('Runtime.runIfWaitingForDebugger')]);\n  } catch (error) {\n    // The target might have been closed before the initialization finished.\n    if (!_classPrivateFieldGet(_cdpClient, this).isCloseError(error)) {\n      _classPrivateFieldGet(_unblocked, this).resolve({\n        kind: 'error',\n        error\n      });\n      return;\n    }\n  }\n  _classPrivateFieldGet(_unblocked, this).resolve({\n    kind: 'success',\n    value: undefined\n  });\n}\nfunction _setEventListeners() {\n  _classPrivateFieldGet(_cdpClient, this).on('*', (event, params) => {\n    // We may encounter uses for EventEmitter other than CDP events,\n    // which we want to skip.\n    if (typeof event !== 'string') {\n      return;\n    }\n    _classPrivateFieldGet(_eventManager, this).registerEvent({\n      type: 'event',\n      method: `cdp.${event}`,\n      params: {\n        event,\n        params,\n        session: this.cdpSessionId\n      }\n    }, this.id);\n  });\n}\nasync function _initAndEvaluatePreloadScripts() {\n  await Promise.all(_classPrivateFieldGet(_preloadScriptStorage, this).find({\n    // Needed for OOPIF\n    targetId: this.topLevelId,\n    global: true\n  }).map(script => {\n    return script.initInTarget(this, true);\n  }));\n}\nexports.CdpTarget = CdpTarget;","map":{"version":3,"names":["chromium_bidi_js_1","require","Deferred_js_1","LogManager_js_1","_id","WeakMap","_cdpClient","_browserCdpClient","_eventManager","_preloadScriptStorage","_browsingContextStorage","_networkStorage","_unblocked","_acceptInsecureCerts","_networkDomainEnabled","_fetchDomainStages","_CdpTarget_brand","WeakSet","CdpTarget","create","targetId","cdpClient","browserCdpClient","realmStorage","eventManager","preloadScriptStorage","browsingContextStorage","networkStorage","acceptInsecureCerts","logger","cdpTarget","LogManager","_assertClassBrand","_setEventListeners","call","_unblock","constructor","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","Deferred","request","response","auth","_classPrivateFieldSet","unblocked","_classPrivateFieldGet","id","cdpSessionId","sessionId","toggleFetchIfNeeded","stages","getInterceptionStages","topLevelId","patterns","push","urlPattern","requestStage","length","sendCommand","handleAuthRequests","toggleNetworkIfNeeded","enabled","isSubscribedTo","BiDiModule","Network","Promise","all","err","getChannels","find","flatMap","script","channels","findTopLevelContextId","moduleOrEvent","subscriptionManager","ignore","autoAttach","waitForDebuggerOnStart","flatten","_initAndEvaluatePreloadScripts","error","isCloseError","resolve","kind","value","undefined","on","event","params","registerEvent","type","method","session","global","map","initInTarget","exports"],"sources":["../../../../../src/bidiMapper/modules/cdp/CdpTarget.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}