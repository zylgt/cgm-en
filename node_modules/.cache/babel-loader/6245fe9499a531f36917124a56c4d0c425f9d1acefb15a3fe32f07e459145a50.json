{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _classPrivateMethodInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateMethodInitSpec.js\").default;\nvar _classPrivateFieldInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _assertClassBrand = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/assertClassBrand.js\").default;\nvar _classPrivateFieldSet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldSet2.js\").default;\nvar _classPrivateFieldGet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldGet2.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BidiServer = void 0;\nconst EventEmitter_js_1 = require(\"../utils/EventEmitter.js\");\nconst log_js_1 = require(\"../utils/log.js\");\nconst ProcessingQueue_js_1 = require(\"../utils/ProcessingQueue.js\");\nconst CommandProcessor_js_1 = require(\"./CommandProcessor.js\");\nconst CdpTargetManager_js_1 = require(\"./modules/cdp/CdpTargetManager.js\");\nconst BrowsingContextStorage_js_1 = require(\"./modules/context/BrowsingContextStorage.js\");\nconst NetworkStorage_js_1 = require(\"./modules/network/NetworkStorage.js\");\nconst PreloadScriptStorage_js_1 = require(\"./modules/script/PreloadScriptStorage.js\");\nconst RealmStorage_js_1 = require(\"./modules/script/RealmStorage.js\");\nconst EventManager_js_1 = require(\"./modules/session/EventManager.js\");\nvar _messageQueue = /*#__PURE__*/new WeakMap();\nvar _transport = /*#__PURE__*/new WeakMap();\nvar _commandProcessor = /*#__PURE__*/new WeakMap();\nvar _eventManager = /*#__PURE__*/new WeakMap();\nvar _browsingContextStorage = /*#__PURE__*/new WeakMap();\nvar _realmStorage = /*#__PURE__*/new WeakMap();\nvar _preloadScriptStorage = /*#__PURE__*/new WeakMap();\nvar _logger = /*#__PURE__*/new WeakMap();\nvar _handleIncomingMessage = /*#__PURE__*/new WeakMap();\nvar _processOutgoingMessage = /*#__PURE__*/new WeakMap();\nvar _BidiServer_brand = /*#__PURE__*/new WeakSet();\nclass BidiServer extends EventEmitter_js_1.EventEmitter {\n  constructor(bidiTransport, cdpConnection, browserCdpClient, selfTargetId, defaultUserContextId, options, parser, logger) {\n    super();\n    _classPrivateMethodInitSpec(this, _BidiServer_brand);\n    _classPrivateFieldInitSpec(this, _messageQueue, void 0);\n    _classPrivateFieldInitSpec(this, _transport, void 0);\n    _classPrivateFieldInitSpec(this, _commandProcessor, void 0);\n    _classPrivateFieldInitSpec(this, _eventManager, void 0);\n    _classPrivateFieldInitSpec(this, _browsingContextStorage, new BrowsingContextStorage_js_1.BrowsingContextStorage());\n    _classPrivateFieldInitSpec(this, _realmStorage, new RealmStorage_js_1.RealmStorage());\n    _classPrivateFieldInitSpec(this, _preloadScriptStorage, new PreloadScriptStorage_js_1.PreloadScriptStorage());\n    _classPrivateFieldInitSpec(this, _logger, void 0);\n    _classPrivateFieldInitSpec(this, _handleIncomingMessage, message => {\n      void _classPrivateFieldGet(_commandProcessor, this).processCommand(message).catch(error => {\n        _classPrivateFieldGet(_logger, this)?.call(this, log_js_1.LogType.debugError, error);\n      });\n    });\n    _classPrivateFieldInitSpec(this, _processOutgoingMessage, async messageEntry => {\n      const message = messageEntry.message;\n      if (messageEntry.channel !== null) {\n        message['channel'] = messageEntry.channel;\n      }\n      await _classPrivateFieldGet(_transport, this).sendMessage(message);\n    });\n    _classPrivateFieldSet(_logger, this, logger);\n    _classPrivateFieldSet(_messageQueue, this, new ProcessingQueue_js_1.ProcessingQueue(_classPrivateFieldGet(_processOutgoingMessage, this), _classPrivateFieldGet(_logger, this)));\n    _classPrivateFieldSet(_transport, this, bidiTransport);\n    _classPrivateFieldGet(_transport, this).setOnMessage(_classPrivateFieldGet(_handleIncomingMessage, this));\n    _classPrivateFieldSet(_eventManager, this, new EventManager_js_1.EventManager(_classPrivateFieldGet(_browsingContextStorage, this)));\n    const networkStorage = new NetworkStorage_js_1.NetworkStorage(_classPrivateFieldGet(_eventManager, this), browserCdpClient, logger);\n    new CdpTargetManager_js_1.CdpTargetManager(cdpConnection, browserCdpClient, selfTargetId, _classPrivateFieldGet(_eventManager, this), _classPrivateFieldGet(_browsingContextStorage, this), _classPrivateFieldGet(_realmStorage, this), networkStorage, _classPrivateFieldGet(_preloadScriptStorage, this), options?.acceptInsecureCerts ?? false, defaultUserContextId, logger);\n    _classPrivateFieldSet(_commandProcessor, this, new CommandProcessor_js_1.CommandProcessor(cdpConnection, browserCdpClient, _classPrivateFieldGet(_eventManager, this), _classPrivateFieldGet(_browsingContextStorage, this), _classPrivateFieldGet(_realmStorage, this), _classPrivateFieldGet(_preloadScriptStorage, this), networkStorage, parser, _classPrivateFieldGet(_logger, this)));\n    _classPrivateFieldGet(_eventManager, this).on(\"event\" /* EventManagerEvents.Event */, ({\n      message,\n      event\n    }) => {\n      this.emitOutgoingMessage(message, event);\n    });\n    _classPrivateFieldGet(_commandProcessor, this).on(\"response\" /* CommandProcessorEvents.Response */, ({\n      message,\n      event\n    }) => {\n      this.emitOutgoingMessage(message, event);\n    });\n  }\n  /**\n   * Creates and starts BiDi Mapper instance.\n   */\n  static async createAndStart(bidiTransport, cdpConnection, browserCdpClient, selfTargetId, options, parser, logger) {\n    // The default context is not exposed in Target.getBrowserContexts but can\n    // be observed via Target.getTargets. To determine the default browser\n    // context, we check which one is mentioned in Target.getTargets and not in\n    // Target.getBrowserContexts.\n    const [{\n      browserContextIds\n    }, {\n      targetInfos\n    }] = await Promise.all([browserCdpClient.sendCommand('Target.getBrowserContexts'), browserCdpClient.sendCommand('Target.getTargets')]);\n    let defaultUserContextId = 'default';\n    for (const info of targetInfos) {\n      if (info.browserContextId && !browserContextIds.includes(info.browserContextId)) {\n        defaultUserContextId = info.browserContextId;\n        break;\n      }\n    }\n    const server = new BidiServer(bidiTransport, cdpConnection, browserCdpClient, selfTargetId, defaultUserContextId, options, parser, logger);\n    // Needed to get events about new targets.\n    await browserCdpClient.sendCommand('Target.setDiscoverTargets', {\n      discover: true\n    });\n    // Needed to automatically attach to new targets.\n    await browserCdpClient.sendCommand('Target.setAutoAttach', {\n      autoAttach: true,\n      waitForDebuggerOnStart: true,\n      flatten: true\n    });\n    await _assertClassBrand(_BidiServer_brand, server, _topLevelContextsLoaded).call(server);\n    return server;\n  }\n  /**\n   * Sends BiDi message.\n   */\n  emitOutgoingMessage(messageEntry, event) {\n    _classPrivateFieldGet(_messageQueue, this).add(messageEntry, event);\n  }\n  close() {\n    _classPrivateFieldGet(_transport, this).close();\n  }\n}\nasync function _topLevelContextsLoaded() {\n  await Promise.all(_classPrivateFieldGet(_browsingContextStorage, this).getTopLevelContexts().map(c => c.lifecycleLoaded()));\n}\nexports.BidiServer = BidiServer;","map":{"version":3,"names":["_classPrivateMethodInitSpec","require","default","_classPrivateFieldInitSpec","_assertClassBrand","_classPrivateFieldSet","_classPrivateFieldGet","EventEmitter_js_1","log_js_1","ProcessingQueue_js_1","CommandProcessor_js_1","CdpTargetManager_js_1","BrowsingContextStorage_js_1","NetworkStorage_js_1","PreloadScriptStorage_js_1","RealmStorage_js_1","EventManager_js_1","_messageQueue","WeakMap","_transport","_commandProcessor","_eventManager","_browsingContextStorage","_realmStorage","_preloadScriptStorage","_logger","_handleIncomingMessage","_processOutgoingMessage","_BidiServer_brand","WeakSet","BidiServer","EventEmitter","constructor","bidiTransport","cdpConnection","browserCdpClient","selfTargetId","defaultUserContextId","options","parser","logger","BrowsingContextStorage","RealmStorage","PreloadScriptStorage","message","processCommand","catch","error","call","LogType","debugError","messageEntry","channel","sendMessage","ProcessingQueue","setOnMessage","EventManager","networkStorage","NetworkStorage","CdpTargetManager","acceptInsecureCerts","CommandProcessor","on","event","emitOutgoingMessage","createAndStart","browserContextIds","targetInfos","Promise","all","sendCommand","info","browserContextId","includes","server","discover","autoAttach","waitForDebuggerOnStart","flatten","_topLevelContextsLoaded","add","close","getTopLevelContexts","map","c","lifecycleLoaded","exports"],"sources":["../../../src/bidiMapper/BidiServer.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAAA,IAAAA,2BAAA,GAAAC,OAAA,+GAAAC,OAAA;AAAA,IAAAC,0BAAA,GAAAF,OAAA,8GAAAC,OAAA;AAAA,IAAAE,iBAAA,GAAAH,OAAA,qGAAAC,OAAA;AAAA,IAAAG,qBAAA,GAAAJ,OAAA,0GAAAC,OAAA;AAAA,IAAAI,qBAAA,GAAAL,OAAA,0GAAAC,OAAA;;;;;AAoBA,MAAAK,iBAAA,GAAAN,OAAA;AACA,MAAAO,QAAA,GAAAP,OAAA;AACA,MAAAQ,oBAAA,GAAAR,OAAA;AAKA,MAAAS,qBAAA,GAAAT,OAAA;AACA,MAAAU,qBAAA,GAAAV,OAAA;AACA,MAAAW,2BAAA,GAAAX,OAAA;AACA,MAAAY,mBAAA,GAAAZ,OAAA;AACA,MAAAa,yBAAA,GAAAb,OAAA;AACA,MAAAc,iBAAA,GAAAd,OAAA;AACA,MAAAe,iBAAA,GAAAf,OAAA;AAG2C,IAAAgB,aAAA,oBAAAC,OAAA;AAAA,IAAAC,UAAA,oBAAAD,OAAA;AAAA,IAAAE,iBAAA,oBAAAF,OAAA;AAAA,IAAAG,aAAA,oBAAAH,OAAA;AAAA,IAAAI,uBAAA,oBAAAJ,OAAA;AAAA,IAAAK,aAAA,oBAAAL,OAAA;AAAA,IAAAM,qBAAA,oBAAAN,OAAA;AAAA,IAAAO,OAAA,oBAAAP,OAAA;AAAA,IAAAQ,sBAAA,oBAAAR,OAAA;AAAA,IAAAS,uBAAA,oBAAAT,OAAA;AAAA,IAAAU,iBAAA,oBAAAC,OAAA;AAW3C,MAAaC,UAAW,SAAQvB,iBAAA,CAAAwB,YAA6B;EA4B3DC,YACEC,aAA4B,EAC5BC,aAA4B,EAC5BC,gBAA2B,EAC3BC,YAAoB,EACpBC,oBAAyC,EACzCC,OAAuB,EACvBC,MAAmC,EACnCC,MAAiB;IAEjB,KAAK,EAAE;IAACxC,2BAAA,OAAA4B,iBAAA;IAAAzB,0BAAA,OAAAc,aAAA;IAAAd,0BAAA,OAAAgB,UAAA;IAAAhB,0BAAA,OAAAiB,iBAAA;IAAAjB,0BAAA,OAAAkB,aAAA;IAAAlB,0BAAA,OAAAmB,uBAAA,EAhCgB,IAAIV,2BAAA,CAAA6B,sBAAsB,EAAE;IAAAtC,0BAAA,OAAAoB,aAAA,EACtC,IAAIR,iBAAA,CAAA2B,YAAY,EAAE;IAAAvC,0BAAA,OAAAqB,qBAAA,EACV,IAAIV,yBAAA,CAAA6B,oBAAoB,EAAE;IAAAxC,0BAAA,OAAAsB,OAAA;IAAAtB,0BAAA,OAAAuB,sBAAA,EAIxBkB,OAA6B,IAAI;MACzD,KAAKtC,qBAAA,CAAAc,iBAAA,MAAI,EAAmByB,cAAc,CAACD,OAAO,CAAC,CAACE,KAAK,CAAEC,KAAK,IAAI;QAClEzC,qBAAA,CAAAmB,OAAA,MAAI,GAAAuB,IAAA,CAAJ,IAAI,EAAWxC,QAAA,CAAAyC,OAAO,CAACC,UAAU,EAAEH,KAAK;MAC1C,CAAC,CAAC;IACJ,CAAC;IAAA5C,0BAAA,OAAAwB,uBAAA,EAEyB,MAAOwB,YAA6B,IAAI;MAChE,MAAMP,OAAO,GAAGO,YAAY,CAACP,OAAO;MAEpC,IAAIO,YAAY,CAACC,OAAO,KAAK,IAAI,EAAE;QACjCR,OAAO,CAAC,SAAS,CAAC,GAAGO,YAAY,CAACC,OAAO;MAC3C;MAEA,MAAM9C,qBAAA,CAAAa,UAAA,MAAI,EAAYkC,WAAW,CAACT,OAAO,CAAC;IAC5C,CAAC;IAaCvC,qBAAA,CAAAoB,OAAA,MAAI,EAAWe,MAAM;IACrBnC,qBAAA,CAAAY,aAAA,MAAI,EAAiB,IAAIR,oBAAA,CAAA6C,eAAe,CAAAhD,qBAAA,CAAAqB,uBAAA,EACtC,IAAI,GAAArB,qBAAA,CAAAmB,OAAA,EACJ,IAAI,CAAQ,CACb;IACDpB,qBAAA,CAAAc,UAAA,MAAI,EAAcc,aAAa;IAC/B3B,qBAAA,CAAAa,UAAA,MAAI,EAAYoC,YAAY,CAAAjD,qBAAA,CAAAoB,sBAAA,EAAC,IAAI,CAAuB,CAAC;IACzDrB,qBAAA,CAAAgB,aAAA,MAAI,EAAiB,IAAIL,iBAAA,CAAAwC,YAAY,CAAAlD,qBAAA,CAAAgB,uBAAA,EAAC,IAAI,CAAwB,CAAC;IACnE,MAAMmC,cAAc,GAAG,IAAI5C,mBAAA,CAAA6C,cAAc,CAAApD,qBAAA,CAAAe,aAAA,EACvC,IAAI,GACJc,gBAAgB,EAChBK,MAAM,CACP;IACD,IAAI7B,qBAAA,CAAAgD,gBAAgB,CAClBzB,aAAa,EACbC,gBAAgB,EAChBC,YAAY,EAAA9B,qBAAA,CAAAe,aAAA,EACZ,IAAI,GAAAf,qBAAA,CAAAgB,uBAAA,EACJ,IAAI,GAAAhB,qBAAA,CAAAiB,aAAA,EACJ,IAAI,GACJkC,cAAc,EAAAnD,qBAAA,CAAAkB,qBAAA,EACd,IAAI,GACJc,OAAO,EAAEsB,mBAAmB,IAAI,KAAK,EACrCvB,oBAAoB,EACpBG,MAAM,CACP;IACDnC,qBAAA,CAAAe,iBAAA,MAAI,EAAqB,IAAIV,qBAAA,CAAAmD,gBAAgB,CAC3C3B,aAAa,EACbC,gBAAgB,EAAA7B,qBAAA,CAAAe,aAAA,EAChB,IAAI,GAAAf,qBAAA,CAAAgB,uBAAA,EACJ,IAAI,GAAAhB,qBAAA,CAAAiB,aAAA,EACJ,IAAI,GAAAjB,qBAAA,CAAAkB,qBAAA,EACJ,IAAI,GACJiC,cAAc,EACdlB,MAAM,EAAAjC,qBAAA,CAAAmB,OAAA,EACN,IAAI,CAAQ,CACb;IACDnB,qBAAA,CAAAe,aAAA,MAAI,EAAeyC,EAAE,yCAA2B,CAAC;MAAClB,OAAO;MAAEmB;IAAK,CAAC,KAAI;MACnE,IAAI,CAACC,mBAAmB,CAACpB,OAAO,EAAEmB,KAAK,CAAC;IAC1C,CAAC,CAAC;IACFzD,qBAAA,CAAAc,iBAAA,MAAI,EAAmB0C,EAAE,mDAEvB,CAAC;MAAClB,OAAO;MAAEmB;IAAK,CAAC,KAAI;MACnB,IAAI,CAACC,mBAAmB,CAACpB,OAAO,EAAEmB,KAAK,CAAC;IAC1C,CAAC,CACF;EACH;EAEA;;;EAGA,aAAaE,cAAcA,CACzBhC,aAA4B,EAC5BC,aAA4B,EAC5BC,gBAA2B,EAC3BC,YAAoB,EACpBE,OAAuB,EACvBC,MAAmC,EACnCC,MAAiB;IAEjB;IACA;IACA;IACA;IACA,MAAM,CAAC;MAAC0B;IAAiB,CAAC,EAAE;MAACC;IAAW,CAAC,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC7DlC,gBAAgB,CAACmC,WAAW,CAAC,2BAA2B,CAAC,EACzDnC,gBAAgB,CAACmC,WAAW,CAAC,mBAAmB,CAAC,CAClD,CAAC;IACF,IAAIjC,oBAAoB,GAAG,SAAS;IACpC,KAAK,MAAMkC,IAAI,IAAIJ,WAAW,EAAE;MAC9B,IACEI,IAAI,CAACC,gBAAgB,IACrB,CAACN,iBAAiB,CAACO,QAAQ,CAACF,IAAI,CAACC,gBAAgB,CAAC,EAClD;QACAnC,oBAAoB,GAAGkC,IAAI,CAACC,gBAAgB;QAC5C;MACF;IACF;IAEA,MAAME,MAAM,GAAG,IAAI5C,UAAU,CAC3BG,aAAa,EACbC,aAAa,EACbC,gBAAgB,EAChBC,YAAY,EACZC,oBAAoB,EACpBC,OAAO,EACPC,MAAM,EACNC,MAAM,CACP;IACD;IACA,MAAML,gBAAgB,CAACmC,WAAW,CAAC,2BAA2B,EAAE;MAC9DK,QAAQ,EAAE;KACX,CAAC;IAEF;IACA,MAAMxC,gBAAgB,CAACmC,WAAW,CAAC,sBAAsB,EAAE;MACzDM,UAAU,EAAE,IAAI;MAChBC,sBAAsB,EAAE,IAAI;MAC5BC,OAAO,EAAE;KACV,CAAC;IAEF,MAAA1E,iBAAA,CAAAwB,iBAAA,EAAM8C,MAAM,EAAAK,uBAAA,EAAA/B,IAAA,CAAN0B,MAAM,CAA0B;IACtC,OAAOA,MAAM;EACf;EAEA;;;EAGAV,mBAAmBA,CACjBb,YAA8C,EAC9CY,KAAa;IAEbzD,qBAAA,CAAAW,aAAA,MAAI,EAAe+D,GAAG,CAAC7B,YAAY,EAAEY,KAAK,CAAC;EAC7C;EAEAkB,KAAKA,CAAA;IACH3E,qBAAA,CAAAa,UAAA,MAAI,EAAY8D,KAAK,EAAE;EACzB;;AASD,eAAAF,wBAAA,EAP8B;EAC3B,MAAMX,OAAO,CAACC,GAAG,CACf/D,qBAAA,CAAAgB,uBAAA,MAAI,EACD4D,mBAAmB,EAAE,CACrBC,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,eAAe,EAAE,CAAC,CACnC;AACH;AApKFC,OAAA,CAAAxD,UAAA,GAAAA,UAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}