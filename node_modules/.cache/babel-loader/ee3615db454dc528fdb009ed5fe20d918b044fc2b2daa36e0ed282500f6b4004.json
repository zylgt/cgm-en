{"ast":null,"code":"import _classPrivateMethodInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateMethodInitSpec.js\";\nimport _classPrivateFieldInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _defineProperty from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classPrivateFieldSet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\nimport _assertClassBrand from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/assertClassBrand.js\";\nimport _classPrivateFieldGet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\nimport \"core-js/modules/es.array.push.js\";\n/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __runInitializers = this && this.__runInitializers || function (thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n    value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\nvar __esDecorate = this && this.__esDecorate || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) {\n    if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n    return f;\n  }\n  var kind = contextIn.kind,\n    key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _,\n    done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n    var context = {};\n    for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n    for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n    context.addInitializer = function (f) {\n      if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n      extraInitializers.push(accept(f || null));\n    };\n    var result = (0, decorators[i])(kind === \"accessor\" ? {\n      get: descriptor.get,\n      set: descriptor.set\n    } : descriptor[key], context);\n    if (kind === \"accessor\") {\n      if (result === void 0) continue;\n      if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n      if (_ = accept(result.get)) descriptor.get = _;\n      if (_ = accept(result.set)) descriptor.set = _;\n      if (_ = accept(result.init)) initializers.unshift(_);\n    } else if (_ = accept(result)) {\n      if (kind === \"field\") initializers.unshift(_);else descriptor[key] = _;\n    }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\nvar __addDisposableResource = this && this.__addDisposableResource || function (env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({\n      value: value,\n      dispose: dispose,\n      async: async\n    });\n  } else if (async) {\n    env.stack.push({\n      async: true\n    });\n  }\n  return value;\n};\nvar __disposeResources = this && this.__disposeResources || function (SuppressedError) {\n  return function (env) {\n    function fail(e) {\n      env.error = env.hasError ? new SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n      env.hasError = true;\n    }\n    function next() {\n      while (env.stack.length) {\n        var rec = env.stack.pop();\n        try {\n          var result = rec.dispose && rec.dispose.call(rec.value);\n          if (rec.async) return Promise.resolve(result).then(next, function (e) {\n            fail(e);\n            return next();\n          });\n        } catch (e) {\n          fail(e);\n        }\n      }\n      if (env.hasError) throw env.error;\n    }\n    return next();\n  };\n}(typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n});\nimport { concat, EMPTY, filter, first, firstValueFrom, from, map, merge, mergeMap, mergeScan, of, raceWith, ReplaySubject, startWith, switchMap, take, takeUntil, timer } from '../../third_party/rxjs/rxjs.js';\nimport { TargetCloseError } from '../common/Errors.js';\nimport { EventEmitter } from '../common/EventEmitter.js';\nimport { TimeoutSettings } from '../common/TimeoutSettings.js';\nimport { debugError, fromEmitterEvent, filterAsync, importFSPromises, isString, NETWORK_IDLE_TIME, timeout, withSourcePuppeteerURLIfNone } from '../common/util.js';\nimport { guarded } from '../util/decorators.js';\nimport { AsyncDisposableStack, asyncDisposeSymbol, DisposableStack, disposeSymbol } from '../util/disposable.js';\nimport { FunctionLocator, Locator, NodeLocator } from './locators/locators.js';\n/**\n * @internal\n */\nexport function setDefaultScreenshotOptions(options) {\n  options.optimizeForSpeed ??= false;\n  options.type ??= 'png';\n  options.fromSurface ??= true;\n  options.fullPage ??= false;\n  options.omitBackground ??= false;\n  options.encoding ??= 'binary';\n  options.captureBeyondViewport ??= true;\n}\n/**\n * Page provides methods to interact with a single tab or\n * {@link https://developer.chrome.com/extensions/background_pages | extension background page}\n * in the browser.\n *\n * :::note\n *\n * One Browser instance might have multiple Page instances.\n *\n * :::\n *\n * @example\n * This example creates a page, navigates it to a URL, and then saves a screenshot:\n *\n * ```ts\n * import puppeteer from 'puppeteer';\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://example.com');\n *   await page.screenshot({path: 'screenshot.png'});\n *   await browser.close();\n * })();\n * ```\n *\n * The Page class extends from Puppeteer's {@link EventEmitter} class and will\n * emit various events which are documented in the {@link PageEvent} enum.\n *\n * @example\n * This example logs a message for a single page `load` event:\n *\n * ```ts\n * page.once('load', () => console.log('Page loaded!'));\n * ```\n *\n * To unsubscribe from events use the {@link EventEmitter.off} method:\n *\n * ```ts\n * function logRequest(interceptedRequest) {\n *   console.log('A request was made:', interceptedRequest.url());\n * }\n * page.on('request', logRequest);\n * // Sometime later...\n * page.off('request', logRequest);\n * ```\n *\n * @public\n */\nlet Page = ((_ref, _Page, _requestHandlers, _inflight$, _screencastSessionCount, _startScreencastPromise, _Page_brand) => {\n  let _classSuper = EventEmitter;\n  let _instanceExtraInitializers = [];\n  let _screenshot_decorators;\n  return _requestHandlers = /*#__PURE__*/new WeakMap(), _inflight$ = /*#__PURE__*/new WeakMap(), _screencastSessionCount = /*#__PURE__*/new WeakMap(), _startScreencastPromise = /*#__PURE__*/new WeakMap(), _Page_brand = /*#__PURE__*/new WeakSet(), _ref = (_screenshot_decorators = [guarded(function () {\n    return this.browser();\n  })], disposeSymbol), (_Page = class Page extends _classSuper {\n    /**\n     * @internal\n     */\n    constructor() {\n      super();\n      /**\n       * Gets the native, non-emulated dimensions of the viewport.\n       */\n      _classPrivateMethodInitSpec(this, _Page_brand);\n      /**\n       * @internal\n       */\n      _defineProperty(this, \"_isDragging\", (__runInitializers(this, _instanceExtraInitializers), false));\n      /**\n       * @internal\n       */\n      _defineProperty(this, \"_timeoutSettings\", new TimeoutSettings());\n      _classPrivateFieldInitSpec(this, _requestHandlers, new WeakMap());\n      _classPrivateFieldInitSpec(this, _inflight$, new ReplaySubject(1));\n      _classPrivateFieldInitSpec(this, _screencastSessionCount, 0);\n      _classPrivateFieldInitSpec(this, _startScreencastPromise, void 0);\n      fromEmitterEvent(this, \"request\" /* PageEvent.Request */).pipe(mergeMap(originalRequest => {\n        return concat(of(1), merge(fromEmitterEvent(this, \"requestfailed\" /* PageEvent.RequestFailed */), fromEmitterEvent(this, \"requestfinished\" /* PageEvent.RequestFinished */), fromEmitterEvent(this, \"response\" /* PageEvent.Response */).pipe(map(response => {\n          return response.request();\n        }))).pipe(filter(request => {\n          return request.id === originalRequest.id;\n        }), take(1), map(() => {\n          return -1;\n        })));\n      }), mergeScan((acc, addend) => {\n        return of(acc + addend);\n      }, 0), takeUntil(fromEmitterEvent(this, \"close\" /* PageEvent.Close */)), startWith(0)).subscribe(_classPrivateFieldGet(_inflight$, this));\n    }\n    /**\n     * Listen to page events.\n     *\n     * @remarks\n     * This method exists to define event typings and handle proper wireup of\n     * cooperative request interception. Actual event listening and dispatching is\n     * delegated to {@link EventEmitter}.\n     *\n     * @internal\n     */\n    on(type, handler) {\n      if (type !== \"request\" /* PageEvent.Request */) {\n        return super.on(type, handler);\n      }\n      let wrapper = _classPrivateFieldGet(_requestHandlers, this).get(handler);\n      if (wrapper === undefined) {\n        wrapper = event => {\n          event.enqueueInterceptAction(() => {\n            return handler(event);\n          });\n        };\n        _classPrivateFieldGet(_requestHandlers, this).set(handler, wrapper);\n      }\n      return super.on(type, wrapper);\n    }\n    /**\n     * @internal\n     */\n    off(type, handler) {\n      if (type === \"request\" /* PageEvent.Request */) {\n        handler = _classPrivateFieldGet(_requestHandlers, this).get(handler) || handler;\n      }\n      return super.off(type, handler);\n    }\n    locator(selectorOrFunc) {\n      if (typeof selectorOrFunc === 'string') {\n        return NodeLocator.create(this, selectorOrFunc);\n      } else {\n        return FunctionLocator.create(this, selectorOrFunc);\n      }\n    }\n    /**\n     * A shortcut for {@link Locator.race} that does not require static imports.\n     *\n     * @internal\n     */\n    locatorRace(locators) {\n      return Locator.race(locators);\n    }\n    /**\n     * Runs `document.querySelector` within the page. If no element matches the\n     * selector, the return value resolves to `null`.\n     *\n     * @param selector - A `selector` to query page for\n     * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n     * to query page for.\n     */\n    async $(selector) {\n      return await this.mainFrame().$(selector);\n    }\n    /**\n     * The method runs `document.querySelectorAll` within the page. If no elements\n     * match the selector, the return value resolves to `[]`.\n     *\n     * @param selector - A `selector` to query page for\n     *\n     * @remarks\n     *\n     * Shortcut for {@link Frame.$$ | Page.mainFrame().$$(selector) }.\n     */\n    async $$(selector) {\n      return await this.mainFrame().$$(selector);\n    }\n    /**\n     * @remarks\n     *\n     * The only difference between {@link Page.evaluate | page.evaluate} and\n     * `page.evaluateHandle` is that `evaluateHandle` will return the value\n     * wrapped in an in-page object.\n     *\n     * If the function passed to `page.evaluateHandle` returns a Promise, the\n     * function will wait for the promise to resolve and return its value.\n     *\n     * You can pass a string instead of a function (although functions are\n     * recommended as they are easier to debug and use with TypeScript):\n     *\n     * @example\n     *\n     * ```ts\n     * const aHandle = await page.evaluateHandle('document');\n     * ```\n     *\n     * @example\n     * {@link JSHandle} instances can be passed as arguments to the `pageFunction`:\n     *\n     * ```ts\n     * const aHandle = await page.evaluateHandle(() => document.body);\n     * const resultHandle = await page.evaluateHandle(\n     *   body => body.innerHTML,\n     *   aHandle\n     * );\n     * console.log(await resultHandle.jsonValue());\n     * await resultHandle.dispose();\n     * ```\n     *\n     * Most of the time this function returns a {@link JSHandle},\n     * but if `pageFunction` returns a reference to an element,\n     * you instead get an {@link ElementHandle} back:\n     *\n     * @example\n     *\n     * ```ts\n     * const button = await page.evaluateHandle(() =>\n     *   document.querySelector('button')\n     * );\n     * // can call `click` because `button` is an `ElementHandle`\n     * await button.click();\n     * ```\n     *\n     * The TypeScript definitions assume that `evaluateHandle` returns\n     * a `JSHandle`, but if you know it's going to return an\n     * `ElementHandle`, pass it as the generic argument:\n     *\n     * ```ts\n     * const button = await page.evaluateHandle<ElementHandle>(...);\n     * ```\n     *\n     * @param pageFunction - a function that is run within the page\n     * @param args - arguments to be passed to the pageFunction\n     */\n    async evaluateHandle(pageFunction, ...args) {\n      pageFunction = withSourcePuppeteerURLIfNone(this.evaluateHandle.name, pageFunction);\n      return await this.mainFrame().evaluateHandle(pageFunction, ...args);\n    }\n    /**\n     * This method runs `document.querySelector` within the page and passes the\n     * result as the first argument to the `pageFunction`.\n     *\n     * @remarks\n     *\n     * If no element is found matching `selector`, the method will throw an error.\n     *\n     * If `pageFunction` returns a promise `$eval` will wait for the promise to\n     * resolve and then return its value.\n     *\n     * @example\n     *\n     * ```ts\n     * const searchValue = await page.$eval('#search', el => el.value);\n     * const preloadHref = await page.$eval('link[rel=preload]', el => el.href);\n     * const html = await page.$eval('.main-container', el => el.outerHTML);\n     * ```\n     *\n     * If you are using TypeScript, you may have to provide an explicit type to the\n     * first argument of the `pageFunction`.\n     * By default it is typed as `Element`, but you may need to provide a more\n     * specific sub-type:\n     *\n     * @example\n     *\n     * ```ts\n     * // if you don't provide HTMLInputElement here, TS will error\n     * // as `value` is not on `Element`\n     * const searchValue = await page.$eval(\n     *   '#search',\n     *   (el: HTMLInputElement) => el.value\n     * );\n     * ```\n     *\n     * The compiler should be able to infer the return type\n     * from the `pageFunction` you provide. If it is unable to, you can use the generic\n     * type to tell the compiler what return type you expect from `$eval`:\n     *\n     * @example\n     *\n     * ```ts\n     * // The compiler can infer the return type in this case, but if it can't\n     * // or if you want to be more explicit, provide it as the generic type.\n     * const searchValue = await page.$eval<string>(\n     *   '#search',\n     *   (el: HTMLInputElement) => el.value\n     * );\n     * ```\n     *\n     * @param selector - the\n     * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n     * to query for\n     * @param pageFunction - the function to be evaluated in the page context.\n     * Will be passed the result of `document.querySelector(selector)` as its\n     * first argument.\n     * @param args - any additional arguments to pass through to `pageFunction`.\n     *\n     * @returns The result of calling `pageFunction`. If it returns an element it\n     * is wrapped in an {@link ElementHandle}, else the raw value itself is\n     * returned.\n     */\n    async $eval(selector, pageFunction, ...args) {\n      pageFunction = withSourcePuppeteerURLIfNone(this.$eval.name, pageFunction);\n      return await this.mainFrame().$eval(selector, pageFunction, ...args);\n    }\n    /**\n     * This method runs `Array.from(document.querySelectorAll(selector))` within\n     * the page and passes the result as the first argument to the `pageFunction`.\n     *\n     * @remarks\n     * If `pageFunction` returns a promise `$$eval` will wait for the promise to\n     * resolve and then return its value.\n     *\n     * @example\n     *\n     * ```ts\n     * // get the amount of divs on the page\n     * const divCount = await page.$$eval('div', divs => divs.length);\n     *\n     * // get the text content of all the `.options` elements:\n     * const options = await page.$$eval('div > span.options', options => {\n     *   return options.map(option => option.textContent);\n     * });\n     * ```\n     *\n     * If you are using TypeScript, you may have to provide an explicit type to the\n     * first argument of the `pageFunction`.\n     * By default it is typed as `Element[]`, but you may need to provide a more\n     * specific sub-type:\n     *\n     * @example\n     *\n     * ```ts\n     * await page.$$eval('input', elements => {\n     *   return elements.map(e => e.value);\n     * });\n     * ```\n     *\n     * The compiler should be able to infer the return type\n     * from the `pageFunction` you provide. If it is unable to, you can use the generic\n     * type to tell the compiler what return type you expect from `$$eval`:\n     *\n     * @example\n     *\n     * ```ts\n     * const allInputValues = await page.$$eval('input', elements =>\n     *   elements.map(e => e.textContent)\n     * );\n     * ```\n     *\n     * @param selector - the\n     * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n     * to query for\n     * @param pageFunction - the function to be evaluated in the page context.\n     * Will be passed the result of\n     * `Array.from(document.querySelectorAll(selector))` as its first argument.\n     * @param args - any additional arguments to pass through to `pageFunction`.\n     *\n     * @returns The result of calling `pageFunction`. If it returns an element it\n     * is wrapped in an {@link ElementHandle}, else the raw value itself is\n     * returned.\n     */\n    async $$eval(selector, pageFunction, ...args) {\n      pageFunction = withSourcePuppeteerURLIfNone(this.$$eval.name, pageFunction);\n      return await this.mainFrame().$$eval(selector, pageFunction, ...args);\n    }\n    /**\n     * Adds a `<script>` tag into the page with the desired URL or content.\n     *\n     * @remarks\n     * Shortcut for\n     * {@link Frame.addScriptTag | page.mainFrame().addScriptTag(options)}.\n     *\n     * @param options - Options for the script.\n     * @returns An {@link ElementHandle | element handle} to the injected\n     * `<script>` element.\n     */\n    async addScriptTag(options) {\n      return await this.mainFrame().addScriptTag(options);\n    }\n    async addStyleTag(options) {\n      return await this.mainFrame().addStyleTag(options);\n    }\n    /**\n     * The page's URL.\n     *\n     * @remarks\n     *\n     * Shortcut for {@link Frame.url | page.mainFrame().url()}.\n     */\n    url() {\n      return this.mainFrame().url();\n    }\n    /**\n     * The full HTML contents of the page, including the DOCTYPE.\n     */\n    async content() {\n      return await this.mainFrame().content();\n    }\n    /**\n     * Set the content of the page.\n     *\n     * @param html - HTML markup to assign to the page.\n     * @param options - Parameters that has some properties.\n     *\n     * @remarks\n     *\n     * The parameter `options` might have the following options.\n     *\n     * - `timeout` : Maximum time in milliseconds for resources to load, defaults\n     *   to 30 seconds, pass `0` to disable timeout. The default value can be\n     *   changed by using the {@link Page.setDefaultNavigationTimeout} or\n     *   {@link Page.setDefaultTimeout} methods.\n     *\n     * - `waitUntil`: When to consider setting markup succeeded, defaults to\n     *   `load`. Given an array of event strings, setting content is considered\n     *   to be successful after all events have been fired. Events can be\n     *   either:<br/>\n     * - `load` : consider setting content to be finished when the `load` event\n     *   is fired.<br/>\n     * - `domcontentloaded` : consider setting content to be finished when the\n     *   `DOMContentLoaded` event is fired.<br/>\n     * - `networkidle0` : consider setting content to be finished when there are\n     *   no more than 0 network connections for at least `500` ms.<br/>\n     * - `networkidle2` : consider setting content to be finished when there are\n     *   no more than 2 network connections for at least `500` ms.\n     */\n    async setContent(html, options) {\n      await this.mainFrame().setContent(html, options);\n    }\n    /**\n     * Navigates the page to the given `url`.\n     *\n     * @remarks\n     *\n     * Navigation to `about:blank` or navigation to the same URL with a different\n     * hash will succeed and return `null`.\n     *\n     * :::warning\n     *\n     * Headless mode doesn't support navigation to a PDF document. See the {@link\n     * https://bugs.chromium.org/p/chromium/issues/detail?id=761295 | upstream\n     * issue}.\n     *\n     * :::\n     *\n     * Shortcut for {@link Frame.goto | page.mainFrame().goto(url, options)}.\n     *\n     * @param url - URL to navigate page to. The URL should include scheme, e.g.\n     * `https://`\n     * @param options - Options to configure waiting behavior.\n     * @returns A promise which resolves to the main resource response. In case of\n     * multiple redirects, the navigation will resolve with the response of the\n     * last redirect.\n     * @throws If:\n     *\n     * - there's an SSL error (e.g. in case of self-signed certificates).\n     * - target URL is invalid.\n     * - the timeout is exceeded during navigation.\n     * - the remote server does not respond or is unreachable.\n     * - the main resource failed to load.\n     *\n     * This method will not throw an error when any valid HTTP status code is\n     * returned by the remote server, including 404 \"Not Found\" and 500 \"Internal\n     * Server Error\". The status code for such responses can be retrieved by\n     * calling {@link HTTPResponse.status}.\n     */\n    async goto(url, options) {\n      return await this.mainFrame().goto(url, options);\n    }\n    /**\n     * Waits for the page to navigate to a new URL or to reload. It is useful when\n     * you run code that will indirectly cause the page to navigate.\n     *\n     * @example\n     *\n     * ```ts\n     * const [response] = await Promise.all([\n     *   page.waitForNavigation(), // The promise resolves after navigation has finished\n     *   page.click('a.my-link'), // Clicking the link will indirectly cause a navigation\n     * ]);\n     * ```\n     *\n     * @remarks\n     *\n     * Usage of the\n     * {@link https://developer.mozilla.org/en-US/docs/Web/API/History_API | History API}\n     * to change the URL is considered a navigation.\n     *\n     * @param options - Navigation parameters which might have the following\n     * properties:\n     * @returns A `Promise` which resolves to the main resource response.\n     *\n     * - In case of multiple redirects, the navigation will resolve with the\n     *   response of the last redirect.\n     * - In case of navigation to a different anchor or navigation due to History\n     *   API usage, the navigation will resolve with `null`.\n     */\n    async waitForNavigation(options = {}) {\n      return await this.mainFrame().waitForNavigation(options);\n    }\n    /**\n     * @param urlOrPredicate - A URL or predicate to wait for\n     * @param options - Optional waiting parameters\n     * @returns Promise which resolves to the matched request\n     * @example\n     *\n     * ```ts\n     * const firstRequest = await page.waitForRequest(\n     *   'https://example.com/resource'\n     * );\n     * const finalRequest = await page.waitForRequest(\n     *   request => request.url() === 'https://example.com'\n     * );\n     * return finalRequest.response()?.ok();\n     * ```\n     *\n     * @remarks\n     * Optional Waiting Parameters have:\n     *\n     * - `timeout`: Maximum wait time in milliseconds, defaults to `30` seconds, pass\n     *   `0` to disable the timeout. The default value can be changed by using the\n     *   {@link Page.setDefaultTimeout} method.\n     */\n    waitForRequest(urlOrPredicate, options = {}) {\n      const {\n        timeout: ms = this._timeoutSettings.timeout()\n      } = options;\n      if (typeof urlOrPredicate === 'string') {\n        const url = urlOrPredicate;\n        urlOrPredicate = request => {\n          return request.url() === url;\n        };\n      }\n      const observable$ = fromEmitterEvent(this, \"request\" /* PageEvent.Request */).pipe(filterAsync(urlOrPredicate), raceWith(timeout(ms), fromEmitterEvent(this, \"close\" /* PageEvent.Close */).pipe(map(() => {\n        throw new TargetCloseError('Page closed!');\n      }))));\n      return firstValueFrom(observable$);\n    }\n    /**\n     * @param urlOrPredicate - A URL or predicate to wait for.\n     * @param options - Optional waiting parameters\n     * @returns Promise which resolves to the matched response.\n     * @example\n     *\n     * ```ts\n     * const firstResponse = await page.waitForResponse(\n     *   'https://example.com/resource'\n     * );\n     * const finalResponse = await page.waitForResponse(\n     *   response =>\n     *     response.url() === 'https://example.com' && response.status() === 200\n     * );\n     * const finalResponse = await page.waitForResponse(async response => {\n     *   return (await response.text()).includes('<html>');\n     * });\n     * return finalResponse.ok();\n     * ```\n     *\n     * @remarks\n     * Optional Parameter have:\n     *\n     * - `timeout`: Maximum wait time in milliseconds, defaults to `30` seconds,\n     *   pass `0` to disable the timeout. The default value can be changed by using\n     *   the {@link Page.setDefaultTimeout} method.\n     */\n    waitForResponse(urlOrPredicate, options = {}) {\n      const {\n        timeout: ms = this._timeoutSettings.timeout()\n      } = options;\n      if (typeof urlOrPredicate === 'string') {\n        const url = urlOrPredicate;\n        urlOrPredicate = response => {\n          return response.url() === url;\n        };\n      }\n      const observable$ = fromEmitterEvent(this, \"response\" /* PageEvent.Response */).pipe(filterAsync(urlOrPredicate), raceWith(timeout(ms), fromEmitterEvent(this, \"close\" /* PageEvent.Close */).pipe(map(() => {\n        throw new TargetCloseError('Page closed!');\n      }))));\n      return firstValueFrom(observable$);\n    }\n    /**\n     * Waits for the network to be idle.\n     *\n     * @param options - Options to configure waiting behavior.\n     * @returns A promise which resolves once the network is idle.\n     */\n    waitForNetworkIdle(options = {}) {\n      return firstValueFrom(this.waitForNetworkIdle$(options));\n    }\n    /**\n     * @internal\n     */\n    waitForNetworkIdle$(options = {}) {\n      const {\n        timeout: ms = this._timeoutSettings.timeout(),\n        idleTime = NETWORK_IDLE_TIME,\n        concurrency = 0\n      } = options;\n      return _classPrivateFieldGet(_inflight$, this).pipe(switchMap(inflight => {\n        if (inflight > concurrency) {\n          return EMPTY;\n        }\n        return timer(idleTime);\n      }), map(() => {}), raceWith(timeout(ms), fromEmitterEvent(this, \"close\" /* PageEvent.Close */).pipe(map(() => {\n        throw new TargetCloseError('Page closed!');\n      }))));\n    }\n    /**\n     * Waits for a frame matching the given conditions to appear.\n     *\n     * @example\n     *\n     * ```ts\n     * const frame = await page.waitForFrame(async frame => {\n     *   return frame.name() === 'Test';\n     * });\n     * ```\n     */\n    async waitForFrame(urlOrPredicate, options = {}) {\n      const {\n        timeout: ms = this.getDefaultTimeout()\n      } = options;\n      if (isString(urlOrPredicate)) {\n        urlOrPredicate = frame => {\n          return urlOrPredicate === frame.url();\n        };\n      }\n      return await firstValueFrom(merge(fromEmitterEvent(this, \"frameattached\" /* PageEvent.FrameAttached */), fromEmitterEvent(this, \"framenavigated\" /* PageEvent.FrameNavigated */), from(this.frames())).pipe(filterAsync(urlOrPredicate), first(), raceWith(timeout(ms), fromEmitterEvent(this, \"close\" /* PageEvent.Close */).pipe(map(() => {\n        throw new TargetCloseError('Page closed.');\n      })))));\n    }\n    /**\n     * Emulates a given device's metrics and user agent.\n     *\n     * To aid emulation, Puppeteer provides a list of known devices that can be\n     * via {@link KnownDevices}.\n     *\n     * @remarks\n     * This method is a shortcut for calling two methods:\n     * {@link Page.setUserAgent} and {@link Page.setViewport}.\n     *\n     * This method will resize the page. A lot of websites don't expect phones to\n     * change size, so you should emulate before navigating to the page.\n     *\n     * @example\n     *\n     * ```ts\n     * import {KnownDevices} from 'puppeteer';\n     * const iPhone = KnownDevices['iPhone 6'];\n     *\n     * (async () => {\n     *   const browser = await puppeteer.launch();\n     *   const page = await browser.newPage();\n     *   await page.emulate(iPhone);\n     *   await page.goto('https://www.google.com');\n     *   // other actions...\n     *   await browser.close();\n     * })();\n     * ```\n     */\n    async emulate(device) {\n      await Promise.all([this.setUserAgent(device.userAgent), this.setViewport(device.viewport)]);\n    }\n    /**\n     * Evaluates a function in the page's context and returns the result.\n     *\n     * If the function passed to `page.evaluate` returns a Promise, the\n     * function will wait for the promise to resolve and return its value.\n     *\n     * @example\n     *\n     * ```ts\n     * const result = await frame.evaluate(() => {\n     *   return Promise.resolve(8 * 7);\n     * });\n     * console.log(result); // prints \"56\"\n     * ```\n     *\n     * You can pass a string instead of a function (although functions are\n     * recommended as they are easier to debug and use with TypeScript):\n     *\n     * @example\n     *\n     * ```ts\n     * const aHandle = await page.evaluate('1 + 2');\n     * ```\n     *\n     * To get the best TypeScript experience, you should pass in as the\n     * generic the type of `pageFunction`:\n     *\n     * ```ts\n     * const aHandle = await page.evaluate(() => 2);\n     * ```\n     *\n     * @example\n     *\n     * {@link ElementHandle} instances (including {@link JSHandle}s) can be passed\n     * as arguments to the `pageFunction`:\n     *\n     * ```ts\n     * const bodyHandle = await page.$('body');\n     * const html = await page.evaluate(body => body.innerHTML, bodyHandle);\n     * await bodyHandle.dispose();\n     * ```\n     *\n     * @param pageFunction - a function that is run within the page\n     * @param args - arguments to be passed to the pageFunction\n     *\n     * @returns the return value of `pageFunction`.\n     */\n    async evaluate(pageFunction, ...args) {\n      pageFunction = withSourcePuppeteerURLIfNone(this.evaluate.name, pageFunction);\n      return await this.mainFrame().evaluate(pageFunction, ...args);\n    }\n    /**\n     * @internal\n     */\n    async _maybeWriteBufferToFile(path, buffer) {\n      if (!path) {\n        return;\n      }\n      const fs = await importFSPromises();\n      await fs.writeFile(path, buffer);\n    }\n    /**\n     * Captures a screencast of this {@link Page | page}.\n     *\n     * @example\n     * Recording a {@link Page | page}:\n     *\n     * ```\n     * import puppeteer from 'puppeteer';\n     *\n     * // Launch a browser\n     * const browser = await puppeteer.launch();\n     *\n     * // Create a new page\n     * const page = await browser.newPage();\n     *\n     * // Go to your site.\n     * await page.goto(\"https://www.example.com\");\n     *\n     * // Start recording.\n     * const recorder = await page.screencast({path: 'recording.webm'});\n     *\n     * // Do something.\n     *\n     * // Stop recording.\n     * await recorder.stop();\n     *\n     * browser.close();\n     * ```\n     *\n     * @param options - Configures screencast behavior.\n     *\n     * @experimental\n     *\n     * @remarks\n     *\n     * All recordings will be {@link https://www.webmproject.org/ | WebM} format using\n     * the {@link https://www.webmproject.org/vp9/ | VP9} video codec. The FPS is 30.\n     *\n     * You must have {@link https://ffmpeg.org/ | ffmpeg} installed on your system.\n     */\n    async screencast(options = {}) {\n      const [{\n        ScreenRecorder\n      }, [width, height, devicePixelRatio]] = await Promise.all([import('../node/ScreenRecorder.js'), _assertClassBrand(_Page_brand, this, _getNativePixelDimensions).call(this)]);\n      let crop;\n      if (options.crop) {\n        const {\n          x,\n          y,\n          width: cropWidth,\n          height: cropHeight\n        } = roundRectangle(normalizeRectangle(options.crop));\n        if (x < 0 || y < 0) {\n          throw new Error(`\\`crop.x\\` and \\`crop.y\\` must be greater than or equal to 0.`);\n        }\n        if (cropWidth <= 0 || cropHeight <= 0) {\n          throw new Error(`\\`crop.height\\` and \\`crop.width\\` must be greater than or equal to 0.`);\n        }\n        const viewportWidth = width / devicePixelRatio;\n        const viewportHeight = height / devicePixelRatio;\n        if (x + cropWidth > viewportWidth) {\n          throw new Error(`\\`crop.width\\` cannot be larger than the viewport width (${viewportWidth}).`);\n        }\n        if (y + cropHeight > viewportHeight) {\n          throw new Error(`\\`crop.height\\` cannot be larger than the viewport height (${viewportHeight}).`);\n        }\n        crop = {\n          x: x * devicePixelRatio,\n          y: y * devicePixelRatio,\n          width: cropWidth * devicePixelRatio,\n          height: cropHeight * devicePixelRatio\n        };\n      }\n      if (options.speed !== undefined && options.speed <= 0) {\n        throw new Error(`\\`speed\\` must be greater than 0.`);\n      }\n      if (options.scale !== undefined && options.scale <= 0) {\n        throw new Error(`\\`scale\\` must be greater than 0.`);\n      }\n      const recorder = new ScreenRecorder(this, width, height, {\n        ...options,\n        path: options.ffmpegPath,\n        crop\n      });\n      try {\n        await this._startScreencast();\n      } catch (error) {\n        void recorder.stop();\n        throw error;\n      }\n      if (options.path) {\n        const {\n          createWriteStream\n        } = await import('fs');\n        const stream = createWriteStream(options.path, 'binary');\n        recorder.pipe(stream);\n      }\n      return recorder;\n    }\n    /**\n     * @internal\n     */\n    async _startScreencast() {\n      var _this$screencastSessi;\n      _classPrivateFieldSet(_screencastSessionCount, this, (_this$screencastSessi = _classPrivateFieldGet(_screencastSessionCount, this), ++_this$screencastSessi));\n      if (!_classPrivateFieldGet(_startScreencastPromise, this)) {\n        _classPrivateFieldSet(_startScreencastPromise, this, this.mainFrame().client.send('Page.startScreencast', {\n          format: 'png'\n        }).then(() => {\n          // Wait for the first frame.\n          return new Promise(resolve => {\n            return this.mainFrame().client.once('Page.screencastFrame', () => {\n              return resolve();\n            });\n          });\n        }));\n      }\n      await _classPrivateFieldGet(_startScreencastPromise, this);\n    }\n    /**\n     * @internal\n     */\n    async _stopScreencast() {\n      var _this$screencastSessi2;\n      _classPrivateFieldSet(_screencastSessionCount, this, (_this$screencastSessi2 = _classPrivateFieldGet(_screencastSessionCount, this), --_this$screencastSessi2));\n      if (!_classPrivateFieldGet(_startScreencastPromise, this)) {\n        return;\n      }\n      _classPrivateFieldSet(_startScreencastPromise, this, undefined);\n      if (_classPrivateFieldGet(_screencastSessionCount, this) === 0) {\n        await this.mainFrame().client.send('Page.stopScreencast');\n      }\n    }\n    async screenshot(userOptions = {}) {\n      const env_2 = {\n        stack: [],\n        error: void 0,\n        hasError: false\n      };\n      try {\n        await this.bringToFront();\n        // TODO: use structuredClone after Node 16 support is dropped.\n        const options = {\n          ...userOptions,\n          clip: userOptions.clip ? {\n            ...userOptions.clip\n          } : undefined\n        };\n        if (options.type === undefined && options.path !== undefined) {\n          const filePath = options.path;\n          // Note we cannot use Node.js here due to browser compatibility.\n          const extension = filePath.slice(filePath.lastIndexOf('.') + 1).toLowerCase();\n          switch (extension) {\n            case 'png':\n              options.type = 'png';\n              break;\n            case 'jpeg':\n            case 'jpg':\n              options.type = 'jpeg';\n              break;\n            case 'webp':\n              options.type = 'webp';\n              break;\n          }\n        }\n        if (options.quality !== undefined) {\n          if (options.quality < 0 && options.quality > 100) {\n            throw new Error(`Expected 'quality' (${options.quality}) to be between 0 and 100, inclusive.`);\n          }\n          if (options.type === undefined || !['jpeg', 'webp'].includes(options.type)) {\n            throw new Error(`${options.type ?? 'png'} screenshots do not support 'quality'.`);\n          }\n        }\n        if (options.clip) {\n          if (options.clip.width <= 0) {\n            throw new Error(\"'width' in 'clip' must be positive.\");\n          }\n          if (options.clip.height <= 0) {\n            throw new Error(\"'height' in 'clip' must be positive.\");\n          }\n        }\n        setDefaultScreenshotOptions(options);\n        const stack = __addDisposableResource(env_2, new AsyncDisposableStack(), true);\n        if (options.clip) {\n          if (options.fullPage) {\n            throw new Error(\"'clip' and 'fullPage' are mutually exclusive\");\n          }\n          options.clip = roundRectangle(normalizeRectangle(options.clip));\n        } else {\n          if (options.fullPage) {\n            // If `captureBeyondViewport` is `false`, then we set the viewport to\n            // capture the full page. Note this may be affected by on-page CSS and\n            // JavaScript.\n            if (!options.captureBeyondViewport) {\n              const scrollDimensions = await this.mainFrame().isolatedRealm().evaluate(() => {\n                const element = document.documentElement;\n                return {\n                  width: element.scrollWidth,\n                  height: element.scrollHeight\n                };\n              });\n              const viewport = this.viewport();\n              await this.setViewport({\n                ...viewport,\n                ...scrollDimensions\n              });\n              stack.defer(async () => {\n                if (viewport) {\n                  await this.setViewport(viewport).catch(debugError);\n                } else {\n                  await this.setViewport({\n                    width: 0,\n                    height: 0\n                  }).catch(debugError);\n                }\n              });\n            }\n          } else {\n            options.captureBeyondViewport = false;\n          }\n        }\n        const data = await this._screenshot(options);\n        if (options.encoding === 'base64') {\n          return data;\n        }\n        const buffer = Buffer.from(data, 'base64');\n        await this._maybeWriteBufferToFile(options.path, buffer);\n        return buffer;\n      } catch (e_2) {\n        env_2.error = e_2;\n        env_2.hasError = true;\n      } finally {\n        const result_1 = __disposeResources(env_2);\n        if (result_1) await result_1;\n      }\n    }\n    /**\n     * The page's title\n     *\n     * @remarks\n     *\n     * Shortcut for {@link Frame.title | page.mainFrame().title()}.\n     */\n    async title() {\n      return await this.mainFrame().title();\n    }\n    /**\n     * This method fetches an element with `selector`, scrolls it into view if\n     * needed, and then uses {@link Page.mouse} to click in the center of the\n     * element. If there's no element matching `selector`, the method throws an\n     * error.\n     *\n     * @remarks\n     *\n     * Bear in mind that if `click()` triggers a navigation event and\n     * there's a separate `page.waitForNavigation()` promise to be resolved, you\n     * may end up with a race condition that yields unexpected results. The\n     * correct pattern for click and wait for navigation is the following:\n     *\n     * ```ts\n     * const [response] = await Promise.all([\n     *   page.waitForNavigation(waitOptions),\n     *   page.click(selector, clickOptions),\n     * ]);\n     * ```\n     *\n     * Shortcut for {@link Frame.click | page.mainFrame().click(selector[, options]) }.\n     * @param selector - A `selector` to search for element to click. If there are\n     * multiple elements satisfying the `selector`, the first will be clicked\n     * @param options - `Object`\n     * @returns Promise which resolves when the element matching `selector` is\n     * successfully clicked. The Promise will be rejected if there is no element\n     * matching `selector`.\n     */\n    click(selector, options) {\n      return this.mainFrame().click(selector, options);\n    }\n    /**\n     * This method fetches an element with `selector` and focuses it. If there's no\n     * element matching `selector`, the method throws an error.\n     * @param selector - A\n     * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector }\n     * of an element to focus. If there are multiple elements satisfying the\n     * selector, the first will be focused.\n     * @returns Promise which resolves when the element matching selector is\n     * successfully focused. The promise will be rejected if there is no element\n     * matching selector.\n     *\n     * @remarks\n     *\n     * Shortcut for {@link Frame.focus | page.mainFrame().focus(selector)}.\n     */\n    focus(selector) {\n      return this.mainFrame().focus(selector);\n    }\n    /**\n     * This method fetches an element with `selector`, scrolls it into view if\n     * needed, and then uses {@link Page.mouse}\n     * to hover over the center of the element.\n     * If there's no element matching `selector`, the method throws an error.\n     * @param selector - A\n     * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n     * to search for element to hover. If there are multiple elements satisfying\n     * the selector, the first will be hovered.\n     * @returns Promise which resolves when the element matching `selector` is\n     * successfully hovered. Promise gets rejected if there's no element matching\n     * `selector`.\n     *\n     * @remarks\n     *\n     * Shortcut for {@link Page.hover | page.mainFrame().hover(selector)}.\n     */\n    hover(selector) {\n      return this.mainFrame().hover(selector);\n    }\n    /**\n     * Triggers a `change` and `input` event once all the provided options have been\n     * selected. If there's no `<select>` element matching `selector`, the method\n     * throws an error.\n     *\n     * @example\n     *\n     * ```ts\n     * page.select('select#colors', 'blue'); // single selection\n     * page.select('select#colors', 'red', 'green', 'blue'); // multiple selections\n     * ```\n     *\n     * @param selector - A\n     * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | Selector}\n     * to query the page for\n     * @param values - Values of options to select. If the `<select>` has the\n     * `multiple` attribute, all values are considered, otherwise only the first one\n     * is taken into account.\n     * @returns\n     *\n     * @remarks\n     *\n     * Shortcut for {@link Frame.select | page.mainFrame().select()}\n     */\n    select(selector, ...values) {\n      return this.mainFrame().select(selector, ...values);\n    }\n    /**\n     * This method fetches an element with `selector`, scrolls it into view if\n     * needed, and then uses {@link Page.touchscreen}\n     * to tap in the center of the element.\n     * If there's no element matching `selector`, the method throws an error.\n     * @param selector - A\n     * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | Selector}\n     * to search for element to tap. If there are multiple elements satisfying the\n     * selector, the first will be tapped.\n     *\n     * @remarks\n     *\n     * Shortcut for {@link Frame.tap | page.mainFrame().tap(selector)}.\n     */\n    tap(selector) {\n      return this.mainFrame().tap(selector);\n    }\n    /**\n     * Sends a `keydown`, `keypress/input`, and `keyup` event for each character\n     * in the text.\n     *\n     * To press a special key, like `Control` or `ArrowDown`, use {@link Keyboard.press}.\n     * @example\n     *\n     * ```ts\n     * await page.type('#mytextarea', 'Hello');\n     * // Types instantly\n     * await page.type('#mytextarea', 'World', {delay: 100});\n     * // Types slower, like a user\n     * ```\n     *\n     * @param selector - A\n     * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n     * of an element to type into. If there are multiple elements satisfying the\n     * selector, the first will be used.\n     * @param text - A text to type into a focused element.\n     * @param options - have property `delay` which is the Time to wait between\n     * key presses in milliseconds. Defaults to `0`.\n     * @returns\n     */\n    type(selector, text, options) {\n      return this.mainFrame().type(selector, text, options);\n    }\n    /**\n     * Wait for the `selector` to appear in page. If at the moment of calling the\n     * method the `selector` already exists, the method will return immediately. If\n     * the `selector` doesn't appear after the `timeout` milliseconds of waiting, the\n     * function will throw.\n     *\n     * @example\n     * This method works across navigations:\n     *\n     * ```ts\n     * import puppeteer from 'puppeteer';\n     * (async () => {\n     *   const browser = await puppeteer.launch();\n     *   const page = await browser.newPage();\n     *   let currentURL;\n     *   page\n     *     .waitForSelector('img')\n     *     .then(() => console.log('First URL with image: ' + currentURL));\n     *   for (currentURL of [\n     *     'https://example.com',\n     *     'https://google.com',\n     *     'https://bbc.com',\n     *   ]) {\n     *     await page.goto(currentURL);\n     *   }\n     *   await browser.close();\n     * })();\n     * ```\n     *\n     * @param selector - A\n     * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n     * of an element to wait for\n     * @param options - Optional waiting parameters\n     * @returns Promise which resolves when element specified by selector string\n     * is added to DOM. Resolves to `null` if waiting for hidden: `true` and\n     * selector is not found in DOM.\n     *\n     * @remarks\n     * The optional Parameter in Arguments `options` are:\n     *\n     * - `visible`: A boolean wait for element to be present in DOM and to be\n     *   visible, i.e. to not have `display: none` or `visibility: hidden` CSS\n     *   properties. Defaults to `false`.\n     *\n     * - `hidden`: Wait for element to not be found in the DOM or to be hidden,\n     *   i.e. have `display: none` or `visibility: hidden` CSS properties. Defaults to\n     *   `false`.\n     *\n     * - `timeout`: maximum time to wait for in milliseconds. Defaults to `30000`\n     *   (30 seconds). Pass `0` to disable timeout. The default value can be changed\n     *   by using the {@link Page.setDefaultTimeout} method.\n     */\n    async waitForSelector(selector, options = {}) {\n      return await this.mainFrame().waitForSelector(selector, options);\n    }\n    /**\n     * Waits for the provided function, `pageFunction`, to return a truthy value when\n     * evaluated in the page's context.\n     *\n     * @example\n     * {@link Page.waitForFunction} can be used to observe a viewport size change:\n     *\n     * ```ts\n     * import puppeteer from 'puppeteer';\n     * (async () => {\n     *   const browser = await puppeteer.launch();\n     *   const page = await browser.newPage();\n     *   const watchDog = page.waitForFunction('window.innerWidth < 100');\n     *   await page.setViewport({width: 50, height: 50});\n     *   await watchDog;\n     *   await browser.close();\n     * })();\n     * ```\n     *\n     * @example\n     * Arguments can be passed from Node.js to `pageFunction`:\n     *\n     * ```ts\n     * const selector = '.foo';\n     * await page.waitForFunction(\n     *   selector => !!document.querySelector(selector),\n     *   {},\n     *   selector\n     * );\n     * ```\n     *\n     * @example\n     * The provided `pageFunction` can be asynchronous:\n     *\n     * ```ts\n     * const username = 'github-username';\n     * await page.waitForFunction(\n     *   async username => {\n     *     const githubResponse = await fetch(\n     *       `https://api.github.com/users/${username}`\n     *     );\n     *     const githubUser = await githubResponse.json();\n     *     // show the avatar\n     *     const img = document.createElement('img');\n     *     img.src = githubUser.avatar_url;\n     *     // wait 3 seconds\n     *     await new Promise((resolve, reject) => setTimeout(resolve, 3000));\n     *     img.remove();\n     *   },\n     *   {},\n     *   username\n     * );\n     * ```\n     *\n     * @param pageFunction - Function to be evaluated in browser context until it returns a\n     * truthy value.\n     * @param options - Options for configuring waiting behavior.\n     */\n    waitForFunction(pageFunction, options, ...args) {\n      return this.mainFrame().waitForFunction(pageFunction, options, ...args);\n    }\n    /** @internal */\n    [_ref]() {\n      return void this.close().catch(debugError);\n    }\n    /** @internal */\n    [asyncDisposeSymbol]() {\n      return this.close();\n    }\n  }, (() => {\n    const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n    __esDecorate(_Page, null, _screenshot_decorators, {\n      kind: \"method\",\n      name: \"screenshot\",\n      static: false,\n      private: false,\n      access: {\n        has: obj => \"screenshot\" in obj,\n        get: obj => obj.screenshot\n      },\n      metadata: _metadata\n    }, null, _instanceExtraInitializers);\n    if (_metadata) Object.defineProperty(_Page, Symbol.metadata, {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _metadata\n    });\n  })(), _Page);\n  async function _getNativePixelDimensions() {\n    const env_1 = {\n      stack: [],\n      error: void 0,\n      hasError: false\n    };\n    try {\n      const viewport = this.viewport();\n      const stack = __addDisposableResource(env_1, new DisposableStack(), false);\n      if (viewport && viewport.deviceScaleFactor !== 0) {\n        await this.setViewport({\n          ...viewport,\n          deviceScaleFactor: 0\n        });\n        stack.defer(() => {\n          void this.setViewport(viewport).catch(debugError);\n        });\n      }\n      return await this.mainFrame().isolatedRealm().evaluate(() => {\n        return [window.visualViewport.width * window.devicePixelRatio, window.visualViewport.height * window.devicePixelRatio, window.devicePixelRatio];\n      });\n    } catch (e_1) {\n      env_1.error = e_1;\n      env_1.hasError = true;\n    } finally {\n      __disposeResources(env_1);\n    }\n  }\n})();\nexport { Page };\n/**\n * @internal\n */\nexport const supportedMetrics = new Set(['Timestamp', 'Documents', 'Frames', 'JSEventListeners', 'Nodes', 'LayoutCount', 'RecalcStyleCount', 'LayoutDuration', 'RecalcStyleDuration', 'ScriptDuration', 'TaskDuration', 'JSHeapUsedSize', 'JSHeapTotalSize']);\n/** @see https://w3c.github.io/webdriver-bidi/#normalize-rect */\nfunction normalizeRectangle(clip) {\n  return {\n    ...clip,\n    ...(clip.width < 0 ? {\n      x: clip.x + clip.width,\n      width: -clip.width\n    } : {\n      x: clip.x,\n      width: clip.width\n    }),\n    ...(clip.height < 0 ? {\n      y: clip.y + clip.height,\n      height: -clip.height\n    } : {\n      y: clip.y,\n      height: clip.height\n    })\n  };\n}\nfunction roundRectangle(clip) {\n  const x = Math.round(clip.x);\n  const y = Math.round(clip.y);\n  const width = Math.round(clip.width + clip.x - x);\n  const height = Math.round(clip.height + clip.y - y);\n  return {\n    ...clip,\n    x,\n    y,\n    width,\n    height\n  };\n}","map":{"version":3,"names":["concat","EMPTY","filter","first","firstValueFrom","from","map","merge","mergeMap","mergeScan","of","raceWith","ReplaySubject","startWith","switchMap","take","takeUntil","timer","TargetCloseError","EventEmitter","TimeoutSettings","debugError","fromEmitterEvent","filterAsync","importFSPromises","isString","NETWORK_IDLE_TIME","timeout","withSourcePuppeteerURLIfNone","guarded","AsyncDisposableStack","asyncDisposeSymbol","DisposableStack","disposeSymbol","FunctionLocator","Locator","NodeLocator","setDefaultScreenshotOptions","options","optimizeForSpeed","type","fromSurface","fullPage","omitBackground","encoding","captureBeyondViewport","Page","_ref","_Page","_requestHandlers","_inflight$","_screencastSessionCount","_startScreencastPromise","_Page_brand","_screenshot_decorators","browser","_classSuper","constructor","_classPrivateMethodInitSpec","_defineProperty","__runInitializers","_instanceExtraInitializers","_classPrivateFieldInitSpec","WeakMap","pipe","originalRequest","response","request","id","acc","addend","subscribe","_classPrivateFieldGet","on","handler","wrapper","get","undefined","event","enqueueInterceptAction","set","off","locator","selectorOrFunc","create","locatorRace","locators","race","$","selector","mainFrame","$$","evaluateHandle","pageFunction","args","name","$eval","$$eval","addScriptTag","addStyleTag","url","content","setContent","html","goto","waitForNavigation","waitForRequest","urlOrPredicate","ms","_timeoutSettings","observable$","waitForResponse","waitForNetworkIdle","waitForNetworkIdle$","idleTime","concurrency","inflight","waitForFrame","getDefaultTimeout","frame","frames","emulate","device","Promise","all","setUserAgent","userAgent","setViewport","viewport","evaluate","_maybeWriteBufferToFile","path","buffer","fs","writeFile","screencast","ScreenRecorder","width","height","devicePixelRatio","_assertClassBrand","_getNativePixelDimensions","call","crop","x","y","cropWidth","cropHeight","roundRectangle","normalizeRectangle","Error","viewportWidth","viewportHeight","speed","scale","recorder","ffmpegPath","_startScreencast","error","stop","createWriteStream","stream","_this$screencastSessi","_classPrivateFieldSet","client","send","format","then","resolve","once","_stopScreencast","_this$screencastSessi2","screenshot","userOptions","bringToFront","clip","filePath","extension","slice","lastIndexOf","toLowerCase","quality","includes","stack","__addDisposableResource","env_2","scrollDimensions","isolatedRealm","element","document","documentElement","scrollWidth","scrollHeight","defer","catch","data","_screenshot","Buffer","title","click","focus","hover","select","values","tap","text","waitForSelector","waitForFunction","close","__esDecorate","kind","static","private","access","has","obj","metadata","_metadata","env_1","deviceScaleFactor","window","visualViewport","supportedMetrics","Set","Math","round"],"sources":["../../../../src/api/Page.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}