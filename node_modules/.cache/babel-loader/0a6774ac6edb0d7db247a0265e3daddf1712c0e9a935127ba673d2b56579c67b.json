{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport TChart from '@/views/components/TChart';\nimport { hasEventListener } from \"@/utils/utils\";\nimport { formatDate } from '@/utils/formatTime';\nimport { AGPUtils } from \"@/utils/algorithm/AGP\";\nexport default {\n  data() {\n    return {\n      initOptions: {\n        renderer: 'svg'\n      },\n      option: {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            crossStyle: {\n              color: '#999'\n            }\n          }\n        },\n        grid: {\n          left: 120,\n          right: 120,\n          bottom: 60,\n          top: 60\n        },\n        xAxis: [{\n          type: 'category',\n          boundaryGap: false,\n          axisTick: false,\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: '#e5e5e5',\n              width: 1\n            }\n          },\n          data: [],\n          axisLabel: {\n            color: '#666',\n            fontSize: 16,\n            margin: 14\n          }\n        }],\n        yAxis: [{\n          type: 'value',\n          min: 0,\n          max: 15,\n          splitLine: {\n            lineStyle: {\n              type: 'dashed',\n              color: '#e5e5e5'\n            }\n          },\n          axisLabel: {\n            formatter: '{value}',\n            color: '#666',\n            fontSize: 16,\n            margin: 14\n          }\n        }],\n        series: [{\n          name: 'L',\n          type: 'line',\n          data: [],\n          lineStyle: {\n            opacity: 0\n          },\n          stack: 'confidence-band',\n          symbol: 'none'\n        },\n        // 置信区间5-25\n        {\n          name: 'U',\n          type: 'line',\n          data: [],\n          lineStyle: {\n            opacity: 0\n          },\n          areaStyle: {\n            color: '#D6F1F2'\n          },\n          stack: 'confidence-band',\n          symbol: 'none'\n        },\n        //置信区间25-75\n        {\n          name: 'U',\n          type: 'line',\n          data: [],\n          lineStyle: {\n            opacity: 0\n          },\n          areaStyle: {\n            color: '#94DBDE'\n          },\n          stack: 'confidence-band',\n          symbol: 'none'\n        },\n        //75-95\n        {\n          name: 'U',\n          type: 'line',\n          data: [],\n          lineStyle: {\n            opacity: 0\n          },\n          areaStyle: {\n            color: '#94DBDE'\n          },\n          stack: 'confidence-band',\n          symbol: 'none'\n        },\n        //中位线\n        {\n          type: 'line',\n          data: [],\n          itemStyle: {\n            color: '#32BAC0'\n          },\n          showSymbol: false,\n          lineStyle: {\n            width: 2\n          },\n          markLine: {\n            silent: true,\n            // 不高亮辅助线\n            symbol: 'none',\n            data: [{\n              type: 'min',\n              yAxis: 3.9,\n              lineStyle: {\n                color: '#32BAC0',\n                width: 0.6,\n                type: [2, 1],\n                dashOffset: 3\n              },\n              label: {\n                color: '#666',\n                fontSize: 10,\n                distance: 2\n              }\n            }, {\n              type: 'max',\n              yAxis: 10.0,\n              lineStyle: {\n                color: '#32BAC0',\n                width: 0.6,\n                type: [2, 1],\n                dashOffset: 3\n              },\n              label: {\n                color: '#666',\n                fontSize: 10,\n                distance: 2\n              }\n            }]\n          }\n        }]\n      }\n    };\n  },\n  components: {\n    TChart\n  },\n  mounted() {\n    // if(!hasEventListener(this.$bus,'getData')){\n    //     this.$bus.$on('getData',(data)=>{\n    //       this.manageData(data)  \n    //     })\n    // }\n    this.manageData();\n  },\n  methods: {\n    // 管理数据\n    manageData(data) {\n      let array = [{\n        DataTs: 1715129400,\n        Value: 171\n      }, {\n        DataTs: 1715043000,\n        Value: 239\n      }, {\n        DataTs: 1714956600,\n        Value: 164\n      }, {\n        DataTs: 1714956660,\n        Value: 388\n      }, {\n        DataTs: 1715043060,\n        Value: 218\n      }, {\n        DataTs: 1715129460,\n        Value: 230\n      }, {\n        DataTs: 1715129520,\n        Value: 158\n      }, {\n        DataTs: 1715043120,\n        Value: 267\n      }, {\n        DataTs: 1714956720,\n        Value: 180\n      }, {\n        DataTs: 1714870320,\n        Value: 192\n      }, {\n        DataTs: 1714783920,\n        Value: 255\n      }, {\n        DataTs: 1714697520,\n        Value: 236\n      }, {\n        DataTs: 1714697460,\n        Value: 360\n      }, {\n        DataTs: 1714783860,\n        Value: 397\n      }, {\n        DataTs: 1714870260,\n        Value: 356\n      }, {\n        DataTs: 1714870200,\n        Value: 230\n      }, {\n        DataTs: 1714783800,\n        Value: 387\n      }, {\n        DataTs: 1714697400,\n        Value: 199\n      }];\n      // 将数组分割为时刻数组\n      let momentMap = new Map();\n      array.forEach(item => {\n        item.moment = formatDate(item.DataTs * 1000, 'HH:MM');\n        momentMap.has(item.moment) ? momentMap.get(item.moment).push(item.Value) : momentMap.set(item.moment, [item.Value]);\n      });\n      // 计算出AGP数据并补全图谱数据\n      let agpMap = new Map();\n      let agp05 = new Array(24 * 60);\n      let agp25 = new Array(24 * 60);\n      let agp50 = new Array(24 * 60);\n      let agp75 = new Array(24 * 60);\n      let agp95 = new Array(24 * 60);\n      let xData = new Array(24 * 60);\n      for (let i = 0; i <= 1440; i++) {\n        // 分钟换算为时刻\n        let h = Math.floor(i / 60) < 10 ? '0' + Math.floor(i / 60) : Math.floor(i / 60);\n        let m = i % 60 < 10 ? '0' + i % 60 : i % 60;\n        let moment = h + ':' + m;\n        if (momentMap.has(moment)) {\n          agp05[i] = AGPUtils.calculateYValue(momentMap.get(moment)).p05;\n          agp25[i] = AGPUtils.calculateYValue(momentMap.get(moment)).p25;\n          agp50[i] = AGPUtils.calculateYValue(momentMap.get(moment)).p50;\n          agp75[i] = AGPUtils.calculateYValue(momentMap.get(moment)).p75;\n          agp95[i] = AGPUtils.calculateYValue(momentMap.get(moment)).p95;\n          // agp05.push(AGPUtils.calculateYValue(momentMap.get(moment)).p05)\n          // agp25.push(AGPUtils.calculateYValue(momentMap.get(moment)).p25)\n          // agp50.push(AGPUtils.calculateYValue(momentMap.get(moment)).p50)\n          // agp75.push(AGPUtils.calculateYValue(momentMap.get(moment)).p75)\n          // agp95.push(AGPUtils.calculateYValue(momentMap.get(moment)).p95)\n          // xData.push(moment)\n          xData[i] = moment;\n        } else {\n          // agp05.push(null)\n          // agp25.push(null)\n          // agp50.push(null)\n          // agp75.push(null)\n          // agp95.push(null)\n          // xData.push(moment)\n          xData[i] = moment;\n        }\n        // momentMap.has(moment) ? agpMap.set(moment,AGPUtils.calculateYValue(momentMap.get(moment))) : agpMap.set(moment,{p05:null,p25:null,p50:null,p75:null,p95:null})\n      }\n\n      // let xData = [...agpMap.keys()];\n\n      console.log(agp05);\n      console.log(agp25);\n      console.log(agp50);\n      console.log(agp75);\n      console.log(agp95);\n      console.log(this.option);\n      // this.option.xAxis[0].data = xData\n      // this.option.series[0].data = agp05\n      // this.option.series[1].data =  agp25.map((item, index) => {\n      //         return item - agp05[index];\n      //         })\n      // this.option.series[2].data = agp75.map((item, index) => {\n      //         return item - agp25[index];\n      //         })\n      // this.option.series[3].data = agp95.map((item, index) => {\n      //         return item - agp75[index];\n      //         })\n      // this.option.series[4].data = agp50\n      // this.optionData()\n    }\n  },\n  beforeDestroy() {\n    this.$bus.$off('getData');\n  }\n};","map":{"version":3,"names":["TChart","hasEventListener","formatDate","AGPUtils","data","initOptions","renderer","option","tooltip","trigger","axisPointer","type","crossStyle","color","grid","left","right","bottom","top","xAxis","boundaryGap","axisTick","axisLine","show","lineStyle","width","axisLabel","fontSize","margin","yAxis","min","max","splitLine","formatter","series","name","opacity","stack","symbol","areaStyle","itemStyle","showSymbol","markLine","silent","dashOffset","label","distance","components","mounted","manageData","methods","array","DataTs","Value","momentMap","Map","forEach","item","moment","has","get","push","set","agpMap","agp05","Array","agp25","agp50","agp75","agp95","xData","i","h","Math","floor","m","calculateYValue","p05","p25","p50","p75","p95","console","log","beforeDestroy","$bus","$off"],"sources":["src/views/components/Chart/AGPchart.vue"],"sourcesContent":["<template>\n    <div>\n        <t-chart\n                style=\"width: 100%;height:450px;\"\n                :option=\"option\"\n                :init-options=\"initOptions\"\n                theme=\"tduck-echarts-theme\"\n        />\n    </div>\n</template>\n<script>\nimport TChart from '@/views/components/TChart'\nimport { hasEventListener } from \"@/utils/utils\";\nimport {formatDate} from '@/utils/formatTime'\nimport { AGPUtils } from \"@/utils/algorithm/AGP\";\nexport default {\n    data(){\n        return{\n            initOptions: {\n                renderer: 'svg'\n            },\n            option: {\n                tooltip: {\n                    trigger: 'axis',\n                    axisPointer: {\n                    type: 'cross',\n                    crossStyle: {\n                        color: '#999'\n                    }\n                    }\n                },\n                grid:{\n                    left:120,\n                    right:120,\n                    bottom:60,\n                    top:60\n                },\n                xAxis: [\n                    {\n                        type: 'category',\n                        boundaryGap:false,\n                        axisTick: false,\n                        axisLine: {\n                            show: true,\n                            lineStyle: {\n                                color: '#e5e5e5',\n                                width:1,\n                            },\n                        },\n                        data:[],\n                        axisLabel:{\n                            color: '#666',\n                            fontSize: 16, \n                            margin:14\n                        },\n                    }\n                ],\n                yAxis: [\n                    {\n                    type: 'value',\n                    min: 0,\n                    max: 15,\n                    splitLine:{\n                        lineStyle:{\n                            type:'dashed',\n                            color:'#e5e5e5'\n                        }\n                    },\n                    axisLabel: {\n                        formatter: '{value}',\n                        color: '#666',\n                        fontSize: 16,\n                        margin:14\n                    }\n                    }\n                ],\n                series: [\n                {\n                    name: 'L',\n                    type: 'line',\n                    data: [],\n                    lineStyle: {\n                    opacity: 0,\n                    },\n                    stack: 'confidence-band',\n                    symbol: 'none',\n                },\n                // 置信区间5-25\n                {\n                    name: 'U',\n                    type: 'line',\n                    data: [],\n                    lineStyle: {\n                    opacity: 0,\n                    },\n                    areaStyle: {\n                    color: '#D6F1F2',\n                    },\n                    stack: 'confidence-band',\n                    symbol: 'none',\n                },\n                //置信区间25-75\n                {\n                    name: 'U',\n                    type: 'line',\n                    data: [],\n                    lineStyle: {\n                    opacity: 0,\n                    },\n                    areaStyle: {\n                    color: '#94DBDE',\n                    },\n                    stack: 'confidence-band',\n                    symbol: 'none',\n                },\n                //75-95\n                {\n                    name: 'U',\n                    type: 'line',\n                    data:[],\n                    lineStyle: {\n                    opacity: 0,\n                    },\n                    areaStyle: {\n                    color: '#94DBDE',\n                    },\n                    stack: 'confidence-band',\n                    symbol: 'none',\n                },\n                //中位线\n                {\n                    type: 'line',\n                    data: [],\n                    itemStyle: {\n                    color:'#32BAC0',\n                    },\n                    showSymbol: false,\n                    lineStyle: {\n                    width: 2,\n                    },\n                    markLine: {\n                    silent: true, // 不高亮辅助线\n                    symbol: 'none',\n                    data: [\n                        {\n                        type: 'min',\n                        yAxis: 3.9,\n                        lineStyle: {\n                            color: '#32BAC0',\n                            width: 0.6,\n                            type: [2, 1],\n                            dashOffset: 3,\n                        },\n                        label: {\n                            color: '#666',\n                            fontSize: 10,\n                            distance: 2,\n                        },\n                        },\n                        {\n                        type: 'max',\n                        yAxis: 10.0,\n                        lineStyle: {\n                            color: '#32BAC0',\n                            width: 0.6,\n                            type: [2, 1],\n                            dashOffset: 3,\n                        },\n                        label: {\n                            color: '#666',\n                            fontSize: 10,\n                            distance: 2,\n                        },\n                        },\n                    ],\n                    },\n                },\n                ],\n            },\n        }\n    },\n    components: {\n        TChart\n    },\n    mounted(){\n        // if(!hasEventListener(this.$bus,'getData')){\n        //     this.$bus.$on('getData',(data)=>{\n        //       this.manageData(data)  \n        //     })\n        // }\n        this.manageData()\n    },\n    methods:{\n        // 管理数据\n        manageData(data){\n            let array = [{DataTs:1715129400,Value:171},\n            {DataTs:1715043000,Value:239},\n            {DataTs:1714956600,Value:164},\n            {DataTs:1714956660,Value:388},\n            {DataTs:1715043060,Value:218},\n            {DataTs:1715129460,Value:230},\n            {DataTs:1715129520,Value:158},\n            {DataTs:1715043120,Value:267},\n            {DataTs:1714956720,Value:180},\n            {DataTs:1714870320,Value:192},\n            {DataTs:1714783920,Value:255},\n            {DataTs:1714697520,Value:236},\n            {DataTs:1714697460,Value:360},\n            {DataTs:1714783860,Value:397},\n            {DataTs:1714870260,Value:356},\n            {DataTs:1714870200,Value:230},\n            {DataTs:1714783800,Value:387},\n            {DataTs:1714697400,Value:199},\n            ]\n            // 将数组分割为时刻数组\n            let momentMap = new Map();\n            array.forEach(item=>{\n                item.moment = formatDate(item.DataTs*1000,'HH:MM')\n                momentMap.has(item.moment) ? momentMap.get(item.moment).push(item.Value) : momentMap.set(item.moment, [item.Value]);\n            })\n            // 计算出AGP数据并补全图谱数据\n            let agpMap = new Map();\n            let agp05 = new Array(24 * 60);\n            let agp25 = new Array(24 * 60);\n            let agp50 = new Array(24 * 60);\n            let agp75 = new Array(24 * 60);\n            let agp95 = new Array(24 * 60);\n            let xData = new Array(24 * 60);\n            for (let i = 0; i <= 1440; i++) {\n                // 分钟换算为时刻\n                let h =  Math.floor(i/60)<10 ? '0'+ Math.floor(i/60) : Math.floor(i/60) \n                let m =  i%60 < 10 ? '0' + i%60 : i%60\n                let moment = h+':'+m\n                if(momentMap.has(moment)){\n                    agp05[i] = AGPUtils.calculateYValue(momentMap.get(moment)).p05\n                    agp25[i] = AGPUtils.calculateYValue(momentMap.get(moment)).p25\n                    agp50[i] = AGPUtils.calculateYValue(momentMap.get(moment)).p50\n                    agp75[i] = AGPUtils.calculateYValue(momentMap.get(moment)).p75\n                    agp95[i] = AGPUtils.calculateYValue(momentMap.get(moment)).p95\n                    // agp05.push(AGPUtils.calculateYValue(momentMap.get(moment)).p05)\n                    // agp25.push(AGPUtils.calculateYValue(momentMap.get(moment)).p25)\n                    // agp50.push(AGPUtils.calculateYValue(momentMap.get(moment)).p50)\n                    // agp75.push(AGPUtils.calculateYValue(momentMap.get(moment)).p75)\n                    // agp95.push(AGPUtils.calculateYValue(momentMap.get(moment)).p95)\n                    // xData.push(moment)\n                    xData[i] = moment\n                }else{\n                    // agp05.push(null)\n                    // agp25.push(null)\n                    // agp50.push(null)\n                    // agp75.push(null)\n                    // agp95.push(null)\n                    // xData.push(moment)\n                    xData[i] = moment\n                }\n                // momentMap.has(moment) ? agpMap.set(moment,AGPUtils.calculateYValue(momentMap.get(moment))) : agpMap.set(moment,{p05:null,p25:null,p50:null,p75:null,p95:null})\n            }\n\n            // let xData = [...agpMap.keys()];\n\n            console.log(agp05)\n            console.log(agp25)\n            console.log(agp50)\n            console.log(agp75)\n            console.log(agp95)\n            console.log(this.option)\n            // this.option.xAxis[0].data = xData\n            // this.option.series[0].data = agp05\n            // this.option.series[1].data =  agp25.map((item, index) => {\n            //         return item - agp05[index];\n            //         })\n            // this.option.series[2].data = agp75.map((item, index) => {\n            //         return item - agp25[index];\n            //         })\n            // this.option.series[3].data = agp95.map((item, index) => {\n            //         return item - agp75[index];\n            //         })\n            // this.option.series[4].data = agp50\n            // this.optionData()\n        },\n    },\n    beforeDestroy(){\n        this.$bus.$off('getData')\n    }\n}\n</script>"],"mappings":";AAWA,OAAAA,MAAA;AACA,SAAAC,gBAAA;AACA,SAAAC,UAAA;AACA,SAAAC,QAAA;AACA;EACAC,KAAA;IACA;MACAC,WAAA;QACAC,QAAA;MACA;MACAC,MAAA;QACAC,OAAA;UACAC,OAAA;UACAC,WAAA;YACAC,IAAA;YACAC,UAAA;cACAC,KAAA;YACA;UACA;QACA;QACAC,IAAA;UACAC,IAAA;UACAC,KAAA;UACAC,MAAA;UACAC,GAAA;QACA;QACAC,KAAA,GACA;UACAR,IAAA;UACAS,WAAA;UACAC,QAAA;UACAC,QAAA;YACAC,IAAA;YACAC,SAAA;cACAX,KAAA;cACAY,KAAA;YACA;UACA;UACArB,IAAA;UACAsB,SAAA;YACAb,KAAA;YACAc,QAAA;YACAC,MAAA;UACA;QACA,EACA;QACAC,KAAA,GACA;UACAlB,IAAA;UACAmB,GAAA;UACAC,GAAA;UACAC,SAAA;YACAR,SAAA;cACAb,IAAA;cACAE,KAAA;YACA;UACA;UACAa,SAAA;YACAO,SAAA;YACApB,KAAA;YACAc,QAAA;YACAC,MAAA;UACA;QACA,EACA;QACAM,MAAA,GACA;UACAC,IAAA;UACAxB,IAAA;UACAP,IAAA;UACAoB,SAAA;YACAY,OAAA;UACA;UACAC,KAAA;UACAC,MAAA;QACA;QACA;QACA;UACAH,IAAA;UACAxB,IAAA;UACAP,IAAA;UACAoB,SAAA;YACAY,OAAA;UACA;UACAG,SAAA;YACA1B,KAAA;UACA;UACAwB,KAAA;UACAC,MAAA;QACA;QACA;QACA;UACAH,IAAA;UACAxB,IAAA;UACAP,IAAA;UACAoB,SAAA;YACAY,OAAA;UACA;UACAG,SAAA;YACA1B,KAAA;UACA;UACAwB,KAAA;UACAC,MAAA;QACA;QACA;QACA;UACAH,IAAA;UACAxB,IAAA;UACAP,IAAA;UACAoB,SAAA;YACAY,OAAA;UACA;UACAG,SAAA;YACA1B,KAAA;UACA;UACAwB,KAAA;UACAC,MAAA;QACA;QACA;QACA;UACA3B,IAAA;UACAP,IAAA;UACAoC,SAAA;YACA3B,KAAA;UACA;UACA4B,UAAA;UACAjB,SA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}