{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar _classPrivateFieldInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _defineProperty = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nvar _classPrivateFieldSet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldSet2.js\").default;\nvar _classPrivateFieldGet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldGet2.js\").default;\nlet _disposable_js_1$disp;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Realm = void 0;\nconst WaitTask_js_1 = require(\"../common/WaitTask.js\");\nconst disposable_js_1 = require(\"../util/disposable.js\");\n/**\n * @internal\n */\nvar _disposed = /*#__PURE__*/new WeakMap();\n_disposable_js_1$disp = disposable_js_1.disposeSymbol;\nclass Realm {\n  constructor(timeoutSettings) {\n    _defineProperty(this, \"timeoutSettings\", void 0);\n    _defineProperty(this, \"taskManager\", new WaitTask_js_1.TaskManager());\n    _classPrivateFieldInitSpec(this, _disposed, false);\n    this.timeoutSettings = timeoutSettings;\n  }\n  async waitForFunction(pageFunction, options = {}, ...args) {\n    const {\n      polling = 'raf',\n      timeout = this.timeoutSettings.timeout(),\n      root,\n      signal\n    } = options;\n    if (typeof polling === 'number' && polling < 0) {\n      throw new Error('Cannot poll with non-positive interval');\n    }\n    const waitTask = new WaitTask_js_1.WaitTask(this, {\n      polling,\n      root,\n      timeout,\n      signal\n    }, pageFunction, ...args);\n    return await waitTask.result;\n  }\n  get disposed() {\n    return _classPrivateFieldGet(_disposed, this);\n  }\n  /** @internal */\n  dispose() {\n    _classPrivateFieldSet(_disposed, this, true);\n    this.taskManager.terminateAll(new Error('waitForFunction failed: frame got detached.'));\n  }\n  /** @internal */\n  [_disposable_js_1$disp]() {\n    this.dispose();\n  }\n}\nexports.Realm = Realm;","map":{"version":3,"names":["_classPrivateFieldInitSpec","require","default","_defineProperty","_classPrivateFieldSet","_classPrivateFieldGet","_disposable_js_1$disp","WaitTask_js_1","disposable_js_1","_disposed","WeakMap","disposeSymbol","Realm","constructor","timeoutSettings","TaskManager","waitForFunction","pageFunction","options","args","polling","timeout","root","signal","Error","waitTask","WaitTask","result","disposed","dispose","taskManager","terminateAll","exports"],"sources":["../../../../src/api/Realm.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;AAAA,IAAAA,0BAAA,GAAAC,OAAA,8GAAAC,OAAA;AAAA,IAAAC,eAAA,GAAAF,OAAA,mGAAAC,OAAA;AAAA,IAAAE,qBAAA,GAAAH,OAAA,0GAAAC,OAAA;AAAA,IAAAG,qBAAA,GAAAJ,OAAA,0GAAAC,OAAA;AAAA,IAAAI,qBAAA;;;;;AAYA,MAAAC,aAAA,GAAAN,OAAA;AACA,MAAAO,eAAA,GAAAP,OAAA;AAMA;;;AAAA,IAAAQ,SAAA,oBAAAC,OAAA;AAAAJ,qBAAA,GAqFGE,eAAA,CAAAG,aAAa;AAlFhB,MAAsBC,KAAK;EAIzBC,YAAYC,eAAgC;IAAAX,eAAA;IAAAA,eAAA,sBAFrB,IAAII,aAAA,CAAAQ,WAAW,EAAE;IAAAf,0BAAA,OAAAS,SAAA,EAuE5B,KAAK;IApEf,IAAI,CAACK,eAAe,GAAGA,eAAe;EACxC;EAqBA,MAAME,eAAeA,CAMnBC,YAA2B,EAC3BC,OAAA,GAKI,EAAE,EACN,GAAGC,IAAY;IAEf,MAAM;MACJC,OAAO,GAAG,KAAK;MACfC,OAAO,GAAG,IAAI,CAACP,eAAe,CAACO,OAAO,EAAE;MACxCC,IAAI;MACJC;IAAM,CACP,GAAGL,OAAO;IACX,IAAI,OAAOE,OAAO,KAAK,QAAQ,IAAIA,OAAO,GAAG,CAAC,EAAE;MAC9C,MAAM,IAAII,KAAK,CAAC,wCAAwC,CAAC;IAC3D;IACA,MAAMC,QAAQ,GAAG,IAAIlB,aAAA,CAAAmB,QAAQ,CAC3B,IAAI,EACJ;MACEN,OAAO;MACPE,IAAI;MACJD,OAAO;MACPE;KACD,EACDN,YAEU,EACV,GAAGE,IAAI,CACR;IACD,OAAO,MAAMM,QAAQ,CAACE,MAAM;EAC9B;EAIA,IAAIC,QAAQA,CAAA;IACV,OAAAvB,qBAAA,CAAAI,SAAA,EAAO,IAAI;EACb;EAGA;EACAoB,OAAOA,CAAA;IACLzB,qBAAA,CAAAK,SAAA,MAAI,EAAa,IAAI;IACrB,IAAI,CAACqB,WAAW,CAACC,YAAY,CAC3B,IAAIP,KAAK,CAAC,6CAA6C,CAAC,CACzD;EACH;EACA;EACA,CAAAlB,qBAAA,IAAe;IACb,IAAI,CAACuB,OAAO,EAAE;EAChB;;AApFFG,OAAA,CAAApB,KAAA,GAAAA,KAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}