{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n * Copyright 2022 The Chromium Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _classPrivateMethodInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateMethodInitSpec.js\").default;\nvar _classPrivateFieldInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _classPrivateFieldSet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldSet2.js\").default;\nvar _assertClassBrand = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/assertClassBrand.js\").default;\nvar _classPrivateFieldGet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldGet2.js\").default;\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Mutex = void 0;\n/**\n * Use Mutex class to coordinate local concurrent operations.\n * Once `acquire` promise resolves, you hold the lock and must\n * call `release` function returned by `acquire` to release the\n * lock. Failing to `release` the lock may lead to deadlocks.\n */\nvar _locked = /*#__PURE__*/new WeakMap();\nvar _acquirers = /*#__PURE__*/new WeakMap();\nvar _Mutex_brand = /*#__PURE__*/new WeakSet();\nclass Mutex {\n  constructor() {\n    _classPrivateMethodInitSpec(this, _Mutex_brand);\n    _classPrivateFieldInitSpec(this, _locked, false);\n    _classPrivateFieldInitSpec(this, _acquirers, []);\n  }\n  // This is FIFO.\n  acquire() {\n    const state = {\n      resolved: false\n    };\n    if (_classPrivateFieldGet(_locked, this)) {\n      return new Promise(resolve => {\n        _classPrivateFieldGet(_acquirers, this).push(() => resolve(_assertClassBrand(_Mutex_brand, this, _release).bind(this, state)));\n      });\n    }\n    _classPrivateFieldSet(_locked, this, true);\n    return Promise.resolve(_assertClassBrand(_Mutex_brand, this, _release).bind(this, state));\n  }\n  async run(action) {\n    const release = await this.acquire();\n    try {\n      // Note we need to await here because we want the await to release AFTER\n      // that await happens. Returning action() will trigger the release\n      // immediately which is counter to what we want.\n      const result = await action();\n      return result;\n    } finally {\n      release();\n    }\n  }\n}\nfunction _release(state) {\n  if (state.resolved) {\n    throw new Error('Cannot release more than once.');\n  }\n  state.resolved = true;\n  const resolve = _classPrivateFieldGet(_acquirers, this).shift();\n  if (!resolve) {\n    _classPrivateFieldSet(_locked, this, false);\n    return;\n  }\n  resolve();\n}\nexports.Mutex = Mutex;","map":{"version":3,"names":["_classPrivateMethodInitSpec","require","default","_classPrivateFieldInitSpec","_classPrivateFieldSet","_assertClassBrand","_classPrivateFieldGet","_locked","WeakMap","_acquirers","_Mutex_brand","WeakSet","Mutex","constructor","acquire","state","resolved","Promise","resolve","push","_release","bind","run","action","release","result","Error","shift","exports"],"sources":["../../../src/utils/Mutex.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;AAAA,IAAAA,2BAAA,GAAAC,OAAA,+GAAAC,OAAA;AAAA,IAAAC,0BAAA,GAAAF,OAAA,8GAAAC,OAAA;AAAA,IAAAE,qBAAA,GAAAH,OAAA,0GAAAC,OAAA;AAAA,IAAAG,iBAAA,GAAAJ,OAAA,qGAAAC,OAAA;AAAA,IAAAI,qBAAA,GAAAL,OAAA,0GAAAC,OAAA;AAAAD,OAAA;;;;;AAoBA;;;;;;AAAA,IAAAM,OAAA,oBAAAC,OAAA;AAAA,IAAAC,UAAA,oBAAAD,OAAA;AAAA,IAAAE,YAAA,oBAAAC,OAAA;AAMA,MAAaC,KAAK;EAAAC,YAAA;IAAAb,2BAAA,OAAAU,YAAA;IAAAP,0BAAA,OAAAI,OAAA,EACN,KAAK;IAAAJ,0BAAA,OAAAM,UAAA,EACc,EAAE;EAAA;EAE/B;EACAK,OAAOA,CAAA;IACL,MAAMC,KAAK,GAAG;MAACC,QAAQ,EAAE;IAAK,CAAC;IAC/B,IAAAV,qBAAA,CAAAC,OAAA,EAAI,IAAI,GAAU;MAChB,OAAO,IAAIU,OAAO,CAAEC,OAAO,IAAI;QAC7BZ,qBAAA,CAAAG,UAAA,MAAI,EAAYU,IAAI,CAAC,MAAMD,OAAO,CAACb,iBAAA,CAAAK,YAAA,MAAI,EAAAU,QAAA,EAAUC,IAAI,CAAC,IAAI,EAAEN,KAAK,CAAC,CAAC,CAAC;MACtE,CAAC,CAAC;IACJ;IACAX,qBAAA,CAAAG,OAAA,MAAI,EAAW,IAAI;IACnB,OAAOU,OAAO,CAACC,OAAO,CAACb,iBAAA,CAAAK,YAAA,MAAI,EAAAU,QAAA,EAAUC,IAAI,CAAC,IAAI,EAAEN,KAAK,CAAC,CAAC;EACzD;EAgBA,MAAMO,GAAGA,CAAIC,MAAwB;IACnC,MAAMC,OAAO,GAAG,MAAM,IAAI,CAACV,OAAO,EAAE;IACpC,IAAI;MACF;MACA;MACA;MACA,MAAMW,MAAM,GAAG,MAAMF,MAAM,EAAE;MAC7B,OAAOE,MAAM;IACf,CAAC,SAAS;MACRD,OAAO,EAAE;IACX;EACF;;AACD,SAAAJ,SA1BUL,KAA0B;EACjC,IAAIA,KAAK,CAACC,QAAQ,EAAE;IAClB,MAAM,IAAIU,KAAK,CAAC,gCAAgC,CAAC;EACnD;EACAX,KAAK,CAACC,QAAQ,GAAG,IAAI;EAErB,MAAME,OAAO,GAAGZ,qBAAA,CAAAG,UAAA,MAAI,EAAYkB,KAAK,EAAE;EACvC,IAAI,CAACT,OAAO,EAAE;IACZd,qBAAA,CAAAG,OAAA,MAAI,EAAW,KAAK;IACpB;EACF;EACAW,OAAO,EAAE;AACX;AA5BFU,OAAA,CAAAhB,KAAA,GAAAA,KAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}