{"ast":null,"code":"import _classPrivateFieldInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldGet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\nimport _classPrivateFieldSet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\n/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { CDPSession, CDPSessionEvent } from '../api/CDPSession.js';\nimport { CallbackRegistry } from '../common/CallbackRegistry.js';\nimport { TargetCloseError } from '../common/Errors.js';\nimport { assert } from '../util/assert.js';\nimport { createProtocolErrorMessage } from '../util/ErrorLike.js';\n/**\n * @internal\n */\nvar _sessionId = /*#__PURE__*/new WeakMap();\nvar _targetType = /*#__PURE__*/new WeakMap();\nvar _callbacks = /*#__PURE__*/new WeakMap();\nvar _connection = /*#__PURE__*/new WeakMap();\nvar _parentSessionId = /*#__PURE__*/new WeakMap();\nvar _target = /*#__PURE__*/new WeakMap();\nexport class CdpCDPSession extends CDPSession {\n  /**\n   * @internal\n   */\n  constructor(connection, targetType, sessionId, parentSessionId) {\n    super();\n    _classPrivateFieldInitSpec(this, _sessionId, void 0);\n    _classPrivateFieldInitSpec(this, _targetType, void 0);\n    _classPrivateFieldInitSpec(this, _callbacks, new CallbackRegistry());\n    _classPrivateFieldInitSpec(this, _connection, void 0);\n    _classPrivateFieldInitSpec(this, _parentSessionId, void 0);\n    _classPrivateFieldInitSpec(this, _target, void 0);\n    _classPrivateFieldSet(_connection, this, connection);\n    _classPrivateFieldSet(_targetType, this, targetType);\n    _classPrivateFieldSet(_sessionId, this, sessionId);\n    _classPrivateFieldSet(_parentSessionId, this, parentSessionId);\n  }\n  /**\n   * Sets the {@link CdpTarget} associated with the session instance.\n   *\n   * @internal\n   */\n  _setTarget(target) {\n    _classPrivateFieldSet(_target, this, target);\n  }\n  /**\n   * Gets the {@link CdpTarget} associated with the session instance.\n   *\n   * @internal\n   */\n  _target() {\n    assert(_classPrivateFieldGet(_target, this), 'Target must exist');\n    return _classPrivateFieldGet(_target, this);\n  }\n  connection() {\n    return _classPrivateFieldGet(_connection, this);\n  }\n  parentSession() {\n    if (!_classPrivateFieldGet(_parentSessionId, this)) {\n      // To make it work in Firefox that does not have parent (tab) sessions.\n      return this;\n    }\n    const parent = _classPrivateFieldGet(_connection, this)?.session(_classPrivateFieldGet(_parentSessionId, this));\n    return parent ?? undefined;\n  }\n  send(method, params, options) {\n    if (!_classPrivateFieldGet(_connection, this)) {\n      return Promise.reject(new TargetCloseError(`Protocol error (${method}): Session closed. Most likely the ${_classPrivateFieldGet(_targetType, this)} has been closed.`));\n    }\n    return _classPrivateFieldGet(_connection, this)._rawSend(_classPrivateFieldGet(_callbacks, this), method, params, _classPrivateFieldGet(_sessionId, this), options);\n  }\n  /**\n   * @internal\n   */\n  _onMessage(object) {\n    if (object.id) {\n      if (object.error) {\n        _classPrivateFieldGet(_callbacks, this).reject(object.id, createProtocolErrorMessage(object), object.error.message);\n      } else {\n        _classPrivateFieldGet(_callbacks, this).resolve(object.id, object.result);\n      }\n    } else {\n      assert(!object.id);\n      this.emit(object.method, object.params);\n    }\n  }\n  /**\n   * Detaches the cdpSession from the target. Once detached, the cdpSession object\n   * won't emit any events and can't be used to send messages.\n   */\n  async detach() {\n    if (!_classPrivateFieldGet(_connection, this)) {\n      throw new Error(`Session already detached. Most likely the ${_classPrivateFieldGet(_targetType, this)} has been closed.`);\n    }\n    await _classPrivateFieldGet(_connection, this).send('Target.detachFromTarget', {\n      sessionId: _classPrivateFieldGet(_sessionId, this)\n    });\n  }\n  /**\n   * @internal\n   */\n  _onClosed() {\n    _classPrivateFieldGet(_callbacks, this).clear();\n    _classPrivateFieldSet(_connection, this, undefined);\n    this.emit(CDPSessionEvent.Disconnected, undefined);\n  }\n  /**\n   * Returns the session's id.\n   */\n  id() {\n    return _classPrivateFieldGet(_sessionId, this);\n  }\n  /**\n   * @internal\n   */\n  getPendingProtocolErrors() {\n    return _classPrivateFieldGet(_callbacks, this).getPendingProtocolErrors();\n  }\n}","map":{"version":3,"names":["CDPSession","CDPSessionEvent","CallbackRegistry","TargetCloseError","assert","createProtocolErrorMessage","_sessionId","WeakMap","_targetType","_callbacks","_connection","_parentSessionId","_target","CdpCDPSession","constructor","connection","targetType","sessionId","parentSessionId","_classPrivateFieldInitSpec","_classPrivateFieldSet","_setTarget","target","_classPrivateFieldGet","parentSession","parent","session","undefined","send","method","params","options","Promise","reject","_rawSend","_onMessage","object","id","error","message","resolve","result","emit","detach","Error","_onClosed","clear","Disconnected","getPendingProtocolErrors"],"sources":["../../../../src/cdp/CDPSession.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}