{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\n/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport assert from 'assert';\nimport { existsSync } from 'fs';\nimport { mkdir, unlink } from 'fs/promises';\nimport os from 'os';\nimport path from 'path';\nimport { Browser, BrowserPlatform, downloadUrls } from './browser-data/browser-data.js';\nimport { Cache, InstalledBrowser } from './Cache.js';\nimport { debug } from './debug.js';\nimport { detectBrowserPlatform } from './detectPlatform.js';\nimport { unpackArchive } from './fileUtil.js';\nimport { downloadFile, getJSON, headHttpRequest } from './httpUtil.js';\nconst debugInstall = debug('puppeteer:browsers:install');\nconst times = new Map();\nfunction debugTime(label) {\n  times.set(label, process.hrtime());\n}\nfunction debugTimeEnd(label) {\n  const end = process.hrtime();\n  const start = times.get(label);\n  if (!start) {\n    return;\n  }\n  const duration = end[0] * 1000 + end[1] / 1e6 - (start[0] * 1000 + start[1] / 1e6); // calculate duration in milliseconds\n  debugInstall(`Duration for ${label}: ${duration}ms`);\n}\nexport async function install(options) {\n  options.platform ??= detectBrowserPlatform();\n  options.unpack ??= true;\n  if (!options.platform) {\n    throw new Error(`Cannot download a binary for the provided platform: ${os.platform()} (${os.arch()})`);\n  }\n  const url = getDownloadUrl(options.browser, options.platform, options.buildId, options.baseUrl);\n  try {\n    return await installUrl(url, options);\n  } catch (err) {\n    // If custom baseUrl is provided, do not fall back to CfT dashboard.\n    if (options.baseUrl && !options.forceFallbackForTesting) {\n      throw err;\n    }\n    debugInstall(`Error downloading from ${url}.`);\n    switch (options.browser) {\n      case Browser.CHROME:\n      case Browser.CHROMEDRIVER:\n      case Browser.CHROMEHEADLESSSHELL:\n        {\n          debugInstall(`Trying to find download URL via https://googlechromelabs.github.io/chrome-for-testing.`);\n          const version = await getJSON(new URL(`https://googlechromelabs.github.io/chrome-for-testing/${options.buildId}.json`));\n          let platform = '';\n          switch (options.platform) {\n            case BrowserPlatform.LINUX:\n              platform = 'linux64';\n              break;\n            case BrowserPlatform.MAC_ARM:\n              platform = 'mac-arm64';\n              break;\n            case BrowserPlatform.MAC:\n              platform = 'mac-x64';\n              break;\n            case BrowserPlatform.WIN32:\n              platform = 'win32';\n              break;\n            case BrowserPlatform.WIN64:\n              platform = 'win64';\n              break;\n          }\n          const url = version.downloads[options.browser]?.find(link => {\n            return link['platform'] === platform;\n          })?.url;\n          if (url) {\n            debugInstall(`Falling back to downloading from ${url}.`);\n            return await installUrl(new URL(url), options);\n          }\n          throw err;\n        }\n      default:\n        throw err;\n    }\n  }\n}\nasync function installUrl(url, options) {\n  options.platform ??= detectBrowserPlatform();\n  if (!options.platform) {\n    throw new Error(`Cannot download a binary for the provided platform: ${os.platform()} (${os.arch()})`);\n  }\n  const fileName = url.toString().split('/').pop();\n  assert(fileName, `A malformed download URL was found: ${url}.`);\n  const cache = new Cache(options.cacheDir);\n  const browserRoot = cache.browserRoot(options.browser);\n  const archivePath = path.join(browserRoot, `${options.buildId}-${fileName}`);\n  if (!existsSync(browserRoot)) {\n    await mkdir(browserRoot, {\n      recursive: true\n    });\n  }\n  if (!options.unpack) {\n    if (existsSync(archivePath)) {\n      return archivePath;\n    }\n    debugInstall(`Downloading binary from ${url}`);\n    debugTime('download');\n    await downloadFile(url, archivePath, options.downloadProgressCallback);\n    debugTimeEnd('download');\n    return archivePath;\n  }\n  const outputPath = cache.installationDir(options.browser, options.platform, options.buildId);\n  try {\n    if (existsSync(outputPath)) {\n      const installedBrowser = new InstalledBrowser(cache, options.browser, options.buildId, options.platform);\n      if (!existsSync(installedBrowser.executablePath)) {\n        throw new Error(`The browser folder (${outputPath}) exists but the executable (${installedBrowser.executablePath}) is missing`);\n      }\n      return installedBrowser;\n    }\n    debugInstall(`Downloading binary from ${url}`);\n    try {\n      debugTime('download');\n      await downloadFile(url, archivePath, options.downloadProgressCallback);\n    } finally {\n      debugTimeEnd('download');\n    }\n    debugInstall(`Installing ${archivePath} to ${outputPath}`);\n    try {\n      debugTime('extract');\n      await unpackArchive(archivePath, outputPath);\n    } finally {\n      debugTimeEnd('extract');\n    }\n    const installedBrowser = new InstalledBrowser(cache, options.browser, options.buildId, options.platform);\n    if (options.buildIdAlias) {\n      const metadata = installedBrowser.readMetadata();\n      metadata.aliases[options.buildIdAlias] = options.buildId;\n      installedBrowser.writeMetadata(metadata);\n    }\n    return installedBrowser;\n  } finally {\n    if (existsSync(archivePath)) {\n      await unlink(archivePath);\n    }\n  }\n}\n/**\n *\n * @public\n */\nexport async function uninstall(options) {\n  options.platform ??= detectBrowserPlatform();\n  if (!options.platform) {\n    throw new Error(`Cannot detect the browser platform for: ${os.platform()} (${os.arch()})`);\n  }\n  new Cache(options.cacheDir).uninstall(options.browser, options.platform, options.buildId);\n}\n/**\n * Returns metadata about browsers installed in the cache directory.\n *\n * @public\n */\nexport async function getInstalledBrowsers(options) {\n  return new Cache(options.cacheDir).getInstalledBrowsers();\n}\n/**\n * @public\n */\nexport async function canDownload(options) {\n  options.platform ??= detectBrowserPlatform();\n  if (!options.platform) {\n    throw new Error(`Cannot download a binary for the provided platform: ${os.platform()} (${os.arch()})`);\n  }\n  return await headHttpRequest(getDownloadUrl(options.browser, options.platform, options.buildId, options.baseUrl));\n}\nfunction getDownloadUrl(browser, platform, buildId, baseUrl) {\n  return new URL(downloadUrls[browser](platform, buildId, baseUrl));\n}","map":{"version":3,"names":["assert","existsSync","mkdir","unlink","os","path","Browser","BrowserPlatform","downloadUrls","Cache","InstalledBrowser","debug","detectBrowserPlatform","unpackArchive","downloadFile","getJSON","headHttpRequest","debugInstall","times","Map","debugTime","label","set","process","hrtime","debugTimeEnd","end","start","get","duration","install","options","platform","unpack","Error","arch","url","getDownloadUrl","browser","buildId","baseUrl","installUrl","err","forceFallbackForTesting","CHROME","CHROMEDRIVER","CHROMEHEADLESSSHELL","version","URL","LINUX","MAC_ARM","MAC","WIN32","WIN64","downloads","find","link","fileName","toString","split","pop","cache","cacheDir","browserRoot","archivePath","join","recursive","downloadProgressCallback","outputPath","installationDir","installedBrowser","executablePath","buildIdAlias","metadata","readMetadata","aliases","writeMetadata","uninstall","getInstalledBrowsers","canDownload"],"sources":["../../src/install.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}