{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport TChart from '@/views/components/TChart';\nimport { hasEventListener } from \"@/utils/utils\";\nimport { formatDate, formatTime } from '@/utils/formatTime';\nimport { TIRUtils } from \"@/utils/algorithm/TIR\";\nimport { GlucoseUtils } from \"@/utils/algorithm/Glucose\";\nimport { Divider } from 'element-ui';\nexport default {\n  data() {\n    return {\n      initOptions: {\n        renderer: 'svg'\n      },\n      option: {\n        tooltip: {\n          show: true,\n          trigger: 'axis',\n          confine: true\n        },\n        title: [],\n        grid: [],\n        xAxis: [],\n        yAxis: [],\n        visualMap: [],\n        series: []\n      },\n      dayList: [],\n      week: [],\n      gridW: 0\n    };\n  },\n  components: {\n    TChart\n  },\n  created() {},\n  mounted() {\n    console.log(formatTime(new Date()), '组件渲染完成');\n    // 监听云数据 \n    this.$bus.$on('getDatas', data => {\n      this.handelIng(data);\n    });\n    // 监听vuex数据\n    this.$bus.$on('getVuexTag', data => {\n      let result = this.$store.state.report.day[data];\n      this.dayList = result;\n      this.$nextTick(() => {\n        this.getOption(result);\n      });\n    });\n  },\n  methods: {\n    /**\n    * 循环对比选中的开始时间和结束时间，有数据插入，没有数据为空\n    * currentDate 记录开始时间，每次循环完成加一天\n    * dayList 分割后最终的数据数组\n    * dayList 参数集 day:日期 week:周 value:按时刻分割的数据 tir:每日的tir max:所有数据的最大值，大于400则等于400\n    * value = dayArray 画图需要的按时刻分割的1440的空数组(一分钟一个数据点，一天1440个数据点对应1440个时刻)，需要把大于400低于40的值置为40和400\n    * dayArrays 计算tir所需要的数组，不需要重新赋值\n    */\n    handelIng(data) {\n      let s_date = data[0].split('/')[0];\n      let e_date = data[0].split('/')[1];\n      let arrays = _.uniqBy(data[1], 'DataTs'); //去重\n      let array = _.filter(arrays, function (val) {\n        //过滤掉无效数据\n        return val.Value >= 20 && val.Value <= 800;\n      });\n      let currentDate = new Date(s_date);\n      let dayList = [];\n      while (currentDate <= new Date(e_date)) {\n        let dayArray = new Array(24 * 60);\n        let dayArrays = new Array(24 * 60);\n        array.forEach(item => {\n          let moment = Number(formatDate(item.DataTs * 1000, 'HH')) * 60 + Number(formatDate(item.DataTs * 1000, 'MM'));\n          let value = item.Value;\n          if (item.Value > 400 && item.Value <= 800) value = 400;\n          if (item.Value >= 20 && item.Value < 40) value = 40;\n          if (formatDate(item.DataTs * 1000, 'mm.dd') == formatDate(currentDate, 'mm.dd')) {\n            dayArray[moment] = value ? GlucoseUtils.mgdlToMmol(value) : null;\n            dayArrays[moment] = item.Value;\n          }\n        });\n        dayList.push({\n          day: formatDate(currentDate, 'mm.dd'),\n          week: formatDate(currentDate, 'WW'),\n          value: dayArray,\n          max: GlucoseUtils.mgdlToMmol(_.maxBy(array, 'Value').Value > 400 ? 400 : _.maxBy(array, 'Value').Value),\n          tir: TIRUtils.getTIRResult(dayArrays) ? (Number(TIRUtils.getTIRResult(dayArrays).normalRate) * 100).toFixed(1) : ''\n        });\n        currentDate.setDate(new Date(currentDate).getDate() + 1);\n      }\n      this.dayList = dayList;\n      this.$store.dispatch('setDay', {\n        key: data[0],\n        value: dayList\n      }); //处理完数据存vuex\n      this.$nextTick(() => {\n        this.getOption(this.dayList);\n      });\n    },\n    // 渲染数据\n    getOption(data) {\n      let dayList = data;\n      let gridW = Math.floor((this.$refs.day.clientWidth - 240) / 7);\n      this.gridW = gridW;\n      let xData = Array.from({\n        length: 60 * 24\n      }, (item, index) => index);\n      let max = data[0].max < 13.9 ? 13.9 : data[0].max;\n      this.option = {\n        tooltip: {\n          show: true,\n          trigger: 'axis',\n          confine: true,\n          axisPointer: {\n            type: 'none',\n            axis: 'x'\n          },\n          formatter(params) {\n            let h = Math.floor(Number(params[0].axisValue) / 60) < 10 ? '0' + Math.floor(Number(params[0].axisValue) / 60) : Math.floor(Number(params[0].axisValue) / 60);\n            let m = Number(params[0].axisValue) % 60 < 10 ? '0' + Number(params[0].axisValue) % 60 : Number(params[0].axisValue) % 60;\n            let moment = h + ':' + m;\n            let html = \"<div class='tooltip-box' >\" + \" <div class='tooltips-val'>\" + \" <span class='tooltips-val-num'>\" + params[0].value + \"</span>mmol/L\" + \"</div>\" + \" <div class='tooltips-date'>\" + dayList[params[0].axisIndex].day + ' ' + moment + \" </div>\" + \" </div>\";\n            return html;\n          },\n          extraCssText: 'box-shadow: 0 2px 10px rgba(195,245,247,1);'\n        },\n        title: [],\n        grid: [],\n        xAxis: [],\n        yAxis: [],\n        visualMap: [],\n        series: []\n      };\n      dayList.forEach((item, index) => {\n        if (index > 13) {\n          return;\n        }\n        this.option.title.push({\n          text: item.tir ? ['{date|' + item.day + '}{tir|TIR:' + item.tir + '%}'] : ['{date|' + item.day + '}{tir|TIR:--}'],\n          left: index == 0 ? 90 : index < 7 && index > 0 ? index * (gridW + 15) + 90 : (index - 7) * (gridW + 15) + 90,\n          top: index >= 7 ? 172 : 2,\n          textStyle: {\n            rich: {\n              date: {\n                fontSize: 16,\n                color: '#333',\n                width: (gridW - 10) / 2,\n                align: 'left'\n              },\n              tir: {\n                fontSize: 20,\n                color: '#333',\n                width: (gridW - 10) / 2,\n                align: 'right'\n              }\n            }\n          }\n        });\n        this.option.grid.push({\n          show: false,\n          left: index == 0 ? 90 : index < 7 && index > 0 ? index * (gridW + 15) + 90 : (index - 7) * (gridW + 15) + 90,\n          right: 0,\n          top: index >= 7 ? 170 : 0,\n          width: gridW,\n          height: 120,\n          borderColor: '#666',\n          borderWidth: 0.5\n        });\n        this.option.xAxis.push({\n          type: 'category',\n          gridIndex: index,\n          show: true,\n          axisLine: {\n            show: false\n          },\n          data: xData,\n          axisLabel: {\n            formatter: function (value, indexs) {\n              if (indexs == 0) {\n                return '00:00';\n              } else if (indexs == item.value.length - 1 && index == 6 || indexs == item.value.length - 1 && index == 13) {\n                return '00:00';\n              } else if (indexs == item.value.length / 2 - 1) {\n                return '12:00';\n              }\n            },\n            interval: 0,\n            color: 'var(--color-black-60)',\n            fontSize: 16,\n            margin: 15\n          },\n          axisTick: {\n            show: false\n          }\n        });\n        this.option.yAxis.push({\n          type: 'value',\n          show: false,\n          gridIndex: index,\n          min: 0,\n          max: Math.ceil(max / 3) * 3 + 8\n        });\n        this.option.visualMap.push({\n          type: \"piecewise\",\n          show: false,\n          pieces: [{\n            gt: 0,\n            lt: 3.9,\n            color: \"var(--color-error)\" //大于0小于12为红色\n          }, {\n            gt: 13.9,\n            color: \"var(--color-warning\" //大于12区间为红色\n          }, {\n            gt: 3.9,\n            lt: 13.9,\n            color: \"var(--color-primary\" //大于12区间为红色\n          }]\n        });\n        this.option.series.push({\n          type: 'line',\n          data: item.value,\n          xAxisIndex: index,\n          yAxisIndex: index,\n          showSymbol: _.compact(item.value).length > 1 ? false : true,\n          symbolSize: 1,\n          symbol: 'circle',\n          emphasis: {\n            disabled: true\n          },\n          lineStyle: {\n            width: 1\n          },\n          markLine: {\n            symbol: 'none',\n            // animation:false,\n            data: [\n            // {\n            //     xAxis:xData.length/2-1,\n            //     lineStyle: {\n            //         color: 'var(--color-black-10)',\n            //         width: 1,\n            //         type:'dashed'\n            //     },\n            //     label:{\n            //         show:false\n            //     }\n            // } ,\n            {\n              yAxis: 3.9,\n              lineStyle: {\n                width: 0\n              },\n              label: {\n                show: index == 0 || index == 7 ? true : false,\n                position: 'start',\n                distance: 14,\n                fontSize: 16,\n                color: '#666'\n              }\n            }, {\n              yAxis: 13.9,\n              lineStyle: {\n                width: 0\n              },\n              label: {\n                show: index == 0 || index == 7 ? true : false,\n                position: 'start',\n                fontSize: 16,\n                distance: 14,\n                color: '#666'\n              }\n            }]\n          },\n          markArea: {\n            data: [[{\n              yAxis: 3.9\n            }, {\n              yAxis: 13.9\n            }]],\n            itemStyle: {\n              color: 'rgba(50, 186, 192, 0.08)'\n            }\n          }\n        });\n      });\n    },\n    // 管理数据\n    handelIngs(data) {\n      console.log(data[0]);\n      let array = data[1];\n      // 将数组按天分割\n      let dayMap = new Map();\n      array.forEach(item => {\n        item.day = formatDate(item.DataTs * 1000, 'mm.dd');\n        item.week = formatDate(item.DataTs * 1000, 'WW');\n        item.moment = Number(formatDate(item.DataTs * 1000, 'HH')) * 60 + Number(formatDate(item.DataTs * 1000, 'MM'));\n        item.dayArray = new Array(24 * 60);\n        item.dayArray[item.moment] == GlucoseUtils.mgdlToMmol(item.Value);\n        item.dayArrayCopy = new Array(24 * 60);\n        item.dayArrayCopy[item.moment] = item.Value;\n        dayMap.has(item.day) ? dayMap.get(item.day).value[item.moment] = GlucoseUtils.mgdlToMmol(item.Value) : dayMap.set(item.day, {\n          value: item.dayArray,\n          week: item.week,\n          tir: TIRUtils.getTIRResult(item.dayArrayCopy) ? TIRUtils.getTIRResult(item.dayArrayCopy).normalRate : ''\n        });\n      });\n      // x轴数据\n      this.dayList = [...dayMap];\n      this.$store.dispatch('setDay', {\n        key: data[0],\n        value: [...dayMap]\n      }); //处理完数据存vuex\n      this.$nextTick(() => {\n        this.getOptions(this.dayList);\n      });\n    },\n    // 渲染数据\n    getOptions(data) {\n      let dayList = data;\n      let gridW = Math.floor((this.$refs.day.clientWidth - 240) / 7);\n      this.gridW = gridW;\n      let xData = Array.from({\n        length: 60 * 24\n      });\n      this.option = {\n        title: [],\n        grid: [],\n        xAxis: [],\n        yAxis: [],\n        visualMap: [],\n        series: []\n      };\n      dayList.forEach((item, index) => {\n        if (index > 13) {\n          return;\n        }\n        this.option.title.push({\n          text: ['{date|' + dayList[index][0] + '}{tir|TIR:' + dayList[index][1].tir + '%}'],\n          left: index == 0 ? 90 : index < 7 && index > 0 ? index * (gridW + 15) + 90 : (index - 7) * (gridW + 15) + 90,\n          top: index >= 7 ? 172 : 2,\n          textStyle: {\n            rich: {\n              date: {\n                fontSize: 16,\n                color: '#666',\n                width: (gridW - 10) / 2,\n                align: 'left'\n              },\n              tir: {\n                fontSize: 16,\n                color: '#666',\n                width: (gridW - 10) / 2,\n                align: 'right'\n              }\n            }\n          }\n        });\n        this.option.grid.push({\n          show: true,\n          borderRadius: 14,\n          left: index == 0 ? 90 : index < 7 && index > 0 ? index * (gridW + 15) + 90 : (index - 7) * (gridW + 15) + 90,\n          right: 0,\n          top: index >= 7 ? 170 : 0,\n          width: gridW,\n          height: 120,\n          borderColor: '#e5e5e5',\n          borderWidth: 0.5\n        });\n        this.option.xAxis.push({\n          type: 'category',\n          gridIndex: index,\n          show: true,\n          axisLine: {\n            show: false\n          },\n          data: xData,\n          axisLabel: {\n            formatter: function (value, indexs) {\n              if (indexs == 0) {\n                return '00:00';\n              } else if (indexs == dayList[index][1].value.length - 1 && index == 6 || indexs == dayList[index][1].value.length - 1 && index == 13) {\n                return '00:00';\n              } else if (indexs == dayList[index][1].value.length / 2 - 1) {\n                return '12:00';\n              }\n            },\n            interval: 0,\n            color: 'var(--color-black-40)',\n            fontSize: 16,\n            margin: 15\n          },\n          axisTick: {\n            show: false\n          }\n        });\n        this.option.yAxis.push({\n          type: 'value',\n          show: false,\n          gridIndex: index,\n          min: 0,\n          max: 16\n        });\n        this.option.visualMap.push({\n          type: \"piecewise\",\n          show: false,\n          pieces: [{\n            gt: 0,\n            lt: 3.9,\n            color: \"var(--color-error)\" //大于0小于12为红色\n          }, {\n            gt: 10,\n            color: \"var(--color-warning\" //大于12区间为红色\n          }, {\n            gt: 3.9,\n            lt: 10,\n            color: \"var(--color-primary\" //大于12区间为红色\n          }]\n        });\n        this.option.series.push({\n          type: 'line',\n          data: dayList[index][1].value,\n          xAxisIndex: index,\n          yAxisIndex: index,\n          showSymbol: false,\n          lineStyle: {\n            width: 1\n          },\n          markLine: {\n            symbol: 'none',\n            animation: false,\n            data: [{\n              xAxis: xData.length / 2 - 1,\n              lineStyle: {\n                color: 'var(--color-black-10)',\n                width: 1,\n                type: 'dashed'\n              },\n              label: {\n                show: false\n              }\n            }, {\n              yAxis: 3.9,\n              lineStyle: {\n                width: 0\n              },\n              label: {\n                show: index == 0 || index == 7 ? true : false,\n                position: 'start',\n                distance: 14,\n                fontSize: 16,\n                color: '#666'\n              }\n            }, {\n              yAxis: 10,\n              lineStyle: {\n                width: 0\n              },\n              label: {\n                show: index == 0 || index == 7 ? true : false,\n                position: 'start',\n                fontSize: 16,\n                distance: 14,\n                color: '#666'\n              }\n            }]\n          },\n          markArea: {\n            data: [[{\n              yAxis: 3.9\n            }, {\n              yAxis: 10\n            }]],\n            itemStyle: {\n              color: 'rgba(50, 186, 192, 0.08)'\n            }\n          }\n        });\n      });\n    }\n  },\n  beforeDestroy() {\n    this.$bus.$off('getDatas');\n    this.$bus.$off('getVuexTag');\n  }\n};","map":{"version":3,"names":["TChart","hasEventListener","formatDate","formatTime","TIRUtils","GlucoseUtils","Divider","data","initOptions","renderer","option","tooltip","show","trigger","confine","title","grid","xAxis","yAxis","visualMap","series","dayList","week","gridW","components","created","mounted","console","log","Date","$bus","$on","handelIng","result","$store","state","report","day","$nextTick","getOption","methods","s_date","split","e_date","arrays","_","uniqBy","array","filter","val","Value","currentDate","dayArray","Array","dayArrays","forEach","item","moment","Number","DataTs","value","mgdlToMmol","push","max","maxBy","tir","getTIRResult","normalRate","toFixed","setDate","getDate","dispatch","key","Math","floor","$refs","clientWidth","xData","from","length","index","axisPointer","type","axis","formatter","params","h","axisValue","m","html","axisIndex","extraCssText","text","left","top","textStyle","rich","date","fontSize","color","width","align","right","height","borderColor","borderWidth","gridIndex","axisLine","axisLabel","indexs","interval","margin","axisTick","min","ceil","pieces","gt","lt","xAxisIndex","yAxisIndex","showSymbol","compact","symbolSize","symbol","emphasis","disabled","lineStyle","markLine","label","position","distance","markArea","itemStyle","handelIngs","dayMap","Map","dayArrayCopy","has","get","set","getOptions","borderRadius","animation","beforeDestroy","$off"],"sources":["src/views/components/Chart/DayChart.vue"],"sourcesContent":["<template>\n    <div>\n        <div class='day-box' ref='day' id='day-box'>\n            <div class='day-item-box' v-if='dayList.length>0'>\n                <div class='day-item'  v-for='(item,index) in dayList' :key='index' :style=\"{width:gridW+'px'}\" >\n                    <div class='day-week' >{{item.week}}</div>\n                    <div class='day-grid-border'></div>\n                </div>\n            </div>\n            <t-chart\n                style=\"width: 100%;height:460px;\"\n                :option=\"option\"\n                :init-options=\"initOptions\"\n                theme=\"tduck-echarts-theme\"\n            />\n        </div>\n    </div>\n</template>\n<script>\nimport TChart from '@/views/components/TChart'\nimport { hasEventListener } from \"@/utils/utils\";\nimport {formatDate,formatTime} from '@/utils/formatTime'\nimport { TIRUtils } from \"@/utils/algorithm/TIR\";\nimport { GlucoseUtils } from \"@/utils/algorithm/Glucose\";\nimport { Divider } from 'element-ui';\nexport default {\n    data(){\n        return{\n            initOptions: {\n                renderer: 'svg'\n            },\n            option: {\n                tooltip:{\n                    show:true,\n                    trigger:'axis',\n                    confine:true\n\n                },\n                title:[],\n                grid:[],\n                xAxis: [],\n                yAxis: [],\n                visualMap:[],\n                series: [],\n            },\n            dayList:[],\n            week:[],\n            gridW:0\n        }\n    },\n    components: {\n        TChart\n    },\n    created(){\n        \n    },\n    mounted(){\n        console.log(formatTime(new Date()),'组件渲染完成') \n        // 监听云数据 \n        this.$bus.$on('getDatas',(data)=>{\n            this.handelIng(data)  \n        })\n        // 监听vuex数据\n        this.$bus.$on('getVuexTag',(data)=>{\n            let result  = this.$store.state.report.day[data]\n            this.dayList = result\n            this.$nextTick(()=>{\n                this.getOption(result)\n            })\n        })\n    },\n    methods:{\n         /**\n         * 循环对比选中的开始时间和结束时间，有数据插入，没有数据为空\n         * currentDate 记录开始时间，每次循环完成加一天\n         * dayList 分割后最终的数据数组\n         * dayList 参数集 day:日期 week:周 value:按时刻分割的数据 tir:每日的tir max:所有数据的最大值，大于400则等于400\n         * value = dayArray 画图需要的按时刻分割的1440的空数组(一分钟一个数据点，一天1440个数据点对应1440个时刻)，需要把大于400低于40的值置为40和400\n         * dayArrays 计算tir所需要的数组，不需要重新赋值\n         */\n        handelIng(data){\n            let s_date = data[0].split('/')[0]\n            let e_date = data[0].split('/')[1]\n            let arrays = _.uniqBy(data[1],'DataTs') //去重\n            let array = _.filter(arrays,function(val){  //过滤掉无效数据\n                return val.Value>=20&&val.Value<=800\n            })\n            \n            let currentDate = new Date(s_date); \n            let dayList = [] \n            while (currentDate <= new Date(e_date)) {\n                let dayArray =  new Array(24*60)\n                let dayArrays = new Array(24*60)\n                 array.forEach(item=>{\n                    let moment = Number(formatDate(item.DataTs*1000,'HH'))*60+Number(formatDate(item.DataTs*1000,'MM'))\n                    let value = item.Value\n                    if(item.Value>400&&item.Value<=800)value = 400\n                    if(item.Value>=20&&item.Value<40)value = 40\n                    if(formatDate(item.DataTs*1000,'mm.dd') == formatDate(currentDate,'mm.dd')){\n                        dayArray[moment] = value?GlucoseUtils.mgdlToMmol(value):null\n                        dayArrays[moment] = item.Value\n                    }\n                })\n                dayList.push({\n                    day: formatDate(currentDate,'mm.dd'),\n                    week: formatDate(currentDate,'WW'),\n                    value:dayArray,\n                    max:GlucoseUtils.mgdlToMmol(_.maxBy(array,'Value').Value>400?400:_.maxBy(array,'Value').Value),\n                    tir:TIRUtils.getTIRResult(dayArrays)?(Number(TIRUtils.getTIRResult(dayArrays).normalRate)*100).toFixed(1):''\n                })\n                currentDate.setDate( new Date(currentDate).getDate() + 1);\n            }\n           \n            this.dayList = dayList\n            this.$store.dispatch('setDay',{key:data[0],value:dayList}) //处理完数据存vuex\n            this.$nextTick(()=>{\n                this.getOption(this.dayList)\n            })\n        },\n         // 渲染数据\n        getOption(data){\n            let dayList = data\n            let gridW = Math.floor((this.$refs.day.clientWidth-240)/7)\n            this.gridW = gridW\n            let xData = Array.from({length:60*24},(item, index) => index)\n            let max = data[0].max<13.9?13.9:data[0].max\n            this.option = {\n                tooltip :{\n                    show:true,\n                    trigger:'axis',\n                    confine:true,\n                    axisPointer:{\n                        type:'none',\n                        axis:'x'\n                    },\n                    formatter(params){\n                        let h =  Math.floor(Number(params[0].axisValue)/60)<10 ? '0'+ Math.floor(Number(params[0].axisValue)/60) : Math.floor(Number(params[0].axisValue)/60) \n                        let m =  Number(params[0].axisValue)%60 < 10 ? '0' + Number(params[0].axisValue)%60 : Number(params[0].axisValue)%60\n                        let moment = h+':'+m\n                        let html =  \"<div class='tooltip-box' >\"+\n                           \" <div class='tooltips-val'>\"+\n                               \" <span class='tooltips-val-num'>\"+params[0].value+\"</span>mmol/L\"+\n                            \"</div>\"+\n                           \" <div class='tooltips-date'>\"+\n                              dayList[params[0].axisIndex].day +' '+ moment+\n                           \" </div>\"+\n                       \" </div>\"\n                       \n                        return html\n                    },\n                    extraCssText: 'box-shadow: 0 2px 10px rgba(195,245,247,1);'\n                },\n                title:[],\n                grid:[],\n                xAxis: [],\n                yAxis: [],\n                visualMap:[],\n                series: [],\n            }\n            dayList.forEach((item,index)=>{\n                if(index>13){\n                    return ;\n                }\n                this.option.title.push({\n                    text:item.tir?['{date|'+item.day+'}{tir|TIR:'+item.tir+'%}']:['{date|'+item.day+'}{tir|TIR:--}'],\n                    left:index==0?90:index<7&&index>0?index*(gridW+15)+90:(index-7)*(gridW+15)+90,\n                    top:index>=7?172:2,\n                    textStyle:{\n                        rich:{\n                            date:{\n                                fontSize:16,\n                                color:'#333',\n                                width:(gridW-10)/2,\n                                align:'left'\n                            },\n                            tir:{\n                                fontSize:20,\n                                color:'#333',\n                                width:(gridW-10)/2,\n                                align:'right'\n                            }\n                        }\n                    },\n                })\n                this.option.grid.push({   \n                        show:false,\n                        left:index==0?90:index<7&&index>0?index*(gridW+15)+90:(index-7)*(gridW+15)+90,\n                        right:0,\n                        top:index>=7?170:0,\n                        width:gridW,\n                        height:120,\n                        borderColor:'#666',\n                        borderWidth:0.5\n                })\n                this.option.xAxis.push({   \n                        type: 'category',\n                        gridIndex:index,\n                        show:true,\n                        axisLine:{\n                            show:false\n                        },\n                        data:xData,\n                        axisLabel:{\n                            formatter: function (value, indexs) {\n                                if(indexs==0){\n                                    return '00:00'\n                                }else if(indexs==item.value.length-1&&index==6||indexs==item.value.length-1&&index==13){\n                                    return '00:00'\n                                }else if(indexs==(item.value.length/2)-1){\n                                    return '12:00'\n                                }\n                            },\n                            interval:0,\n                            color: 'var(--color-black-60)',\n                            fontSize: 16, \n                            margin:15\n                        },\n                        axisTick:{\n                            show:false\n                        }\n                })\n                this.option.yAxis.push({   \n                        type: 'value',\n                        show:false,\n                        gridIndex:index,\n                        min:0,\n                        max:Math.ceil(max / 3) * 3 + 8\n                })\n                this.option.visualMap.push({\n                      type: \"piecewise\",\n                        show: false,\n                        pieces: [\n                            {\n                                gt: 0,\n                                lt: 3.9,\n                                color: \"var(--color-error)\",//大于0小于12为红色\n                            },\n                            {\n                                gt: 13.9,\n                                color: \"var(--color-warning\",//大于12区间为红色\n                            },{\n                                gt: 3.9,\n                                lt: 13.9,\n                                color: \"var(--color-primary\",//大于12区间为红色\n                            },\n                        ],\n                })\n                this.option.series.push(  \n                        {\n                        type: 'line',\n                        data:item.value,\n                        xAxisIndex:index,\n                        yAxisIndex:index,\n                        showSymbol:_.compact(item.value).length>1?false:true,\n                        symbolSize:1,\n                        symbol:'circle',\n                        emphasis:{\n                            disabled:true\n                        },\n                        lineStyle: {\n                            width: 1,\n                        },\n                        markLine:{\n                                symbol: 'none',\n                                // animation:false,\n                                data:[\n                                    // {\n                                    //     xAxis:xData.length/2-1,\n                                    //     lineStyle: {\n                                    //         color: 'var(--color-black-10)',\n                                    //         width: 1,\n                                    //         type:'dashed'\n                                    //     },\n                                    //     label:{\n                                    //         show:false\n                                    //     }\n                                    // } ,\n                                    {\n                                        yAxis:3.9,\n                                        lineStyle: {\n                                            width: 0,\n                                        },\n                                        label:{\n                                            show:index==0||index==7?true:false,\n                                            position:'start',\n                                            distance:14,\n                                            fontSize:16,\n                                            color:'#666',\n\n                                        }\n                                    } ,\n                                    {\n                                        yAxis:13.9,\n                                        lineStyle: {\n                                            width: 0,\n                                        },\n                                        label:{\n                                            show:index==0||index==7?true:false,\n                                            position:'start',\n                                            fontSize:16,\n                                            distance:14,\n                                            color:'#666'\n                                        }\n                                    } ,\n                                ]\n                        },\n                        markArea:{\n                            data:[\n                                [{\n                                    yAxis: 3.9\n                                },\n                                {   \n                                    yAxis: 13.9\n                                }]\n                            ],\n                            itemStyle:{\n                                color:'rgba(50, 186, 192, 0.08)'\n                            }\n                        },\n\n                    }\n                )\n            })\n        },\n         // 管理数据\n        handelIngs(data){\n            console.log(data[0])\n            let array = data[1]\n            // 将数组按天分割\n            let dayMap = new Map()\n             array.forEach(item=>{\n                item.day = formatDate(item.DataTs*1000,'mm.dd')\n                item.week = formatDate(item.DataTs*1000,'WW')\n                item.moment = Number(formatDate(item.DataTs*1000,'HH'))*60+Number(formatDate(item.DataTs*1000,'MM'))\n                item.dayArray = new Array(24*60)\n                item.dayArray[item.moment] ==GlucoseUtils.mgdlToMmol(item.Value)\n                item.dayArrayCopy = new Array(24*60)\n                item.dayArrayCopy[item.moment] =item.Value\n                dayMap.has(item.day) ? dayMap.get(item.day).value[item.moment]=GlucoseUtils.mgdlToMmol(item.Value) : dayMap.set(item.day, {value:item.dayArray,week:item.week,tir:TIRUtils.getTIRResult(item.dayArrayCopy)?TIRUtils.getTIRResult(item.dayArrayCopy).normalRate:''});\n            })\n            // x轴数据\n            this.dayList = [...dayMap]\n            this.$store.dispatch('setDay',{key:data[0],value:[...dayMap]}) //处理完数据存vuex\n            this.$nextTick(()=>{\n                this.getOptions(this.dayList)\n            })\n        },\n        // 渲染数据\n        getOptions(data){\n            let dayList = data\n            let gridW = Math.floor((this.$refs.day.clientWidth-240)/7)\n            this.gridW = gridW\n            let xData = Array.from({length:60*24})\n            this.option = {\n                title:[],\n                grid:[],\n                xAxis: [],\n                yAxis: [],\n                visualMap:[],\n                series: [],\n            }\n            dayList.forEach((item,index)=>{\n                if(index>13){\n                    return ;\n                }\n                this.option.title.push({\n                    text:['{date|'+dayList[index][0]+'}{tir|TIR:'+dayList[index][1].tir+'%}'],\n                    left:index==0?90:index<7&&index>0?index*(gridW+15)+90:(index-7)*(gridW+15)+90,\n                    top:index>=7?172:2,\n                    textStyle:{\n                        rich:{\n                            date:{\n                                fontSize:16,\n                                color:'#666',\n                                width:(gridW-10)/2,\n                                align:'left'\n                            },\n                            tir:{\n                                fontSize:16,\n                                color:'#666',\n                                width:(gridW-10)/2,\n                                align:'right'\n                            }\n                        }\n                    },\n                })\n                this.option.grid.push({   \n                        show:true,\n                        borderRadius:14,\n                        left:index==0?90:index<7&&index>0?index*(gridW+15)+90:(index-7)*(gridW+15)+90,\n                        right:0,\n                        top:index>=7?170:0,\n                        width:gridW,\n                        height:120,\n                        borderColor:'#e5e5e5',\n                        borderWidth:0.5\n                })\n                this.option.xAxis.push({   \n                        type: 'category',\n                        gridIndex:index,\n                        show:true,\n                        axisLine:{\n                            show:false\n                        },\n                        data:xData,\n                        axisLabel:{\n                            formatter: function (value, indexs) {\n                                if(indexs==0){\n                                    return '00:00'\n                                }else if(indexs==dayList[index][1].value.length-1&&index==6||indexs==dayList[index][1].value.length-1&&index==13){\n                                    return '00:00'\n                                }else if(indexs==(dayList[index][1].value.length/2)-1){\n                                    return '12:00'\n                                }\n                            },\n                            interval:0,\n                            color: 'var(--color-black-40)',\n                            fontSize: 16, \n                            margin:15\n                        },\n                        axisTick:{\n                            show:false\n                        }\n                })\n                this.option.yAxis.push({   \n                        type: 'value',\n                        show:false,\n                        gridIndex:index,\n                        min:0,\n                        max:16\n                })\n                this.option.visualMap.push({\n                      type: \"piecewise\",\n                        show: false,\n                        pieces: [\n                            {\n                                gt: 0,\n                                lt: 3.9,\n                                color: \"var(--color-error)\",//大于0小于12为红色\n                            },\n                            {\n                                gt: 10,\n                                color: \"var(--color-warning\",//大于12区间为红色\n                            },{\n                                gt: 3.9,\n                                lt: 10,\n                                color: \"var(--color-primary\",//大于12区间为红色\n                            },\n                        ],\n                })\n                this.option.series.push(  \n                        {\n                        type: 'line',\n                        data:dayList[index][1].value,\n                        xAxisIndex:index,\n                        yAxisIndex:index,\n                        showSymbol: false,\n                        lineStyle: {\n                        width: 1,\n                        },\n                        markLine:{\n                                symbol: 'none',\n                                animation:false,\n                                data:[\n                                    {\n                                        xAxis:xData.length/2-1,\n                                        lineStyle: {\n                                            color: 'var(--color-black-10)',\n                                            width: 1,\n                                            type:'dashed'\n                                        },\n                                        label:{\n                                            show:false\n                                        }\n                                    } ,\n                                    {\n                                        yAxis:3.9,\n                                        lineStyle: {\n                                            width: 0,\n                                        },\n                                        label:{\n                                            show:index==0||index==7?true:false,\n                                            position:'start',\n                                            distance:14,\n                                            fontSize:16,\n                                            color:'#666',\n\n                                        }\n                                    } ,\n                                    {\n                                        yAxis:10,\n                                        lineStyle: {\n                                            width: 0,\n                                        },\n                                        label:{\n                                            show:index==0||index==7?true:false,\n                                            position:'start',\n                                            fontSize:16,\n                                            distance:14,\n                                            color:'#666'\n                                        }\n                                    } ,\n                                ]\n                        },\n                        markArea:{\n                            data:[\n                                [{\n                                    yAxis: 3.9\n                                },\n                                {   \n                                    yAxis: 10\n                                }]\n                            ],\n                            itemStyle:{\n                                color:'rgba(50, 186, 192, 0.08)'\n                            }\n                        }\n                    }\n                )\n            })\n        },\n    },\n    \n    beforeDestroy(){\n        this.$bus.$off('getDatas')\n        this.$bus.$off('getVuexTag')\n    }\n}\n</script>\n<style >\n    .day-box{\n        display: flex;\n        align-items: center;\n        flex-wrap: wrap;\n    }\n    #day-box .day-item-box{\n        display: flex;\n        align-items: center;\n        padding:0 0 0 90px;\n        width:100%;\n        height:460px;\n        position: absolute;\n    }\n    #day-box .day-item{\n        position: relative;\n        margin-right:15px;\n    }\n    #day-box .day-week{\n        text-align: center;\n        font-size:var(--fontSize-big);\n        color:var(--color-black-80);\n        margin-bottom:10px;\n    }\n    #day-box .day-grid-border{\n        height:120px;\n        border:1px solid #666;\n        border-radius:10px;\n        width:100%;\n        position: absolute;\n        left:0;\n    }\n    #day-box .day-main{\n        width:180px;\n        height:120px;\n        position: relative;\n    }\n    #day-box .day-date-tir{\n        width:100%;\n        padding:2px 6px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        position: absolute;\n        left:0;\n        top:0;\n        color:var(--color-black-60);\n        font-size: var(--fontSize-big);\n    }\n    #day-box .day-target{\n        height: 66px;\n        display: flex;\n        flex-direction: column;\n        align-items:center ;\n        justify-content: space-between;\n        position: absolute;\n        top:35px;\n        left:-30px;\n        font-size:var(--fontSize-big);\n        color:var(--color-black-60);\n    }\n    #day-box .chart-box{\n        width:180px;\n        height:120px;\n        border:1px solid var(--color-black-10);\n        border-radius:10px;\n    }\n    #day-box .chart-x{\n        width:130px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        position: absolute;\n        bottom:0;\n        left:-20px;\n        font-size:var(--fontSize-big);\n        color:var(--color-black-40);\n    }\n    #day-box .chart-x-end{\n        width:220px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        position: absolute;\n        bottom:0;\n        left:-20px;\n        font-size:var(--fontSize-big);\n        color:var(--color-black-40);\n    }\n    #day-box .tooltip-box{\n        font-size:var(--fontSize-default);\n        color:var(--color-black-40);\n    }\n    #day-box .tooltips-val{\n        margin-bottom:4px;\n    }\n    #day-box .tooltips-val-num{\n        font-size:var(--fontSize-big);\n        color:var(--color-black-80);\n        padding-right:4px;\n    }\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}