{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { formatDate, formatTime } from '@/utils/formatTime';\nimport { mapGetters } from \"vuex\";\nimport { getAgpInfo, getEvent } from '@/api/dataApi';\nexport default {\n  data() {\n    return {\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近7天',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近14天',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 14);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近30天',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近90天',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n      //日期选择快速选项\n      agpDate: ['', ''],\n      //日期选中值\n      dayDate: 14,\n      //天数\n      checkAll: false,\n      //下载打印全选\n      isIndeterminate: true,\n      //全选框配置\n      downloadList: ['AGP报告', '每日分析', '多日血糖分析', '报告解读', '饮食分析'],\n      //下载，打印选项\n      checkedDowns: [],\n      //复选框选中项\n      dialogVisible: false,\n      //下载打印弹窗开关\n      dialogType: \"\",\n      // print 打印 download 下载\n      empty: true,\n      list: []\n    };\n  },\n  computed: {\n    ...mapGetters(['unit', 'targetScope'])\n  },\n  mounted() {\n    let end_ts = new Date();\n    let start_ts = new Date().setDate(end_ts.getDate() - 13);\n    this.chooseDay(new Date(start_ts), end_ts);\n    this.agpDate = [formatDate(start_ts, \"YYYY-mm-dd\"), formatDate(end_ts, \"YYYY-mm-dd\")];\n    this.chooseGetData();\n  },\n  methods: {\n    // 选择时间\n    changeDate(e) {\n      this.chooseDay(new Date(e[0]), new Date(e[1]));\n      this.chooseGetData();\n    },\n    // 选择天数\n    chooseDay(date1, date2) {\n      let s_date = date1.setHours(0, 0, 0) / 1000;\n      let e_date = date2.setHours(23, 59, 59) / 1000;\n      let oneDay = 24 * 60 * 60; // 每天的毫秒数\n      let diff = Math.abs(s_date - e_date); // 计算差值的绝对值\n      this.dayDate = Math.ceil(diff / oneDay);\n    },\n    // 判断从哪里拉取数据\n    chooseGetData() {\n      if (_.indexOf(this.$store.state.report.chooseDateList, this.agpDate.join('/')) == -1) {\n        this.getData();\n        this.getEventList();\n      } else {\n        let result = this.$store.state.report.data[this.agpDate.join('/')];\n        let events = this.$store.state.report.events[this.agpDate.join('/')];\n        if (result.length > 0) {\n          this.empty = false;\n        } else {\n          this.empty = true;\n        }\n        this.handelTemplateDay(result);\n        this.handelEventDay(events);\n        this.info = this.$store.state.report.info[this.agpDate.join('/')];\n      }\n    },\n    // 从云拉取数据\n    getData() {\n      const loading = this.$loading({\n        lock: true,\n        text: 'Loading',\n        spinner: 'el-icon-loading',\n        background: 'rgba(0,0,0, 0.7)'\n      });\n      let s = new Date(this.agpDate[0]);\n      let e = new Date(this.agpDate[1]);\n      let start_ts = s.setHours(0, 0, 0) / 1000;\n      let end_ts = e.setHours(23, 59, 59) / 1000;\n      getAgpInfo({\n        start_ts: start_ts,\n        end_ts: end_ts\n      }).then(response => {\n        if (response.code == 1000) {\n          loading.close();\n          if (response.data.devices.length > 0) {\n            response.data.devices.forEach(item => {\n              item.upDate = formatDate(item.update_ts, \"YYYY年mm月dd日\");\n            });\n          }\n          let params = {\n            nickname: response.data.nickname,\n            diabetes_type: response.data.diabetes_type,\n            age: response.data.age,\n            diabetes_year: response.data.diabetes_year,\n            glucose_range_lower_limit: response.data.glucose_range_lower_limit,\n            glucose_range_lupper_limit: response.data.glucose_range_lupper_limit,\n            device: response.data.devices\n          };\n          this.$store.dispatch('setInfo', {\n            key: this.agpDate.join('/'),\n            value: params\n          }); //处理完数据存vuex\n          this.$store.dispatch('setTargetScope', [response.data.glucose_range_lower_limit, response.data.glucose_range_lupper_limit]);\n          this.$store.dispatch('setUnit', response.data.glucose_unit == 0 ? 'mmol/L' : 'mg/dL');\n          this.info = params;\n          let arrayData = response.data.datas;\n          if (arrayData.length > 0) {\n            console.log(formatTime(new Date()), '得到数据');\n            this.empty = false;\n            this.handelTemplateDay(this.handleData(arrayData, start_ts, end_ts));\n            this.$store.dispatch('setChooseDateList', this.agpDate.join('/'));\n          } else {\n            this.empty = true;\n          }\n          this.list = arrayData;\n        } else {\n          loading.close();\n          this.$message({\n            type: 'error',\n            message: response.msg\n          });\n        }\n      }).catch(res => {\n        loading.close();\n        console.log(res);\n      });\n    },\n    // 云拉取事件\n    getEventList() {\n      let s = new Date(this.agpDate[0]);\n      let e = new Date(this.agpDate[1]);\n      let start_ts = s.setHours(0, 0, 0) / 1000;\n      let end_ts = e.setHours(23, 59, 59) / 1000;\n      getEvent({\n        event_type: -1,\n        start_ts: start_ts,\n        end_ts: end_ts\n      }).then(response => {\n        if (response.code == 1000) {\n          this.$store.dispatch('setEvents', {\n            key: this.agpDate.join('/'),\n            value: response.data\n          }); //处理完数据存vuex\n          this.handelEventDay(response.data);\n        } else {\n          this.$message({\n            type: 'error',\n            message: response.msg\n          });\n        }\n      }).catch(res => {});\n    },\n    processArray(arr, interval) {\n      let result = [];\n      for (let i = 0; i < arr.length - 1; i++) {\n        result.push(arr[i]);\n        let diff = arr[i + 1].DataTs - arr[i].DataTs;\n        let addTs = arr[i].DataTs + interval;\n        while (diff > interval) {\n          result.push({\n            DataTs: addTs,\n            value: undefined\n          });\n          diff = arr[i + 1].DataTs - addTs;\n          addTs += interval;\n        }\n      }\n      result.push(arr[arr.length - 1]);\n      return result;\n    },\n    filterArray(data) {\n      const result = [];\n      const seenTimes = new Set();\n      let levelLowInvalidMg = 20;\n      let levelHighInvalidMg = 800;\n      let levelTooLowMg = 40;\n      let levelTooHighMg = 400;\n      data.forEach(item => {\n        const timeStr = formatDate(item.DataTs * 1000, 'YYYY-mm-dd HH:MM');\n        if (!seenTimes.has(timeStr)) {\n          seenTimes.add(timeStr);\n          if (item.value > levelLowInvalidMg || item.value < levelHighInvalidMg) {\n            result.push({\n              ...item,\n              value: undefined\n            });\n          } else if (item.value < levelTooLowMg) {\n            result.push({\n              ...item,\n              value: levelTooLowMg\n            });\n          } else if (item.value > levelTooHighMg) {\n            result.push({\n              ...item,\n              value: levelTooHighMg\n            });\n          } else {\n            result.push(item);\n          }\n        }\n      });\n      return result;\n    },\n    handleData(objects, s_ts, e_ts) {\n      let measuringInterval = 60;\n      objects = this.processArray(objects, measuringInterval);\n      objects = this.filterArray(objects);\n      let startTs = objects[0].DataTs;\n      while (startTs - measuringInterval >= s_ts) {\n        objects.unshift({\n          DataTs: startTs - measuringInterval,\n          value: undefined\n        });\n        startTs = startTs - measuringInterval;\n      }\n      let endTs = objects[objects.length - 1].DataTs;\n      while (endTs + measuringInterval < e_ts) {\n        objects.push({\n          DataTs: endTs + measuringInterval,\n          value: undefined\n        });\n        endTs = endTs + measuringInterval;\n      }\n      this.$store.dispatch('setData', {\n        key: this.agpDate.join('/'),\n        value: objects\n      }); //处理完数据存vuex\n      return objects;\n    },\n    // 全部事件分割为每天事件\n    handelEventDay(datas) {\n      let data = _.clone(datas);\n      // let data = _.concat(_.clone(datas),_.clone(datas))\n      let unit = this.unit;\n      let eventList = {};\n      let sameList = {};\n      let repeatNum = 1;\n      data.forEach(item => {\n        let key = formatDate(item.event_ts * 1000, 'YYYY-mm-dd');\n        let zeroTs = new Date(key).setHours(0, 0, 0) / 1000;\n        item.xIndex = (item.event_ts - zeroTs) / 60;\n        if (sameList[item.event_ts]) {\n          repeatNum++;\n          sameList[item.event_ts].push(item);\n        } else {\n          repeatNum = 1;\n          sameList[item.event_ts] = [item];\n        }\n        item.yPosition = unit == 'mmol/L' ? 1 * repeatNum : 18 * repeatNum;\n        if (eventList[key]) {\n          eventList[key].push(item);\n        } else {\n          eventList[key] = [item];\n        }\n      });\n      this.eventList = eventList;\n    },\n    upload() {\n      this.$router.push('/upLoad');\n    },\n    // 选择下载。打印的内容\n    handleCheckedCitiesChange(val) {\n      let checkedCount = val.length;\n      this.checkAll = checkedCount === this.downloadList.length;\n      this.isIndeterminate = checkedCount > 0 && checkedCount < this.downloadList.length;\n    },\n    // 全选\n    handleCheckAllChange(val) {\n      this.checkedDowns = val ? this.downloadList : [];\n      this.isIndeterminate = false;\n    },\n    // 打印\n    async print() {\n      this.dialogVisible = true;\n      this.dialogType = 'print';\n    },\n    // 导出pdf\n    handleExport() {\n      this.dialogVisible = true;\n      this.dialogType = 'export';\n    }\n  }\n};","map":{"version":3,"names":["formatDate","formatTime","mapGetters","getAgpInfo","getEvent","data","pickerOptions","shortcuts","text","onClick","picker","end","Date","start","setTime","getTime","$emit","agpDate","dayDate","checkAll","isIndeterminate","downloadList","checkedDowns","dialogVisible","dialogType","empty","list","computed","mounted","end_ts","start_ts","setDate","getDate","chooseDay","chooseGetData","methods","changeDate","e","date1","date2","s_date","setHours","e_date","oneDay","diff","Math","abs","ceil","_","indexOf","$store","state","report","chooseDateList","join","getData","getEventList","result","events","length","handelTemplateDay","handelEventDay","info","loading","$loading","lock","spinner","background","s","then","response","code","close","devices","forEach","item","upDate","update_ts","params","nickname","diabetes_type","age","diabetes_year","glucose_range_lower_limit","glucose_range_lupper_limit","device","dispatch","key","value","glucose_unit","arrayData","datas","console","log","handleData","$message","type","message","msg","catch","res","event_type","processArray","arr","interval","i","push","DataTs","addTs","undefined","filterArray","seenTimes","Set","levelLowInvalidMg","levelHighInvalidMg","levelTooLowMg","levelTooHighMg","timeStr","has","add","objects","s_ts","e_ts","measuringInterval","startTs","unshift","endTs","clone","unit","eventList","sameList","repeatNum","event_ts","zeroTs","xIndex","yPosition","upload","$router","handleCheckedCitiesChange","val","checkedCount","handleCheckAllChange","print","handleExport"],"sources":["/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/src/views/report/mixin.js"],"sourcesContent":["import {formatDate,formatTime} from '@/utils/formatTime'\nimport {mapGetters} from \"vuex\"\nimport {getAgpInfo,getEvent} from '@/api/dataApi'\n\nexport default{\n    data(){\n        return{\n            pickerOptions: {\n                shortcuts: [{\n                    text: '最近7天',\n                    onClick(picker) {\n                    const end = new Date();\n                    const start = new Date();\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n                    picker.$emit('pick', [start, end]);\n                    }\n                },{\n                    text: '最近14天',\n                    onClick(picker) {\n                    const end = new Date();\n                    const start = new Date();\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 14);\n                    picker.$emit('pick', [start, end]);\n                    }\n                }, {\n                    text: '最近30天',\n                    onClick(picker) {\n                    const end = new Date();\n                    const start = new Date();\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n                    picker.$emit('pick', [start, end]);\n                    }\n                }, {\n                    text: '最近90天',\n                    onClick(picker) {\n                    const end = new Date();\n                    const start = new Date();\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n                    picker.$emit('pick', [start, end]);\n                    }\n                }]\n            },  //日期选择快速选项\n            agpDate:['',''], //日期选中值\n            dayDate:14,//天数\n            checkAll:false, //下载打印全选\n            isIndeterminate: true, //全选框配置\n            downloadList:['AGP报告','每日分析','多日血糖分析','报告解读','饮食分析'], //下载，打印选项\n            checkedDowns:[], //复选框选中项\n            dialogVisible:false, //下载打印弹窗开关\n            dialogType:\"\", // print 打印 download 下载\n            empty:true,\n            list:[],\n\n        }\n    },\n    computed:{\n        ...mapGetters([\n           'unit','targetScope']),\n    },\n    mounted() {\n        let end_ts = new Date()\n        let start_ts = new Date().setDate(end_ts.getDate() - 13)\n        this.chooseDay(new Date(start_ts),end_ts)\n        this.agpDate = [formatDate(start_ts,\"YYYY-mm-dd\"), formatDate(end_ts,\"YYYY-mm-dd\")] \n        this.chooseGetData()\n    },\n    methods: {\n         // 选择时间\n        changeDate(e){\n            this.chooseDay(new Date(e[0]), new Date(e[1]))\n            this.chooseGetData()\n        },\n        // 选择天数\n        chooseDay(date1,date2){\n            let s_date = date1.setHours(0,0,0)/1000\n            let e_date = date2.setHours(23,59,59)/1000\n            let oneDay = 24 * 60 * 60 ; // 每天的毫秒数\n            let diff = Math.abs(s_date - e_date); // 计算差值的绝对值\n            this.dayDate  = Math.ceil(diff / oneDay)\n        },\n        // 判断从哪里拉取数据\n        chooseGetData(){\n            if( _.indexOf(this.$store.state.report.chooseDateList,this.agpDate.join('/'))==-1){\n                this.getData()\n                this.getEventList()\n            }else{\n                let result  = this.$store.state.report.data[this.agpDate.join('/')]\n                let events  = this.$store.state.report.events[this.agpDate.join('/')]\n                if(result.length>0){\n                    this.empty = false\n                }else{\n                    this.empty = true\n                }\n                this.handelTemplateDay(result)\n                this.handelEventDay(events)\n                this.info =  this.$store.state.report.info[this.agpDate.join('/')]\n            }\n        },\n        // 从云拉取数据\n        getData(){\n            const loading = this.$loading({\n                lock: true,\n                text: 'Loading',\n                spinner: 'el-icon-loading',\n                background: 'rgba(0,0,0, 0.7)'\n            });\n            let s = new Date(this.agpDate[0])\n            let e = new Date(this.agpDate[1])\n            let start_ts = s.setHours(0,0,0)/1000\n            let end_ts = e.setHours(23,59,59)/1000\n            getAgpInfo({start_ts:start_ts,end_ts:end_ts}).then(response => {\n                    if(response.code == 1000){\n                        loading.close()\n                        if(response.data.devices.length>0){\n                            response.data.devices.forEach(item=>{\n                                item.upDate = formatDate(item.update_ts,\"YYYY年mm月dd日\")\n                            })\n                        }\n                        let params = {\n                            nickname:response.data.nickname,\n                            diabetes_type:response.data.diabetes_type,\n                            age:response.data.age,\n                            diabetes_year:response.data.diabetes_year,\n                            glucose_range_lower_limit:response.data.glucose_range_lower_limit,\n                            glucose_range_lupper_limit:response.data.glucose_range_lupper_limit,\n                            device:response.data.devices\n                        }\n                        this.$store.dispatch('setInfo',{key:this.agpDate.join('/'),value:params}) //处理完数据存vuex\n                        this.$store.dispatch('setTargetScope',[response.data.glucose_range_lower_limit,response.data.glucose_range_lupper_limit])\n                        this.$store.dispatch('setUnit',response.data.glucose_unit==0?'mmol/L':'mg/dL')\n                        this.info = params\n\n                        let arrayData = response.data.datas\n                       \n                        if(arrayData.length>0){\n                            console.log(formatTime(new Date()),'得到数据')   \n                            this.empty = false\n                            this.handelTemplateDay(this.handleData(arrayData,start_ts,end_ts))\n                            this.$store.dispatch('setChooseDateList',this.agpDate.join('/'))\n                        }else{\n                            this.empty = true\n                        }\n                        this.list = arrayData\n\n                    }else{\n                        loading.close()\n                        this.$message({\n                            type: 'error',\n                            message: response.msg\n                        });\n                    }\n            }).catch((res) => {\n                loading.close()\n                console.log(res)\n            })\n        },\n        // 云拉取事件\n        getEventList(){\n            let s = new Date(this.agpDate[0])\n            let e = new Date(this.agpDate[1])\n            let start_ts = s.setHours(0,0,0)/1000\n            let end_ts = e.setHours(23,59,59)/1000\n            getEvent({event_type:-1,start_ts:start_ts,end_ts:end_ts}).then(response => {\n                if(response.code == 1000){\n                    this.$store.dispatch('setEvents',{key:this.agpDate.join('/'),value:response.data}) //处理完数据存vuex\n                    this.handelEventDay(response.data)\n\n                }else{\n                    this.$message({\n                        type: 'error',\n                        message: response.msg\n                    });\n                }\n            }).catch((res) => {\n            })\n        },\n        processArray(arr, interval) {\n            let result = [];\n\n            for (let i = 0; i < arr.length - 1; i++) {\n                result.push(arr[i]);\n\n                let diff = arr[i + 1].DataTs - arr[i].DataTs;\n                let addTs = arr[i].DataTs + interval;\n                while (diff > interval) {\n                result.push({DataTs: addTs, value: undefined});\n                diff = arr[i + 1].DataTs - addTs;\n                addTs += interval;\n                }\n            }\n            result.push(arr[arr.length - 1]);\n\n            return result;\n        },\n\n        filterArray  (data) {\n            const result = [];\n\n            const seenTimes = new Set();\n            let levelLowInvalidMg = 20\n            let levelHighInvalidMg = 800\n            let levelTooLowMg = 40\n            let levelTooHighMg = 400\n            data.forEach(item => {\n                const timeStr = formatDate(item.DataTs*1000,'YYYY-mm-dd HH:MM')\n\n                if (!seenTimes.has(timeStr)) {\n                seenTimes.add(timeStr);\n                if (item.value > levelLowInvalidMg || item.value < levelHighInvalidMg) {\n                    result.push({...item, value: undefined});\n                } else if (item.value < levelTooLowMg) {\n                    result.push({\n                    ...item,\n                    value: levelTooLowMg,\n                    });\n                } else if (item.value > levelTooHighMg) {\n                    result.push({\n                    ...item,\n                    value: levelTooHighMg,\n                    });\n                } else {\n                    result.push(item);\n                }\n                }\n            });\n\n            return result;\n        },\n\n        handleData (objects, s_ts, e_ts)  {\n            let measuringInterval = 60\n            objects = this.processArray(objects, measuringInterval);\n            objects = this.filterArray(objects);\n\n            let startTs = objects[0].DataTs;\n            while (startTs - measuringInterval >= s_ts) {\n                objects.unshift({\n                DataTs: startTs - measuringInterval,\n                value: undefined,\n                });\n                startTs = startTs - measuringInterval;\n            }\n\n            let endTs = objects[objects.length - 1].DataTs;\n            while (endTs + measuringInterval < e_ts) {\n                objects.push({\n                DataTs: endTs + measuringInterval,\n                value: undefined,\n                });\n                endTs = endTs + measuringInterval;\n            }\n            this.$store.dispatch('setData',{key:this.agpDate.join('/'),value:objects}) //处理完数据存vuex\n            return objects;\n        },\n         // 全部事件分割为每天事件\n         handelEventDay(datas){\n            let data = _.clone(datas)\n            // let data = _.concat(_.clone(datas),_.clone(datas))\n            let unit = this.unit\n            let eventList ={};\n            let sameList = {}\n            let repeatNum = 1\n            data.forEach(item=>{\n                let key = formatDate(item.event_ts*1000,'YYYY-mm-dd')\n                let zeroTs = new Date(key).setHours(0,0,0)/1000\n                item.xIndex = (item.event_ts-zeroTs)/60\n                if(sameList[item.event_ts]){\n                    repeatNum++\n                    sameList[item.event_ts].push(item)\n                }else{\n                    repeatNum = 1\n                    sameList[item.event_ts] = [item]\n                }\n                item.yPosition = unit=='mmol/L'?1*repeatNum:18*repeatNum\n                if(eventList[key]){\n                    eventList[key].push(item)\n                }else{\n                    eventList[key] = [item]\n                }\n            })\n            this.eventList = eventList\n        },\n        upload(){\n            this.$router.push('/upLoad')\n        },\n          // 选择下载。打印的内容\n        handleCheckedCitiesChange(val){\n            let checkedCount = val.length;\n            this.checkAll = checkedCount === this.downloadList.length;\n            this.isIndeterminate = checkedCount > 0 && checkedCount < this.downloadList.length;\n        },\n        // 全选\n        handleCheckAllChange(val){\n            this.checkedDowns = val ? this.downloadList : [];\n            this.isIndeterminate = false;\n        },\n          // 打印\n        async print(){\n            this.dialogVisible = true\n            this.dialogType='print'\n        },\n        // 导出pdf\n        handleExport() {\n            this.dialogVisible = true\n            this.dialogType='export'\n        },\n    },\n   \n\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}