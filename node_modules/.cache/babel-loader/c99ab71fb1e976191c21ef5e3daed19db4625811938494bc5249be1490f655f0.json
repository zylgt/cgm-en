{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport TIR from '@/views/components/Chart/TIR';\nimport AGP from '@/views/components/Chart/AGPchart';\nimport DayChart from '@/views/components/Chart/DayChart';\nimport { getAgpData } from '@/api/dataApi';\nimport { formatDate, formatTime } from '@/utils/formatTime';\nimport { GlucoseUtils } from \"@/utils/algorithm/Glucose\";\nexport default {\n  data() {\n    return {\n      bgInfo: '',\n      unit: 'mg/dL'\n    };\n  },\n  components: {\n    TIR,\n    AGP,\n    DayChart\n  },\n  mounted() {\n    const end = new Date('2024-06-03 23:59:00');\n    const start = new Date('2024-05-18 00:00:00');\n    this.agpDate = [formatDate(start, \"YYYY-mm-dd\"), formatDate(end, \"YYYY-mm-dd\")];\n    if (_.indexOf(this.$store.state.report.chooseDateList, this.agpDate.join('/')) == -1) {\n      this.getData();\n    } else {\n      this.$bus.$emit('getVuexTag', this.agpDate.join('/'));\n    }\n  },\n  methods: {\n    // 从云拉取数据\n    getData() {\n      let s = new Date(this.agpDate[0]);\n      let e = new Date(this.agpDate[1]);\n      let start_ts = s.setHours(0, 0, 0) / 1000;\n      let end_ts = e.setHours(23, 59, 59) / 1000;\n      this.loading = true;\n      getAgpData({\n        start_ts: start_ts,\n        end_ts: end_ts\n      }).then(response => {\n        if (response.code == 1000) {\n          let arrayData = response.data;\n          this.loading = false;\n          if (arrayData.length > 0) {\n            console.log(formatTime(new Date()), '得到数据');\n            this.list = arrayData;\n            this.bgInfo = GlucoseUtils.calculateMeanCvGmi(_.map(arrayData, 'Value'));\n            if (this.unit == 'mmol/L') {\n              this.bgInfo.mean = GlucoseUtils.mgdlToMmol(this.bgInfo.mean);\n            }\n            // this.handel(_.map(arrayData,'Value'))\n            this.handleData(arrayData, start_ts, end_ts);\n            // this.SingleDayList(arrayData,start_ts,end_ts,7)\n            // this.$bus.$emit('getDatas',[this.agpDate.join('/'),arrayData,this.unit])\n            // this.$store.dispatch('setChooseDateList',this.agpDate.join('/'))\n          }\n        } else {\n          this.loading = false;\n          this.$message({\n            type: 'error',\n            message: response.msg\n          });\n        }\n      }).catch(res => {\n        console.log(res);\n      });\n    },\n    // 计算\n    SingleDayList(data, start_ts, end_ts, day) {\n      console.log(formatTime(new Date()), '开始计算');\n      var daysList = new Array(day * 24 * 60);\n      console.log(daysList.length);\n      var n = 0;\n      var max = 0;\n      //补全该时间段所有数值\n      for (let i = 0; i < data.length; i++) {\n        for (let j = n; j < daysList.length; j++) {\n          var ts = start_ts + j * 60;\n          //时间相差60s记做同一时刻\n          if (parseInt(data[i].DataTs / 60) === parseInt(ts / 60)) {\n            var value = data[i].Value;\n            daysList[j] = value;\n            n = j + 1;\n            continue;\n          }\n        }\n      }\n      //切割为单日数组\n      var singleDay = new Array(day);\n      for (let i = 0; i < day; i++) {\n        singleDay[i] = daysList.slice(i * 24 * 60, (i + 1) * 24 * 60);\n      }\n      console.log(formatTime(new Date()), '计算完成');\n      console.log(singleDay);\n      return singleDay;\n    },\n    completionAGP(day, singleDayList) {\n      var agpList = new Array(5);\n      var agpList95 = new Array(24 * 60);\n      var agpList75 = new Array(24 * 60);\n      var agpList50 = new Array(24 * 60);\n      var agpList25 = new Array(24 * 60);\n      var agpList5 = new Array(24 * 60);\n\n      //计算出每sAGP数据\n      for (let i = 0; i < 24 * 60; i++) {\n        var list = new Array(day);\n        for (let j = 0; j < day; j++) {\n          list[j] = singleDayList[j][i];\n        }\n        list = list.filter(function (item) {\n          return item;\n        });\n        var agp = AGPUtils.calculateYValue(list);\n        if (agp) {\n          agpList95[i] = GlucoseUtils.mgdlToMmol(agp.p95);\n          agpList75[i] = GlucoseUtils.mgdlToMmol(agp.p75);\n          agpList50[i] = GlucoseUtils.mgdlToMmol(agp.p50);\n          agpList25[i] = GlucoseUtils.mgdlToMmol(agp.p25);\n          agpList5[i] = GlucoseUtils.mgdlToMmol(agp.p05);\n        }\n      }\n      agpList[0] = agpList95;\n      agpList[1] = agpList75;\n      agpList[2] = agpList50;\n      agpList[3] = agpList25;\n      agpList[4] = agpList5;\n    },\n    processArray(arr, interval) {\n      let result = [];\n      for (let i = 0; i < arr.length - 1; i++) {\n        result.push(arr[i]);\n        let diff = arr[i + 1].DataTs - arr[i].DataTs;\n        let addTs = arr[i].DataTs + interval;\n        while (diff > interval) {\n          result.push({\n            DataTs: addTs,\n            value: undefined\n          });\n          diff = arr[i + 1].DataTs - addTs;\n          addTs += interval;\n        }\n      }\n      result.push(arr[arr.length - 1]);\n      return result;\n    },\n    filterArray(data) {\n      const result = [];\n      const seenTimes = new Set();\n      let levelLowInvalidMg = 20;\n      let levelHighInvalidMg = 800;\n      let levelTooLowMg = 40;\n      let levelTooHighMg = 400;\n      data.forEach(item => {\n        const timeStr = formatDate(item.DataTs * 1000, 'YYYY-mm-dd HH:MM');\n        if (!seenTimes.has(timeStr)) {\n          seenTimes.add(timeStr);\n          if (item.value > levelLowInvalidMg || item.value < levelHighInvalidMg) {\n            result.push({\n              ...item,\n              value: undefined\n            });\n          } else if (item.value < levelTooLowMg) {\n            result.push({\n              ...item,\n              value: levelTooLowMg\n            });\n          } else if (item.value > levelTooHighMg) {\n            result.push({\n              ...item,\n              value: levelTooHighMg\n            });\n          } else {\n            result.push(item);\n          }\n        }\n      });\n      return result;\n    },\n    handleData(objects, s_ts, e_ts) {\n      let measuringInterval = 60;\n      // objects = objects.map(item => item);\n      objects = this.processArray(objects, measuringInterval);\n      objects = this.filterArray(objects);\n      let startTs = objects[0].DataTs;\n      while (startTs - measuringInterval >= s_ts) {\n        objects.unshift({\n          DataTs: startTs - measuringInterval,\n          value: undefined\n        });\n        startTs = startTs - measuringInterval;\n      }\n      let endTs = objects[objects.length - 1].DataTs;\n      while (endTs + measuringInterval < e_ts) {\n        objects.push({\n          DataTs: endTs + measuringInterval,\n          value: undefined\n        });\n        endTs = endTs + measuringInterval;\n      }\n      console.log(objects);\n      return objects;\n    },\n    // cgm有效时间占比\n    handel(dataArray) {\n      let filteredArray = dataArray.filter(val => val >= 40 && val <= 400);\n      this.bgInfo.effective = _.round(filteredArray.length / dataArray.length * 100, 1);\n    }\n  }\n};","map":{"version":3,"names":["TIR","AGP","DayChart","getAgpData","formatDate","formatTime","GlucoseUtils","data","bgInfo","unit","components","mounted","end","Date","start","agpDate","_","indexOf","$store","state","report","chooseDateList","join","getData","$bus","$emit","methods","s","e","start_ts","setHours","end_ts","loading","then","response","code","arrayData","length","console","log","list","calculateMeanCvGmi","map","mean","mgdlToMmol","handleData","$message","type","message","msg","catch","res","SingleDayList","day","daysList","Array","n","max","i","j","ts","parseInt","DataTs","value","Value","singleDay","slice","completionAGP","singleDayList","agpList","agpList95","agpList75","agpList50","agpList25","agpList5","filter","item","agp","AGPUtils","calculateYValue","p95","p75","p50","p25","p05","processArray","arr","interval","result","push","diff","addTs","undefined","filterArray","seenTimes","Set","levelLowInvalidMg","levelHighInvalidMg","levelTooLowMg","levelTooHighMg","forEach","timeStr","has","add","objects","s_ts","e_ts","measuringInterval","startTs","unshift","endTs","handel","dataArray","filteredArray","val","effective","round"],"sources":["src/views/pdfReport/report.vue"],"sourcesContent":["<template>\n    <div id='report' >\n            <div class='report-main-title-info' >\n                <img src=\"~@/assets/image/report-logo.png\" alt=\"\" class='report-logo' >\n                <div class='report-main-title' >动态葡萄糖监测报告</div>\n                <div class='report-main-date' >\n                    2024年3月1日<div class='repart-main-dirver-box'><span class='repart-main-dirver' ></span></div>2024年3月14日</div>\n            </div>\n            <!-- 基本信息 -->\n            <div class='report-main-base-info report-main' ref='test'>\n                <div class='report-module-title'  >\n                    <div class='report-module-title-border' ></div>\n                    <div class='report-module-title-text' >基本信息</div>\n                </div>\n                <div class='report-base-user' >\n                    <div class='report-base-user-item' >\n                        <div class='report-base-user-label'>姓名：</div>\n                        <div class='report-base-user-value'>卡布达</div>\n                    </div>  \n                    <div class='report-base-user-item' >\n                        <div class='report-base-user-label'>年龄：</div>\n                        <div class='report-base-user-value'>65</div>\n                    </div>  \n                    <div class='report-base-user-item' >\n                        <div class='report-base-user-label'>糖尿病类型：</div>\n                        <div class='report-base-user-value'>一型糖尿病</div>\n                    </div>  \n                    <div class='report-base-user-item' >\n                        <div class='report-base-user-label'>病程：</div>\n                        <div class='report-base-user-value'>5年</div>\n                    </div>  \n                    <div class='report-base-user-item' >\n                        <div class='report-base-user-label'>葡萄糖目标范围：</div>\n                        <div class='report-base-user-value'>3.9-10.0mmol/L</div>\n                    </div>  \n                </div>\n                <div class='report-data-source'>\n                    <div class='report-base-user-item' >\n                        <div class='report-base-user-label'>传感器序列号：</div>\n                        <div class='report-base-user-value'>CGM1234567</div>\n                    </div>  \n                    <div class='report-base-user-item' >\n                        <div class='report-base-user-label'>数据来源：</div>\n                        <div class='report-base-user-value'>iPhone XS Max</div>\n                    </div>  \n                    <div class='report-base-user-item' >\n                        <div class='report-base-user-label'>生成时间：</div>\n                        <div class='report-base-user-value'>2024年3月14日</div>\n                    </div>  \n                </div>\n            </div>\n            <!-- 血糖数据、TIR -->\n            <div class='report-main-data-tir-box' >\n                <div class='report-main-data-tir report-main' >\n                    <div class='report-module-title' >\n                        <div class='report-module-title-border' ></div>\n                        <div class='report-module-title-text' >血糖数据</div>\n                    </div>\n                    <div class='report-main-data-list'>\n                        <div class='report-main-data-label'>\n                            <div class='report-main-data-label-text' >CGM佩戴天数：</div>\n                        </div>\n                        <div class='report-main-data-val'>14天</div>\n                    </div>\n                    <div class='report-main-data-list'>\n                        <div class='report-main-data-label'>\n                            <div class='report-main-data-label-text' >CGM有效记录的时间占比：</div>\n                            <div class='report-main-data-label-tip' >目标值>70%才可得到有效数据分析</div>\n                        </div>\n                        <div class='report-main-data-val'>{{bgInfo.effective>70?bgInfo.effective:'--'}}%</div>\n                    </div>\n                    <div class='report-main-data-list' v-if='unit==\"mg/dL\"' >\n                        <div class='report-main-data-label'>\n                            <div class='report-main-data-label-text' >MG 平均葡萄糖值：</div>\n                            <div class='report-main-data-label-tip' >目标值＜119 mg/dL</div>\n                        </div>\n                        <div class='report-main-data-val'>{{bgInfo.mean}}mg/dL</div>\n                    </div>\n                    <div class='report-main-data-list' v-else>\n                        <div class='report-main-data-label'>\n                            <div class='report-main-data-label-text' >MG 平均葡萄糖值：</div>\n                            <div class='report-main-data-label-tip' >目标值＜6.6mmol/L</div>\n                        </div>\n                        <div class='report-main-data-val'>{{bgInfo.mean}}mmol/L</div>\n                    </div>\n                    <div class='report-main-data-list'>\n                        <div class='report-main-data-label'>\n                            <div class='report-main-data-label-text' >GMI 葡萄糖管理指标:</div>\n                            <div class='report-main-data-label-tip' >目标值＜7%</div>\n                        </div>\n                        <div class='report-main-data-val'>{{bgInfo.GMI}}%</div>\n                    </div>\n                    <div class='report-main-data-list'>\n                        <div class='report-main-data-label'>\n                            <div class='report-main-data-label-text' >CV 变异系数：</div>\n                            <div class='report-main-data-label-tip' >目标值＜33%</div>\n                        </div>\n                        <div class='report-main-data-val'>{{bgInfo.CV}}%</div>\n                    </div>\n                </div>\n                <div class='report-main-data-tir report-main' >\n                    <div class='report-module-title' >\n                        <div class='report-module-title-border' ></div>\n                        <div class='report-module-title-text' >葡萄糖目标范围内时间</div>\n                    </div>\n                    <div class='report-module-tips report-module-tips-only' >\n                        葡萄糖目标范围内占比越高，代表血糖控制的越好。\n                    </div>\n                    <div class='tir-box' >\n                        <TIR/>\n                    </div>\n                    \n                </div>\n            </div>\n            <!-- AGP图谱 -->\n            <div class='report-main-agp report-main' >\n                <div class='report-module-title' >\n                    <div class='report-module-title-border' ></div>\n                    <div class='report-module-title-text' >AGP图谱</div>\n                </div>\n                <div class='report-module-tips' >\n                     <div class='report-module-tips' >\n                       中位数葡萄糖曲位于目标范围内，且越平坦，表示血糖稳定性越好。25%-75%区间（图中深蓝色区域）与5%-95%区间（图中浅蓝色区域）均显示日间血糖波动情况，区间越宽提示相应时间段血糖波动越大。其中影响 25%-75%区间的因素主要是是生理状态(如胰岛素抵抗等)和药物治疗等。影响5%-95%区间的因素主要是饮食，运动等。\n                    </div>\n                </div>\n                <div class='agp-box' >\n                    <AGP/>\n                </div>\n            </div>\n            <!-- 每日血糖 -->\n            <div class='report-main-day report-main' >\n                <div class='report-module-title' >\n                    <div class='report-module-title-border' ></div>\n                    <div class='report-module-title-text' >每日血糖简图</div>\n                </div>\n                <div class='report-module-tips' >\n                     <div class='report-module-tips' >\n                       每日血糖展示了14天中每天的血糖变化情况。\n                    </div>\n                </div>\n                <div class='day-chart-box'>\n                    <DayChart/>\n                </div>\n            </div>\n            <!-- 参数解释 -->\n            <div class='report-main-params' >\n                <div class='report-main-params-title' >参数解释</div>\n                <div class='report-main-params-item' >\n                    1.平均葡萄糖值（MG）：CGM 监测期间所有葡萄糖值的平均值，用于评价整体血糖水平。<br/>\n                    2.葡萄糖管理指标（GMI）：预估糖化血红蛋白(eHbA1c)，根据 CGM 葡萄糖读数估算 HbA1c，用于评价整体血糖水平<br/>\n                    3.变异系数(CV)：葡萄糖标准差与平均葡萄糖比值所得百分数，用于评价血糖波动。<br/>\n                    4.葡萄糖目标范围内百分比(TIR)：指葡萄糖在目标范围内的时间或其所占的百分比，<br/>\n                    5.葡萄糖高于目标范围百分比(TAR)：指葡萄糖高于目标范围的时间或其所占的百分比<br/>\n                    6.葡萄糖低于目标范围百分比(TBR):指葡萄糖低于目标范围的时间或其所占的百分比。<br/>\n                </div>\n                <div class='report-main-params-title' >参考文献</div>\n                <div class='report-main-params-item' >\n                    动态葡萄糖图谱报告临床应用专家共识（2023版）\n                </div>\n            </div>\n            <!-- <img src=\"~@/assets/image/test.jpg\" alt=\"\" class='test' > -->\n    </div>\n</template>\n<script>\nimport TIR from '@/views/components/Chart/TIR'\nimport AGP from '@/views/components/Chart/AGPchart'\nimport DayChart from '@/views/components/Chart/DayChart'\nimport {getAgpData} from '@/api/dataApi'\nimport {formatDate,formatTime} from '@/utils/formatTime'\nimport { GlucoseUtils } from \"@/utils/algorithm/Glucose\";\nexport default {\n    data(){\n        return{\n            bgInfo:'',\n            unit:'mg/dL'\n        }\n    },\n     components: {\n        TIR,AGP,DayChart\n    },\n    mounted(){\n        const end = new Date('2024-06-03 23:59:00');\n        const start = new Date('2024-05-18 00:00:00');\n        this.agpDate = [formatDate(start,\"YYYY-mm-dd\"), formatDate(end,\"YYYY-mm-dd\")] \n        if( _.indexOf(this.$store.state.report.chooseDateList,this.agpDate.join('/'))==-1){\n            this.getData()\n        }else{\n            this.$bus.$emit('getVuexTag',this.agpDate.join('/'))\n        }\n    },\n    methods:{\n       // 从云拉取数据\n        getData(){\n            let s = new Date(this.agpDate[0])\n            let e = new Date(this.agpDate[1])\n            let start_ts = s.setHours(0,0,0)/1000\n            let end_ts = e.setHours(23,59,59)/1000\n            this.loading = true\n            getAgpData({start_ts:start_ts,end_ts:end_ts}).then(response => {\n\t\t\t\t\t\t\tif(response.code == 1000){\n                                let arrayData = response.data\n                                this.loading = false\n                                if(arrayData.length>0){\n                                    console.log(formatTime(new Date()),'得到数据')   \n                                    this.list = arrayData\n                                    this.bgInfo = GlucoseUtils.calculateMeanCvGmi(_.map(arrayData,'Value'))\n                                    if(this.unit=='mmol/L'){\n                                        this.bgInfo.mean = GlucoseUtils.mgdlToMmol(this.bgInfo.mean)\n                                    }\n                                    // this.handel(_.map(arrayData,'Value'))\n                                    this.handleData(arrayData,start_ts,end_ts)\n                                    // this.SingleDayList(arrayData,start_ts,end_ts,7)\n                                    // this.$bus.$emit('getDatas',[this.agpDate.join('/'),arrayData,this.unit])\n                                    // this.$store.dispatch('setChooseDateList',this.agpDate.join('/'))\n                                    \n                                }\n\t\t\t\t\t\t\t}else{\n                                this.loading = false\n\t\t\t\t\t\t\t\tthis.$message({\n                                    type: 'error',\n                                    message: response.msg\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n            }).catch((res) => {\n                console.log(res)\n            })\n        },\n        // 计算\n         SingleDayList(data, start_ts, end_ts, day) {\n            console.log(formatTime(new Date()),'开始计算')\n            var daysList = new Array(day * 24 * 60);\n            console.log(daysList.length);\n            var n = 0;\n            var max = 0;\n            //补全该时间段所有数值\n            for (let i = 0; i < data.length; i++) {\n            for (let j = n; j < daysList.length; j++) {\n                var ts = start_ts + j * 60;\n                //时间相差60s记做同一时刻\n                if (parseInt(data[i].DataTs / 60) === parseInt(ts / 60)) {\n                var value = data[i].Value;\n                daysList[j] = value;\n                n = j + 1;\n                continue;\n                }\n            }\n            }\n            //切割为单日数组\n            var singleDay = new Array(day);\n            for (let i = 0; i < day; i++) {\n            singleDay[i] = daysList.slice(i * 24 * 60, (i + 1) * 24 * 60);\n            }\n            console.log(formatTime(new Date()),'计算完成')\n            console.log(singleDay)\n            return singleDay;\n        },\n        completionAGP (day, singleDayList) {\n            var agpList = new Array(5);\n            var agpList95 = new Array(24 * 60);\n            var agpList75 = new Array(24 * 60);\n            var agpList50 = new Array(24 * 60);\n            var agpList25 = new Array(24 * 60);\n            var agpList5 = new Array(24 * 60);\n\n            //计算出每sAGP数据\n            for (let i = 0; i < 24 * 60; i++) {\n            var list = new Array(day);\n            for (let j = 0; j < day; j++) {\n                list[j] = singleDayList[j][i];\n            }\n            list = list.filter(function (item) {\n                return item;\n            });\n            var agp = AGPUtils.calculateYValue(list);\n            if (agp) {\n                agpList95[i] = GlucoseUtils.mgdlToMmol(agp.p95);\n                agpList75[i] = GlucoseUtils.mgdlToMmol(agp.p75);\n                agpList50[i] = GlucoseUtils.mgdlToMmol(agp.p50);\n                agpList25[i] = GlucoseUtils.mgdlToMmol(agp.p25);\n                agpList5[i] = GlucoseUtils.mgdlToMmol(agp.p05);\n            }\n            }\n            agpList[0] = agpList95;\n            agpList[1] = agpList75;\n            agpList[2] = agpList50;\n            agpList[3] = agpList25;\n            agpList[4] = agpList5;\n        },\n        processArray(arr, interval) {\n            let result = [];\n\n            for (let i = 0; i < arr.length - 1; i++) {\n                result.push(arr[i]);\n\n                let diff = arr[i + 1].DataTs - arr[i].DataTs;\n                let addTs = arr[i].DataTs + interval;\n                while (diff > interval) {\n                result.push({DataTs: addTs, value: undefined});\n                diff = arr[i + 1].DataTs - addTs;\n                addTs += interval;\n                }\n            }\n            result.push(arr[arr.length - 1]);\n\n            return result;\n        },\n\n        filterArray  (data) {\n            const result = [];\n\n            const seenTimes = new Set();\n            let levelLowInvalidMg = 20\n            let levelHighInvalidMg = 800\n            let levelTooLowMg = 40\n            let levelTooHighMg = 400\n            data.forEach(item => {\n                const timeStr = formatDate(item.DataTs*1000,'YYYY-mm-dd HH:MM')\n\n                if (!seenTimes.has(timeStr)) {\n                seenTimes.add(timeStr);\n                if (item.value > levelLowInvalidMg || item.value < levelHighInvalidMg) {\n                    result.push({...item, value: undefined});\n                } else if (item.value < levelTooLowMg) {\n                    result.push({\n                    ...item,\n                    value: levelTooLowMg,\n                    });\n                } else if (item.value > levelTooHighMg) {\n                    result.push({\n                    ...item,\n                    value: levelTooHighMg,\n                    });\n                } else {\n                    result.push(item);\n                }\n                }\n            });\n\n            return result;\n            },\n\n        handleData (objects, s_ts, e_ts)  {\n            let measuringInterval = 60\n            // objects = objects.map(item => item);\n            objects = this.processArray(objects, measuringInterval);\n            objects = this.filterArray(objects);\n\n            let startTs = objects[0].DataTs;\n            while (startTs - measuringInterval >= s_ts) {\n                objects.unshift({\n                DataTs: startTs - measuringInterval,\n                value: undefined,\n                });\n                startTs = startTs - measuringInterval;\n            }\n\n            let endTs = objects[objects.length - 1].DataTs;\n            while (endTs + measuringInterval < e_ts) {\n                objects.push({\n                DataTs: endTs + measuringInterval,\n                value: undefined,\n                });\n                endTs = endTs + measuringInterval;\n            }\n            console.log(objects)\n            return objects;\n            },\n        // cgm有效时间占比\n        handel(dataArray){\n            let filteredArray = dataArray.filter(val => val >= 40 && val <= 400);\n            this.bgInfo.effective = _.round((filteredArray.length/dataArray.length)*100,1)\n        }\n    }\n}\n</script>\n<style scoped>\n.test{\n    margin:0 auto;\n    display: block;\n    position: absolute;\n    opacity: 0;\n    left:0;\n    top:0;\n}\n @media print {\n        #report {\n            /* transform: scale(0.35);\n            transform-origin: top center; */\n            -webkit-print-color-adjuset:exact;\n            color-adjust: exact;\n        }\n    }\n/* 内容框设置 */\n    #report{\n        width:1680px;\n        height:2375px;\n        background:#fff;\n        margin:0 auto;\n        overflow: hidden;\n        box-sizing: border-box;\n        padding:75px 80px 0 80px;\n        position: relative;\n       \n    }\n    .report-main{\n        box-sizing: border-box;\n        padding:24px 20px 0 20px;\n    }\n/* 头部信息 */\n    .report-main-title-info{\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        margin-bottom:20px;\n        position: relative;\n    }\n    .report-logo{\n        width:60px;\n        height:60px;\n        display: block;\n    }\n    .report-main-title{\n        font-size:50px;\n        color:var(--color-primary);\n        /* font-family:MiLan-Medium; */\n        font-weight: 440;\n        text-align: center;\n        position: absolute;\n        left:0;\n        top:0;\n        width:100%;\n    }\n    .report-main-date{\n        font-size:20px;\n        color:var(--color-black-100);\n        display: flex;\n        align-items: center;\n    }\n    .repart-main-dirver-box{\n        width:20px;\n        height:20px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin:0 2px;\n    }\n    .repart-main-dirver{\n        width:16px;\n        height:1px;\n        background:var(--color-black-100);\n    }\n/* 模块标题 */\n    .report-module-title{\n        width:100%;\n        height:50px;\n        border-radius:4px;\n        background:rgba(50,186,192,0.1);\n        display: flex;\n        align-items: center;\n        box-shadow: 0px 2px 20px 0px rgba(0, 0, 0, 0.05);\n    }\n    .report-module-title-border{\n        width:3px;\n        height:24px;\n        background:var(--color-primary);\n        margin-left:10px;\n    }\n    .report-module-title-text{\n        font-size:20px;\n        color:var(--color-black-100);\n        /* font-family:MiLan-Medium; */\n        margin-left:4px;\n        font-weight: 700;\n    }\n    .report-module-tips{\n        font-size:16px;\n        color:var(--color-black-60);\n        padding:5px 0 0 10px;\n    }\n    .report-module-tips-only{\n        padding:10px 0 0 10px;\n    }\n/* 基本信息 */\n    .report-main-base-info{\n        width:100%;\n        height:209px;\n    }\n    .report-base-user{\n        width:100%;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin:20px 0;\n        height:35px;\n        box-sizing: border-box;\n        padding:0px 20px 0px 10px;\n    }\n    .report-base-user-item{\n        display: flex;\n        align-items: center;\n        font-size:20px;\n    }\n    .report-base-user-label{\n        color:var(--color-black-60);\n    }\n    .report-base-user-value{\n        color:var(--color-black-100);\n    }\n    .report-data-source{\n        width:100%;\n        height:52px;\n        padding-left:20px;\n        padding-right:60px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        background:#f7f7f7;\n    }\n/* 血糖数据、TIR */\n    .report-main-data-tir-box{\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n    }\n    .report-main-data-tir{\n        width:750px;\n        height:446px;\n    }\n    .report-main-data-list{\n        width:690px;\n        height:75px;\n        box-sizing: border-box;\n        margin:0 auto;\n        border-bottom:1px solid rgba(0, 0, 0, 0.3);\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n    }\n    .report-main-data-label-text{\n        font-size:20px;\n        color:var(--color-black-100);\n        height:27px;\n        line-height: 27px;\n    }\n    .report-main-data-label-tip{\n        font-size:16px;\n        color:var(--color-black-60);\n        height:18px;\n        line-height: 18px;\n    }\n    .report-main-data-val{\n        font-size:24px;\n        color:var(--color-black-100);\n        font-weight: 440;\n        font-family:MiLan-Medium;\n    }\n    .tir-box{\n        padding:20px 0 0 20px;\n    }\n/* agp图谱 */\n    .report-main-agp{\n        width:100%;\n        height:567px;\n    }\n    .agp-box{\n        margin-top:20px;\n    }\n/* 每日血糖曲线 */\n    .report-main-day{\n        width:100%;\n        height:691px;\n    }\n    .day-chart-box{\n        margin-top:16px;\n    }\n/* 参数解释 */\n    .report-main-params{\n        width:1480px;\n        height:239px;\n        background:#f7f7f7;\n        border-radius:10px;\n        padding:26px 20px 20px 20px;\n        margin:0 auto;\n    }\n    .report-main-params-title{\n        font-size:16px;\n        color:var(--color-black-100);\n        line-height: 21px;\n    }\n     .report-main-params-item{\n        font-size:16px;\n        color:var(--color-black-60);\n        line-height: 21px;\n        margin-bottom:8px;\n     }\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}