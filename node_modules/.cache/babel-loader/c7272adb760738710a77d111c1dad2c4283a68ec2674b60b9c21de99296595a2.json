{"ast":null,"code":"import Cookies from \"js-cookie\";\nimport { account, phoneLogin } from '@/api/api';\nimport { getToken, removeToken, setToken } from '@/utils/auth';\nexport default {\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      checked: false,\n      loading: false,\n      activeName: 'login',\n      loginType: 1,\n      //1验证码登录，2密码登录\n      loginRules: {\n        username: [{\n          required: true,\n          trigger: \"blur\",\n          message: \" \"\n        }],\n        password: [{\n          required: true,\n          trigger: \"blur\",\n          message: \" \"\n        }]\n      }\n    };\n  },\n  created() {},\n  methods: {\n    getCookie() {\n      const username = Cookies.get(\"username\");\n      const password = Cookies.get(\"password\");\n      const rememberMe = Cookies.get(\"rememberMe\");\n      this.loginForm = {\n        username: username === undefined ? this.loginForm.username : username,\n        password: password === undefined ? this.loginForm.password : password\n      };\n    },\n    // 账号密码\n    handleLogin() {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          account({\n            username: this.loginForm.username,\n            password: this.$md5(this.loginForm.password)\n          }).then(response => {\n            this.loading = false;\n            if (response.code == 1000) {\n              this.$message({\n                type: 'success',\n                message: '登录成功'\n              });\n              setToken(response.data.token);\n              Cookies.set(\"avatar\", this.loginForm.username, {\n                expires: 30\n              });\n            } else {\n              this.$message({\n                type: 'error',\n                message: response.msg\n              });\n            }\n          }).catch(res => {\n            this.$message({\n              type: 'error',\n              message: res.message\n            });\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["Cookies","account","phoneLogin","getToken","removeToken","setToken","data","loginForm","username","password","checked","loading","activeName","loginType","loginRules","required","trigger","message","created","methods","getCookie","get","rememberMe","undefined","handleLogin","$refs","validate","valid","$md5","then","response","code","$message","type","token","set","expires","msg","catch","res"],"sources":["src/views/login/login.vue"],"sourcesContent":["<template>\n        <div class=\"login\" id='login'>\n            <div class='login-main' >\n                <div class='login-box' >\n                    <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\n                        <el-tab-pane label=\"登录\" name=\"login\"></el-tab-pane>\n                        <el-tab-pane label=\"注册\" name=\"register\"></el-tab-pane>\n                    </el-tabs>\n                    <div  class='login-form'>\n                        <el-form ref=\"loginForm\" :model=\"loginForm\"  :rules=\"loginRules\">\n                            <el-form-item  prop='username' class='form-item-normal'>\n                                <el-input v-model=\"loginForm.username\"\n                                    placeholder=\"请输入您的手机号\"></el-input>\n                            </el-form-item>\n                            <el-form-item  prop='password' class='form-item-special' v-if='loginType==1'  >\n                                <el-input v-model=\"loginForm.password\"\n                                    placeholder=\"密码\"\n                                    show-password></el-input>\n                            </el-form-item>\n                            <el-form-item  prop='code'  class='form-item-special' v-if='loginType==2'>\n                                <div class='code-item' >\n                                     <el-input v-model=\"loginForm.code\" placeholder=\"请输入验证码\"\n                                     show-password></el-input>\n                                    <div class='get-code' >获取验证码</div>\n                                    <div class='code-time' >59s</div>\n                                    <div class='get-code' >重新发送</div>\n                                </div>\n                            </el-form-item>\n                            <el-form-item  prop='checked'>\n                                <div class='login-rule' @click=\"checked=!checked\" >\n                                    <img src=\"~@/assets/image/no-check.png\" alt=\"\" class='check-img' v-if='!checked'>\n                                    <img src=\"~@/assets/image/check.png\" alt=\"\" class='check-img' v-if='checked'>\n                                    <div class='login-text'>请阅读并同意  <a href=\"http://\" target=\"_blank\" rel=\"noopener noreferrer\">《用户服务协议》</a>及<a href=\"http://\" target=\"_blank\" rel=\"noopener noreferrer\">《隐私政策》</a></div>\n                                </div>\n                            </el-form-item>\n                            <el-form-item >\n                                <el-button :loading=\"loading\"  :disabled=\"checked\" class=\"login-submit\" style=\"width: 100%\" type=\"primary\" @click.native.prevent=\"handleLogin\">\n                                    <span v-if=\"!loading\">登录</span>\n                                    <span v-else>登录中</span>\n                                </el-button>\n                            </el-form-item>\n                            <div class='login-item' >\n                                <p>忘记密码</p>\n                                <p @click='loginType=2' v-if='loginType==1' >验证码登录</p>\n                                <p @click='loginType=1' v-if='loginType==2'>密码登录</p>\n                            </div>\n                            <div  class='san'>\n                                <el-divider >第三方账号登录</el-divider>\n                                <div class='san-logo' >\n                                    <img src=\"~@/assets/image/login-mi.png\" alt=\"\" class='san-icon' >\n                                    <img src=\"~@/assets/image/login-wechat.png\" alt=\"\" class='san-icon' > \n                                </div>\n                            </div>\n                        </el-form>\n                    </div>\n                </div>\n                <div class='divider' ></div>\n                <div class='login-design' >\n                    <img src=\"~@/assets/image/login-img.png\" alt=\"\" class='login-img' >\n                </div>\n            </div>\n        </div>\n</template>\n\n<script>\nimport Cookies from \"js-cookie\"\nimport {account,phoneLogin} from '@/api/api'\nimport {getToken, removeToken, setToken} from '@/utils/auth'\nexport default {\n    data(){\n        return {\n            loginForm:{\n                username:'',\n                password:''\n            },\n            checked:false,\n            loading:false,\n            activeName:'login',\n            loginType:1, //1验证码登录，2密码登录\n            loginRules: {\n                username: [{ required: true, trigger: \"blur\", message: \" \" }],\n                password: [{ required: true, trigger: \"blur\", message: \" \" }]\n            },\n        }\n    },\n    created(){\n    },\n    methods:{\n        getCookie() {\n            const username = Cookies.get(\"username\")\n            const password = Cookies.get(\"password\")\n            const rememberMe = Cookies.get(\"rememberMe\")\n            this.loginForm = {\n                username: username === undefined ? this.loginForm.username : username,\n                password: password === undefined ? this.loginForm.password :  password,\n            }\n        },\n        // 账号密码\n        handleLogin(){\n             this.$refs.loginForm.validate((valid) => {\n                if(valid){\n                    this.loading = true\n                    account({username:this.loginForm.username,password:this.$md5(this.loginForm.password)}).then(response => {\n                            this.loading=false\n\t\t\t\t\t\t\tif(response.code == 1000){\n\t\t\t\t\t\t\t\tthis.$message({\n\t\t\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\t\t\tmessage: '登录成功'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tsetToken(response.data.token)\n                                Cookies.set(\"avatar\", this.loginForm.username, { expires: 30 })\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tthis.$message({\n                                    type: 'error',\n                                    message: response.msg\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}).catch((res) => {\n\t\t\t\t\t\t\tthis.$message({\n\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\tmessage: res.message\n\t\t\t\t\t\t\t});\n\t\t\t\t\t})\n                   \n                  \n                }\n             })\n        }\n    }\n}\n</script>\n\n<style >\n    .login{\n        height: 100%;\n        width:100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background:#f7fcfd;\n    }\n    #login .login-main{\n        display: flex;\n        align-items: center;\n    }\n    #login .login-box{\n        width:380px;\n        height:490px;\n        box-shadow: 0px 4px 20px 0px #0000001A;\n        background:rgba(255,255,255,0.9);\n        border-radius:10px;\n        box-sizing: border-box;\n        padding:50px 46px;\n    }\n    #login .login-box .el-tabs__nav-wrap::after{\n        background:none;\n        height:3px;\n    }\n    .el-tabs__active-bar{\n        height:3px;\n        border-radius:1px;\n    }\n    #login .title{\n        text-align: center;\n        margin-bottom:50px;\n        font-size:28px;\n        font-weight: bold;\n        color:#333;\n    }\n    #login .el-input__inner{\n        background: none;\n    }\n    #login .el-tabs__item{\n        font-size:20px;\n        font-weight:305;\n    }\n    #login .el-tabs__item.is-active{\n        font-weight: 440;\n    }\n    #login .el-form-item{\n        margin-bottom: 0;\n    }\n    #login .form-item-normal{\n        margin-bottom:22px;\n    }\n    #login .divider{\n        margin:0 100px;\n        width:1px ;\n        height:590px;\n        background:#e3e3e3;\n        margin-left:150px;\n    }\n    #login .login-rule{\n        display: flex;\n        align-items: center;\n        margin-bottom:30px;\n    }\n    #login .check-img{\n        width:20px;\n        display: block;\n    }\n    #login .login-text{\n        font-size:12px;\n        color:#999;\n        margin-left:6px;\n    }\n    #login .login-text a{\n        text-decoration: none;\n        color:#0d84ff;\n    }\n    #login .login-item{\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        font-size:14px;\n        color:rgba(0,0,0,0,.6)\n    }\n    #login .el-divider__text{\n        font-size:12px;\n        color:#666;\n    }\n    #login .san-logo{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    #login .san-icon{\n        width:36px;\n        height:36px;\n        display: block;;\n    }\n    #login .san-icon:nth-child(1){\n        margin-right:30px;\n    }\n    #login .login-item p{\n        cursor: pointer;\n    }\n    #login .code-item{\n        position: relative;\n    }\n    #login .get-code{\n        color:#32BAC0;\n        font-size: 12px;\n        position: absolute;\n        right:14px;\n        top:0;\n    }\n</style>"],"mappings":"AAiEA,OAAAA,OAAA;AACA,SAAAC,OAAA,EAAAC,UAAA;AACA,SAAAC,QAAA,EAAAC,WAAA,EAAAC,QAAA;AACA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,OAAA;MACAC,OAAA;MACAC,UAAA;MACAC,SAAA;MAAA;MACAC,UAAA;QACAN,QAAA;UAAAO,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAR,QAAA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;IACA;EACA;EACAC,QAAA,GACA;EACAC,OAAA;IACAC,UAAA;MACA,MAAAZ,QAAA,GAAAR,OAAA,CAAAqB,GAAA;MACA,MAAAZ,QAAA,GAAAT,OAAA,CAAAqB,GAAA;MACA,MAAAC,UAAA,GAAAtB,OAAA,CAAAqB,GAAA;MACA,KAAAd,SAAA;QACAC,QAAA,EAAAA,QAAA,KAAAe,SAAA,QAAAhB,SAAA,CAAAC,QAAA,GAAAA,QAAA;QACAC,QAAA,EAAAA,QAAA,KAAAc,SAAA,QAAAhB,SAAA,CAAAE,QAAA,GAAAA;MACA;IACA;IACA;IACAe,YAAA;MACA,KAAAC,KAAA,CAAAlB,SAAA,CAAAmB,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAhB,OAAA;UACAV,OAAA;YAAAO,QAAA,OAAAD,SAAA,CAAAC,QAAA;YAAAC,QAAA,OAAAmB,IAAA,MAAArB,SAAA,CAAAE,QAAA;UAAA,GAAAoB,IAAA,CAAAC,QAAA;YACA,KAAAnB,OAAA;YACA,IAAAmB,QAAA,CAAAC,IAAA;cACA,KAAAC,QAAA;gBACAC,IAAA;gBACAhB,OAAA;cACA;cACAZ,QAAA,CAAAyB,QAAA,CAAAxB,IAAA,CAAA4B,KAAA;cACAlC,OAAA,CAAAmC,GAAA,gBAAA5B,SAAA,CAAAC,QAAA;gBAAA4B,OAAA;cAAA;YACA;cACA,KAAAJ,QAAA;gBACAC,IAAA;gBACAhB,OAAA,EAAAa,QAAA,CAAAO;cACA;YACA;UACA,GAAAC,KAAA,CAAAC,GAAA;YACA,KAAAP,QAAA;cACAC,IAAA;cACAhB,OAAA,EAAAsB,GAAA,CAAAtB;YACA;UACA;QAGA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}