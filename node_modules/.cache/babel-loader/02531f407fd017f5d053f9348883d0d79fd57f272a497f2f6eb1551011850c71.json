{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2022 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar _classPrivateMethodInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateMethodInitSpec.js\").default;\nvar _classPrivateFieldInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _classPrivateFieldGet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldGet2.js\").default;\nvar _classPrivateFieldSet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldSet2.js\").default;\nvar _assertClassBrand = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/assertClassBrand.js\").default;\nvar _defineProperty = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DeviceRequestPromptManager = exports.DeviceRequestPrompt = exports.DeviceRequestPromptDevice = void 0;\nconst assert_js_1 = require(\"../util/assert.js\");\nconst Deferred_js_1 = require(\"../util/Deferred.js\");\n/**\n * Device in a request prompt.\n *\n * @public\n */\nclass DeviceRequestPromptDevice {\n  /**\n   * @internal\n   */\n  constructor(id, name) {\n    /**\n     * Device id during a prompt.\n     */\n    _defineProperty(this, \"id\", void 0);\n    /**\n     * Device name as it appears in a prompt.\n     */\n    _defineProperty(this, \"name\", void 0);\n    this.id = id;\n    this.name = name;\n  }\n}\nexports.DeviceRequestPromptDevice = DeviceRequestPromptDevice;\n/**\n * Device request prompts let you respond to the page requesting for a device\n * through an API like WebBluetooth.\n *\n * @remarks\n * `DeviceRequestPrompt` instances are returned via the\n * {@link Page.waitForDevicePrompt} method.\n *\n * @example\n *\n * ```ts\n * const [deviceRequest] = Promise.all([\n *   page.waitForDevicePrompt(),\n *   page.click('#connect-bluetooth'),\n * ]);\n * await devicePrompt.select(\n *   await devicePrompt.waitForDevice(({name}) => name.includes('My Device'))\n * );\n * ```\n *\n * @public\n */\nvar _client = /*#__PURE__*/new WeakMap();\nvar _timeoutSettings = /*#__PURE__*/new WeakMap();\nvar _id = /*#__PURE__*/new WeakMap();\nvar _handled = /*#__PURE__*/new WeakMap();\nvar _updateDevicesHandle = /*#__PURE__*/new WeakMap();\nvar _waitForDevicePromises = /*#__PURE__*/new WeakMap();\nvar _DeviceRequestPrompt_brand = /*#__PURE__*/new WeakSet();\nclass DeviceRequestPrompt {\n  /**\n   * @internal\n   */\n  constructor(client, timeoutSettings, firstEvent) {\n    _classPrivateMethodInitSpec(this, _DeviceRequestPrompt_brand);\n    _classPrivateFieldInitSpec(this, _client, void 0);\n    _classPrivateFieldInitSpec(this, _timeoutSettings, void 0);\n    _classPrivateFieldInitSpec(this, _id, void 0);\n    _classPrivateFieldInitSpec(this, _handled, false);\n    _classPrivateFieldInitSpec(this, _updateDevicesHandle, _assertClassBrand(_DeviceRequestPrompt_brand, this, _updateDevices).bind(this));\n    _classPrivateFieldInitSpec(this, _waitForDevicePromises, new Set());\n    /**\n     * Current list of selectable devices.\n     */\n    _defineProperty(this, \"devices\", []);\n    _classPrivateFieldSet(_client, this, client);\n    _classPrivateFieldSet(_timeoutSettings, this, timeoutSettings);\n    _classPrivateFieldSet(_id, this, firstEvent.id);\n    _classPrivateFieldGet(_client, this).on('DeviceAccess.deviceRequestPrompted', _classPrivateFieldGet(_updateDevicesHandle, this));\n    _classPrivateFieldGet(_client, this).on('Target.detachedFromTarget', () => {\n      _classPrivateFieldSet(_client, this, null);\n    });\n    _assertClassBrand(_DeviceRequestPrompt_brand, this, _updateDevices).call(this, firstEvent);\n  }\n  /**\n   * Resolve to the first device in the prompt matching a filter.\n   */\n  async waitForDevice(filter, options = {}) {\n    for (const device of this.devices) {\n      if (filter(device)) {\n        return device;\n      }\n    }\n    const {\n      timeout = _classPrivateFieldGet(_timeoutSettings, this).timeout()\n    } = options;\n    const deferred = Deferred_js_1.Deferred.create({\n      message: `Waiting for \\`DeviceRequestPromptDevice\\` failed: ${timeout}ms exceeded`,\n      timeout\n    });\n    const handle = {\n      filter,\n      promise: deferred\n    };\n    _classPrivateFieldGet(_waitForDevicePromises, this).add(handle);\n    try {\n      return await deferred.valueOrThrow();\n    } finally {\n      _classPrivateFieldGet(_waitForDevicePromises, this).delete(handle);\n    }\n  }\n  /**\n   * Select a device in the prompt's list.\n   */\n  async select(device) {\n    (0, assert_js_1.assert)(_classPrivateFieldGet(_client, this) !== null, 'Cannot select device through detached session!');\n    (0, assert_js_1.assert)(this.devices.includes(device), 'Cannot select unknown device!');\n    (0, assert_js_1.assert)(!_classPrivateFieldGet(_handled, this), 'Cannot select DeviceRequestPrompt which is already handled!');\n    _classPrivateFieldGet(_client, this).off('DeviceAccess.deviceRequestPrompted', _classPrivateFieldGet(_updateDevicesHandle, this));\n    _classPrivateFieldSet(_handled, this, true);\n    return await _classPrivateFieldGet(_client, this).send('DeviceAccess.selectPrompt', {\n      id: _classPrivateFieldGet(_id, this),\n      deviceId: device.id\n    });\n  }\n  /**\n   * Cancel the prompt.\n   */\n  async cancel() {\n    (0, assert_js_1.assert)(_classPrivateFieldGet(_client, this) !== null, 'Cannot cancel prompt through detached session!');\n    (0, assert_js_1.assert)(!_classPrivateFieldGet(_handled, this), 'Cannot cancel DeviceRequestPrompt which is already handled!');\n    _classPrivateFieldGet(_client, this).off('DeviceAccess.deviceRequestPrompted', _classPrivateFieldGet(_updateDevicesHandle, this));\n    _classPrivateFieldSet(_handled, this, true);\n    return await _classPrivateFieldGet(_client, this).send('DeviceAccess.cancelPrompt', {\n      id: _classPrivateFieldGet(_id, this)\n    });\n  }\n}\nfunction _updateDevices(event) {\n  if (event.id !== _classPrivateFieldGet(_id, this)) {\n    return;\n  }\n  for (const rawDevice of event.devices) {\n    if (this.devices.some(device => {\n      return device.id === rawDevice.id;\n    })) {\n      continue;\n    }\n    const newDevice = new DeviceRequestPromptDevice(rawDevice.id, rawDevice.name);\n    this.devices.push(newDevice);\n    for (const waitForDevicePromise of _classPrivateFieldGet(_waitForDevicePromises, this)) {\n      if (waitForDevicePromise.filter(newDevice)) {\n        waitForDevicePromise.promise.resolve(newDevice);\n      }\n    }\n  }\n}\nexports.DeviceRequestPrompt = DeviceRequestPrompt;\n/**\n * @internal\n */\nvar _client2 = /*#__PURE__*/new WeakMap();\nvar _timeoutSettings2 = /*#__PURE__*/new WeakMap();\nvar _deviceRequestPrompDeferreds = /*#__PURE__*/new WeakMap();\nvar _DeviceRequestPromptManager_brand = /*#__PURE__*/new WeakSet();\nclass DeviceRequestPromptManager {\n  /**\n   * @internal\n   */\n  constructor(client, timeoutSettings) {\n    /**\n     * @internal\n     */\n    _classPrivateMethodInitSpec(this, _DeviceRequestPromptManager_brand);\n    _classPrivateFieldInitSpec(this, _client2, void 0);\n    _classPrivateFieldInitSpec(this, _timeoutSettings2, void 0);\n    _classPrivateFieldInitSpec(this, _deviceRequestPrompDeferreds, new Set());\n    _classPrivateFieldSet(_client2, this, client);\n    _classPrivateFieldSet(_timeoutSettings2, this, timeoutSettings);\n    _classPrivateFieldGet(_client2, this).on('DeviceAccess.deviceRequestPrompted', event => {\n      _assertClassBrand(_DeviceRequestPromptManager_brand, this, _onDeviceRequestPrompted).call(this, event);\n    });\n    _classPrivateFieldGet(_client2, this).on('Target.detachedFromTarget', () => {\n      _classPrivateFieldSet(_client2, this, null);\n    });\n  }\n  /**\n   * Wait for device prompt created by an action like calling WebBluetooth's\n   * requestDevice.\n   */\n  async waitForDevicePrompt(options = {}) {\n    (0, assert_js_1.assert)(_classPrivateFieldGet(_client2, this) !== null, 'Cannot wait for device prompt through detached session!');\n    const needsEnable = _classPrivateFieldGet(_deviceRequestPrompDeferreds, this).size === 0;\n    let enablePromise;\n    if (needsEnable) {\n      enablePromise = _classPrivateFieldGet(_client2, this).send('DeviceAccess.enable');\n    }\n    const {\n      timeout = _classPrivateFieldGet(_timeoutSettings2, this).timeout()\n    } = options;\n    const deferred = Deferred_js_1.Deferred.create({\n      message: `Waiting for \\`DeviceRequestPrompt\\` failed: ${timeout}ms exceeded`,\n      timeout\n    });\n    _classPrivateFieldGet(_deviceRequestPrompDeferreds, this).add(deferred);\n    try {\n      const [result] = await Promise.all([deferred.valueOrThrow(), enablePromise]);\n      return result;\n    } finally {\n      _classPrivateFieldGet(_deviceRequestPrompDeferreds, this).delete(deferred);\n    }\n  }\n}\nfunction _onDeviceRequestPrompted(event) {\n  if (!_classPrivateFieldGet(_deviceRequestPrompDeferreds, this).size) {\n    return;\n  }\n  (0, assert_js_1.assert)(_classPrivateFieldGet(_client2, this) !== null);\n  const devicePrompt = new DeviceRequestPrompt(_classPrivateFieldGet(_client2, this), _classPrivateFieldGet(_timeoutSettings2, this), event);\n  for (const promise of _classPrivateFieldGet(_deviceRequestPrompDeferreds, this)) {\n    promise.resolve(devicePrompt);\n  }\n  _classPrivateFieldGet(_deviceRequestPrompDeferreds, this).clear();\n}\nexports.DeviceRequestPromptManager = DeviceRequestPromptManager;","map":{"version":3,"names":["_classPrivateMethodInitSpec","require","default","_classPrivateFieldInitSpec","_classPrivateFieldGet","_classPrivateFieldSet","_assertClassBrand","_defineProperty","assert_js_1","Deferred_js_1","DeviceRequestPromptDevice","constructor","id","name","exports","_client","WeakMap","_timeoutSettings","_id","_handled","_updateDevicesHandle","_waitForDevicePromises","_DeviceRequestPrompt_brand","WeakSet","DeviceRequestPrompt","client","timeoutSettings","firstEvent","_updateDevices","bind","Set","on","call","waitForDevice","filter","options","device","devices","timeout","deferred","Deferred","create","message","handle","promise","add","valueOrThrow","delete","select","assert","includes","off","send","deviceId","cancel","event","rawDevice","some","newDevice","push","waitForDevicePromise","resolve","_client2","_timeoutSettings2","_deviceRequestPrompDeferreds","_DeviceRequestPromptManager_brand","DeviceRequestPromptManager","_onDeviceRequestPrompted","waitForDevicePrompt","needsEnable","size","enablePromise","result","Promise","all","devicePrompt","clear"],"sources":["../../../../src/cdp/DeviceRequestPrompt.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}