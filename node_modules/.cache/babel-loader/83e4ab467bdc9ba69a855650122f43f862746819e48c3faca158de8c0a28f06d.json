{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport TChart from '@/views/components/TChart';\nimport { hasEventListener } from \"@/utils/utils\";\nimport { formatDate, formatTime } from '@/utils/formatTime';\nimport { TIRUtils } from \"@/utils/algorithm/TIR\";\nexport default {\n  data() {\n    return {\n      initOptions: {\n        renderer: 'svg'\n      },\n      option: {\n        grid: [],\n        xAxis: [],\n        yAxis: [],\n        series: []\n      },\n      dayList: ''\n    };\n  },\n  components: {\n    TChart\n  },\n  created() {},\n  mounted() {\n    console.log(formatTime(new Date()), '组件渲染完成');\n    // this.$bus.$on('getData',(data)=>{\n    //       this.manageData(data)  \n    // })\n    // this.manageData()\n    this.getOption();\n  },\n  methods: {\n    // 管理数据\n    manageData(data) {\n      console.log(formatTime(new Date()));\n      let array = data;\n      // 将数组按天分割\n      console.log(array);\n      let dayMap = new Map();\n      array.forEach(item => {\n        item.day = formatDate(item.DataTs * 1000, 'mm.dd');\n        item.week = formatDate(item.DataTs * 1000, 'WW');\n        item.moment = Number(formatDate(item.DataTs * 1000, 'HH')) * 60 + Number(formatDate(item.DataTs * 1000, 'MM'));\n        item.dayArray = new Array(24 * 60);\n        item.dayArray[item.moment] = item.Value;\n        dayMap.has(item.day) ? dayMap.get(item.day).value[item.moment] = item.Value : dayMap.set(item.day, {\n          value: item.dayArray,\n          week: item.week,\n          tir: TIRUtils.getTIRResult(item.dayArray).normalRate\n        });\n      });\n      // x轴数据\n      this.dayList = dayMap;\n      this.getOption();\n      this.$nextTick(() => {\n        console.log(formatTime(new Date()));\n      });\n    },\n    getOption() {\n      // let dayList = [...this.dayList]\n      let dayList = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\n      dayList.forEach((item, index) => {\n        console.log(index);\n        this.option.grid.push({\n          show: true,\n          left: index == 0 ? 50 : index >= 7 ? (index - 7) * 200 : index * 200 + 50,\n          top: index >= 7 ? 170 : 0,\n          width: 180,\n          height: 120\n        });\n        this.option.xAxis.push({\n          type: 'category',\n          gridIndex: index,\n          show: true,\n          axisLine: {\n            show: false\n          },\n          axisLabel: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          }\n        });\n        this.option.yAxis.push({\n          type: 'value',\n          show: false,\n          gridIndex: index,\n          min: 0,\n          max: 16\n        });\n        this.option.series.push({\n          type: 'line',\n          data: [8, 10, 7, 16, 7, 4, 6, 7, 10],\n          itemStyle: {\n            color: 'var(--color-primary)'\n          },\n          xAxisIndex: index,\n          yAxisIndex: index,\n          showSymbol: false,\n          lineStyle: {\n            width: 2\n          },\n          markArea: {\n            data: [[{\n              yAxis: 3.9\n            }, {\n              yAxis: 10\n            }]],\n            label: {\n              show: true,\n              color: 'var(--color-black-60)',\n              fontSize: 16,\n              distance: 10,\n              position: 'left'\n            },\n            itemStyle: {\n              color: 'rgba(50, 186, 192, 0.08)'\n            }\n          }\n        });\n      });\n      console.log(this.option);\n    },\n    getOptions(data) {\n      const config = {\n        grid: [{\n          left: 0,\n          right: 0,\n          top: 0,\n          bottom: 0,\n          height: 120\n        }],\n        xAxis: [{\n          type: 'category',\n          show: false\n        }],\n        yAxis: {\n          type: 'value',\n          show: false,\n          min: 0,\n          max: 16\n        },\n        series: [{\n          type: 'line',\n          data: data,\n          itemStyle: {\n            color: 'var(--color-primary)'\n          },\n          showSymbol: false,\n          lineStyle: {\n            width: 2\n          },\n          markLine: {\n            symbol: 'none',\n            animation: false,\n            data: [{\n              xAxis: 720,\n              lineStyle: {\n                color: 'var(--color-black-10)',\n                width: 1,\n                type: 'dashed'\n              },\n              label: {\n                show: false\n              }\n            }]\n          },\n          markArea: {\n            data: [[{\n              yAxis: 3.9\n            }, {\n              yAxis: 10\n            }]],\n            label: {\n              show: true,\n              color: 'var(--color-black-60)',\n              fontSize: 16,\n              distance: 10,\n              position: 'left'\n            },\n            itemStyle: {\n              color: 'rgba(50, 186, 192, 0.08)'\n            }\n          }\n        }]\n      };\n      return config;\n    }\n  },\n  beforeDestroy() {\n    this.$bus.$off('getData');\n  }\n};","map":{"version":3,"names":["TChart","hasEventListener","formatDate","formatTime","TIRUtils","data","initOptions","renderer","option","grid","xAxis","yAxis","series","dayList","components","created","mounted","console","log","Date","getOption","methods","manageData","array","dayMap","Map","forEach","item","day","DataTs","week","moment","Number","dayArray","Array","Value","has","get","value","set","tir","getTIRResult","normalRate","$nextTick","index","push","show","left","top","width","height","type","gridIndex","axisLine","axisLabel","axisTick","min","max","itemStyle","color","xAxisIndex","yAxisIndex","showSymbol","lineStyle","markArea","label","fontSize","distance","position","getOptions","config","right","bottom","markLine","symbol","animation","beforeDestroy","$bus","$off"],"sources":["src/views/components/Chart/DayChart.vue"],"sourcesContent":["<template>\n    <div>\n        <div class='day-box' >\n            <!-- <div class='day-item' v-for='(item,index) in dayList' :key='index'>\n                <div class='day-week' >{{item[1].week}}</div>\n                <div class='day-main' >\n                    <div class='day-target' v-if='index==0' >\n                        <div class='day-target-max' >10</div>\n                        <div class='day-target-min' >3.9</div>\n                    </div>\n                    <div class='day-date-tir' >\n                        <div class='day-date' >{{item[0]}}</div>\n                        <div class='day-tir' >TIR:{{item[1].tir}}%</div>\n                    </div>\n                    <div class='chart-box' >\n                        <t-chart\n                            style=\"width: 100%;height:120px;\"\n                            :option=\"getOptions(item[1].value)\"\n                            :init-options=\"initOptions\"\n                            theme=\"tduck-echarts-theme\"\n                        />\n                    </div>\n                </div>\n                <div class='chart-x-end' v-if='index==dayList.size-1'>\n                    <div>00:00</div>\n                    <div>12:00</div>\n                    <div>00:00</div>\n                </div>\n                <div class='chart-x' v-else>\n                    <div>00:00</div>\n                    <div>12:00</div>\n                </div>\n            </div> -->\n            <t-chart\n                style=\"width: 100%;height:350px;\"\n                :option=\"option\"\n                :init-options=\"initOptions\"\n                theme=\"tduck-echarts-theme\"\n            />\n        </div>\n    </div>\n</template>\n<script>\nimport TChart from '@/views/components/TChart'\nimport { hasEventListener } from \"@/utils/utils\";\nimport {formatDate,formatTime} from '@/utils/formatTime'\nimport { TIRUtils } from \"@/utils/algorithm/TIR\";\nexport default {\n    data(){\n        return{\n            initOptions: {\n                renderer: 'svg'\n            },\n            option: {\n                grid:[],\n                xAxis: [],\n                yAxis: [],\n                series: [],\n              \n            },\n            dayList:'',\n        }\n    },\n    components: {\n        TChart\n    },\n    created(){\n        \n    },\n    mounted(){\n        console.log(formatTime(new Date()),'组件渲染完成')  \n        // this.$bus.$on('getData',(data)=>{\n        //       this.manageData(data)  \n        // })\n        // this.manageData()\n        this.getOption()\n    },\n    methods:{\n        // 管理数据\n        manageData(data){\n            console.log(formatTime(new Date()))\n            let array = data\n            // 将数组按天分割\n            console.log(array)\n            let dayMap = new Map()\n             array.forEach(item=>{\n                item.day = formatDate(item.DataTs*1000,'mm.dd')\n                item.week = formatDate(item.DataTs*1000,'WW')\n                item.moment = Number(formatDate(item.DataTs*1000,'HH'))*60+Number(formatDate(item.DataTs*1000,'MM'))\n                item.dayArray = new Array(24*60)\n                item.dayArray[item.moment] = item.Value\n                dayMap.has(item.day) ? dayMap.get(item.day).value[item.moment]=item.Value: dayMap.set(item.day, {value:item.dayArray,week:item.week,tir:TIRUtils.getTIRResult(item.dayArray).normalRate});\n            })\n            // x轴数据\n            this.dayList = dayMap\n            this.getOption()\n            this.$nextTick(()=>{\n                console.log(formatTime(new Date()))\n            })\n        },\n        getOption(){\n            // let dayList = [...this.dayList]\n             let dayList = [1,1,1,1,1,1,1,1,1,1,1,1]\n            dayList.forEach((item,index)=>{\n                console.log(index)\n                this.option.grid.push({   \n                        show:true,\n                        left:index==0?50:index>=7?(index-7)*200:index*200+50,\n                        top:index>=7?170:0,\n                        width:180,\n                        height:120,\n                })\n                this.option.xAxis.push({   \n                        type: 'category',\n                        gridIndex:index,\n                        show:true,\n                        axisLine:{\n                            show:false\n                        },\n                        axisLabel:{\n                            show:false\n                        },\n                        axisTick:{\n                            show:false\n                        }\n                })\n                this.option.yAxis.push({   \n                        type: 'value',\n                        show:false,\n                        gridIndex:index,\n                        min:0,\n                        max:16\n                })\n                this.option.series.push(  \n                        {\n                        type: 'line',\n                        data:[8,10,7,16,7,4,6,7,10],\n                        itemStyle: {\n                        color:'var(--color-primary)',\n                        },\n                        xAxisIndex:index,\n                        yAxisIndex:index,\n                        showSymbol: false,\n                        lineStyle: {\n                        width: 2,\n                        },\n                        markArea:{\n                            data:[\n                                [{\n                                    yAxis: 3.9\n                                },\n                                {\n                                    yAxis: 10\n                                }]\n                            ],\n                            label: {\n                                show:true,\n                                color: 'var(--color-black-60)',\n                                fontSize: 16,\n                                distance: 10,\n                                position:'left'\n                            },\n                            itemStyle:{\n                                color:'rgba(50, 186, 192, 0.08)'\n                            }\n                        }\n                    }\n                )\n            })\n            console.log(this.option)\n        },\n        getOptions(data){\n            const config = {\n                grid:[\n                        {   \n                            left:0,\n                            right:0,\n                            top:0,\n                            bottom:0,\n                            height:120,\n                        }\n                ],\n                xAxis: [\n                    {\n                        type: 'category',\n                        show:false,\n                    }\n                ],\n                yAxis: {\n                        type: 'value',\n                        show:false,\n                        min:0,\n                        max:16\n                },\n                series: [\n                        {\n                            type: 'line',\n                            data:data,\n                            itemStyle: {\n                            color:'var(--color-primary)',\n                            },\n                            showSymbol: false,\n                            lineStyle: {\n                            width: 2,\n                            },\n                            markLine:{\n                                symbol: 'none',\n                                animation:false,\n                                data:[\n                                    {\n                                        xAxis:720,\n                                        lineStyle: {\n                                            color: 'var(--color-black-10)',\n                                            width: 1,\n                                            type:'dashed'\n                                        },\n                                        label:{\n                                            show:false\n                                        }\n                                    }\n                                ]\n                            },\n                            markArea:{\n                                data:[\n                                    [{\n                                        yAxis: 3.9\n                                    },\n                                    {\n                                        yAxis: 10\n                                    }]\n                                ],\n                                label: {\n                                    show:true,\n                                    color: 'var(--color-black-60)',\n                                    fontSize: 16,\n                                    distance: 10,\n                                    position:'left'\n                                },\n                                itemStyle:{\n                                    color:'rgba(50, 186, 192, 0.08)'\n                                }\n                            }\n                        },\n                ],\n            }\n            return config\n        },\n    },\n    \n    beforeDestroy(){\n        this.$bus.$off('getData')\n    }\n}\n</script>\n<style scoped>\n    .day-box{\n        display: flex;\n        align-items: center;\n        flex-wrap: wrap;\n        padding:0 50px;\n    }\n    .day-item{\n        width:180px;\n        height:180px;\n        position: relative;\n        margin:0 5px;\n        margin-bottom:20px;\n    }\n    .day-week{\n        width:100%;\n        text-align: center;\n        font-size:var(--fontSize-big);\n        color:var(--color-black-60);\n        margin-bottom:10px;\n    }\n    .day-main{\n        width:180px;\n        height:120px;\n        position: relative;\n    }\n    .day-date-tir{\n        width:100%;\n        padding:2px 6px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        position: absolute;\n        left:0;\n        top:0;\n        color:var(--color-black-60);\n        font-size: var(--fontSize-big);\n    }\n    .day-target{\n        height: 66px;\n        display: flex;\n        flex-direction: column;\n        align-items:center ;\n        justify-content: space-between;\n        position: absolute;\n        top:35px;\n        left:-30px;\n        font-size:var(--fontSize-big);\n        color:var(--color-black-60);\n    }\n    .chart-box{\n        width:180px;\n        height:120px;\n        border:1px solid var(--color-black-10);\n        border-radius:10px;\n    }\n    .chart-x{\n        width:130px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        position: absolute;\n        bottom:0;\n        left:-20px;\n        font-size:var(--fontSize-big);\n        color:var(--color-black-40);\n    }\n    .chart-x-end{\n        width:220px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        position: absolute;\n        bottom:0;\n        left:-20px;\n        font-size:var(--fontSize-big);\n        color:var(--color-black-40);\n    }\n</style>"],"mappings":"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EACA;QACAxC,KAAA,GACA;UACAyC,IAAA;UACAL,IAAA;QACA,EACA;QACAnC,KAAA;UACAwC,IAAA;UACAL,IAAA;UACAU,GAAA;UACAC,GAAA;QACA;QACA7C,MAAA,GACA;UACAuC,IAAA;UACA9C,IAAA,EAAAA,IAAA;UACAqD,SAAA;YACAC,KAAA;UACA;UACAG,UAAA;UACAC,SAAA;YACAd,KAAA;UACA;UACAwB,QAAA;YACAC,MAAA;YACAC,SAAA;YACAtE,IAAA,GACA;cACAK,KAAA;cACAqD,SAAA;gBACAJ,KAAA;gBACAV,KAAA;gBACAE,IAAA;cACA;cACAc,KAAA;gBACAnB,IAAA;cACA;YACA;UAEA;UACAkB,QAAA;YACA3D,IAAA,GACA;cACAM,KAAA;YACA,GACA;cACAA,KAAA;YACA,GACA;YACAsD,KAAA;cACAnB,IAAA;cACAa,KAAA;cACAO,QAAA;cACAC,QAAA;cACAC,QAAA;YACA;YACAV,SAAA;cACAC,KAAA;YACA;UACA;QACA;MAEA;MACA,OAAAW,MAAA;IACA;EACA;EAEAM,cAAA;IACA,KAAAC,IAAA,CAAAC,IAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}