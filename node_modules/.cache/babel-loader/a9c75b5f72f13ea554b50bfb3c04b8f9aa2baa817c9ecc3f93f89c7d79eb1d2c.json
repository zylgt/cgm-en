{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _classPrivateMethodInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateMethodInitSpec.js\").default;\nvar _classPrivateFieldInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _classPrivateFieldSet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldSet2.js\").default;\nvar _assertClassBrand = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/assertClassBrand.js\").default;\nvar _classPrivateFieldGet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldGet2.js\").default;\nvar _defineProperty = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nvar _ClickContext, _x, _y, _time, _DOUBLE_CLICK_TIME_MS, _MAX_DOUBLE_CLICK_RADIUS;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WheelSource = exports.PointerSource = exports.KeySource = exports.NoneSource = void 0;\nclass NoneSource {\n  constructor() {\n    _defineProperty(this, \"type\", \"none\" /* SourceType.None */);\n  }\n}\nexports.NoneSource = NoneSource;\nvar _modifiers = /*#__PURE__*/new WeakMap();\nvar _KeySource_brand = /*#__PURE__*/new WeakSet();\nclass KeySource {\n  constructor() {\n    _classPrivateMethodInitSpec(this, _KeySource_brand);\n    _defineProperty(this, \"type\", \"key\" /* SourceType.Key */);\n    _defineProperty(this, \"pressed\", new Set());\n    // This is a bitfield that matches the modifiers parameter of\n    // https://chromedevtools.github.io/devtools-protocol/tot/Input/#method-dispatchKeyEvent\n    _classPrivateFieldInitSpec(this, _modifiers, 0);\n  }\n  get modifiers() {\n    return _classPrivateFieldGet(_modifiers, this);\n  }\n  get alt() {\n    return (_classPrivateFieldGet(_modifiers, this) & 1) === 1;\n  }\n  set alt(value) {\n    _assertClassBrand(_KeySource_brand, this, _setModifier).call(this, value, 1);\n  }\n  get ctrl() {\n    return (_classPrivateFieldGet(_modifiers, this) & 2) === 2;\n  }\n  set ctrl(value) {\n    _assertClassBrand(_KeySource_brand, this, _setModifier).call(this, value, 2);\n  }\n  get meta() {\n    return (_classPrivateFieldGet(_modifiers, this) & 4) === 4;\n  }\n  set meta(value) {\n    _assertClassBrand(_KeySource_brand, this, _setModifier).call(this, value, 4);\n  }\n  get shift() {\n    return (_classPrivateFieldGet(_modifiers, this) & 8) === 8;\n  }\n  set shift(value) {\n    _assertClassBrand(_KeySource_brand, this, _setModifier).call(this, value, 8);\n  }\n}\nfunction _setModifier(value, bit) {\n  if (value) {\n    _classPrivateFieldSet(_modifiers, this, _classPrivateFieldGet(_modifiers, this) | bit);\n  } else {\n    _classPrivateFieldSet(_modifiers, this, _classPrivateFieldGet(_modifiers, this) & ~bit);\n  }\n}\nexports.KeySource = KeySource;\nvar _clickContexts = /*#__PURE__*/new WeakMap();\nclass PointerSource {\n  constructor(id, subtype) {\n    _defineProperty(this, \"type\", \"pointer\" /* SourceType.Pointer */);\n    _defineProperty(this, \"subtype\", void 0);\n    _defineProperty(this, \"pointerId\", void 0);\n    _defineProperty(this, \"pressed\", new Set());\n    _defineProperty(this, \"x\", 0);\n    _defineProperty(this, \"y\", 0);\n    _classPrivateFieldInitSpec(this, _clickContexts, new Map());\n    this.pointerId = id;\n    this.subtype = subtype;\n  }\n  // This is a bitfield that matches the buttons parameter of\n  // https://chromedevtools.github.io/devtools-protocol/tot/Input/#method-dispatchMouseEvent\n  get buttons() {\n    let buttons = 0;\n    for (const button of this.pressed) {\n      switch (button) {\n        case 0:\n          buttons |= 1;\n          break;\n        case 1:\n          buttons |= 4;\n          break;\n        case 2:\n          buttons |= 2;\n          break;\n        case 3:\n          buttons |= 8;\n          break;\n        case 4:\n          buttons |= 16;\n          break;\n      }\n    }\n    return buttons;\n  }\n  // --- Platform-specific code starts here ---\n  // Input.dispatchMouseEvent doesn't know the concept of double click, so we\n  // need to create the logic, similar to how it's done for OSes:\n  // https://source.chromium.org/chromium/chromium/src/+/refs/heads/main:ui/events/event.cc;l=479\n\n  setClickCount(button, context) {\n    let storedContext = _classPrivateFieldGet(_clickContexts, this).get(button);\n    if (!storedContext || storedContext.compare(context)) {\n      storedContext = context;\n    }\n    ++storedContext.count;\n    _classPrivateFieldGet(_clickContexts, this).set(button, storedContext);\n    return storedContext.count;\n  }\n  getClickCount(button) {\n    return _classPrivateFieldGet(_clickContexts, this).get(button)?.count ?? 0;\n  }\n}\n_defineProperty(PointerSource, \"ClickContext\", (_x = /*#__PURE__*/new WeakMap(), _y = /*#__PURE__*/new WeakMap(), _time = /*#__PURE__*/new WeakMap(), (_ClickContext = class ClickContext {\n  constructor(x, y, time) {\n    _defineProperty(this, \"count\", 0);\n    _classPrivateFieldInitSpec(this, _x, void 0);\n    _classPrivateFieldInitSpec(this, _y, void 0);\n    _classPrivateFieldInitSpec(this, _time, void 0);\n    _classPrivateFieldSet(_x, this, x);\n    _classPrivateFieldSet(_y, this, y);\n    _classPrivateFieldSet(_time, this, time);\n  }\n  compare(context) {\n    return (\n      // The click needs to be within a certain amount of ms.\n      _classPrivateFieldGet(_time, context) - _classPrivateFieldGet(_time, this) > _assertClassBrand(_ClickContext, ClickContext, _DOUBLE_CLICK_TIME_MS)._ ||\n      // The click needs to be within a certain square radius.\n      Math.abs(_classPrivateFieldGet(_x, context) - _classPrivateFieldGet(_x, this)) > _assertClassBrand(_ClickContext, ClickContext, _MAX_DOUBLE_CLICK_RADIUS)._ || Math.abs(_classPrivateFieldGet(_y, context) - _classPrivateFieldGet(_y, this)) > _assertClassBrand(_ClickContext, ClickContext, _MAX_DOUBLE_CLICK_RADIUS)._\n    );\n  }\n}, _DOUBLE_CLICK_TIME_MS = {\n  _: 500\n}, _MAX_DOUBLE_CLICK_RADIUS = {\n  _: 2\n}, _ClickContext)));\nexports.PointerSource = PointerSource;\nclass WheelSource {\n  constructor() {\n    _defineProperty(this, \"type\", \"wheel\" /* SourceType.Wheel */);\n  }\n}\nexports.WheelSource = WheelSource;","map":{"version":3,"names":["_classPrivateMethodInitSpec","require","default","_classPrivateFieldInitSpec","_classPrivateFieldSet","_assertClassBrand","_classPrivateFieldGet","_defineProperty","_ClickContext","_x","_y","_time","_DOUBLE_CLICK_TIME_MS","_MAX_DOUBLE_CLICK_RADIUS","NoneSource","constructor","exports","_modifiers","WeakMap","_KeySource_brand","WeakSet","KeySource","Set","modifiers","alt","value","_setModifier","call","ctrl","meta","shift","bit","_clickContexts","PointerSource","id","subtype","Map","pointerId","buttons","button","pressed","setClickCount","context","storedContext","get","compare","count","set","getClickCount","ClickContext","x","y","time","_","Math","abs","WheelSource"],"sources":["../../../../../src/bidiMapper/modules/input/InputSource.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}