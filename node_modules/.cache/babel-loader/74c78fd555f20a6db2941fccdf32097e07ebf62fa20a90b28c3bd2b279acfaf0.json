{"ast":null,"code":"import _classPrivateFieldInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldGet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\nimport _classPrivateFieldSet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\n/**\n * @license\n * Copyright 2024 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { WEB_PERMISSION_TO_PROTOCOL_PERMISSION } from '../api/Browser.js';\nimport { BrowserContext } from '../api/BrowserContext.js';\nimport { assert } from '../util/assert.js';\n/**\n * @internal\n */\nvar _connection = /*#__PURE__*/new WeakMap();\nvar _browser = /*#__PURE__*/new WeakMap();\nvar _id = /*#__PURE__*/new WeakMap();\nexport class CdpBrowserContext extends BrowserContext {\n  constructor(connection, browser, contextId) {\n    super();\n    _classPrivateFieldInitSpec(this, _connection, void 0);\n    _classPrivateFieldInitSpec(this, _browser, void 0);\n    _classPrivateFieldInitSpec(this, _id, void 0);\n    _classPrivateFieldSet(_connection, this, connection);\n    _classPrivateFieldSet(_browser, this, browser);\n    _classPrivateFieldSet(_id, this, contextId);\n  }\n  get id() {\n    return _classPrivateFieldGet(_id, this);\n  }\n  targets() {\n    return _classPrivateFieldGet(_browser, this).targets().filter(target => {\n      return target.browserContext() === this;\n    });\n  }\n  async pages() {\n    const pages = await Promise.all(this.targets().filter(target => {\n      return target.type() === 'page' || target.type() === 'other' && _classPrivateFieldGet(_browser, this)._getIsPageTargetCallback()?.(target);\n    }).map(target => {\n      return target.page();\n    }));\n    return pages.filter(page => {\n      return !!page;\n    });\n  }\n  isIncognito() {\n    return !!_classPrivateFieldGet(_id, this);\n  }\n  async overridePermissions(origin, permissions) {\n    const protocolPermissions = permissions.map(permission => {\n      const protocolPermission = WEB_PERMISSION_TO_PROTOCOL_PERMISSION.get(permission);\n      if (!protocolPermission) {\n        throw new Error('Unknown permission: ' + permission);\n      }\n      return protocolPermission;\n    });\n    await _classPrivateFieldGet(_connection, this).send('Browser.grantPermissions', {\n      origin,\n      browserContextId: _classPrivateFieldGet(_id, this) || undefined,\n      permissions: protocolPermissions\n    });\n  }\n  async clearPermissionOverrides() {\n    await _classPrivateFieldGet(_connection, this).send('Browser.resetPermissions', {\n      browserContextId: _classPrivateFieldGet(_id, this) || undefined\n    });\n  }\n  newPage() {\n    return _classPrivateFieldGet(_browser, this)._createPageInContext(_classPrivateFieldGet(_id, this));\n  }\n  browser() {\n    return _classPrivateFieldGet(_browser, this);\n  }\n  async close() {\n    assert(_classPrivateFieldGet(_id, this), 'Non-incognito profiles cannot be closed!');\n    await _classPrivateFieldGet(_browser, this)._disposeContext(_classPrivateFieldGet(_id, this));\n  }\n}","map":{"version":3,"names":["WEB_PERMISSION_TO_PROTOCOL_PERMISSION","BrowserContext","assert","_connection","WeakMap","_browser","_id","CdpBrowserContext","constructor","connection","browser","contextId","_classPrivateFieldInitSpec","_classPrivateFieldSet","id","_classPrivateFieldGet","targets","filter","target","browserContext","pages","Promise","all","type","_getIsPageTargetCallback","map","page","isIncognito","overridePermissions","origin","permissions","protocolPermissions","permission","protocolPermission","get","Error","send","browserContextId","undefined","clearPermissionOverrides","newPage","_createPageInContext","close","_disposeContext"],"sources":["../../../../src/cdp/BrowserContext.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}