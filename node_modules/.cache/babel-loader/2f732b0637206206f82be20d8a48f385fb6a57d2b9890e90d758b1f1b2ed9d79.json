{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport TChart from '@/views/components/TChart';\nimport DayAnalysis from '@/views/report/components/dayAnalysis';\nimport { getAgpData } from '@/api/dataApi';\nexport default {\n  data() {\n    return {\n      agpDate: ['2024-05-01', '2024-05-08'],\n      list: [],\n      loading: false,\n      empty: false,\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近7天',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近14天',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 14);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近30天',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近90天',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n      dialogVisible: false,\n      dialogType: \"\",\n      downloadList: ['AGP报告', '每日分析', '多日血糖分析', '报告解读', '饮食分析'],\n      checkedDowns: [],\n      checkAll: false,\n      isIndeterminate: true,\n      initOptions: {\n        renderer: 'svg'\n      },\n      option: {\n        tooltip: {\n          show: true,\n          trigger: 'axis',\n          confine: true\n        },\n        grid: [{\n          left: 120,\n          top: 30,\n          bottom: 30,\n          right: 50,\n          show: false,\n          containLabel: false\n        }, {\n          left: 150,\n          top: 30,\n          bottom: 30,\n          right: 90,\n          show: false,\n          containLabel: false\n        }],\n        xAxis: [{\n          type: 'category',\n          gridIndex: 1,\n          name: '平均血糖值',\n          nameLocation: 'start',\n          nameTextStyle: {\n            color: '#666',\n            fontSize: 18,\n            height: 80,\n            verticalAlign: 'bottom'\n          },\n          nameGap: 56,\n          data: [],\n          boundaryGap: false,\n          axisPointer: {\n            type: 'shadow'\n          },\n          axisLabel: {\n            fontSize: 18,\n            color: '#666'\n          },\n          axisLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          }\n        }, {\n          type: 'category',\n          name: 'TIR',\n          nameLocation: 'start',\n          nameTextStyle: {\n            color: '#666',\n            fontSize: 18\n          },\n          nameGap: 86,\n          gridIndex: 0,\n          position: 'top',\n          data: [],\n          boundaryGap: false,\n          axisPointer: {\n            type: 'shadow'\n          },\n          axisLine: {\n            show: false,\n            onZero: false\n          },\n          axisLabel: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          }\n        }],\n        yAxis: [{\n          type: 'value',\n          name: '平均血糖值',\n          gridIndex: 1,\n          nameLocation: 'end',\n          nameGap: 40,\n          min: 0,\n          max: 18,\n          show: false,\n          axisLabel: {\n            formatter: '{value}'\n          }\n        }, {\n          type: 'value',\n          name: 'TIR',\n          gridIndex: 1,\n          nameLocation: 'start',\n          show: false,\n          min: -20,\n          max: 100,\n          interval: 20,\n          axisLabel: {\n            formatter: '{value}%'\n          }\n        }, {\n          type: 'value',\n          name: 'TIR',\n          gridIndex: 0,\n          nameLocation: 'start',\n          show: false,\n          min: -20,\n          max: 100,\n          interval: 20,\n          axisLabel: {\n            formatter: '{value}%'\n          }\n        }],\n        series: [{\n          name: '平均血糖',\n          type: 'bar',\n          yAxisIndex: 0,\n          xAxisIndex: 0,\n          barMaxWidth: 30,\n          tooltip: {\n            valueFormatter: function (value) {\n              return value + '份';\n            }\n          },\n          itemStyle: {\n            color: '#e5e5e5'\n          },\n          label: {\n            show: true,\n            distance: 5,\n            color: '#666',\n            fontSize: 16,\n            position: 'top'\n          },\n          data: [4.6, 6.3, 4.5, 6, 7.8, 9, 11.3, 13.9, 15, 17, 13.2, 4.6]\n        }, {\n          name: 'TIR',\n          type: 'line',\n          yAxisIndex: 1,\n          xAxisIndex: 0,\n          tooltip: {\n            valueFormatter: function (value) {\n              return value + ' %';\n            }\n          },\n          label: {\n            show: true,\n            distance: 5,\n            color: '#666',\n            fontSize: 16,\n            formatter: '{c}%',\n            position: 'top'\n          },\n          lineStyle: {\n            color: '#ccc'\n          },\n          itemStyle: {\n            color: val => {\n              return val.value >= 70 ? \"#32BAC0\" : \"#F43F31\";\n            }\n          },\n          symbolSize: 13,\n          data: [70, 50, 60, 90, 50, 67, 90]\n        }, {\n          name: 'TIR',\n          type: 'line',\n          yAxisIndex: 2,\n          xAxisIndex: 1,\n          markArea: {\n            data: [[{\n              yAxis: 70\n            }, {\n              yAxis: 100\n            }]],\n            itemStyle: {\n              color: 'rgba(72, 160, 220, 0.05)'\n            }\n          },\n          markLine: {\n            symbol: 'none',\n            data: [{\n              yAxis: 70,\n              lineStyle: {\n                width: 0\n              },\n              label: {\n                show: true,\n                formatter: '{c}%',\n                position: 'end',\n                distance: 10,\n                fontSize: 16,\n                color: '#666'\n              }\n            }, {\n              yAxis: 100,\n              lineStyle: {\n                width: 0\n              },\n              label: {\n                show: true,\n                formatter: '{c}%',\n                position: 'end',\n                fontSize: 16,\n                distance: 10,\n                color: '#666'\n              }\n            }]\n          }\n        }]\n      }\n    };\n  },\n  components: {\n    TChart,\n    DayAnalysis\n  },\n  methods: {\n    upload() {\n      this.$router.push('/upLoad');\n    },\n    // 从云拉取数据\n    getData() {\n      let s = new Date(this.agpDate[0]);\n      let e = new Date(this.agpDate[1]);\n      let start_ts = s.setHours(0, 0, 0) / 1000;\n      let end_ts = e.setHours(23, 59, 59) / 1000;\n      this.loading = true;\n      getAgpData({\n        start_ts: start_ts,\n        end_ts: end_ts\n      }).then(response => {\n        if (response.code == 1000) {\n          let arrayData = response.data;\n          this.loading = false;\n          if (arrayData.length > 0) {\n            console.log(formatTime(new Date()), '得到数据');\n            this.empty = false;\n            this.handelDay([this.agpDate.join('/'), arrayData]);\n            this.$store.dispatch('setChooseDateList', this.agpDate.join('/'));\n          } else {\n            this.empty = true;\n          }\n        } else {\n          this.loading = false;\n          this.$message({\n            type: 'error',\n            message: response.msg\n          });\n        }\n      }).catch(res => {\n        console.log(res);\n      });\n    },\n    // 选择时间\n    changeDate(e) {\n      if (_.indexOf(this.$store.state.report.chooseDateList, this.agpDate.join('/')) == -1) {\n        this.getData();\n      } else {\n        let result = this.$store.state.report.day[this.agpDate.join('/')];\n        this.list = result;\n        this.readerIng(result);\n      }\n    },\n    processArray(arr, interval) {\n      let result = [];\n      for (let i = 0; i < arr.length - 1; i++) {\n        result.push(arr[i]);\n        let diff = arr[i + 1].DataTs - arr[i].DataTs;\n        let addTs = arr[i].DataTs + interval;\n        while (diff > interval) {\n          result.push({\n            DataTs: addTs,\n            value: undefined\n          });\n          diff = arr[i + 1].DataTs - addTs;\n          addTs += interval;\n        }\n      }\n      result.push(arr[arr.length - 1]);\n      return result;\n    },\n    filterArray(data) {\n      const result = [];\n      const seenTimes = new Set();\n      let levelLowInvalidMg = 20;\n      let levelHighInvalidMg = 800;\n      let levelTooLowMg = 40;\n      let levelTooHighMg = 400;\n      data.forEach(item => {\n        const timeStr = formatDate(item.DataTs * 1000, 'YYYY-mm-dd HH:MM');\n        if (!seenTimes.has(timeStr)) {\n          seenTimes.add(timeStr);\n          if (item.value > levelLowInvalidMg || item.value < levelHighInvalidMg) {\n            result.push({\n              ...item,\n              value: undefined\n            });\n          } else if (item.value < levelTooLowMg) {\n            result.push({\n              ...item,\n              value: levelTooLowMg\n            });\n          } else if (item.value > levelTooHighMg) {\n            result.push({\n              ...item,\n              value: levelTooHighMg\n            });\n          } else {\n            result.push(item);\n          }\n        }\n      });\n      return result;\n    },\n    handleData(objects, s_ts, e_ts) {\n      let measuringInterval = 60;\n      objects = this.processArray(objects, measuringInterval);\n      objects = this.filterArray(objects);\n      let startTs = objects[0].DataTs;\n      while (startTs - measuringInterval >= s_ts) {\n        objects.unshift({\n          DataTs: startTs - measuringInterval,\n          value: undefined\n        });\n        startTs = startTs - measuringInterval;\n      }\n      let endTs = objects[objects.length - 1].DataTs;\n      while (endTs + measuringInterval < e_ts) {\n        objects.push({\n          DataTs: endTs + measuringInterval,\n          value: undefined\n        });\n        endTs = endTs + measuringInterval;\n      }\n      return objects;\n    },\n    // 分割成每日血糖所需要的\n    handelDay(data) {\n      data = _.cloneDeep(data);\n      let s = new Date(data[0].split('/')[0]);\n      let e = new Date(data[0].split('/')[1]);\n      let s_date = s.setHours(0, 0, 0) / 1000;\n      let e_date = e.setHours(23, 59, 59) / 1000;\n      let datArray = this.handleData(data[1], s_date, e_date);\n      let singleDay = _.chunk(datArray, 60 * 24);\n      let max = _.maxBy(datArray, 'Value').Value > 400 ? 400 : _.maxBy(datArray, 'Value').Value;\n      let dayList = new Array();\n      singleDay.forEach(item => {\n        let value = _.map(item, 'Value');\n        dayList.push({\n          day: formatDate(item[0].DataTs * 1000, 'mm.dd'),\n          week: formatDate(item[0].DataTs * 1000, 'WW'),\n          value: value,\n          max: max,\n          tir: TIRUtils.getTIRResult(value) ? (Number(TIRUtils.getTIRResult(value).normalRate) * 100).toFixed(1) : ''\n        });\n      });\n      this.list = dayList;\n      console.log(formatTime(new Date()), '每日血糖计算完成');\n      this.$store.dispatch('setDay', {\n        key: data[0],\n        value: dayList\n      }); //处理完数据存vuex\n      // this.$nextTick(()=>{\n      //     this.getOption(this.dayList)\n      // })\n      this.readerIng(dayList);\n    },\n    // 渲染血糖总结图表\n    readerIng(data) {\n      let list = _.cloneDeep(data);\n      let avgList = [];\n      let xData = [];\n      let tir = [];\n      list.forEach(item => {\n        xData.push(item.day);\n        avgList.push(_.mean(item.value)); //平均值\n        tir.push(item.tir);\n      });\n      this.option.xAxis[0].data = xData;\n      this.option.xAxis[1].data = xData;\n      this.option.series[0].data = avgList;\n      this.option.series[1].data = tir;\n    },\n    // 选择下载。打印的内容\n    handleCheckedCitiesChange(val) {\n      let checkedCount = val.length;\n      this.checkAll = checkedCount === this.downloadList.length;\n      this.isIndeterminate = checkedCount > 0 && checkedCount < this.downloadList.length;\n    },\n    // 全选\n    handleCheckAllChange(val) {\n      this.checkedDowns = val ? this.downloadList : [];\n      this.isIndeterminate = false;\n    },\n    // 打印\n    async print() {\n      this.dialogVisible = true;\n      this.dialogType = 'print';\n    },\n    // 导出pdf\n    handleExport() {\n      this.dialogVisible = true;\n      this.dialogType = 'export';\n    }\n  }\n};","map":{"version":3,"names":["TChart","DayAnalysis","getAgpData","data","agpDate","list","loading","empty","pickerOptions","shortcuts","text","onClick","picker","end","Date","start","setTime","getTime","$emit","dialogVisible","dialogType","downloadList","checkedDowns","checkAll","isIndeterminate","initOptions","renderer","option","tooltip","show","trigger","confine","grid","left","top","bottom","right","containLabel","xAxis","type","gridIndex","name","nameLocation","nameTextStyle","color","fontSize","height","verticalAlign","nameGap","boundaryGap","axisPointer","axisLabel","axisLine","axisTick","position","onZero","yAxis","min","max","formatter","interval","series","yAxisIndex","xAxisIndex","barMaxWidth","valueFormatter","value","itemStyle","label","distance","lineStyle","val","symbolSize","markArea","markLine","symbol","width","components","methods","upload","$router","push","getData","s","e","start_ts","setHours","end_ts","then","response","code","arrayData","length","console","log","formatTime","handelDay","join","$store","dispatch","$message","message","msg","catch","res","changeDate","_","indexOf","state","report","chooseDateList","result","day","readerIng","processArray","arr","i","diff","DataTs","addTs","undefined","filterArray","seenTimes","Set","levelLowInvalidMg","levelHighInvalidMg","levelTooLowMg","levelTooHighMg","forEach","item","timeStr","formatDate","has","add","handleData","objects","s_ts","e_ts","measuringInterval","startTs","unshift","endTs","cloneDeep","split","s_date","e_date","datArray","singleDay","chunk","maxBy","Value","dayList","Array","map","week","tir","TIRUtils","getTIRResult","Number","normalRate","toFixed","key","avgList","xData","mean","handleCheckedCitiesChange","checkedCount","handleCheckAllChange","print","handleExport"],"sources":["src/views/report/dayReport.vue"],"sourcesContent":["<template>\n    <div>\n        <div class='agp-top' >\n            <div class='agp-top-fl' >\n                <div class='report-title'> {{$t('message.route.'+$route.meta.title)}}</div>\n                \n            </div>\n            <div class='agp-fr' >\n                <img src=\"~@/assets/image/printer.png\" alt=\"\" class='agp-icon' @click='print' >\n                <img src=\"~@/assets/image/down-icon.png\" alt=\"\" class='agp-icon' @click='handleExport' >\n                <img src=\"~@/assets/image/share.png\" alt=\"\" class='agp-icon agp-fr-icon'>\n                <el-button type=\"primary\" @click=\"upload\">\n                    <img src=\"~@/assets/image/btn-upload.png\" alt=\"\" class='btn-upload' >\n                    上传数据\n                </el-button>\n            </div>\n        </div>\n        <div class='report-agp-date' >\n                <img src=\"~@/assets/image/date-calendar.png\" alt=\"\" class='agp-icon' >\n                <div class='agp-date' >{{agpDate[0]}} — {{agpDate[1]}}（4天）</div>\n                    <img src=\"~@/assets/image/select-icon.png\" alt=\"\" class='select-icon' >\n                <el-date-picker\n                    class='agp-picker'\n                    v-model=\"agpDate\"\n                    type=\"daterange\"\n                    align=\"right\"\n                    unlink-panels\n                    range-separator=\"至\"\n                    start-placeholder=\"开始日期\"\n                    end-placeholder=\"结束日期\"\n                    value-format=\"yyyy-MM-dd\"\n                    format=\"yyyy-MM-dd\"\n                    @change=\"changeDate\"\n                    :picker-options=\"pickerOptions\">\n                </el-date-picker>\n        </div>\n         <!-- 血糖总结 -->\n        <div class='bg-summary agp-cont-main'>\n            <div class='cgm-cont-title'>  <span class='title-border' ></span>每日血糖总结</div>\n            <div class='cgm-agp-info-box cgm-agp-info-boxs'>\n                <div class='cgm-agp-info'></div>\n                <img src=\"~@/assets/image/reason-icon.png\" alt=\"\" class='reason-icon'  v-popover:tirPopover @click='openPopover(\"tir\")' >\n            </div>\n           \n            <div class='summary-chart' >\n                 <t-chart\n                    style=\"width: 100%;height:250px;\"\n                    :option=\"option\"\n                    :init-options=\"initOptions\"\n                    theme=\"tduck-echarts-theme\"\n                />\n            </div>\n          \n        </div>\n         <!-- 每日血糖图表 -->\n        <div class='bg-summary agp-cont-main'>\n            <div class='cgm-cont-title'>  <span class='title-border' ></span>每日血糖图表 </div>\n            <div class='cgm-agp-info-box cgm-agp-info-boxs'>\n                <div class='cgm-agp-info'></div>\n                <img src=\"~@/assets/image/reason-icon.png\" alt=\"\" class='reason-icon'  v-popover:tirPopover @click='openPopover(\"tir\")' >\n            </div>\n            <div v-for='(item,index) in list' :key='index'>\n                <DayAnalysis :dataList='item' />\n            </div>\n            \n        </div>\n         <!-- 下载打印弹窗 -->\n        <el-dialog  :visible.sync=\"dialogVisible\"  :show-close=\"false\" :title='dialogType==\"print\"?\"打印报告\":\"下载报告\"'\n         width=\"1060\" >\n            <div class='slot-popover'  id='popover'>\n                <div class='slot-popover-cont slot-popover-conts'>\n                    <div class='report-agp-date report-agp-dates' >\n                            <img src=\"~@/assets/image/date-calendar.png\" alt=\"\" class='agp-icon' >\n                            <div class='agp-date' >{{agpDate[0]}} — {{agpDate[1]}}（4天）</div>\n                            <img src=\"~@/assets/image/select-icon.png\" alt=\"\" class='select-icon' >\n                            <el-date-picker\n                                class='agp-picker'\n                                v-model=\"agpDate\"\n                                type=\"daterange\"\n                                align=\"right\"\n                                unlink-panels\n                                range-separator=\"至\"\n                                start-placeholder=\"开始日期\"\n                                end-placeholder=\"结束日期\"\n                                value-format=\"yyyy-MM-dd\"\n                                format=\"yyyy-MM-dd\"\n                                @change=\"changeDate\"\n                                :picker-options=\"pickerOptions\">\n                            </el-date-picker>\n                    </div>\n                    <div class='popover-cont-label' >\n                        <div class='popover-cont-label-label' v-if='dialogType==\"print\"'>请选择您想要打印的报告内容：</div>\n                        <div class='popover-cont-label-label' v-else>请选择您想要下载的报告内容：</div>\n                         <el-checkbox :indeterminate=\"isIndeterminate\" v-model=\"checkAll\" @change=\"handleCheckAllChange\">全选</el-checkbox>\n                    </div>\n                    <el-checkbox-group v-model=\"checkedDowns\" @change=\"handleCheckedCitiesChange\">\n                        <el-checkbox v-for=\"item in downloadList\" :label=\"item\" :key=\"item\">{{item}}</el-checkbox>\n                    </el-checkbox-group>\n                </div>\n                <div class='slot-popover-btn'>\n                    <el-button type=\"primary\" v-if='dialogType==\"print\"'>打印报告</el-button>\n                    <el-button type=\"primary\" v-else>下载报告</el-button>\n                </div>\n            </div>\n            <img src=\"~@/assets/image/close-icon.png\" alt=\"\" class='dialog-close' @click='dialogVisible=false' >\n        </el-dialog>\n    </div>\n</template>\n<script>\nimport TChart from '@/views/components/TChart'\nimport DayAnalysis from '@/views/report/components/dayAnalysis'\nimport {getAgpData} from '@/api/dataApi'\nexport default {\n    \n    data(){\n        return{\n            agpDate:['2024-05-01','2024-05-08'],\n            list:[],\n            loading:false,\n            empty:false,\n            pickerOptions: {\n                shortcuts: [{\n                    text: '最近7天',\n                    onClick(picker) {\n                    const end = new Date();\n                    const start = new Date();\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n                    picker.$emit('pick', [start, end]);\n                    }\n                },{\n                    text: '最近14天',\n                    onClick(picker) {\n                    const end = new Date();\n                    const start = new Date();\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 14);\n                    picker.$emit('pick', [start, end]);\n                    }\n                }, {\n                    text: '最近30天',\n                    onClick(picker) {\n                    const end = new Date();\n                    const start = new Date();\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n                    picker.$emit('pick', [start, end]);\n                    }\n                }, {\n                    text: '最近90天',\n                    onClick(picker) {\n                    const end = new Date();\n                    const start = new Date();\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n                    picker.$emit('pick', [start, end]);\n                    }\n                }]\n            },\n            dialogVisible:false,\n            dialogType:\"\",\n            downloadList:['AGP报告','每日分析','多日血糖分析','报告解读','饮食分析'],\n            checkedDowns:[],\n            checkAll:false,\n            isIndeterminate: true,\n            initOptions: {\n                renderer: 'svg'\n            },\n            option:{\n                tooltip:{\n                    show:true,\n                    trigger:'axis',\n                    confine:true\n\n                },\n                grid:[{\n                    left:120,\n                    top:30,\n                    bottom:30,\n                    right:50,\n                    show:false,\n                    containLabel :false\n                },{\n                    left:150,\n                    top:30,\n                    bottom:30,\n                    right:90,\n                    show:false,\n                    containLabel :false\n                }],\n                xAxis: [\n                    {\n                        type: 'category',\n                        gridIndex:1,\n                        name:'平均血糖值',\n                        nameLocation:'start',\n                        nameTextStyle:{\n                            color:'#666',\n                            fontSize:18,\n                            height:80,\n                            verticalAlign:'bottom',\n                        },\n                        nameGap:56,\n                        data: [],\n                        boundaryGap:false,\n                        axisPointer: {\n                            type: 'shadow'\n                        },\n                        axisLabel:{\n                            fontSize:18,\n                            color:'#666',\n                        },\n                        axisLine:{\n                            show:false\n                        },\n                        axisTick:{\n                             show:false\n                        }\n                    },\n                    {\n                        type: 'category',\n                        name:'TIR',\n                        nameLocation:'start',\n                        nameTextStyle:{\n                            color:'#666',\n                            fontSize:18\n                        },\n                        nameGap:86,\n                        gridIndex:0,\n                        position:'top',\n                        data: [],\n                        boundaryGap:false,\n                        axisPointer: {\n                            type: 'shadow'\n                        },\n                        axisLine:{\n                            show:false,\n                            onZero:false\n                        },\n                        axisLabel:{\n                            show:false\n                        },\n                        axisTick:{\n                             show:false\n                        }\n                    }\n                ],\n                yAxis: [\n                    {\n                        type: 'value',\n                        name: '平均血糖值',\n                        gridIndex:1,\n                        nameLocation:'end',\n                        nameGap:40,\n                        min: 0,\n                        max:18 ,\n                        show:false,\n                        axisLabel: {\n                            formatter: '{value}'\n                        }\n                    },\n                    {\n                        type: 'value',\n                        name: 'TIR',\n                        gridIndex:1,\n                        nameLocation:'start',\n                        show:false,\n                        min: -20,\n                        max: 100,\n                        interval: 20,\n                        axisLabel: {\n                            formatter: '{value}%'\n                        }\n                    },\n                    {\n                        type: 'value',\n                        name: 'TIR',\n                        gridIndex:0,\n                        nameLocation:'start',\n                        show:false,\n                        min: -20,\n                        max: 100,\n                        interval: 20,\n                        axisLabel: {\n                            formatter: '{value}%'\n                        }\n                    }\n                ],\n                series: [\n                    {\n                        name: '平均血糖',\n                        type: 'bar',\n                        yAxisIndex:0,\n                        xAxisIndex:0,\n                        barMaxWidth:30,\n                        tooltip: {\n                            valueFormatter: function (value) {\n                            return value + '份';\n                            }\n                        },\n                        itemStyle:{\n                            color:'#e5e5e5'\n                        },\n                        label:{\n                            show:true,\n                            distance:5,\n                            color:'#666',\n                            fontSize:16,\n                            position:'top'\n                        },\n                        data: [\n                            4.6, 6.3, 4.5, 6, 7.8, 9, 11.3, 13.9, 15, 17, 13.2, 4.6\n                        ]\n                    },\n                    {\n                        name: 'TIR',\n                        type: 'line',\n                        yAxisIndex:1,\n                        xAxisIndex:0,\n                        tooltip: {\n                            valueFormatter: function (value) {\n                            return value + ' %';\n                            }\n                        },\n                        label:{\n                            show:true,\n                            distance:5,\n                            color:'#666',\n                            fontSize:16,\n                            formatter:'{c}%',\n                            position:'top'\n                        },\n                        lineStyle:{\n                            color:'#ccc',\n                        },\n                        itemStyle:{\n                            color:(val)=>{\n                                return val.value>=70?\"#32BAC0\":\"#F43F31\"\n                            }\n                        },\n                        symbolSize:13,\n                        data: [70,50,60,90,50,67,90]\n                    },\n                    {\n                        name: 'TIR',\n                        type: 'line',\n                        yAxisIndex:2,\n                        xAxisIndex:1,\n                        markArea:{\n                            data:[\n                                [{\n                                yAxis:70\n                                },\n                                {   \n                                yAxis:100\n                                }]\n                            ],\n                            itemStyle:{\n                                    color:'rgba(72, 160, 220, 0.05)'\n                            }\n                        },\n                        markLine:{\n                            symbol: 'none',\n                            data:[{\n                                yAxis:70,\n                                lineStyle: {\n                                    width: 0,\n                                },\n                                label:{\n                                    show:true,\n                                    formatter:'{c}%',\n                                    position:'end',\n                                    distance:10,\n                                    fontSize:16,\n                                    color:'#666',\n\n                                }\n                            } ,\n                            {\n                                yAxis:100,\n                                lineStyle: {\n                                    width: 0,\n                                },\n                                label:{\n                                    show:true,\n                                    formatter:'{c}%',\n                                    position:'end',\n                                    fontSize:16,\n                                    distance:10,\n                                    color:'#666'\n                                }\n                            }]\n                        }\n                    }\n                ]\n            }\n        }\n    },\n    components: {\n        TChart,DayAnalysis\n    },\n    methods:{\n        upload(){\n            this.$router.push('/upLoad')\n        },\n         // 从云拉取数据\n        getData(){\n            let s = new Date(this.agpDate[0])\n            let e = new Date(this.agpDate[1])\n            let start_ts = s.setHours(0,0,0)/1000\n            let end_ts = e.setHours(23,59,59)/1000\n            this.loading = true\n            getAgpData({start_ts:start_ts,end_ts:end_ts}).then(response => {\n\t\t\t\t\t\t\tif(response.code == 1000){\n                                let arrayData = response.data\n                                this.loading = false\n                                if(arrayData.length>0){\n                                    console.log(formatTime(new Date()),'得到数据')   \n                                    this.empty = false\n                                    this.handelDay([this.agpDate.join('/'),arrayData])\n                                    this.$store.dispatch('setChooseDateList',this.agpDate.join('/'))\n                                }else{\n                                    this.empty = true\n                                }\n\t\t\t\t\t\t\t}else{\n                                this.loading = false\n\t\t\t\t\t\t\t\tthis.$message({\n                                    type: 'error',\n                                    message: response.msg\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n            }).catch((res) => {\n                console.log(res)\n            })\n        },\n        // 选择时间\n        changeDate(e){\n            if( _.indexOf(this.$store.state.report.chooseDateList,this.agpDate.join('/'))==-1){\n                this.getData()\n            }else{\n                let result  = this.$store.state.report.day[this.agpDate.join('/')]\n                this.list = result\n                this.readerIng(result)\n            }\n        },\n        processArray(arr, interval) {\n            let result = [];\n\n            for (let i = 0; i < arr.length - 1; i++) {\n                result.push(arr[i]);\n\n                let diff = arr[i + 1].DataTs - arr[i].DataTs;\n                let addTs = arr[i].DataTs + interval;\n                while (diff > interval) {\n                result.push({DataTs: addTs, value: undefined});\n                diff = arr[i + 1].DataTs - addTs;\n                addTs += interval;\n                }\n            }\n            result.push(arr[arr.length - 1]);\n\n            return result;\n        },\n\n        filterArray  (data) {\n            const result = [];\n\n            const seenTimes = new Set();\n            let levelLowInvalidMg = 20\n            let levelHighInvalidMg = 800\n            let levelTooLowMg = 40\n            let levelTooHighMg = 400\n            data.forEach(item => {\n                const timeStr = formatDate(item.DataTs*1000,'YYYY-mm-dd HH:MM')\n\n                if (!seenTimes.has(timeStr)) {\n                seenTimes.add(timeStr);\n                if (item.value > levelLowInvalidMg || item.value < levelHighInvalidMg) {\n                    result.push({...item, value: undefined});\n                } else if (item.value < levelTooLowMg) {\n                    result.push({\n                    ...item,\n                    value: levelTooLowMg,\n                    });\n                } else if (item.value > levelTooHighMg) {\n                    result.push({\n                    ...item,\n                    value: levelTooHighMg,\n                    });\n                } else {\n                    result.push(item);\n                }\n                }\n            });\n\n            return result;\n        },\n\n        handleData (objects, s_ts, e_ts)  {\n            let measuringInterval = 60\n            objects = this.processArray(objects, measuringInterval);\n            objects = this.filterArray(objects);\n\n            let startTs = objects[0].DataTs;\n            while (startTs - measuringInterval >= s_ts) {\n                objects.unshift({\n                DataTs: startTs - measuringInterval,\n                value: undefined,\n                });\n                startTs = startTs - measuringInterval;\n            }\n\n            let endTs = objects[objects.length - 1].DataTs;\n            while (endTs + measuringInterval < e_ts) {\n                objects.push({\n                DataTs: endTs + measuringInterval,\n                value: undefined,\n                });\n                endTs = endTs + measuringInterval;\n            }\n            return objects;\n        },\n        // 分割成每日血糖所需要的\n        handelDay(data){\n            data = _.cloneDeep(data)\n            let s = new Date(data[0].split('/')[0])\n            let e = new Date(data[0].split('/')[1])\n            let s_date = s.setHours(0,0,0)/1000\n            let e_date = e.setHours(23,59,59)/1000\n            let datArray = this.handleData(data[1],s_date,e_date)\n            let singleDay  = _.chunk(datArray,60*24) ;\n            let max = _.maxBy(datArray,'Value').Value>400?400:_.maxBy(datArray,'Value').Value\n            let dayList = new Array()\n            singleDay.forEach(item=>{\n                let value = _.map(item, 'Value');\n                dayList.push({\n                    day: formatDate(item[0].DataTs*1000,'mm.dd'),\n                    week: formatDate(item[0].DataTs*1000,'WW'),\n                    value:value,\n                    max:max,\n                    tir:TIRUtils.getTIRResult(value)?(Number(TIRUtils.getTIRResult(value).normalRate)*100).toFixed(1):''\n                })\n            })\n\n            this.list = dayList\n            console.log(formatTime(new Date()),'每日血糖计算完成')\n            this.$store.dispatch('setDay',{key:data[0],value:dayList}) //处理完数据存vuex\n            // this.$nextTick(()=>{\n            //     this.getOption(this.dayList)\n            // })\n            this.readerIng(dayList)\n        },\n        // 渲染血糖总结图表\n        readerIng(data){\n            let list =  _.cloneDeep(data)\n            let avgList = []\n            let xData = []\n            let tir = []\n            list.forEach(item=>{\n                xData.push(item.day)\n                avgList.push(_.mean(item.value)) //平均值\n                tir.push(item.tir)\n            })\n            \n            this.option.xAxis[0].data = xData\n            this.option.xAxis[1].data = xData\n            this.option.series[0].data = avgList\n            this.option.series[1].data = tir\n        },\n\n        // 选择下载。打印的内容\n        handleCheckedCitiesChange(val){\n            let checkedCount = val.length;\n            this.checkAll = checkedCount === this.downloadList.length;\n            this.isIndeterminate = checkedCount > 0 && checkedCount < this.downloadList.length;\n        },\n        // 全选\n        handleCheckAllChange(val){\n            this.checkedDowns = val ? this.downloadList : [];\n            this.isIndeterminate = false;\n        },\n          // 打印\n        async print(){\n            this.dialogVisible = true\n            this.dialogType='print'\n        },\n        // 导出pdf\n        handleExport() {\n            this.dialogVisible = true\n            this.dialogType='export'\n        },\n    }\n}\n</script>\n<style scoped>\n.cgm-agp-info-boxs{\n    margin-bottom:0;\n}\n</style>"],"mappings":";AA6GA,OAAAA,MAAA;AACA,OAAAC,WAAA;AACA,SAAAC,UAAA;AACA;EAEAC,KAAA;IACA;MACAC,OAAA;MACAC,IAAA;MACAC,OAAA;MACAC,KAAA;MACAC,aAAA;QACAC,SAAA;UACAC,IAAA;UACAC,QAAAC,MAAA;YACA,MAAAC,GAAA,OAAAC,IAAA;YACA,MAAAC,KAAA,OAAAD,IAAA;YACAC,KAAA,CAAAC,OAAA,CAAAD,KAAA,CAAAE,OAAA;YACAL,MAAA,CAAAM,KAAA,UAAAH,KAAA,EAAAF,GAAA;UACA;QACA;UACAH,IAAA;UACAC,QAAAC,MAAA;YACA,MAAAC,GAAA,OAAAC,IAAA;YACA,MAAAC,KAAA,OAAAD,IAAA;YACAC,KAAA,CAAAC,OAAA,CAAAD,KAAA,CAAAE,OAAA;YACAL,MAAA,CAAAM,KAAA,UAAAH,KAAA,EAAAF,GAAA;UACA;QACA;UACAH,IAAA;UACAC,QAAAC,MAAA;YACA,MAAAC,GAAA,OAAAC,IAAA;YACA,MAAAC,KAAA,OAAAD,IAAA;YACAC,KAAA,CAAAC,OAAA,CAAAD,KAAA,CAAAE,OAAA;YACAL,MAAA,CAAAM,KAAA,UAAAH,KAAA,EAAAF,GAAA;UACA;QACA;UACAH,IAAA;UACAC,QAAAC,MAAA;YACA,MAAAC,GAAA,OAAAC,IAAA;YACA,MAAAC,KAAA,OAAAD,IAAA;YACAC,KAAA,CAAAC,OAAA,CAAAD,KAAA,CAAAE,OAAA;YACAL,MAAA,CAAAM,KAAA,UAAAH,KAAA,EAAAF,GAAA;UACA;QACA;MACA;MACAM,aAAA;MACAC,UAAA;MACAC,YAAA;MACAC,YAAA;MACAC,QAAA;MACAC,eAAA;MACAC,WAAA;QACAC,QAAA;MACA;MACAC,MAAA;QACAC,OAAA;UACAC,IAAA;UACAC,OAAA;UACAC,OAAA;QAEA;QACAC,IAAA;UACAC,IAAA;UACAC,GAAA;UACAC,MAAA;UACAC,KAAA;UACAP,IAAA;UACAQ,YAAA;QACA;UACAJ,IAAA;UACAC,GAAA;UACAC,MAAA;UACAC,KAAA;UACAP,IAAA;UACAQ,YAAA;QACA;QACAC,KAAA,GACA;UACAC,IAAA;UACAC,SAAA;UACAC,IAAA;UACAC,YAAA;UACAC,aAAA;YACAC,KAAA;YACAC,QAAA;YACAC,MAAA;YACAC,aAAA;UACA;UACAC,OAAA;UACA7C,IAAA;UACA8C,WAAA;UACAC,WAAA;YACAX,IAAA;UACA;UACAY,SAAA;YACAN,QAAA;YACAD,KAAA;UACA;UACAQ,QAAA;YACAvB,IAAA;UACA;UACAwB,QAAA;YACAxB,IAAA;UACA;QACA,GACA;UACAU,IAAA;UACAE,IAAA;UACAC,YAAA;UACAC,aAAA;YACAC,KAAA;YACAC,QAAA;UACA;UACAG,OAAA;UACAR,SAAA;UACAc,QAAA;UACAnD,IAAA;UACA8C,WAAA;UACAC,WAAA;YACAX,IAAA;UACA;UACAa,QAAA;YACAvB,IAAA;YACA0B,MAAA;UACA;UACAJ,SAAA;YACAtB,IAAA;UACA;UACAwB,QAAA;YACAxB,IAAA;UACA;QACA,EACA;QACA2B,KAAA,GACA;UACAjB,IAAA;UACAE,IAAA;UACAD,SAAA;UACAE,YAAA;UACAM,OAAA;UACAS,GAAA;UACAC,GAAA;UACA7B,IAAA;UACAsB,SAAA;YACAQ,SAAA;UACA;QACA,GACA;UACApB,IAAA;UACAE,IAAA;UACAD,SAAA;UACAE,YAAA;UACAb,IAAA;UACA4B,GAAA;UACAC,GAAA;UACAE,QAAA;UACAT,SAAA;YACAQ,SAAA;UACA;QACA,GACA;UACApB,IAAA;UACAE,IAAA;UACAD,SAAA;UACAE,YAAA;UACAb,IAAA;UACA4B,GAAA;UACAC,GAAA;UACAE,QAAA;UACAT,SAAA;YACAQ,SAAA;UACA;QACA,EACA;QACAE,MAAA,GACA;UACApB,IAAA;UACAF,IAAA;UACAuB,UAAA;UACAC,UAAA;UACAC,WAAA;UACApC,OAAA;YACAqC,cAAA,WAAAA,CAAAC,KAAA;cACA,OAAAA,KAAA;YACA;UACA;UACAC,SAAA;YACAvB,KAAA;UACA;UACAwB,KAAA;YACAvC,IAAA;YACAwC,QAAA;YACAzB,KAAA;YACAC,QAAA;YACAS,QAAA;UACA;UACAnD,IAAA,GACA;QAEA,GACA;UACAsC,IAAA;UA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}