{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport TChart from '@/views/components/TChart';\nimport { hasEventListener } from \"@/utils/utils\";\nexport default {\n  data() {\n    return {\n      initOptions: {\n        renderer: 'svg'\n      },\n      option: {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            crossStyle: {\n              color: '#999'\n            }\n          }\n        },\n        grid: {\n          left: 120,\n          right: 120,\n          bottom: 60,\n          top: 60\n        },\n        xAxis: [{\n          type: 'category',\n          boundaryGap: false,\n          axisTick: false,\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: '#e5e5e5',\n              width: 1\n            }\n          },\n          axisLabel: {\n            color: '#666',\n            fontSize: 16,\n            margin: 14\n          }\n        }],\n        yAxis: [{\n          type: 'value',\n          min: 0,\n          max: 15,\n          splitLine: {\n            lineStyle: {\n              type: 'dashed',\n              color: '#e5e5e5'\n            }\n          },\n          axisLabel: {\n            formatter: '{value}',\n            color: '#666',\n            fontSize: 16,\n            margin: 14\n          }\n        }],\n        series: [{\n          name: '第50百分位',\n          type: 'line',\n          symbol: 'none',\n          lineStyle: {\n            color: '#32BAC0',\n            width: 2\n          },\n          connectNulls: false,\n          missing: 'gap',\n          data: [[new Date('2024-05-10T10:00:00').getTime(), 1], [new Date('2024-05-10T10:01:00').getTime(), 5],\n          // 注意，数据点可以是不连续的\n          [new Date('2024-05-10T10:02:00').getTime(), 3], [new Date('2024-05-10T10:03:00').getTime(), 8], [new Date('2024-05-10T10:05:00').getTime(), 10], [new Date('2024-05-10T10:06:00').getTime(), 6]]\n        }]\n      }\n    };\n  },\n  components: {\n    TChart\n  },\n  mounted() {\n    if (!hasEventListener(this.$bus, 'getData')) {\n      this.$bus.$on('getData', data => {\n        this.manageData(data);\n      });\n    }\n  },\n  methods: {\n    // 管理数据\n    manageData(data) {\n      let array = [{\n        DataIndex: 0,\n        DataTs: 1715129400,\n        DeviceMac: \"hb1234567890\",\n        Timezone: 8,\n        Value: 360\n      }];\n      array = array.concat(data);\n      console.log(array, 111);\n      if (array.length === 0) return;\n      let current = array[0].DataTs;\n      let newArray = [];\n      for (let i = 1; i < array.length; i++) {\n        if (array[i].DataTs !== current + 60) {\n          newArray.push({\n            DataIndex: array[i].DataIndex + 1,\n            DataTs: current + 60,\n            DeviceMac: \"hb1234567890\",\n            Timezone: 8,\n            Value: null\n          });\n          current = current + 60; // 更新当前值\n        } else {\n          newArray.push(array[i]);\n          current = array[i].DataTs; // 更新当前值\n        }\n      }\n      console.log(newArray);\n    }\n  },\n  beforeDestroy() {\n    this.$bus.$off('getData');\n  }\n};","map":{"version":3,"names":["TChart","hasEventListener","data","initOptions","renderer","option","tooltip","trigger","axisPointer","type","crossStyle","color","grid","left","right","bottom","top","xAxis","boundaryGap","axisTick","axisLine","show","lineStyle","width","axisLabel","fontSize","margin","yAxis","min","max","splitLine","formatter","series","name","symbol","connectNulls","missing","Date","getTime","components","mounted","$bus","$on","manageData","methods","array","DataIndex","DataTs","DeviceMac","Timezone","Value","concat","console","log","length","current","newArray","i","push","beforeDestroy","$off"],"sources":["src/views/components/Chart/AGPchart.vue"],"sourcesContent":["<template>\n    <div>\n        <t-chart\n                style=\"width: 100%;height:450px;\"\n                :option=\"option\"\n                :init-options=\"initOptions\"\n                theme=\"tduck-echarts-theme\"\n        />\n    </div>\n</template>\n<script>\nimport TChart from '@/views/components/TChart'\nimport { hasEventListener } from \"@/utils/utils\";\nexport default {\n    data(){\n        return{\n            initOptions: {\n                renderer: 'svg'\n            },\n             option: {\n                tooltip: {\n                    trigger: 'axis',\n                    axisPointer: {\n                    type: 'cross',\n                    crossStyle: {\n                        color: '#999'\n                    }\n                    }\n                },\n                grid:{\n                    left:120,\n                    right:120,\n                    bottom:60,\n                    top:60\n                },\n                xAxis: [\n                    {\n                        type: 'category',\n                        boundaryGap:false,\n                        axisTick: false,\n                        axisLine: {\n                            show: true,\n                            lineStyle: {\n                                color: '#e5e5e5',\n                                width:1,\n                            },\n                        },\n                        axisLabel:{\n                            color: '#666',\n                            fontSize: 16, \n                            margin:14\n                        },\n                    }\n                ],\n                yAxis: [\n                    {\n                    type: 'value',\n                    min: 0,\n                    max: 15,\n                    splitLine:{\n                        lineStyle:{\n                            type:'dashed',\n                            color:'#e5e5e5'\n                        }\n                    },\n                    axisLabel: {\n                        formatter: '{value}',\n                        color: '#666',\n                        fontSize: 16,\n                        margin:14\n                    }\n                    }\n                ],\n                series: [\n                     {\n                        name: '第50百分位',\n                        type: 'line',\n                        symbol:'none',\n                        lineStyle:{\n                            color:'#32BAC0',\n                            width:2\n                        },\n                        connectNulls: false,\n                        missing:'gap',\n                        data: [\n                            [new Date('2024-05-10T10:00:00').getTime(), 1],\n                            [new Date('2024-05-10T10:01:00').getTime(), 5],\n                            // 注意，数据点可以是不连续的\n                            [new Date('2024-05-10T10:02:00').getTime(), 3],\n                            [new Date('2024-05-10T10:03:00').getTime(), 8],\n                            [new Date('2024-05-10T10:05:00').getTime(), 10],\n                            [new Date('2024-05-10T10:06:00').getTime(), 6],\n                        ]\n                    },\n                   \n                   \n                  \n                    \n                ]\n            },\n        }\n    },\n    components: {\n        TChart\n    },\n    mounted(){\n        if(!hasEventListener(this.$bus,'getData')){\n            this.$bus.$on('getData',(data)=>{\n              this.manageData(data)  \n            })\n        }\n    },\n    methods:{\n        // 管理数据\n        manageData(data){\n            let array = [{\n                DataIndex:0,\n                DataTs:1715129400,\n                DeviceMac:\"hb1234567890\",\n                Timezone:8,\n                Value:360,\n\n            }]\n            array = array.concat(data)\n            console.log(array,111)\n\n            if(array.length===0) return;\n            let current = array[0].DataTs\n            let newArray = []\n            for (let i = 1; i < array.length; i++) {\n                if(array[i].DataTs!==current+60){\n                    newArray.push({\n                        DataIndex:array[i].DataIndex+1,\n                        DataTs:current+60,\n                        DeviceMac:\"hb1234567890\",\n                        Timezone:8,\n                        Value:null,\n                    })\n                    current = current+60; // 更新当前值\n                }else{\n                    newArray.push(array[i])\n                    current = array[i].DataTs; // 更新当前值\n                }\n            }\n            console.log(newArray)\n        }\n\n    },\n    beforeDestroy(){\n        this.$bus.$off('getData')\n    }\n}\n</script>"],"mappings":";AAWA,OAAAA,MAAA;AACA,SAAAC,gBAAA;AACA;EACAC,KAAA;IACA;MACAC,WAAA;QACAC,QAAA;MACA;MACAC,MAAA;QACAC,OAAA;UACAC,OAAA;UACAC,WAAA;YACAC,IAAA;YACAC,UAAA;cACAC,KAAA;YACA;UACA;QACA;QACAC,IAAA;UACAC,IAAA;UACAC,KAAA;UACAC,MAAA;UACAC,GAAA;QACA;QACAC,KAAA,GACA;UACAR,IAAA;UACAS,WAAA;UACAC,QAAA;UACAC,QAAA;YACAC,IAAA;YACAC,SAAA;cACAX,KAAA;cACAY,KAAA;YACA;UACA;UACAC,SAAA;YACAb,KAAA;YACAc,QAAA;YACAC,MAAA;UACA;QACA,EACA;QACAC,KAAA,GACA;UACAlB,IAAA;UACAmB,GAAA;UACAC,GAAA;UACAC,SAAA;YACAR,SAAA;cACAb,IAAA;cACAE,KAAA;YACA;UACA;UACAa,SAAA;YACAO,SAAA;YACApB,KAAA;YACAc,QAAA;YACAC,MAAA;UACA;QACA,EACA;QACAM,MAAA,GACA;UACAC,IAAA;UACAxB,IAAA;UACAyB,MAAA;UACAZ,SAAA;YACAX,KAAA;YACAY,KAAA;UACA;UACAY,YAAA;UACAC,OAAA;UACAlC,IAAA,GACA,KAAAmC,IAAA,wBAAAC,OAAA,QACA,KAAAD,IAAA,wBAAAC,OAAA;UACA;UACA,KAAAD,IAAA,wBAAAC,OAAA,QACA,KAAAD,IAAA,wBAAAC,OAAA,QACA,KAAAD,IAAA,wBAAAC,OAAA,SACA,KAAAD,IAAA,wBAAAC,OAAA;QAEA;MAMA;IACA;EACA;EACAC,UAAA;IACAvC;EACA;EACAwC,QAAA;IACA,KAAAvC,gBAAA,MAAAwC,IAAA;MACA,KAAAA,IAAA,CAAAC,GAAA,YAAAxC,IAAA;QACA,KAAAyC,UAAA,CAAAzC,IAAA;MACA;IACA;EACA;EACA0C,OAAA;IACA;IACAD,WAAAzC,IAAA;MACA,IAAA2C,KAAA;QACAC,SAAA;QACAC,MAAA;QACAC,SAAA;QACAC,QAAA;QACAC,KAAA;MAEA;MACAL,KAAA,GAAAA,KAAA,CAAAM,MAAA,CAAAjD,IAAA;MACAkD,OAAA,CAAAC,GAAA,CAAAR,KAAA;MAEA,IAAAA,KAAA,CAAAS,MAAA;MACA,IAAAC,OAAA,GAAAV,KAAA,IAAAE,MAAA;MACA,IAAAS,QAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,GAAAZ,KAAA,CAAAS,MAAA,EAAAG,CAAA;QACA,IAAAZ,KAAA,CAAAY,CAAA,EAAAV,MAAA,KAAAQ,OAAA;UACAC,QAAA,CAAAE,IAAA;YACAZ,SAAA,EAAAD,KAAA,CAAAY,CAAA,EAAAX,SAAA;YACAC,MAAA,EAAAQ,OAAA;YACAP,SAAA;YACAC,QAAA;YACAC,KAAA;UACA;UACAK,OAAA,GAAAA,OAAA;QACA;UACAC,QAAA,CAAAE,IAAA,CAAAb,KAAA,CAAAY,CAAA;UACAF,OAAA,GAAAV,KAAA,CAAAY,CAAA,EAAAV,MAAA;QACA;MACA;MACAK,OAAA,CAAAC,GAAA,CAAAG,QAAA;IACA;EAEA;EACAG,cAAA;IACA,KAAAlB,IAAA,CAAAmB,IAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}