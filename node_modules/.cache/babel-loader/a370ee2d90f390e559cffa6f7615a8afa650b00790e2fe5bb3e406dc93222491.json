{"ast":null,"code":"\"use strict\";\n\nvar _classPrivateMethodInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateMethodInitSpec.js\").default;\nvar _classPrivateFieldInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _assertClassBrand = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/assertClassBrand.js\").default;\nvar _classPrivateFieldGet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldGet2.js\").default;\nvar _classPrivateFieldSet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldSet2.js\").default;\nrequire(\"core-js/modules/web.dom-exception.stack.js\");\nrequire(\"core-js/modules/web.url-search-params.delete.js\");\nrequire(\"core-js/modules/web.url-search-params.has.js\");\nrequire(\"core-js/modules/web.url-search-params.size.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkProcessor = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst NetworkUtils_js_1 = require(\"./NetworkUtils.js\");\n/** Dispatches Network domain commands. */\nvar _browsingContextStorage = /*#__PURE__*/new WeakMap();\nvar _networkStorage = /*#__PURE__*/new WeakMap();\nvar _NetworkProcessor_brand = /*#__PURE__*/new WeakSet();\nclass NetworkProcessor {\n  constructor(browsingContextStorage, networkStorage) {\n    _classPrivateMethodInitSpec(this, _NetworkProcessor_brand);\n    _classPrivateFieldInitSpec(this, _browsingContextStorage, void 0);\n    _classPrivateFieldInitSpec(this, _networkStorage, void 0);\n    _classPrivateFieldSet(_browsingContextStorage, this, browsingContextStorage);\n    _classPrivateFieldSet(_networkStorage, this, networkStorage);\n  }\n  async addIntercept(params) {\n    _classPrivateFieldGet(_browsingContextStorage, this).verifyTopLevelContextsList(params.contexts);\n    const urlPatterns = params.urlPatterns ?? [];\n    const parsedUrlPatterns = NetworkProcessor.parseUrlPatterns(urlPatterns);\n    const intercept = _classPrivateFieldGet(_networkStorage, this).addIntercept({\n      urlPatterns: parsedUrlPatterns,\n      phases: params.phases,\n      contexts: params.contexts\n    });\n    await Promise.all(_classPrivateFieldGet(_browsingContextStorage, this).getAllContexts().map(context => {\n      return context.cdpTarget.toggleFetchIfNeeded();\n    }));\n    return {\n      intercept\n    };\n  }\n  async continueRequest(params) {\n    const {\n      url,\n      method,\n      headers: commandHeaders,\n      body,\n      request: networkId\n    } = params;\n    if (params.url !== undefined) {\n      NetworkProcessor.parseUrlString(params.url);\n    }\n    const request = _assertClassBrand(_NetworkProcessor_brand, this, _getBlockedRequestOrFail).call(this, networkId, [\"beforeRequestSent\" /* Network.InterceptPhase.BeforeRequestSent */]);\n    const headers = (0, NetworkUtils_js_1.cdpFetchHeadersFromBidiNetworkHeaders)(commandHeaders);\n    // TODO: Set / expand.\n    // ; Step 9. cookies\n    await request.continueRequest({\n      url,\n      method,\n      headers,\n      postData: getCdpBodyFromBiDiBytesValue(body)\n    });\n    return {};\n  }\n  async continueResponse(params) {\n    const {\n      request: networkId,\n      statusCode,\n      reasonPhrase,\n      headers\n    } = params;\n    const responseHeaders = (0, NetworkUtils_js_1.cdpFetchHeadersFromBidiNetworkHeaders)(headers);\n    const request = _assertClassBrand(_NetworkProcessor_brand, this, _getBlockedRequestOrFail).call(this, networkId, [\"authRequired\" /* Network.InterceptPhase.AuthRequired */, \"responseStarted\" /* Network.InterceptPhase.ResponseStarted */]);\n    if (request.interceptPhase === \"authRequired\" /* Network.InterceptPhase.AuthRequired */) {\n      if (params.credentials) {\n        await Promise.all([request.waitNextPhase, request.continueWithAuth({\n          response: 'ProvideCredentials',\n          username: params.credentials.username,\n          password: params.credentials.password\n        })]);\n      } else {\n        // We need to use `ProvideCredentials`\n        // As `Default` may cancel the request\n        await request.continueWithAuth({\n          response: 'ProvideCredentials'\n        });\n        return {};\n      }\n    }\n    if (request.interceptPhase === \"responseStarted\" /* Network.InterceptPhase.ResponseStarted */) {\n      // TODO: Set / expand.\n      // ; Step 10. cookies\n      await request.continueResponse({\n        responseCode: statusCode,\n        responsePhrase: reasonPhrase,\n        responseHeaders\n      });\n    }\n    return {};\n  }\n  async continueWithAuth(params) {\n    const networkId = params.request;\n    const request = _assertClassBrand(_NetworkProcessor_brand, this, _getBlockedRequestOrFail).call(this, networkId, [\"authRequired\" /* Network.InterceptPhase.AuthRequired */]);\n    let username;\n    let password;\n    if (params.action === 'provideCredentials') {\n      const {\n        credentials\n      } = params;\n      username = credentials.username;\n      password = credentials.password;\n    }\n    const response = (0, NetworkUtils_js_1.cdpAuthChallengeResponseFromBidiAuthContinueWithAuthAction)(params.action);\n    await request.continueWithAuth({\n      response,\n      username,\n      password\n    });\n    return {};\n  }\n  async failRequest({\n    request: networkId\n  }) {\n    const request = _assertClassBrand(_NetworkProcessor_brand, this, _getRequestOrFail).call(this, networkId);\n    if (request.interceptPhase === \"authRequired\" /* Network.InterceptPhase.AuthRequired */) {\n      throw new protocol_js_1.InvalidArgumentException(`Request '${networkId}' in 'authRequired' phase cannot be failed`);\n    }\n    if (!request.interceptPhase) {\n      throw new protocol_js_1.NoSuchRequestException(`No blocked request found for network id '${networkId}'`);\n    }\n    await request.failRequest('Failed');\n    return {};\n  }\n  async provideResponse(params) {\n    const {\n      statusCode,\n      reasonPhrase: responsePhrase,\n      headers,\n      body,\n      request: networkId\n    } = params;\n    // TODO: Step 6\n    // https://w3c.github.io/webdriver-bidi/#command-network-continueResponse\n    const responseHeaders = (0, NetworkUtils_js_1.cdpFetchHeadersFromBidiNetworkHeaders)(headers);\n    // TODO: Set / expand.\n    // ; Step 10. cookies\n    // ; Step 11. credentials\n    const request = _assertClassBrand(_NetworkProcessor_brand, this, _getBlockedRequestOrFail).call(this, networkId, [\"beforeRequestSent\" /* Network.InterceptPhase.BeforeRequestSent */, \"responseStarted\" /* Network.InterceptPhase.ResponseStarted */, \"authRequired\" /* Network.InterceptPhase.AuthRequired */]);\n    // We need to pass through if the request is already in\n    // AuthRequired phase\n    if (request.interceptPhase === \"authRequired\" /* Network.InterceptPhase.AuthRequired */) {\n      // We need to use `ProvideCredentials`\n      // As `Default` may cancel the request\n      await request.continueWithAuth({\n        response: 'ProvideCredentials'\n      });\n      return {};\n    }\n    // If we con't modify the response\n    // Just continue the request\n    if (!body && !headers) {\n      await request.continueRequest();\n      return {};\n    }\n    const responseCode = statusCode ?? request.statusCode ?? 200;\n    await request.provideResponse({\n      responseCode,\n      responsePhrase,\n      responseHeaders,\n      body: getCdpBodyFromBiDiBytesValue(body)\n    });\n    return {};\n  }\n  async removeIntercept(params) {\n    _classPrivateFieldGet(_networkStorage, this).removeIntercept(params.intercept);\n    await Promise.all(_classPrivateFieldGet(_browsingContextStorage, this).getAllContexts().map(context => {\n      return context.cdpTarget.toggleFetchIfNeeded();\n    }));\n    return {};\n  }\n  /**\n   * Attempts to parse the given url.\n   * Throws an InvalidArgumentException if the url is invalid.\n   */\n  static parseUrlString(url) {\n    try {\n      return new URL(url);\n    } catch (error) {\n      throw new protocol_js_1.InvalidArgumentException(`Invalid URL '${url}': ${error}`);\n    }\n  }\n  static parseUrlPatterns(urlPatterns) {\n    return urlPatterns.map(urlPattern => {\n      switch (urlPattern.type) {\n        case 'string':\n          {\n            NetworkProcessor.parseUrlString(urlPattern.pattern);\n            return urlPattern;\n          }\n        case 'pattern':\n          // No params signifies intercept all\n          if (urlPattern.protocol === undefined && urlPattern.hostname === undefined && urlPattern.port === undefined && urlPattern.pathname === undefined && urlPattern.search === undefined) {\n            return urlPattern;\n          }\n          if (urlPattern.protocol) {\n            urlPattern.protocol = unescapeURLPattern(urlPattern.protocol);\n            if (!urlPattern.protocol.match(/^[a-zA-Z+-.]+$/)) {\n              throw new protocol_js_1.InvalidArgumentException('Forbidden characters');\n            }\n          }\n          if (urlPattern.hostname) {\n            urlPattern.hostname = unescapeURLPattern(urlPattern.hostname);\n          }\n          if (urlPattern.port) {\n            urlPattern.port = unescapeURLPattern(urlPattern.port);\n          }\n          if (urlPattern.pathname) {\n            urlPattern.pathname = unescapeURLPattern(urlPattern.pathname);\n            if (urlPattern.pathname[0] !== '/') {\n              urlPattern.pathname = `/${urlPattern.pathname}`;\n            }\n            if (urlPattern.pathname.includes('#') || urlPattern.pathname.includes('?')) {\n              throw new protocol_js_1.InvalidArgumentException('Forbidden characters');\n            }\n          } else if (urlPattern.pathname === '') {\n            urlPattern.pathname = '/';\n          }\n          if (urlPattern.search) {\n            urlPattern.search = unescapeURLPattern(urlPattern.search);\n            if (urlPattern.search[0] !== '?') {\n              urlPattern.search = `?${urlPattern.search}`;\n            }\n            if (urlPattern.search.includes('#')) {\n              throw new protocol_js_1.InvalidArgumentException('Forbidden characters');\n            }\n          }\n          if (urlPattern.protocol === '') {\n            throw new protocol_js_1.InvalidArgumentException(`URL pattern must specify a protocol`);\n          }\n          if (urlPattern.hostname === '') {\n            throw new protocol_js_1.InvalidArgumentException(`URL pattern must specify a hostname`);\n          }\n          if ((urlPattern.hostname?.length ?? 0) > 0) {\n            if (urlPattern.protocol?.match(/^file/i)) {\n              throw new protocol_js_1.InvalidArgumentException(`URL pattern protocol cannot be 'file'`);\n            }\n            if (urlPattern.hostname?.includes(':')) {\n              throw new protocol_js_1.InvalidArgumentException(`URL pattern hostname must not contain a colon`);\n            }\n          }\n          if (urlPattern.port === '') {\n            throw new protocol_js_1.InvalidArgumentException(`URL pattern must specify a port`);\n          }\n          try {\n            new URLPattern(urlPattern);\n          } catch (error) {\n            throw new protocol_js_1.InvalidArgumentException(`${error}`);\n          }\n          return urlPattern;\n      }\n    });\n  }\n}\nfunction _getRequestOrFail(id) {\n  const request = _classPrivateFieldGet(_networkStorage, this).getRequestById(id);\n  if (!request) {\n    throw new protocol_js_1.NoSuchRequestException(`Network request with ID '${id}' doesn't exist`);\n  }\n  return request;\n}\nfunction _getBlockedRequestOrFail(id, phases) {\n  const request = _assertClassBrand(_NetworkProcessor_brand, this, _getRequestOrFail).call(this, id);\n  if (!request.interceptPhase) {\n    throw new protocol_js_1.NoSuchRequestException(`No blocked request found for network id '${id}'`);\n  }\n  if (request.interceptPhase && !phases.includes(request.interceptPhase)) {\n    throw new protocol_js_1.InvalidArgumentException(`Blocked request for network id '${id}' is in '${request.interceptPhase}' phase`);\n  }\n  return request;\n}\nexports.NetworkProcessor = NetworkProcessor;\n/**\n * See https://w3c.github.io/webdriver-bidi/#unescape-url-pattern\n */\nfunction unescapeURLPattern(pattern) {\n  const forbidden = new Set(['(', ')', '*', '{', '}']);\n  let result = '';\n  let isEscaped = false;\n  for (const c of pattern) {\n    if (!isEscaped) {\n      if (forbidden.has(c)) {\n        throw new protocol_js_1.InvalidArgumentException('Forbidden characters');\n      }\n      if (c === '\\\\') {\n        isEscaped = true;\n        continue;\n      }\n    }\n    result += c;\n    isEscaped = false;\n  }\n  return result;\n}\nfunction getCdpBodyFromBiDiBytesValue(body) {\n  let parsedBody;\n  if (body?.type === 'string') {\n    parsedBody = btoa(body.value);\n  } else if (body?.type === 'base64') {\n    parsedBody = body.value;\n  }\n  return parsedBody;\n}","map":{"version":3,"names":["protocol_js_1","require","NetworkUtils_js_1","_browsingContextStorage","WeakMap","_networkStorage","_NetworkProcessor_brand","WeakSet","NetworkProcessor","constructor","browsingContextStorage","networkStorage","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_classPrivateFieldSet","addIntercept","params","_classPrivateFieldGet","verifyTopLevelContextsList","contexts","urlPatterns","parsedUrlPatterns","parseUrlPatterns","intercept","phases","Promise","all","getAllContexts","map","context","cdpTarget","toggleFetchIfNeeded","continueRequest","url","method","headers","commandHeaders","body","request","networkId","undefined","parseUrlString","_assertClassBrand","_getBlockedRequestOrFail","call","cdpFetchHeadersFromBidiNetworkHeaders","postData","getCdpBodyFromBiDiBytesValue","continueResponse","statusCode","reasonPhrase","responseHeaders","interceptPhase","credentials","waitNextPhase","continueWithAuth","response","username","password","responseCode","responsePhrase","action","cdpAuthChallengeResponseFromBidiAuthContinueWithAuthAction","failRequest","_getRequestOrFail","InvalidArgumentException","NoSuchRequestException","provideResponse","removeIntercept","URL","error","urlPattern","type","pattern","protocol","hostname","port","pathname","search","unescapeURLPattern","match","includes","length","URLPattern","id","getRequestById","exports","forbidden","Set","result","isEscaped","c","has","parsedBody","btoa","value"],"sources":["../../../../../src/bidiMapper/modules/network/NetworkProcessor.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}