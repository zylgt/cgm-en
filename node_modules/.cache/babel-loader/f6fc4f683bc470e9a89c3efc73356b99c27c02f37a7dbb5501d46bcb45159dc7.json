{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { firstValueFrom, from, merge, raceWith } from '../../third_party/rxjs/rxjs.js';\nimport { EventEmitter } from '../common/EventEmitter.js';\nimport { debugError, fromEmitterEvent, filterAsync, timeout } from '../common/util.js';\nimport { asyncDisposeSymbol, disposeSymbol } from '../util/disposable.js';\n/**\n * {@link BrowserContext} represents individual user contexts within a\n * {@link Browser | browser}.\n *\n * When a {@link Browser | browser} is launched, it has a single\n * {@link BrowserContext | browser context} by default. Others can be created\n * using {@link Browser.createBrowserContext}. Each context has isolated storage\n * (cookies/localStorage/etc.)\n *\n * {@link BrowserContext} {@link EventEmitter | emits} various events which are\n * documented in the {@link BrowserContextEvent} enum.\n *\n * If a {@link Page | page} opens another {@link Page | page}, e.g. using\n * `window.open`, the popup will belong to the parent {@link Page.browserContext\n * | page's browser context}.\n *\n * @example Creating a new {@link BrowserContext | browser context}:\n *\n * ```ts\n * // Create a new browser context\n * const context = await browser.createBrowserContext();\n * // Create a new page inside context.\n * const page = await context.newPage();\n * // ... do stuff with page ...\n * await page.goto('https://example.com');\n * // Dispose context once it's no longer needed.\n * await context.close();\n * ```\n *\n * @public\n */\nexport class BrowserContext extends EventEmitter {\n  /**\n   * @internal\n   */\n  constructor() {\n    super();\n  }\n  /**\n   * Waits until a {@link Target | target} matching the given `predicate`\n   * appears and returns it.\n   *\n   * This will look all open {@link BrowserContext | browser contexts}.\n   *\n   * @example Finding a target for a page opened via `window.open`:\n   *\n   * ```ts\n   * await page.evaluate(() => window.open('https://www.example.com/'));\n   * const newWindowTarget = await browserContext.waitForTarget(\n   *   target => target.url() === 'https://www.example.com/'\n   * );\n   * ```\n   */\n  async waitForTarget(predicate, options = {}) {\n    const {\n      timeout: ms = 30000\n    } = options;\n    return await firstValueFrom(merge(fromEmitterEvent(this, \"targetcreated\" /* BrowserContextEvent.TargetCreated */), fromEmitterEvent(this, \"targetchanged\" /* BrowserContextEvent.TargetChanged */), from(this.targets())).pipe(filterAsync(predicate), raceWith(timeout(ms))));\n  }\n  /**\n   * Whether this {@link BrowserContext | browser context} is closed.\n   */\n  get closed() {\n    return !this.browser().browserContexts().includes(this);\n  }\n  /**\n   * Identifier for this {@link BrowserContext | browser context}.\n   */\n  get id() {\n    return undefined;\n  }\n  /** @internal */\n  [disposeSymbol]() {\n    return void this.close().catch(debugError);\n  }\n  /** @internal */\n  [asyncDisposeSymbol]() {\n    return this.close();\n  }\n}","map":{"version":3,"names":["firstValueFrom","from","merge","raceWith","EventEmitter","debugError","fromEmitterEvent","filterAsync","timeout","asyncDisposeSymbol","disposeSymbol","BrowserContext","constructor","waitForTarget","predicate","options","ms","targets","pipe","closed","browser","browserContexts","includes","id","undefined","close","catch"],"sources":["../../../../src/api/BrowserContext.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;;AAMA,SACEA,cAAc,EACdC,IAAI,EACJC,KAAK,EACLC,QAAQ,QACH,gCAAgC;AACvC,SAAQC,YAAY,QAAuB,2BAA2B;AACtE,SACEC,UAAU,EACVC,gBAAgB,EAChBC,WAAW,EACXC,OAAO,QACF,mBAAmB;AAC1B,SAAQC,kBAAkB,EAAEC,aAAa,QAAO,uBAAuB;AAyCvE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,OAAM,MAAgBC,cAAe,SAAQP,YAAkC;EAC7E;;;EAGAQ,YAAA;IACE,KAAK,EAAE;EACT;EAQA;;;;;;;;;;;;;;;EAeA,MAAMC,aAAaA,CACjBC,SAAoD,EACpDC,OAAA,GAAgC,EAAE;IAElC,MAAM;MAACP,OAAO,EAAEQ,EAAE,GAAG;IAAK,CAAC,GAAGD,OAAO;IACrC,OAAO,MAAMf,cAAc,CACzBE,KAAK,CACHI,gBAAgB,CAAC,IAAI,0DAAoC,EACzDA,gBAAgB,CAAC,IAAI,0DAAoC,EACzDL,IAAI,CAAC,IAAI,CAACgB,OAAO,EAAE,CAAC,CACrB,CAACC,IAAI,CAACX,WAAW,CAACO,SAAS,CAAC,EAAEX,QAAQ,CAACK,OAAO,CAACQ,EAAE,CAAC,CAAC,CAAC,CACtD;EACH;EA6FA;;;EAGA,IAAIG,MAAMA,CAAA;IACR,OAAO,CAAC,IAAI,CAACC,OAAO,EAAE,CAACC,eAAe,EAAE,CAACC,QAAQ,CAAC,IAAI,CAAC;EACzD;EAEA;;;EAGA,IAAIC,EAAEA,CAAA;IACJ,OAAOC,SAAS;EAClB;EAEA;EACA,CAACd,aAAa,IAAC;IACb,OAAO,KAAK,IAAI,CAACe,KAAK,EAAE,CAACC,KAAK,CAACrB,UAAU,CAAC;EAC5C;EAEA;EACA,CAACI,kBAAkB,IAAC;IAClB,OAAO,IAAI,CAACgB,KAAK,EAAE;EACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}