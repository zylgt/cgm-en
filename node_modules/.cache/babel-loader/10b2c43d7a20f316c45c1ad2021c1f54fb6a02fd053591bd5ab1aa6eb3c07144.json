{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2024 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _classPrivateMethodInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateMethodInitSpec.js\").default;\nvar _defineProperty = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nvar _classPrivateFieldInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _assertClassBrand = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/assertClassBrand.js\").default;\nvar _classPrivateFieldGet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldGet2.js\").default;\nvar _classPrivateFieldSet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldSet2.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WindowRealm = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst Realm_js_1 = require(\"./Realm.js\");\nconst SharedId_js_1 = require(\"./SharedId.js\");\nvar _browsingContextId = /*#__PURE__*/new WeakMap();\nvar _browsingContextStorage = /*#__PURE__*/new WeakMap();\nvar _WindowRealm_brand = /*#__PURE__*/new WeakSet();\nclass WindowRealm extends Realm_js_1.Realm {\n  constructor(browsingContextId, browsingContextStorage, cdpClient, eventManager, executionContextId, logger, origin, realmId, realmStorage, sandbox) {\n    super(cdpClient, eventManager, executionContextId, logger, origin, realmId, realmStorage);\n    _classPrivateMethodInitSpec(this, _WindowRealm_brand);\n    _classPrivateFieldInitSpec(this, _browsingContextId, void 0);\n    _classPrivateFieldInitSpec(this, _browsingContextStorage, void 0);\n    _defineProperty(this, \"sandbox\", void 0);\n    _classPrivateFieldSet(_browsingContextId, this, browsingContextId);\n    _classPrivateFieldSet(_browsingContextStorage, this, browsingContextStorage);\n    this.sandbox = sandbox;\n    this.initialize();\n  }\n  get browsingContext() {\n    return _classPrivateFieldGet(_browsingContextStorage, this).getContext(_classPrivateFieldGet(_browsingContextId, this));\n  }\n  get associatedBrowsingContexts() {\n    return [this.browsingContext];\n  }\n  get realmType() {\n    return 'window';\n  }\n  get realmInfo() {\n    return {\n      ...this.baseInfo,\n      type: this.realmType,\n      context: _classPrivateFieldGet(_browsingContextId, this),\n      sandbox: this.sandbox\n    };\n  }\n  get source() {\n    return {\n      realm: this.realmId,\n      context: this.browsingContext.id\n    };\n  }\n  serializeForBiDi(deepSerializedValue, internalIdMap) {\n    const bidiValue = deepSerializedValue.value;\n    if (deepSerializedValue.type === 'node' && bidiValue !== undefined) {\n      if (Object.hasOwn(bidiValue, 'backendNodeId')) {\n        let navigableId = this.browsingContext.navigableId ?? 'UNKNOWN';\n        if (Object.hasOwn(bidiValue, 'loaderId')) {\n          // `loaderId` should be always there after ~2024-03-05, when\n          // https://crrev.com/c/5116240 reaches stable.\n          // TODO: remove the check after the date.\n          navigableId = bidiValue.loaderId;\n          delete bidiValue['loaderId'];\n        }\n        deepSerializedValue.sharedId = (0, SharedId_js_1.getSharedId)(_assertClassBrand(_WindowRealm_brand, this, _getBrowsingContextId).call(this, navigableId), navigableId, bidiValue.backendNodeId);\n        delete bidiValue['backendNodeId'];\n      }\n      if (Object.hasOwn(bidiValue, 'children')) {\n        for (const i in bidiValue.children) {\n          bidiValue.children[i] = this.serializeForBiDi(bidiValue.children[i], internalIdMap);\n        }\n      }\n      if (Object.hasOwn(bidiValue, 'shadowRoot') && bidiValue.shadowRoot !== null) {\n        bidiValue.shadowRoot = this.serializeForBiDi(bidiValue.shadowRoot, internalIdMap);\n      }\n      // `namespaceURI` can be is either `null` or non-empty string.\n      if (bidiValue.namespaceURI === '') {\n        bidiValue.namespaceURI = null;\n      }\n    }\n    return super.serializeForBiDi(deepSerializedValue, internalIdMap);\n  }\n  async deserializeForCdp(localValue) {\n    if ('sharedId' in localValue && localValue.sharedId) {\n      const parsedSharedId = (0, SharedId_js_1.parseSharedId)(localValue.sharedId);\n      if (parsedSharedId === null) {\n        throw new protocol_js_1.NoSuchNodeException(`SharedId \"${localValue.sharedId}\" was not found.`);\n      }\n      const {\n        documentId,\n        backendNodeId\n      } = parsedSharedId;\n      // TODO: add proper validation if the element is accessible from the current realm.\n      if (this.browsingContext.navigableId !== documentId) {\n        throw new protocol_js_1.NoSuchNodeException(`SharedId \"${localValue.sharedId}\" belongs to different document. Current document is ${this.browsingContext.navigableId}.`);\n      }\n      try {\n        const {\n          object\n        } = await this.cdpClient.sendCommand('DOM.resolveNode', {\n          backendNodeId,\n          executionContextId: this.executionContextId\n        });\n        // TODO(#375): Release `obj.object.objectId` after using.\n        return {\n          objectId: object.objectId\n        };\n      } catch (error) {\n        // Heuristic to detect \"no such node\" exception. Based on the  specific\n        // CDP implementation.\n        if (error.code === -32000 /* CdpErrorConstants.GENERIC_ERROR */ && error.message === 'No node with given id found') {\n          throw new protocol_js_1.NoSuchNodeException(`SharedId \"${localValue.sharedId}\" was not found.`);\n        }\n        throw new protocol_js_1.UnknownErrorException(error.message, error.stack);\n      }\n    }\n    return await super.deserializeForCdp(localValue);\n  }\n  async evaluate(expression, awaitPromise, resultOwnership, serializationOptions, userActivation, includeCommandLineApi) {\n    await _classPrivateFieldGet(_browsingContextStorage, this).getContext(_classPrivateFieldGet(_browsingContextId, this)).targetUnblockedOrThrow();\n    return await super.evaluate(expression, awaitPromise, resultOwnership, serializationOptions, userActivation, includeCommandLineApi);\n  }\n  async callFunction(functionDeclaration, awaitPromise, thisLocalValue, argumentsLocalValues, resultOwnership, serializationOptions, userActivation) {\n    await _classPrivateFieldGet(_browsingContextStorage, this).getContext(_classPrivateFieldGet(_browsingContextId, this)).targetUnblockedOrThrow();\n    return await super.callFunction(functionDeclaration, awaitPromise, thisLocalValue, argumentsLocalValues, resultOwnership, serializationOptions, userActivation);\n  }\n}\nfunction _getBrowsingContextId(navigableId) {\n  const maybeBrowsingContext = _classPrivateFieldGet(_browsingContextStorage, this).getAllContexts().find(context => context.navigableId === navigableId);\n  return maybeBrowsingContext?.id ?? 'UNKNOWN';\n}\nexports.WindowRealm = WindowRealm;","map":{"version":3,"names":["_classPrivateMethodInitSpec","require","default","_defineProperty","_classPrivateFieldInitSpec","_assertClassBrand","_classPrivateFieldGet","_classPrivateFieldSet","protocol_js_1","Realm_js_1","SharedId_js_1","_browsingContextId","WeakMap","_browsingContextStorage","_WindowRealm_brand","WeakSet","WindowRealm","Realm","constructor","browsingContextId","browsingContextStorage","cdpClient","eventManager","executionContextId","logger","origin","realmId","realmStorage","sandbox","initialize","browsingContext","getContext","associatedBrowsingContexts","realmType","realmInfo","baseInfo","type","context","source","realm","id","serializeForBiDi","deepSerializedValue","internalIdMap","bidiValue","value","undefined","Object","hasOwn","navigableId","loaderId","sharedId","getSharedId","_getBrowsingContextId","call","backendNodeId","i","children","shadowRoot","namespaceURI","deserializeForCdp","localValue","parsedSharedId","parseSharedId","NoSuchNodeException","documentId","object","sendCommand","objectId","error","code","message","UnknownErrorException","stack","evaluate","expression","awaitPromise","resultOwnership","serializationOptions","userActivation","includeCommandLineApi","targetUnblockedOrThrow","callFunction","functionDeclaration","thisLocalValue","argumentsLocalValues","maybeBrowsingContext","getAllContexts","find","exports"],"sources":["../../../../../src/bidiMapper/modules/script/WindowRealm.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}