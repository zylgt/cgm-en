{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BrowserContext = void 0;\nconst rxjs_js_1 = require(\"../../third_party/rxjs/rxjs.js\");\nconst EventEmitter_js_1 = require(\"../common/EventEmitter.js\");\nconst util_js_1 = require(\"../common/util.js\");\nconst disposable_js_1 = require(\"../util/disposable.js\");\n/**\n * {@link BrowserContext} represents individual user contexts within a\n * {@link Browser | browser}.\n *\n * When a {@link Browser | browser} is launched, it has a single\n * {@link BrowserContext | browser context} by default. Others can be created\n * using {@link Browser.createBrowserContext}. Each context has isolated storage\n * (cookies/localStorage/etc.)\n *\n * {@link BrowserContext} {@link EventEmitter | emits} various events which are\n * documented in the {@link BrowserContextEvent} enum.\n *\n * If a {@link Page | page} opens another {@link Page | page}, e.g. using\n * `window.open`, the popup will belong to the parent {@link Page.browserContext\n * | page's browser context}.\n *\n * @example Creating a new {@link BrowserContext | browser context}:\n *\n * ```ts\n * // Create a new browser context\n * const context = await browser.createBrowserContext();\n * // Create a new page inside context.\n * const page = await context.newPage();\n * // ... do stuff with page ...\n * await page.goto('https://example.com');\n * // Dispose context once it's no longer needed.\n * await context.close();\n * ```\n *\n * @public\n */\nclass BrowserContext extends EventEmitter_js_1.EventEmitter {\n  /**\n   * @internal\n   */\n  constructor() {\n    super();\n  }\n  /**\n   * Waits until a {@link Target | target} matching the given `predicate`\n   * appears and returns it.\n   *\n   * This will look all open {@link BrowserContext | browser contexts}.\n   *\n   * @example Finding a target for a page opened via `window.open`:\n   *\n   * ```ts\n   * await page.evaluate(() => window.open('https://www.example.com/'));\n   * const newWindowTarget = await browserContext.waitForTarget(\n   *   target => target.url() === 'https://www.example.com/'\n   * );\n   * ```\n   */\n  async waitForTarget(predicate, options = {}) {\n    const {\n      timeout: ms = 30000\n    } = options;\n    return await (0, rxjs_js_1.firstValueFrom)((0, rxjs_js_1.merge)((0, util_js_1.fromEmitterEvent)(this, \"targetcreated\" /* BrowserContextEvent.TargetCreated */), (0, util_js_1.fromEmitterEvent)(this, \"targetchanged\" /* BrowserContextEvent.TargetChanged */), (0, rxjs_js_1.from)(this.targets())).pipe((0, util_js_1.filterAsync)(predicate), (0, rxjs_js_1.raceWith)((0, util_js_1.timeout)(ms))));\n  }\n  /**\n   * Whether this {@link BrowserContext | browser context} is closed.\n   */\n  get closed() {\n    return !this.browser().browserContexts().includes(this);\n  }\n  /**\n   * Identifier for this {@link BrowserContext | browser context}.\n   */\n  get id() {\n    return undefined;\n  }\n  /** @internal */\n  [disposable_js_1.disposeSymbol]() {\n    return void this.close().catch(util_js_1.debugError);\n  }\n  /** @internal */\n  [disposable_js_1.asyncDisposeSymbol]() {\n    return this.close();\n  }\n}\nexports.BrowserContext = BrowserContext;","map":{"version":3,"names":["rxjs_js_1","require","EventEmitter_js_1","util_js_1","disposable_js_1","BrowserContext","EventEmitter","constructor","waitForTarget","predicate","options","timeout","ms","firstValueFrom","merge","fromEmitterEvent","from","targets","pipe","filterAsync","raceWith","closed","browser","browserContexts","includes","id","undefined","disposeSymbol","close","catch","debugError","asyncDisposeSymbol","exports"],"sources":["../../../../src/api/BrowserContext.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;AAMA,MAAAA,SAAA,GAAAC,OAAA;AAMA,MAAAC,iBAAA,GAAAD,OAAA;AACA,MAAAE,SAAA,GAAAF,OAAA;AAMA,MAAAG,eAAA,GAAAH,OAAA;AAyCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,MAAsBI,cAAe,SAAQH,iBAAA,CAAAI,YAAkC;EAC7E;;;EAGAC,YAAA;IACE,KAAK,EAAE;EACT;EAQA;;;;;;;;;;;;;;;EAeA,MAAMC,aAAaA,CACjBC,SAAoD,EACpDC,OAAA,GAAgC,EAAE;IAElC,MAAM;MAACC,OAAO,EAAEC,EAAE,GAAG;IAAK,CAAC,GAAGF,OAAO;IACrC,OAAO,MAAM,IAAAV,SAAA,CAAAa,cAAc,EACzB,IAAAb,SAAA,CAAAc,KAAK,EACH,IAAAX,SAAA,CAAAY,gBAAgB,EAAC,IAAI,0DAAoC,EACzD,IAAAZ,SAAA,CAAAY,gBAAgB,EAAC,IAAI,0DAAoC,EACzD,IAAAf,SAAA,CAAAgB,IAAI,EAAC,IAAI,CAACC,OAAO,EAAE,CAAC,CACrB,CAACC,IAAI,CAAC,IAAAf,SAAA,CAAAgB,WAAW,EAACV,SAAS,CAAC,EAAE,IAAAT,SAAA,CAAAoB,QAAQ,EAAC,IAAAjB,SAAA,CAAAQ,OAAO,EAACC,EAAE,CAAC,CAAC,CAAC,CACtD;EACH;EA6FA;;;EAGA,IAAIS,MAAMA,CAAA;IACR,OAAO,CAAC,IAAI,CAACC,OAAO,EAAE,CAACC,eAAe,EAAE,CAACC,QAAQ,CAAC,IAAI,CAAC;EACzD;EAEA;;;EAGA,IAAIC,EAAEA,CAAA;IACJ,OAAOC,SAAS;EAClB;EAEA;EACA,CAACtB,eAAA,CAAAuB,aAAa,IAAC;IACb,OAAO,KAAK,IAAI,CAACC,KAAK,EAAE,CAACC,KAAK,CAAC1B,SAAA,CAAA2B,UAAU,CAAC;EAC5C;EAEA;EACA,CAAC1B,eAAA,CAAA2B,kBAAkB,IAAC;IAClB,OAAO,IAAI,CAACH,KAAK,EAAE;EACrB;;AA5JFI,OAAA,CAAA3B,cAAA,GAAAA,cAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}