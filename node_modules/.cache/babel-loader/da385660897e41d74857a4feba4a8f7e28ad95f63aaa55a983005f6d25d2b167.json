{"ast":null,"code":"import axios from 'axios';\nimport { Message, MessageBox, Notification } from 'element-ui';\nimport signature from '@/utils/signature';\nimport { getToken } from '@/utils/auth';\naxios.defaults.headers['Content-Type'] = 'application/json;charset=utf-8';\n// 创建axios实例\nconst request = axios.create({\n  // axios中请求配置有baseURL选项，表示请求URL公共部分\n  baseURL: process.env['VUE_APP_API_ROOT'],\n  // 超时\n  timeout: 60000\n});\n// request拦截器\nrequest.interceptors.request.use(config => {\n  let token = getToken();\n  if (token) {\n    config.headers['Authorization'] = 'Bearer ' + token; // 让每个请求携带自定义token 请根据实际情况自行修改\n  }\n  // get请求映射params参数\n  if (config.method === 'get' && config.params) {\n    let url = config.url + '?';\n    for (const propName of Object.keys(config.params)) {\n      const value = config.params[propName];\n      var part = encodeURIComponent(propName) + '=';\n      if (value !== null && typeof value !== 'undefined') {\n        if (typeof value === 'object') {\n          for (const key of Object.keys(value)) {\n            let params = propName + '[' + key + ']';\n            var subPart = encodeURIComponent(params) + '=';\n            url += subPart + encodeURIComponent(value[key]) + '&';\n          }\n        } else {\n          url += part + encodeURIComponent(value) + '&';\n        }\n      }\n    }\n    url = url.slice(0, -1);\n    config.params = {};\n    config.url = url;\n  }\n  config.headers = {\n    ...config.headers,\n    ...signature(config.data)\n  };\n  return config;\n}, error => {\n  console.log(error);\n  Promise.reject(error);\n});\n\n// 响应拦截器\nrequest.interceptors.response.use(async res => {\n  // 未设置状态码则默认成功状态\n  const code = res.data.code || 1000;\n  // 获取错误信息\n  if (code === 2002) {\n    MessageBox.confirm('请重新登录', '系统提示', {\n      confirmButtonText: '重新登录',\n      cancelButtonText: '取消',\n      type: 'warning'\n    }).then(() => {\n      location.href = '/login';\n    }).catch(() => {});\n  } else if (code === 500) {\n    Message({\n      message: msg,\n      type: 'error'\n    });\n    return Promise.reject(new Error(msg));\n  } else if (code !== 200) {\n    Notification.error({\n      title: msg\n    });\n    return Promise.reject('error');\n  } else {\n    return res.data;\n  }\n}, error => {\n  console.log('err' + error);\n  let {\n    message\n  } = error;\n  if (message == 'Network Error') {\n    message = '后端接口连接异常';\n  } else if (message.includes('timeout')) {\n    message = '系统接口请求超时';\n  } else if (message.includes('Request failed with status code')) {\n    message = '系统接口' + message.substr(message.length - 3) + '异常';\n  }\n  Message({\n    message: message,\n    type: 'error',\n    duration: 5 * 1000\n  });\n  return Promise.reject(error);\n});\nexport default request;","map":{"version":3,"names":["axios","Message","MessageBox","Notification","signature","getToken","defaults","headers","request","create","baseURL","process","env","timeout","interceptors","use","config","token","method","params","url","propName","Object","keys","value","part","encodeURIComponent","key","subPart","slice","data","error","console","log","Promise","reject","response","res","code","confirm","confirmButtonText","cancelButtonText","type","then","location","href","catch","message","msg","Error","title","includes","substr","length","duration"],"sources":["/Users/hexuemin/Desktop/jiuan/CGM/CGM3Admin/src/api/index.js"],"sourcesContent":["import axios from 'axios'\nimport {Message, MessageBox, Notification} from 'element-ui'\nimport signature from '@/utils/signature'\nimport {getToken} from '@/utils/auth'\n\n\naxios.defaults.headers['Content-Type'] = 'application/json;charset=utf-8'\n// 创建axios实例\nconst request = axios.create({\n  // axios中请求配置有baseURL选项，表示请求URL公共部分\n  baseURL: process.env['VUE_APP_API_ROOT'],\n  // 超时\n  timeout: 60000\n})\n// request拦截器\nrequest.interceptors.request.use(config => {\n  let token = getToken()\n  if (token) {\n    config.headers['Authorization'] = 'Bearer ' + token // 让每个请求携带自定义token 请根据实际情况自行修改\n  }\n  // get请求映射params参数\n  if (config.method === 'get' && config.params) {\n    let url = config.url + '?'\n    for (const propName of Object.keys(config.params)) {\n      const value = config.params[propName]\n      var part = encodeURIComponent(propName) + '='\n      if (value !== null && typeof (value) !== 'undefined') {\n        if (typeof value === 'object') {\n          for (const key of Object.keys(value)) {\n            let params = propName + '[' + key + ']'\n            var subPart = encodeURIComponent(params) + '='\n            url += subPart + encodeURIComponent(value[key]) + '&'\n          }\n        } else {\n          url += part + encodeURIComponent(value) + '&'\n        }\n      }\n    }\n    url = url.slice(0, -1)\n    config.params = {}\n    config.url = url\n  }\n  config.headers = {...config.headers,...signature(config.data)}\n  return config\n}, error => {\n  console.log(error)\n  Promise.reject(error)\n})\n\n// 响应拦截器\nrequest.interceptors.response.use(async res => {\n    // 未设置状态码则默认成功状态\n    const code = res.data.code || 1000\n    // 获取错误信息\n    if (code === 2002) {\n      MessageBox.confirm('请重新登录', '系统提示', {\n          confirmButtonText: '重新登录',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      ).then(() => {\n        location.href = '/login'\n      }).catch(() => {\n      })\n    } else if (code === 500) {\n      Message({\n        message: msg,\n        type: 'error'\n      })\n      return Promise.reject(new Error(msg))\n    }else if (code !== 200) {\n      Notification.error({\n        title: msg\n      })\n      return Promise.reject('error')\n    } else {\n      return res.data\n    }\n  },\n  error => {\n    console.log('err' + error)\n    let {message} = error\n    if (message == 'Network Error') {\n      message = '后端接口连接异常'\n    } else if (message.includes('timeout')) {\n      message = '系统接口请求超时'\n    } else if (message.includes('Request failed with status code')) {\n      message = '系统接口' + message.substr(message.length - 3) + '异常'\n    }\n    Message({\n      message: message,\n      type: 'error',\n      duration: 5 * 1000\n    })\n    return Promise.reject(error)\n  }\n)\n\nexport default request\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}