{"ast":null,"code":"/* 本文件是用来计算AGP图谱中，五条线中的纵坐标取值的 */\n\nexport class AGPUtils {\n  /**\n   * 根据血糖数据，返回这个数组对应的第5百分位的血糖值、第25百分位的血糖值、第50百分位的血糖值、第75百分位的血糖值、第95百分位的血糖值、\n   *\n   * @static\n   * @param {*} 血糖值数据，单位：md/dL\n   * @return {*} {\n      p05: 50,\n      p25: 65,\n      p50: 78,\n      p75: 90,\n      p95: 120,\n    };\n   * @memberof AGPUtils\n   */\n  static calculateYValue(dataArray) {\n    // 检查dataArray是否是数组且不为空\n    if (!Array.isArray(dataArray) || dataArray.length < 5) {\n      return null;\n    }\n\n    // 检查dataArray的所有元素是否都是数值\n    if (!dataArray.every(element => typeof element === 'number')) {\n      return null;\n    }\n\n    // 过滤出数组中属于40到400之间的数值\n    let filteredArray = dataArray.filter(val => val >= 40 && val <= 400);\n    if (filteredArray.length < 5) {\n      return null;\n    }\n    filteredArray.sort((a, b) => a - b);\n    const arrayLength = filteredArray.length;\n    const percentageArray = [0.05, 0.25, 0.5, 0.75, 0.95];\n    const estimateIndexArray = percentageArray.map(val => val * arrayLength);\n    const valueArray = estimateIndexArray.map(index => {\n      if (Number.isInteger(index)) {\n        return 0.5 * (filteredArray[index - 1] + filteredArray[index]);\n      } else {\n        return filteredArray[Math.ceil(index) - 1];\n      }\n    });\n    return {\n      p05: valueArray[0],\n      p25: valueArray[1],\n      p50: valueArray[2],\n      p75: valueArray[3],\n      p95: valueArray[4]\n    };\n  }\n}","map":{"version":3,"names":["AGPUtils","calculateYValue","dataArray","Array","isArray","length","every","element","filteredArray","filter","val","sort","a","b","arrayLength","percentageArray","estimateIndexArray","map","valueArray","index","Number","isInteger","Math","ceil","p05","p25","p50","p75","p95"],"sources":["/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/src/utils/algorithm/AGP.js"],"sourcesContent":["/* 本文件是用来计算AGP图谱中，五条线中的纵坐标取值的 */\n\nexport class AGPUtils {\n  /**\n   * 根据血糖数据，返回这个数组对应的第5百分位的血糖值、第25百分位的血糖值、第50百分位的血糖值、第75百分位的血糖值、第95百分位的血糖值、\n   *\n   * @static\n   * @param {*} 血糖值数据，单位：md/dL\n   * @return {*} {\n      p05: 50,\n      p25: 65,\n      p50: 78,\n      p75: 90,\n      p95: 120,\n    };\n   * @memberof AGPUtils\n   */\n  static calculateYValue(dataArray) {\n    // 检查dataArray是否是数组且不为空\n    if (!Array.isArray(dataArray) || dataArray.length < 5) {\n      return null;\n    }\n\n    // 检查dataArray的所有元素是否都是数值\n    if (!dataArray.every(element => typeof element === 'number')) {\n      return null;\n    }\n\n    // 过滤出数组中属于40到400之间的数值\n    let filteredArray = dataArray.filter(val => val >= 40 && val <= 400);\n    if (filteredArray.length < 5) {\n      return null;\n    }\n\n    filteredArray.sort((a, b) => a - b);\n\n    const arrayLength = filteredArray.length;\n    const percentageArray = [0.05, 0.25, 0.5, 0.75, 0.95];\n    const estimateIndexArray = percentageArray.map(val => val * arrayLength);\n\n    const valueArray = estimateIndexArray.map(index => {\n      if (Number.isInteger(index)) {\n        return 0.5 * (filteredArray[index - 1] + filteredArray[index]);\n      } else {\n        return filteredArray[Math.ceil(index) - 1];\n      }\n    });\n\n    return {\n      p05: valueArray[0],\n      p25: valueArray[1],\n      p50: valueArray[2],\n      p75: valueArray[3],\n      p95: valueArray[4],\n    };\n  }\n}\n"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,QAAQ,CAAC;EACpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOC,eAAeA,CAACC,SAAS,EAAE;IAChC;IACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,SAAS,CAAC,IAAIA,SAAS,CAACG,MAAM,GAAG,CAAC,EAAE;MACrD,OAAO,IAAI;IACb;;IAEA;IACA,IAAI,CAACH,SAAS,CAACI,KAAK,CAACC,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,CAAC,EAAE;MAC5D,OAAO,IAAI;IACb;;IAEA;IACA,IAAIC,aAAa,GAAGN,SAAS,CAACO,MAAM,CAACC,GAAG,IAAIA,GAAG,IAAI,EAAE,IAAIA,GAAG,IAAI,GAAG,CAAC;IACpE,IAAIF,aAAa,CAACH,MAAM,GAAG,CAAC,EAAE;MAC5B,OAAO,IAAI;IACb;IAEAG,aAAa,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC;IAEnC,MAAMC,WAAW,GAAGN,aAAa,CAACH,MAAM;IACxC,MAAMU,eAAe,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;IACrD,MAAMC,kBAAkB,GAAGD,eAAe,CAACE,GAAG,CAACP,GAAG,IAAIA,GAAG,GAAGI,WAAW,CAAC;IAExE,MAAMI,UAAU,GAAGF,kBAAkB,CAACC,GAAG,CAACE,KAAK,IAAI;MACjD,IAAIC,MAAM,CAACC,SAAS,CAACF,KAAK,CAAC,EAAE;QAC3B,OAAO,GAAG,IAAIX,aAAa,CAACW,KAAK,GAAG,CAAC,CAAC,GAAGX,aAAa,CAACW,KAAK,CAAC,CAAC;MAChE,CAAC,MAAM;QACL,OAAOX,aAAa,CAACc,IAAI,CAACC,IAAI,CAACJ,KAAK,CAAC,GAAG,CAAC,CAAC;MAC5C;IACF,CAAC,CAAC;IAEF,OAAO;MACLK,GAAG,EAAEN,UAAU,CAAC,CAAC,CAAC;MAClBO,GAAG,EAAEP,UAAU,CAAC,CAAC,CAAC;MAClBQ,GAAG,EAAER,UAAU,CAAC,CAAC,CAAC;MAClBS,GAAG,EAAET,UAAU,CAAC,CAAC,CAAC;MAClBU,GAAG,EAAEV,UAAU,CAAC,CAAC;IACnB,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}