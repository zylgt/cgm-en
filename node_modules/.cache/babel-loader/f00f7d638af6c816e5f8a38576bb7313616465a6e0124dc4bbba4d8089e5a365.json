{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport TChart from '@/views/components/TChart';\nimport { hasEventListener } from \"@/utils/utils\";\nimport { formatDate, formatTime } from '@/utils/formatTime';\nimport { TIRUtils } from \"@/utils/algorithm/TIR\";\nimport { GlucoseUtils } from \"@/utils/algorithm/Glucose\";\nimport { Divider } from 'element-ui';\nexport default {\n  data() {\n    return {\n      initOptions: {\n        renderer: 'svg'\n      },\n      option: {\n        tooltip: {\n          show: true,\n          trigger: 'axis',\n          confine: true\n        },\n        title: [],\n        grid: [],\n        xAxis: [],\n        yAxis: [],\n        visualMap: [],\n        series: []\n      },\n      dayList: [],\n      week: [],\n      gridW: 0,\n      unit: 'mmol/L'\n    };\n  },\n  components: {\n    TChart\n  },\n  created() {},\n  mounted() {\n    // 监听云数据 \n    this.$bus.$on('getDatas', data => {\n      console.log(formatTime(new Date()), '每日血糖开始计算');\n      this.handelDay(data);\n      // this.handelIng(data)\n    });\n    // 监听vuex数据\n    this.$bus.$on('getVuexTag', data => {\n      let result = this.$store.state.report.day[data];\n      this.dayList = result;\n      this.$nextTick(() => {\n        this.getOption(result);\n      });\n    });\n  },\n  methods: {\n    /**\n    * 循环对比选中的开始时间和结束时间，有数据插入，没有数据为空\n    * currentDate 记录开始时间，每次循环完成加一天\n    * dayList 分割后最终的数据数组\n    * dayList 参数集 day:日期 week:周 value:按时刻分割的数据 tir:每日的tir max:所有数据的最大值，大于400则等于400\n    * value = dayArray 画图需要的按时刻分割的1440的空数组(一分钟一个数据点，一天1440个数据点对应1440个时刻)，需要把大于400低于40的值置为40和400\n    * dayArrays 计算tir所需要的数组，不需要重新赋值\n    */\n    processArray(arr, interval) {\n      let result = [];\n      for (let i = 0; i < arr.length - 1; i++) {\n        result.push(arr[i]);\n        let diff = arr[i + 1].DataTs - arr[i].DataTs;\n        let addTs = arr[i].DataTs + interval;\n        while (diff > interval) {\n          result.push({\n            DataTs: addTs,\n            value: undefined\n          });\n          diff = arr[i + 1].DataTs - addTs;\n          addTs += interval;\n        }\n      }\n      result.push(arr[arr.length - 1]);\n      return result;\n    },\n    filterArray(data) {\n      const result = [];\n      const seenTimes = new Set();\n      let levelLowInvalidMg = 20;\n      let levelHighInvalidMg = 800;\n      let levelTooLowMg = 40;\n      let levelTooHighMg = 400;\n      data.forEach(item => {\n        const timeStr = formatDate(item.DataTs * 1000, 'YYYY-mm-dd HH:MM');\n        if (!seenTimes.has(timeStr)) {\n          seenTimes.add(timeStr);\n          if (item.value > levelLowInvalidMg || item.value < levelHighInvalidMg) {\n            result.push({\n              ...item,\n              value: undefined\n            });\n          } else if (item.value < levelTooLowMg) {\n            result.push({\n              ...item,\n              value: levelTooLowMg\n            });\n          } else if (item.value > levelTooHighMg) {\n            result.push({\n              ...item,\n              value: levelTooHighMg\n            });\n          } else {\n            result.push(item);\n          }\n        }\n      });\n      return result;\n    },\n    handleData(objects, s_ts, e_ts) {\n      let measuringInterval = 60;\n      objects = this.processArray(objects, measuringInterval);\n      objects = this.filterArray(objects);\n      let startTs = objects[0].DataTs;\n      while (startTs - measuringInterval >= s_ts) {\n        objects.unshift({\n          DataTs: startTs - measuringInterval,\n          value: undefined\n        });\n        startTs = startTs - measuringInterval;\n      }\n      let endTs = objects[objects.length - 1].DataTs;\n      while (endTs + measuringInterval < e_ts) {\n        objects.push({\n          DataTs: endTs + measuringInterval,\n          value: undefined\n        });\n        endTs = endTs + measuringInterval;\n      }\n      return objects;\n    },\n    // 分割成每日血糖所需要的\n    handelDay(data) {\n      console.log(data);\n      this.unit = data[2];\n      data = _.cloneDeep(data);\n      let s_date = new Date(data[0].split('/')[0]).getTime / 1000;\n      let e_date = new Date(data[0].split('/')[1]).getTime / 1000;\n      console.log(s_date, e_date);\n      let datArray = this.handleData(data[1], s_date, e_date);\n      let singleDay = _.chunk(datArray, 60 * 24);\n      console.log(singleDay);\n      let max = _.maxBy(datArray, 'Value').Value > 400 ? 400 : _.maxBy(datArray, 'Value').Value;\n      let dayList = new Array();\n      singleDay.forEach(item => {\n        let value = _.map(item, 'Value');\n        console.log(item[0].DataTs, formatDate(item[0].DataTs * 1000, 'mm.dd'));\n        dayList.push({\n          day: formatDate(item[0].DataTs * 1000, 'mm.dd'),\n          week: formatDate(item[0].DataTs * 1000, 'WW'),\n          value: value,\n          max: max,\n          tir: TIRUtils.getTIRResult(value) ? (Number(TIRUtils.getTIRResult(value).normalRate) * 100).toFixed(1) : ''\n        });\n      });\n      this.dayList = dayList;\n      console.log(formatTime(new Date()), '每日血糖计算完成');\n      this.$store.dispatch('setDay', {\n        key: data[0],\n        value: singleDay\n      }); //处理完数据存vuex\n      this.$nextTick(() => {\n        this.getOption(this.dayList);\n      });\n    },\n    handelIng(data) {\n      this.unit = data[2];\n      let s_date = data[0].split('/')[0];\n      let e_date = data[0].split('/')[1];\n      let arrays = _.uniqBy(data[1], 'DataTs'); //去重\n      let array = _.filter(arrays, function (val) {\n        //过滤掉无效数据\n        return val.Value >= 20 && val.Value <= 800;\n      });\n      let currentDate = new Date(s_date);\n      let dayList = [];\n      while (currentDate <= new Date(e_date)) {\n        let dayArray = new Array(24 * 60);\n        let dayArrays = new Array(24 * 60);\n        array.forEach(item => {\n          let moment = Number(formatDate(item.DataTs * 1000, 'HH')) * 60 + Number(formatDate(item.DataTs * 1000, 'MM'));\n          let value = item.Value;\n          if (item.Value > 400 && item.Value <= 800) value = 400;\n          if (item.Value >= 20 && item.Value < 40) value = 40;\n          if (formatDate(item.DataTs * 1000, 'mm.dd') == formatDate(currentDate, 'mm.dd')) {\n            dayArray[moment] = value ? value : null;\n            dayArrays[moment] = item.Value;\n          }\n        });\n        let max = _.maxBy(array, 'Value').Value > 400 ? 400 : _.maxBy(array, 'Value').Value;\n        dayList.push({\n          day: formatDate(currentDate, 'mm.dd'),\n          week: formatDate(currentDate, 'WW'),\n          value: dayArray,\n          max: max,\n          tir: TIRUtils.getTIRResult(dayArrays) ? (Number(TIRUtils.getTIRResult(dayArrays).normalRate) * 100).toFixed(1) : ''\n        });\n        currentDate.setDate(new Date(currentDate).getDate() + 1);\n      }\n      console.log(formatTime(new Date()), '每日血糖计算完成');\n      this.dayList = dayList;\n      this.$store.dispatch('setDay', {\n        key: data[0],\n        value: dayList\n      }); //处理完数据存vuex\n      this.$nextTick(() => {\n        this.getOption(this.dayList);\n      });\n    },\n    // 渲染数据\n    getOption(data) {\n      let dayList = _.cloneDeep(data);\n      let gridW = Math.floor((this.$refs.day.clientWidth - 240) / 7);\n      this.gridW = gridW;\n      let xData = Array.from({\n        length: 60 * 24\n      }, (item, index) => index);\n      let max = data[0].max;\n      let unit = this.unit;\n      if (unit != 'mg/dL') {\n        max = GlucoseUtils.mgdlToMmol(max) < 13.9 ? 13.9 : GlucoseUtils.mgdlToMmol(max);\n      }\n      this.option = {\n        tooltip: {\n          show: true,\n          trigger: 'axis',\n          confine: true,\n          axisPointer: {\n            type: 'none',\n            axis: 'x'\n          },\n          formatter(params) {\n            let h = Math.floor(Number(params[0].axisValue) / 60) < 10 ? '0' + Math.floor(Number(params[0].axisValue) / 60) : Math.floor(Number(params[0].axisValue) / 60);\n            let m = Number(params[0].axisValue) % 60 < 10 ? '0' + Number(params[0].axisValue) % 60 : Number(params[0].axisValue) % 60;\n            let moment = h + ':' + m;\n            let html = \"<div class='tooltip-box' >\" + \" <div class='tooltips-val'>\" + \" <span class='tooltips-val-num'>\" + params[0].value + \"</span>\" + unit + \"</div>\" + \" <div class='tooltips-date'>\" + dayList[params[0].axisIndex].day + ' ' + moment + \" </div>\" + \" </div>\";\n            return html;\n          },\n          extraCssText: 'box-shadow: 0 2px 10px rgba(195,245,247,1);'\n        },\n        title: [],\n        grid: [],\n        xAxis: [],\n        yAxis: [],\n        visualMap: [],\n        series: []\n      };\n      dayList.forEach((item, index) => {\n        if (unit != 'mg/dL') {\n          item.value = item.value.map(val => GlucoseUtils.mgdlToMmol(val));\n        }\n        if (index > 14) {\n          return;\n        }\n        let tirClass = item.tir > 70 ? 'tir' : 'tirs';\n        this.option.title.push({\n          text: item.tir ? ['{date|' + item.day + '}{tirLable|TIR:}{' + tirClass + '|' + item.tir + '%}'] : ['{date|' + item.day + '}{tir|TIR:--}'],\n          left: index == 0 ? 90 : index < 7 && index > 0 ? index * (gridW + 15) + 90 : index % 7 * (gridW + 15) + 90,\n          top: index >= 7 ? 172 * Math.floor(index / 7) : 2,\n          right: 10,\n          textStyle: {\n            rich: {\n              date: {\n                fontSize: 16,\n                color: '#333',\n                width: (gridW - 10) / 2 - 10,\n                align: 'left'\n              },\n              tirLable: {\n                fontSize: 20,\n                width: 30,\n                color: '#333',\n                align: 'right'\n              },\n              tir: {\n                fontSize: 20,\n                width: 70,\n                color: '#333',\n                align: 'left'\n              },\n              tirs: {\n                fontSize: 20,\n                width: 70,\n                color: '#F43F31',\n                align: 'left'\n              }\n            }\n          }\n        });\n        this.option.grid.push({\n          show: false,\n          left: index == 0 ? 90 : index < 7 && index > 0 ? index * (gridW + 15) + 90 : index % 7 * (gridW + 15) + 90,\n          right: 0,\n          top: index >= 7 ? 170 * Math.floor(index / 7) + 30 : 30,\n          width: gridW,\n          height: 90,\n          borderColor: '#666',\n          borderWidth: 0.5\n        });\n        this.option.xAxis.push({\n          type: 'category',\n          gridIndex: index,\n          show: true,\n          axisLine: {\n            show: false\n          },\n          data: xData,\n          axisLabel: {\n            formatter: function (value, indexs) {\n              if (indexs == 0) {\n                return '00:00';\n              } else if (index == dayList.length - 1 && indexs == item.value.length - 1 || index % 7 == 6 && indexs == item.value.length - 1) {\n                return '00:00';\n              } else if (indexs == item.value.length / 2 - 1) {\n                return '12:00';\n              }\n            },\n            interval: 0,\n            color: 'var(--color-black-60)',\n            fontSize: 16,\n            margin: 15\n          },\n          axisTick: {\n            show: false\n          }\n        });\n        this.option.yAxis.push({\n          type: 'value',\n          show: false,\n          gridIndex: index,\n          min: 0,\n          max: Math.ceil(max / 3) * 3\n        });\n        this.option.visualMap.push({\n          type: \"piecewise\",\n          show: false,\n          pieces: [{\n            gt: 0,\n            lt: this.unit == 'mg/dL' ? 70 : 3.9,\n            color: \"var(--color-error)\" //大于0小于12为红色\n          }, {\n            gt: this.unit == 'mg/dL' ? 180 : 10,\n            color: \"var(--color-warning\" //大于12区间为红色\n          }, {\n            gt: this.unit == 'mg/dL' ? 70 : 3.9,\n            lt: this.unit == 'mg/dL' ? 180 : 10,\n            color: \"var(--color-primary\" //大于12区间为红色\n          }]\n        });\n        this.option.series.push({\n          type: 'line',\n          data: item.value,\n          xAxisIndex: index,\n          yAxisIndex: index,\n          showSymbol: _.compact(item.value).length > 1 ? false : true,\n          symbolSize: 1,\n          symbol: 'circle',\n          emphasis: {\n            disabled: true\n          },\n          lineStyle: {\n            width: 1\n          },\n          markLine: {\n            symbol: 'none',\n            // animation:false,\n            data: [\n            // {\n            //     xAxis:xData.length/2-1,\n            //     lineStyle: {\n            //         color: 'var(--color-black-10)',\n            //         width: 1,\n            //         type:'dashed'\n            //     },\n            //     label:{\n            //         show:false\n            //     }\n            // } ,\n            {\n              yAxis: this.unit == 'mg/dL' ? 70 : 3.9,\n              lineStyle: {\n                width: 0\n              },\n              label: {\n                show: index % 7 == 0 ? true : false,\n                position: 'start',\n                distance: 14,\n                fontSize: 16,\n                color: '#666'\n              }\n            }, {\n              yAxis: this.unit == 'mg/dL' ? 180 : 10,\n              lineStyle: {\n                width: 0\n              },\n              label: {\n                show: index % 7 == 0 ? true : false,\n                position: 'start',\n                fontSize: 16,\n                distance: 14,\n                color: '#666'\n              }\n            }]\n          },\n          markArea: {\n            data: [[{\n              yAxis: this.unit == 'mg/dL' ? 70 : 3.9\n            }, {\n              yAxis: this.unit == 'mg/dL' ? 180 : 10\n            }]],\n            itemStyle: {\n              color: 'rgba(50, 186, 192, 0.08)'\n            }\n          }\n        });\n      });\n      this.$nextTick(() => {\n        console.log(formatTime(new Date()), '每日血糖渲染完成');\n      });\n    },\n    // 管理数据\n    handelIngs(data) {\n      let array = data[1];\n      // 将数组按天分割\n      let dayMap = new Map();\n      array.forEach(item => {\n        item.day = formatDate(item.DataTs * 1000, 'mm.dd');\n        item.week = formatDate(item.DataTs * 1000, 'WW');\n        item.moment = Number(formatDate(item.DataTs * 1000, 'HH')) * 60 + Number(formatDate(item.DataTs * 1000, 'MM'));\n        item.dayArray = new Array(24 * 60);\n        item.dayArray[item.moment] == GlucoseUtils.mgdlToMmol(item.Value);\n        item.dayArrayCopy = new Array(24 * 60);\n        item.dayArrayCopy[item.moment] = item.Value;\n        dayMap.has(item.day) ? dayMap.get(item.day).value[item.moment] = GlucoseUtils.mgdlToMmol(item.Value) : dayMap.set(item.day, {\n          value: item.dayArray,\n          week: item.week,\n          tir: TIRUtils.getTIRResult(item.dayArrayCopy) ? TIRUtils.getTIRResult(item.dayArrayCopy).normalRate : ''\n        });\n      });\n      // x轴数据\n\n      console.log(formatTime(new Date()), '每日血糖计算完成');\n      console.log(dayMap);\n      // this.dayList = [...dayMap]\n      // this.$store.dispatch('setDay',{key:data[0],value:[...dayMap]}) //处理完数据存vuex\n      // this.$nextTick(()=>{\n      //     this.getOptions(this.dayList)\n      // })\n    },\n    // 渲染数据\n    getOptions(data) {\n      let dayList = data;\n      let gridW = Math.floor((this.$refs.day.clientWidth - 240) / 7);\n      this.gridW = gridW;\n      let xData = Array.from({\n        length: 60 * 24\n      });\n      this.option = {\n        title: [],\n        grid: [],\n        xAxis: [],\n        yAxis: [],\n        visualMap: [],\n        series: []\n      };\n      dayList.forEach((item, index) => {\n        if (index > 13) {\n          return;\n        }\n        this.option.title.push({\n          text: ['{date|' + dayList[index][0] + '}{tir|TIR:' + dayList[index][1].tir + '%}'],\n          left: index == 0 ? 90 : index < 7 && index > 0 ? index * (gridW + 15) + 90 : (index - 7) * (gridW + 15) + 90,\n          top: index >= 7 ? 172 : 2,\n          textStyle: {\n            rich: {\n              date: {\n                fontSize: 16,\n                color: '#666',\n                width: (gridW - 10) / 2,\n                align: 'left'\n              },\n              tir: {\n                fontSize: 16,\n                color: '#666',\n                width: (gridW - 10) / 2,\n                align: 'right'\n              }\n            }\n          }\n        });\n        this.option.grid.push({\n          show: true,\n          borderRadius: 14,\n          left: index == 0 ? 90 : index < 7 && index > 0 ? index * (gridW + 15) + 90 : (index - 7) * (gridW + 15) + 90,\n          right: 0,\n          top: index >= 7 ? 170 : 0,\n          width: gridW,\n          height: 120,\n          borderColor: '#e5e5e5',\n          borderWidth: 0.5\n        });\n        this.option.xAxis.push({\n          type: 'category',\n          gridIndex: index,\n          show: true,\n          axisLine: {\n            show: false\n          },\n          data: xData,\n          axisLabel: {\n            formatter: function (value, indexs) {\n              if (indexs == 0) {\n                return '00:00';\n              } else if (indexs == dayList[index][1].value.length - 1 && index == 6 || indexs == dayList[index][1].value.length - 1 && index == 13) {\n                return '00:00';\n              } else if (indexs == dayList[index][1].value.length / 2 - 1) {\n                return '12:00';\n              }\n            },\n            interval: 0,\n            color: 'var(--color-black-40)',\n            fontSize: 16,\n            margin: 15\n          },\n          axisTick: {\n            show: false\n          }\n        });\n        this.option.yAxis.push({\n          type: 'value',\n          show: false,\n          gridIndex: index,\n          min: 0,\n          max: 16\n        });\n        this.option.visualMap.push({\n          type: \"piecewise\",\n          show: false,\n          pieces: [{\n            gt: 0,\n            lt: 3.9,\n            color: \"var(--color-error)\" //大于0小于12为红色\n          }, {\n            gt: 10,\n            color: \"var(--color-warning\" //大于12区间为红色\n          }, {\n            gt: 3.9,\n            lt: 10,\n            color: \"var(--color-primary\" //大于12区间为红色\n          }]\n        });\n        this.option.series.push({\n          type: 'line',\n          data: dayList[index][1].value,\n          xAxisIndex: index,\n          yAxisIndex: index,\n          showSymbol: false,\n          lineStyle: {\n            width: 1\n          },\n          markLine: {\n            symbol: 'none',\n            animation: false,\n            data: [{\n              xAxis: xData.length / 2 - 1,\n              lineStyle: {\n                color: 'var(--color-black-10)',\n                width: 1,\n                type: 'dashed'\n              },\n              label: {\n                show: false\n              }\n            }, {\n              yAxis: 3.9,\n              lineStyle: {\n                width: 0\n              },\n              label: {\n                show: index == 0 || index == 7 ? true : false,\n                position: 'start',\n                distance: 14,\n                fontSize: 16,\n                color: '#666'\n              }\n            }, {\n              yAxis: 10,\n              lineStyle: {\n                width: 0\n              },\n              label: {\n                show: index == 0 || index == 7 ? true : false,\n                position: 'start',\n                fontSize: 16,\n                distance: 14,\n                color: '#666'\n              }\n            }]\n          },\n          markArea: {\n            data: [[{\n              yAxis: 3.9\n            }, {\n              yAxis: 10\n            }]],\n            itemStyle: {\n              color: 'rgba(50, 186, 192, 0.08)'\n            }\n          }\n        });\n      });\n    }\n  },\n  beforeDestroy() {\n    this.$bus.$off('getDatas');\n    this.$bus.$off('getVuexTag');\n  }\n};","map":{"version":3,"names":["TChart","hasEventListener","formatDate","formatTime","TIRUtils","GlucoseUtils","Divider","data","initOptions","renderer","option","tooltip","show","trigger","confine","title","grid","xAxis","yAxis","visualMap","series","dayList","week","gridW","unit","components","created","mounted","$bus","$on","console","log","Date","handelDay","result","$store","state","report","day","$nextTick","getOption","methods","processArray","arr","interval","i","length","push","diff","DataTs","addTs","value","undefined","filterArray","seenTimes","Set","levelLowInvalidMg","levelHighInvalidMg","levelTooLowMg","levelTooHighMg","forEach","item","timeStr","has","add","handleData","objects","s_ts","e_ts","measuringInterval","startTs","unshift","endTs","_","cloneDeep","s_date","split","getTime","e_date","datArray","singleDay","chunk","max","maxBy","Value","Array","map","tir","getTIRResult","Number","normalRate","toFixed","dispatch","key","handelIng","arrays","uniqBy","array","filter","val","currentDate","dayArray","dayArrays","moment","setDate","getDate","Math","floor","$refs","clientWidth","xData","from","index","mgdlToMmol","axisPointer","type","axis","formatter","params","h","axisValue","m","html","axisIndex","extraCssText","tirClass","text","left","top","right","textStyle","rich","date","fontSize","color","width","align","tirLable","tirs","height","borderColor","borderWidth","gridIndex","axisLine","axisLabel","indexs","margin","axisTick","min","ceil","pieces","gt","lt","xAxisIndex","yAxisIndex","showSymbol","compact","symbolSize","symbol","emphasis","disabled","lineStyle","markLine","label","position","distance","markArea","itemStyle","handelIngs","dayMap","Map","dayArrayCopy","get","set","getOptions","borderRadius","animation","beforeDestroy","$off"],"sources":["src/views/components/Chart/DayChart.vue"],"sourcesContent":["<template>\n    <div>\n        <div class='day-box' ref='day' id='day-box'>\n            <div class='day-item-box' v-if='dayList.length>0'>\n                <div class='day-item'  v-for='(item,index) in dayList' :key='index' :style=\"{width:gridW+'px'}\" >\n                    <div class='day-week' v-if='index<7'>{{item.week}}</div>\n                    <div class='day-grid-border'></div>\n                </div>\n            </div>\n            <t-chart\n                style=\"width: 100%;height:510px;\"\n                :option=\"option\"\n                :init-options=\"initOptions\"\n                theme=\"tduck-echarts-theme\"\n            />\n        </div>\n    </div>\n</template>\n<script>\nimport TChart from '@/views/components/TChart'\nimport { hasEventListener } from \"@/utils/utils\";\nimport {formatDate,formatTime} from '@/utils/formatTime'\nimport { TIRUtils } from \"@/utils/algorithm/TIR\";\nimport { GlucoseUtils } from \"@/utils/algorithm/Glucose\";\nimport { Divider } from 'element-ui';\nexport default {\n    data(){\n        return{\n            initOptions: {\n                renderer: 'svg'\n            },\n            option: {\n                tooltip:{\n                    show:true,\n                    trigger:'axis',\n                    confine:true\n\n                },\n                title:[],\n                grid:[],\n                xAxis: [],\n                yAxis: [],\n                visualMap:[],\n                series: [],\n            },\n            dayList:[],\n            week:[],\n            gridW:0,\n            unit:'mmol/L'\n        }\n    },\n    components: {\n        TChart\n    },\n    created(){\n        \n    },\n    mounted(){\n        // 监听云数据 \n        this.$bus.$on('getDatas',(data)=>{\n            console.log(formatTime(new Date()),'每日血糖开始计算')\n            this.handelDay(data)\n            // this.handelIng(data)\n        })\n        // 监听vuex数据\n        this.$bus.$on('getVuexTag',(data)=>{\n            let result  = this.$store.state.report.day[data]\n            this.dayList = result\n            this.$nextTick(()=>{\n                this.getOption(result)\n            })\n        })\n    },\n    methods:{\n         /**\n         * 循环对比选中的开始时间和结束时间，有数据插入，没有数据为空\n         * currentDate 记录开始时间，每次循环完成加一天\n         * dayList 分割后最终的数据数组\n         * dayList 参数集 day:日期 week:周 value:按时刻分割的数据 tir:每日的tir max:所有数据的最大值，大于400则等于400\n         * value = dayArray 画图需要的按时刻分割的1440的空数组(一分钟一个数据点，一天1440个数据点对应1440个时刻)，需要把大于400低于40的值置为40和400\n         * dayArrays 计算tir所需要的数组，不需要重新赋值\n         */\n        processArray(arr, interval) {\n            let result = [];\n\n            for (let i = 0; i < arr.length - 1; i++) {\n                result.push(arr[i]);\n\n                let diff = arr[i + 1].DataTs - arr[i].DataTs;\n                let addTs = arr[i].DataTs + interval;\n                while (diff > interval) {\n                result.push({DataTs: addTs, value: undefined});\n                diff = arr[i + 1].DataTs - addTs;\n                addTs += interval;\n                }\n            }\n            result.push(arr[arr.length - 1]);\n\n            return result;\n        },\n\n        filterArray  (data) {\n            const result = [];\n\n            const seenTimes = new Set();\n            let levelLowInvalidMg = 20\n            let levelHighInvalidMg = 800\n            let levelTooLowMg = 40\n            let levelTooHighMg = 400\n            data.forEach(item => {\n                const timeStr = formatDate(item.DataTs*1000,'YYYY-mm-dd HH:MM')\n\n                if (!seenTimes.has(timeStr)) {\n                seenTimes.add(timeStr);\n                if (item.value > levelLowInvalidMg || item.value < levelHighInvalidMg) {\n                    result.push({...item, value: undefined});\n                } else if (item.value < levelTooLowMg) {\n                    result.push({\n                    ...item,\n                    value: levelTooLowMg,\n                    });\n                } else if (item.value > levelTooHighMg) {\n                    result.push({\n                    ...item,\n                    value: levelTooHighMg,\n                    });\n                } else {\n                    result.push(item);\n                }\n                }\n            });\n\n            return result;\n        },\n\n        handleData (objects, s_ts, e_ts)  {\n            let measuringInterval = 60\n            objects = this.processArray(objects, measuringInterval);\n            objects = this.filterArray(objects);\n\n            let startTs = objects[0].DataTs;\n            while (startTs - measuringInterval >= s_ts) {\n                objects.unshift({\n                DataTs: startTs - measuringInterval,\n                value: undefined,\n                });\n                startTs = startTs - measuringInterval;\n            }\n\n            let endTs = objects[objects.length - 1].DataTs;\n            while (endTs + measuringInterval < e_ts) {\n                objects.push({\n                DataTs: endTs + measuringInterval,\n                value: undefined,\n                });\n                endTs = endTs + measuringInterval;\n            }\n            return objects;\n        },\n        // 分割成每日血糖所需要的\n        handelDay(data){\n            console.log(data)\n            this.unit = data[2]\n            data = _.cloneDeep(data)\n            let s_date =new Date(data[0].split('/')[0]).getTime/1000\n            let e_date =new Date(data[0].split('/')[1]).getTime/1000\n            console.log(s_date,e_date)\n            let datArray = this.handleData(data[1],s_date,e_date)\n            let singleDay  = _.chunk(datArray,60*24) ;\n            console.log(singleDay)\n            let max = _.maxBy(datArray,'Value').Value>400?400:_.maxBy(datArray,'Value').Value\n            let dayList = new Array()\n            singleDay.forEach(item=>{\n                let value = _.map(item, 'Value');\n                console.log(item[0].DataTs,formatDate(item[0].DataTs*1000,'mm.dd'))\n                dayList.push({\n                    day: formatDate(item[0].DataTs*1000,'mm.dd'),\n                    week: formatDate(item[0].DataTs*1000,'WW'),\n                    value:value,\n                    max:max,\n                    tir:TIRUtils.getTIRResult(value)?(Number(TIRUtils.getTIRResult(value).normalRate)*100).toFixed(1):''\n                })\n            })\n\n            this.dayList = dayList\n            console.log(formatTime(new Date()),'每日血糖计算完成')\n            this.$store.dispatch('setDay',{key:data[0],value:singleDay}) //处理完数据存vuex\n            this.$nextTick(()=>{\n                this.getOption(this.dayList)\n            })\n        },\n        handelIng(data){\n            this.unit = data[2]\n            let s_date = data[0].split('/')[0]\n            let e_date = data[0].split('/')[1]\n            let arrays = _.uniqBy(data[1],'DataTs') //去重\n            let array = _.filter(arrays,function(val){  //过滤掉无效数据\n                return val.Value>=20&&val.Value<=800\n            })\n            \n            let currentDate = new Date(s_date); \n            let dayList = [] \n            while (currentDate <= new Date(e_date)) {\n                let dayArray =  new Array(24*60)\n                let dayArrays = new Array(24*60)\n                 array.forEach(item=>{\n                    let moment = Number(formatDate(item.DataTs*1000,'HH'))*60+Number(formatDate(item.DataTs*1000,'MM'))\n                    let value = item.Value\n                    if(item.Value>400&&item.Value<=800)value = 400\n                    if(item.Value>=20&&item.Value<40)value = 40\n                    if(formatDate(item.DataTs*1000,'mm.dd') == formatDate(currentDate,'mm.dd')){\n                        dayArray[moment] = value?value:null\n                        dayArrays[moment] = item.Value\n                    }\n                })\n                let max = _.maxBy(array,'Value').Value>400?400:_.maxBy(array,'Value').Value\n                dayList.push({\n                    day: formatDate(currentDate,'mm.dd'),\n                    week: formatDate(currentDate,'WW'),\n                    value:dayArray,\n                    max:max,\n                    tir:TIRUtils.getTIRResult(dayArrays)?(Number(TIRUtils.getTIRResult(dayArrays).normalRate)*100).toFixed(1):''\n                })\n                currentDate.setDate( new Date(currentDate).getDate() + 1);\n            }\n            console.log(formatTime(new Date()),'每日血糖计算完成')\n            this.dayList = dayList\n            this.$store.dispatch('setDay',{key:data[0],value:dayList}) //处理完数据存vuex\n            this.$nextTick(()=>{\n                this.getOption(this.dayList)\n            })\n        },\n        // 渲染数据\n        getOption(data){\n            let dayList = _.cloneDeep(data)\n            let gridW = Math.floor((this.$refs.day.clientWidth-240)/7)\n            this.gridW = gridW\n            let xData = Array.from({length:60*24},(item, index) => index)\n            let max = data[0].max\n            let unit = this.unit\n            if(unit != 'mg/dL'){\n                max = GlucoseUtils.mgdlToMmol(max)<13.9?13.9: GlucoseUtils.mgdlToMmol(max)\n            }\n            this.option = {\n                tooltip :{\n                    show:true,\n                    trigger:'axis',\n                    confine:true,\n                    axisPointer:{\n                        type:'none',\n                        axis:'x'\n                    },\n                    formatter(params){\n                        let h =  Math.floor(Number(params[0].axisValue)/60)<10 ? '0'+ Math.floor(Number(params[0].axisValue)/60) : Math.floor(Number(params[0].axisValue)/60) \n                        let m =  Number(params[0].axisValue)%60 < 10 ? '0' + Number(params[0].axisValue)%60 : Number(params[0].axisValue)%60\n                        let moment = h+':'+m\n                        let html =  \"<div class='tooltip-box' >\"+\n                           \" <div class='tooltips-val'>\"+\n                               \" <span class='tooltips-val-num'>\"+params[0].value+\"</span>\"+unit+\n                            \"</div>\"+\n                           \" <div class='tooltips-date'>\"+\n                              dayList[params[0].axisIndex].day +' '+ moment+\n                           \" </div>\"+\n                       \" </div>\"\n                       \n                        return html\n                    },\n                    extraCssText: 'box-shadow: 0 2px 10px rgba(195,245,247,1);'\n                },\n                title:[],\n                grid:[],\n                xAxis: [],\n                yAxis: [],\n                visualMap:[],\n                series: [],\n            }\n            dayList.forEach((item,index)=>{\n                if(unit != 'mg/dL'){\n                    item.value = item.value.map(val => GlucoseUtils.mgdlToMmol(val));\n                }\n                if(index>14){\n                    return ;\n                }\n                let tirClass = item.tir>70?'tir':'tirs'\n                this.option.title.push({\n                    text:item.tir?['{date|'+item.day+'}{tirLable|TIR:}{'+tirClass+'|'+item.tir+'%}']:['{date|'+item.day+'}{tir|TIR:--}'],\n                    left:index==0?90:index<7&&index>0?index*(gridW+15)+90:(index%7)*(gridW+15)+90,\n                    top:index>=7?172*Math.floor(index/7):2,\n                    right:10,\n                    textStyle:{\n                        rich:{\n                            date:{\n                                fontSize:16,\n                                color:'#333',\n                                width:(gridW-10)/2-10,\n                                align:'left'\n                            },\n                            tirLable:{\n                                fontSize:20,\n                                width:30,\n                                color:'#333',\n                                align:'right'\n                            },\n                            tir:{\n                                fontSize:20,\n                                width:70,\n                                color:'#333',\n                                align:'left'\n                            },\n                            tirs:{\n                                fontSize:20,\n                                width:70,\n                                color:'#F43F31',\n                                align:'left'\n                            }\n                        }\n                    },\n                })\n                this.option.grid.push({   \n                        show:false,\n                        left:index==0?90:index<7&&index>0?index*(gridW+15)+90:(index%7)*(gridW+15)+90,\n                        right:0,\n                        top:index>=7?170*Math.floor(index/7)+30:30,\n                        width:gridW,\n                        height:90,\n                        borderColor:'#666',\n                        borderWidth:0.5\n                })\n                this.option.xAxis.push({   \n                        type: 'category',\n                        gridIndex:index,\n                        show:true,\n                        axisLine:{\n                            show:false\n                        },\n                        data:xData,\n                        axisLabel:{\n                            formatter: function (value, indexs) {\n                                if(indexs==0){\n                                    return '00:00'\n                                }else if(index==dayList.length-1&&indexs==item.value.length-1||index%7==6&&indexs==item.value.length-1){\n                                    return '00:00'\n                                }else if(indexs==(item.value.length/2)-1){\n                                    return '12:00'\n                                }\n                            },\n                            interval:0,\n                            color: 'var(--color-black-60)',\n                            fontSize: 16, \n                            margin:15\n                        },\n                        axisTick:{\n                            show:false\n                        }\n                })\n                this.option.yAxis.push({   \n                        type: 'value',\n                        show:false,\n                        gridIndex:index,\n                        min:0,\n                        max:Math.ceil(max / 3) * 3 \n                })\n                this.option.visualMap.push({\n                      type: \"piecewise\",\n                        show: false,\n                        pieces: [\n                            {\n                                gt: 0,\n                                lt: this.unit=='mg/dL'?70:3.9,\n                                color: \"var(--color-error)\",//大于0小于12为红色\n                            },\n                            {\n                                gt: this.unit=='mg/dL'?180:10,\n                                color: \"var(--color-warning\",//大于12区间为红色\n                            },{\n                                gt: this.unit=='mg/dL'?70:3.9,\n                                lt: this.unit=='mg/dL'?180:10,\n                                color: \"var(--color-primary\",//大于12区间为红色\n                            },\n                        ],\n                })\n                this.option.series.push(  \n                        {\n                        type: 'line',\n                        data:item.value,\n                        xAxisIndex:index,\n                        yAxisIndex:index,\n                        showSymbol:_.compact(item.value).length>1?false:true,\n                        symbolSize:1,\n                        symbol:'circle',\n                        emphasis:{\n                            disabled:true\n                        },\n                        lineStyle: {\n                            width: 1,\n                        },\n                        markLine:{\n                                symbol: 'none',\n                                // animation:false,\n                                data:[\n                                    // {\n                                    //     xAxis:xData.length/2-1,\n                                    //     lineStyle: {\n                                    //         color: 'var(--color-black-10)',\n                                    //         width: 1,\n                                    //         type:'dashed'\n                                    //     },\n                                    //     label:{\n                                    //         show:false\n                                    //     }\n                                    // } ,\n                                    {\n                                        yAxis:this.unit=='mg/dL'?70:3.9,\n                                        lineStyle: {\n                                            width: 0,\n                                        },\n                                        label:{\n                                            show:index%7==0?true:false,\n                                            position:'start',\n                                            distance:14,\n                                            fontSize:16,\n                                            color:'#666',\n\n                                        }\n                                    } ,\n                                    {\n                                        yAxis:this.unit=='mg/dL'?180:10,\n                                        lineStyle: {\n                                            width: 0,\n                                        },\n                                        label:{\n                                            show:index%7==0?true:false,\n                                            position:'start',\n                                            fontSize:16,\n                                            distance:14,\n                                            color:'#666'\n                                        }\n                                    } ,\n                                ]\n                        },\n                        markArea:{\n                            data:[\n                                [{\n                                    yAxis: this.unit=='mg/dL'?70:3.9\n                                },\n                                {   \n                                    yAxis: this.unit=='mg/dL'?180:10\n                                }]\n                            ],\n                            itemStyle:{\n                                color:'rgba(50, 186, 192, 0.08)'\n                            }\n                        },\n\n                    }\n                )\n            })\n            this.$nextTick(()=>{\n                console.log(formatTime(new Date()),'每日血糖渲染完成')\n            })\n        },\n         // 管理数据\n        handelIngs(data){\n            let array = data[1]\n            // 将数组按天分割\n            let dayMap = new Map()\n             array.forEach(item=>{\n                item.day = formatDate(item.DataTs*1000,'mm.dd')\n                item.week = formatDate(item.DataTs*1000,'WW')\n                item.moment = Number(formatDate(item.DataTs*1000,'HH'))*60+Number(formatDate(item.DataTs*1000,'MM'))\n                item.dayArray = new Array(24*60)\n                item.dayArray[item.moment] ==GlucoseUtils.mgdlToMmol(item.Value)\n                item.dayArrayCopy = new Array(24*60)\n                item.dayArrayCopy[item.moment] =item.Value\n                dayMap.has(item.day) ? dayMap.get(item.day).value[item.moment]=GlucoseUtils.mgdlToMmol(item.Value) : dayMap.set(item.day, {value:item.dayArray,week:item.week,tir:TIRUtils.getTIRResult(item.dayArrayCopy)?TIRUtils.getTIRResult(item.dayArrayCopy).normalRate:''});\n            })\n            // x轴数据\n            \n            console.log(formatTime(new Date()),'每日血糖计算完成')\n            console.log(dayMap)\n            // this.dayList = [...dayMap]\n            // this.$store.dispatch('setDay',{key:data[0],value:[...dayMap]}) //处理完数据存vuex\n            // this.$nextTick(()=>{\n            //     this.getOptions(this.dayList)\n            // })\n        },\n        // 渲染数据\n        getOptions(data){\n            let dayList = data\n            let gridW = Math.floor((this.$refs.day.clientWidth-240)/7)\n            this.gridW = gridW\n            let xData = Array.from({length:60*24})\n            this.option = {\n                title:[],\n                grid:[],\n                xAxis: [],\n                yAxis: [],\n                visualMap:[],\n                series: [],\n            }\n            dayList.forEach((item,index)=>{\n                if(index>13){\n                    return ;\n                }\n                this.option.title.push({\n                    text:['{date|'+dayList[index][0]+'}{tir|TIR:'+dayList[index][1].tir+'%}'],\n                    left:index==0?90:index<7&&index>0?index*(gridW+15)+90:(index-7)*(gridW+15)+90,\n                    top:index>=7?172:2,\n                    textStyle:{\n                        rich:{\n                            date:{\n                                fontSize:16,\n                                color:'#666',\n                                width:(gridW-10)/2,\n                                align:'left'\n                            },\n                            tir:{\n                                fontSize:16,\n                                color:'#666',\n                                width:(gridW-10)/2,\n                                align:'right'\n                            }\n                        }\n                    },\n                })\n                this.option.grid.push({   \n                        show:true,\n                        borderRadius:14,\n                        left:index==0?90:index<7&&index>0?index*(gridW+15)+90:(index-7)*(gridW+15)+90,\n                        right:0,\n                        top:index>=7?170:0,\n                        width:gridW,\n                        height:120,\n                        borderColor:'#e5e5e5',\n                        borderWidth:0.5\n                })\n                this.option.xAxis.push({   \n                        type: 'category',\n                        gridIndex:index,\n                        show:true,\n                        axisLine:{\n                            show:false\n                        },\n                        data:xData,\n                        axisLabel:{\n                            formatter: function (value, indexs) {\n                                if(indexs==0){\n                                    return '00:00'\n                                }else if(indexs==dayList[index][1].value.length-1&&index==6||indexs==dayList[index][1].value.length-1&&index==13){\n                                    return '00:00'\n                                }else if(indexs==(dayList[index][1].value.length/2)-1){\n                                    return '12:00'\n                                }\n                            },\n                            interval:0,\n                            color: 'var(--color-black-40)',\n                            fontSize: 16, \n                            margin:15\n                        },\n                        axisTick:{\n                            show:false\n                        }\n                })\n                this.option.yAxis.push({   \n                        type: 'value',\n                        show:false,\n                        gridIndex:index,\n                        min:0,\n                        max:16\n                })\n                this.option.visualMap.push({\n                      type: \"piecewise\",\n                        show: false,\n                        pieces: [\n                            {\n                                gt: 0,\n                                lt: 3.9,\n                                color: \"var(--color-error)\",//大于0小于12为红色\n                            },\n                            {\n                                gt: 10,\n                                color: \"var(--color-warning\",//大于12区间为红色\n                            },{\n                                gt: 3.9,\n                                lt: 10,\n                                color: \"var(--color-primary\",//大于12区间为红色\n                            },\n                        ],\n                })\n                this.option.series.push(  \n                        {\n                        type: 'line',\n                        data:dayList[index][1].value,\n                        xAxisIndex:index,\n                        yAxisIndex:index,\n                        showSymbol: false,\n                        lineStyle: {\n                        width: 1,\n                        },\n                        markLine:{\n                                symbol: 'none',\n                                animation:false,\n                                data:[\n                                    {\n                                        xAxis:xData.length/2-1,\n                                        lineStyle: {\n                                            color: 'var(--color-black-10)',\n                                            width: 1,\n                                            type:'dashed'\n                                        },\n                                        label:{\n                                            show:false\n                                        }\n                                    } ,\n                                    {\n                                        yAxis:3.9,\n                                        lineStyle: {\n                                            width: 0,\n                                        },\n                                        label:{\n                                            show:index==0||index==7?true:false,\n                                            position:'start',\n                                            distance:14,\n                                            fontSize:16,\n                                            color:'#666',\n\n                                        }\n                                    } ,\n                                    {\n                                        yAxis:10,\n                                        lineStyle: {\n                                            width: 0,\n                                        },\n                                        label:{\n                                            show:index==0||index==7?true:false,\n                                            position:'start',\n                                            fontSize:16,\n                                            distance:14,\n                                            color:'#666'\n                                        }\n                                    } ,\n                                ]\n                        },\n                        markArea:{\n                            data:[\n                                [{\n                                    yAxis: 3.9\n                                },\n                                {   \n                                    yAxis: 10\n                                }]\n                            ],\n                            itemStyle:{\n                                color:'rgba(50, 186, 192, 0.08)'\n                            }\n                        }\n                    }\n                )\n            })\n        }\n    },\n    \n    beforeDestroy(){\n        this.$bus.$off('getDatas')\n        this.$bus.$off('getVuexTag')\n    }\n}\n</script>\n<style >\n    .day-box{\n        display: flex;\n        align-items: center;\n        flex-wrap: wrap;\n        position: relative;\n        padding-top:20px;\n    }\n    #day-box .day-item-box{\n        overflow: hidden;\n        padding:0 0 0 90px;\n        width:100%;\n        height:510px;\n        position: absolute;\n        left:0;\n        top:-11px;\n    }\n    #day-box .day-item{\n        position: relative;\n        margin-right:15px;\n        margin-bottom:49px;\n        float: left;\n    }\n    #day-box .day-week{\n        text-align: center;\n        font-size:var(--fontSize-big);\n        color:var(--color-black-80);\n        margin-bottom:10px;\n    }\n    #day-box .day-grid-border{\n        height:120px;\n        border:1px solid #666;\n        border-radius:10px;\n        width:100%;\n    }\n    #day-box .day-main{\n        width:180px;\n        height:120px;\n        position: relative;\n    }\n    #day-box .day-date-tir{\n        width:100%;\n        padding:2px 6px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        position: absolute;\n        left:0;\n        top:0;\n        color:var(--color-black-60);\n        font-size: var(--fontSize-big);\n    }\n    #day-box .day-target{\n        height: 66px;\n        display: flex;\n        flex-direction: column;\n        align-items:center ;\n        justify-content: space-between;\n        position: absolute;\n        top:35px;\n        left:-30px;\n        font-size:var(--fontSize-big);\n        color:var(--color-black-60);\n    }\n    #day-box .chart-box{\n        width:180px;\n        height:120px;\n        border:1px solid var(--color-black-10);\n        border-radius:10px;\n    }\n    #day-box .chart-x{\n        width:130px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        position: absolute;\n        bottom:0;\n        left:-20px;\n        font-size:var(--fontSize-big);\n        color:var(--color-black-40);\n    }\n    #day-box .chart-x-end{\n        width:220px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        position: absolute;\n        bottom:0;\n        left:-20px;\n        font-size:var(--fontSize-big);\n        color:var(--color-black-40);\n    }\n    #day-box .tooltip-box{\n        font-size:var(--fontSize-default);\n        color:var(--color-black-40);\n    }\n    #day-box .tooltips-val{\n        margin-bottom:4px;\n    }\n    #day-box .tooltips-val-num{\n        font-size:var(--fontSize-big);\n        color:var(--color-black-80);\n        padding-right:4px;\n    }\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}