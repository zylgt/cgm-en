{"ast":null,"code":"import { TIRUtils } from \"@/utils/algorithm/TIR\";\nimport { formatDate, formatTime } from '@/utils/formatTime';\nexport default {\n  name: 'TIR',\n  data() {\n    return {\n      levels: [{\n        key: '2 级高血糖',\n        value: 1,\n        color: '#E98C41',\n        desc: '>13.9mmol/L'\n      }, {\n        key: '1 级高血糖',\n        value: 1,\n        color: '#F6C059',\n        desc: '5.1-13.9mmol/L'\n      }, {\n        key: '目标范围内',\n        value: 60,\n        color: '#32BAC0',\n        desc: '3.9~10.0mmol/L'\n      }, {\n        key: '1 级低血糖',\n        value: 30,\n        color: '#F43F31',\n        desc: '3.0~3.8mmol/L'\n      }, {\n        key: '2 级低血糖',\n        value: 0,\n        color: '#96251C',\n        desc: '<3.0mmol/L'\n      }]\n    };\n  },\n  created() {},\n  mounted() {\n    console.log(formatTime(new Date()), '组件渲染完成');\n    this.$bus.$on('getDatas', data => {\n      let result = TIRUtils.getTIRResult(_.map(data[1], 'Value'));\n      this.$store.dispatch('setTir', {\n        key: data[0],\n        value: result\n      }); //处理完数据存vuex\n      this.levels[0].value = Number((result.veryHighRate * 100).toFixed(1));\n      this.levels[1].value = Number((result.highRate * 100).toFixed(1));\n      this.levels[2].value = Number((result.normalRate * 100).toFixed(1));\n      this.levels[3].value = Number((result.lowRate * 100).toFixed(1));\n      this.levels[4].value = Number((result.veryLowRate * 100).toFixed(1));\n      this.levels = _.filter(this.levels, function (e) {\n        return e.value > 0;\n      });\n      this.$nextTick(() => {\n        this.drawTir();\n      });\n    });\n    this.$bus.$on('getVuexTag', data => {\n      console.log(this.$store.state.report.tir[data]);\n      let result = this.$store.state.report.tir[data];\n      this.levels[0].value = Number((result.veryHighRate * 100).toFixed(1));\n      this.levels[1].value = Number((result.highRate * 100).toFixed(1));\n      this.levels[2].value = Number((result.normalRate * 100).toFixed(1));\n      this.levels[3].value = Number((result.lowRate * 100).toFixed(1));\n      this.levels[4].value = Number((result.veryLowRate * 100).toFixed(1));\n      this.levels = _.filter(this.levels, function (e) {\n        return e.value > 0;\n      });\n      this.$nextTick(() => {\n        this.drawTir();\n      });\n    });\n  },\n  methods: {\n    drawTir() {\n      const canvas = document.getElementById(\"myCanvas\");\n      const ctx = canvas.getContext(\"2d\");\n      const W = 160;\n      // const W = this.$refs.tir.offsetWidth*2\n      const H = this.$refs.tir.offsetHeight * 2;\n      canvas.width = W;\n      canvas.height = H;\n      ctx.scale(2, 2);\n      const barW = 40; //柱状图宽度\n      const splitInterval = 1; //间隔距离\n      const lineStart = barW + 5; //标识线x轴起点\n      const lineWidth = 30; //标识线总宽度\n      let start_y = 2; //柱状图y轴起始点 \n      let tir_key_tops = this.$refs.tirInfo; //每段文字说明y轴起点\n      // let tir_key_tops = 11 //每段文字说明y轴起点\n      let noRangeLength = 1; //需要花第2段线的数量\n      console.log(tir_key_tops);\n      for (var i = 0; i < this.levels.length; i++) {\n        let value = Number(this.levels[i].value) * 2.8;\n        // 画柱\n        ctx.fillStyle = this.levels[i].color;\n        ctx.fillRect(0, start_y, barW, value);\n\n        // 画线\n\n        let tir_key_top = null;\n        if (tir_key_tops[i]) tir_key_top = tir_key_tops[i].offsetTop - 42 - 60 + 3;\n        let lineOneX = 0;\n        let lineOneY = 0;\n        let lineTwoX = 0;\n        let lineTwoY = 0;\n        let lineThreeX = 0;\n        let lineThreeY = 0;\n        if (tir_key_top - start_y > 10 && start_y + value - tir_key_top > 10) {\n          lineOneX = lineStart + lineWidth;\n          lineOneY = tir_key_top;\n          lineTwoX = lineOneX;\n          lineTwoY = lineOneY;\n          lineThreeX = lineOneX;\n          lineThreeY = lineOneY;\n          noRangeLength = 1;\n        } else {\n          noRangeLength++;\n          lineOneX = tir_key_top < start_y + value ? lineStart + lineWidth - (lineWidth - noRangeLength * 3) : lineStart + (lineWidth - noRangeLength * 3) - lineWidth / 2;\n          lineOneY = start_y + value / 2;\n          lineTwoX = tir_key_top < start_y + value ? lineStart + lineWidth - (lineWidth - noRangeLength * 3) : lineStart + (lineWidth - noRangeLength * 3) - lineWidth / 2;\n          lineTwoY = tir_key_top;\n          lineThreeX = lineStart + lineWidth;\n          lineThreeY = tir_key_top;\n        }\n        if (value != 0) {\n          ctx.lineWidth = \"1\";\n          ctx.strokeStyle = \"#e5e5e5\";\n          ctx.moveTo(lineStart, lineOneY);\n          ctx.lineTo(lineOneX, lineOneY);\n          ctx.lineTo(lineTwoX, lineTwoY);\n          ctx.lineTo(lineThreeX, lineThreeY);\n          ctx.stroke();\n        }\n        start_y = start_y + value + splitInterval;\n\n        // ctx.lineWidth=\"1\";\n        // ctx.strokeStyle=\"#e5e5e5\";\n        // let  lineTwoX = lineOneX\n        // let  lineTwoY = labelLineIndex>1&&this.levels[i].value<=20?start_y-(value/2)+labelLineIndex*35:lineOneY\n        // this.$nextTick(()=>{\n        //     console.log(i)\n        //         console.log(start_y,this.$refs.tirKey[2].clientTop)\n        //     console.log(start_y,this.$refs.tirKey[i].offsetTop)\n        // })\n\n        // if(value<21){\n        //     labelLineIndex++\n        // }else if(value>30) {\n        //     labelLineIndex = 0\n        // }\n        // let  lineOneX =value>20 ? lineStart+lineWidth : lineStart+(lineWidth-labelLineIndex*3)\n        // let  lineOneY = start_y-(value/2)\n        // let  lineTwoX = lineOneX\n        // let  lineTwoY = labelLineIndex>1&&this.levels[i].value<=20?start_y-(value/2)+labelLineIndex*35:lineOneY\n\n        // if(value<35){\n        //     labelLineIndex++\n        // }else if(value>40) {\n        //     labelLineIndex = 0\n        // }\n        // let  lineOneX =value>30 ? lineStart+lineWidth : lineStart+(lineWidth-labelLineIndex*3)\n        // let  lineOneY = start_y-(value/2)\n        // let  lineTwoX = lineOneX\n        // let  lineTwoY = labelLineIndex>1&&this.levels[i].value<=30?start_y-(value/2)+labelLineIndex*this.levels[i].value-10:lineOneY\n        // if(i>2&&this.levels[i].value<30&&labelLineIndex>1){\n        //     lineTwoY = start_y-(value/2)+labelLineIndex*40\n        // }\n        // let  lineThreeX = lineWidth+lineStart\n        // let  lineThreeY = lineTwoY\n\n        // if(value>0){\n        //     // 标识线\n        //     ctx.lineWidth=\"1\";\n        //     ctx.strokeStyle=\"#e5e5e5\";\n        //     ctx.moveTo(lineStart,start_y-(value/2));\n        //     ctx.lineTo(lineOneX,lineOneY);\n        //     ctx.lineTo(lineTwoX,lineTwoY);\n        //     ctx.lineTo(lineThreeX,lineThreeY);\n        //     ctx.stroke();\n\n        //     // lengeng\n        //     ctx.fillRect(lineThreeX+5,lineThreeY-4,8,8)\n\n        //     // key\n        //     ctx.font=\"16px Arial\";\n        //     ctx.fillStyle = '#333'\n        //     ctx.fillText(this.levels[i].key,lineThreeX+20,lineThreeY+5);\n\n        //     // 目标范围\n        //     ctx.font=\"13px Arial\";\n        //     ctx.fillStyle = '#999'\n        //     ctx.fillText(this.levels[i].desc,lineThreeX+30,lineThreeY+25);\n\n        //     // value值\n        //     const textWidth= ctx.measureText(this.levels[i].key).width;\n        //     ctx.font=\"16px Arial\";\n        //     ctx.fillStyle = '#000'\n        //     ctx.fillText(this.levels[i].value,lineThreeX+40+textWidth,lineThreeY+5);\n\n        //     // 百分号\n        //     const valueWidth= ctx.measureText(this.levels[i].value).width;\n        //     ctx.fillStyle = '#666'\n        //     ctx.fillText('%',lineThreeX+42+textWidth+valueWidth,lineThreeY+5);\n\n        //     // 范围\n        //     const descWidth = ctx.measureText(this.levels[i].desc).width;\n        //     ctx.fillText(this.levels[i].desc,W/2-descWidth-10,lineThreeY+5)\n        // }\n      }\n      this.$nextTick(() => {\n        console.log(formatTime(new Date()), '渲染完成');\n      });\n    }\n  },\n  beforeDestroy() {\n    this.$bus.$off('getDatas');\n    this.$bus.$off('getVuexTag');\n  }\n};","map":{"version":3,"names":["TIRUtils","formatDate","formatTime","name","data","levels","key","value","color","desc","created","mounted","console","log","Date","$bus","$on","result","getTIRResult","_","map","$store","dispatch","Number","veryHighRate","toFixed","highRate","normalRate","lowRate","veryLowRate","filter","e","$nextTick","drawTir","state","report","tir","methods","canvas","document","getElementById","ctx","getContext","W","H","$refs","offsetHeight","width","height","scale","barW","splitInterval","lineStart","lineWidth","start_y","tir_key_tops","tirInfo","noRangeLength","i","length","fillStyle","fillRect","tir_key_top","offsetTop","lineOneX","lineOneY","lineTwoX","lineTwoY","lineThreeX","lineThreeY","strokeStyle","moveTo","lineTo","stroke","beforeDestroy","$off"],"sources":["src/views/components/Chart/TIR.vue"],"sourcesContent":["<template>\n    <!-- <div class='TIR' ref='tir'>\n        <canvas id='myCanvas' ref='canvas' class='canvas' ></canvas>\n    </div> -->\n    <div class='TIR' ref='tir'>\n        <canvas id='myCanvas' ref='canvas' class='canvas' ></canvas>\n        <div class='tir-info' >\n            <div class='tir-key' >\n                <div  v-for='(item,index) in levels'  :key='item.key'>\n                     <div class='tir-key-item' ref='tirInfo'   v-if='item.value!=0'>\n                        <div class='tir-key-box'>\n                            <div class='tir-key-legend' :style='{backgroundColor:item.color}'></div>\n                            <div class='tir-key-desc' >\n                                <div class='tir-key-key' >{{item.key}}</div>\n                                <div class='tir-key-range' >{{item.desc}}</div>\n                            </div>\n                        </div>\n                        <div class='tir-value'   >\n                            <div class='tir-key-key' >{{item.value}}% (--时--分)</div>\n                            <div class='tir-key-range' >目标＜{{item.value}}%</div>\n                        </div>\n                        <div class='tir-all-1' >\n                            <div class='tir-all-line' v-show='index==0'></div>\n                            <div class='tir-all-value'  v-show='index==0'>\n                                <div class='tir-key-key' >1%</div>\n                                <div class='tir-key-range' >目标＜1%</div>\n                            </div>\n                            <div class='tir-all-line' v-show='index==3'></div>\n                            <div class='tir-all-value'  v-show='index==3'>\n                                <div class='tir-key-key' >1%</div>\n                                <div class='tir-key-range' >目标＜1%</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n        </div>\n    </div>\n</template>\n<script>\nimport { TIRUtils } from \"@/utils/algorithm/TIR\";\nimport {formatDate,formatTime} from '@/utils/formatTime'\nexport default {\n    name:'TIR',\n    data(){\n        return{\n            levels: [\n                {key: '2 级高血糖', value:1, color: '#E98C41', desc: '>13.9mmol/L'},\n                {\n                    key: '1 级高血糖',\n                    value: 1,\n                    color: '#F6C059',\n                    desc: '5.1-13.9mmol/L',\n                },\n                {\n                    key: '目标范围内',\n                    value: 60,\n                    color: '#32BAC0',\n                    desc: '3.9~10.0mmol/L',\n                },\n                {key: '1 级低血糖', value: 30, color: '#F43F31', desc: '3.0~3.8mmol/L'},\n                {key: '2 级低血糖', value:0, color: '#96251C', desc: '<3.0mmol/L'},\n            ],\n        }\n    },\n    created(){\n    },\n    mounted(){\n        console.log(formatTime(new Date()),'组件渲染完成')  \n        this.$bus.$on('getDatas',(data)=>{\n            let result = TIRUtils.getTIRResult(_.map(data[1], 'Value'))\n            this.$store.dispatch('setTir',{key:data[0],value:result}) //处理完数据存vuex\n            this.levels[0].value = Number((result.veryHighRate*100).toFixed(1))\n            this.levels[1].value = Number( (result.highRate*100).toFixed(1))\n            this.levels[2].value = Number( (result.normalRate*100).toFixed(1))\n            this.levels[3].value = Number( (result.lowRate*100).toFixed(1))\n            this.levels[4].value = Number( (result.veryLowRate*100).toFixed(1))\n            this.levels = _.filter(this.levels,function(e){return e.value>0})\n            this.$nextTick(()=>{\n                this.drawTir()\n            }) \n        })\n        this.$bus.$on('getVuexTag',(data)=>{\n            console.log(this.$store.state.report.tir[data])\n            let result  = this.$store.state.report.tir[data]\n            this.levels[0].value = Number((result.veryHighRate*100).toFixed(1))\n            this.levels[1].value = Number( (result.highRate*100).toFixed(1))\n            this.levels[2].value = Number( (result.normalRate*100).toFixed(1))\n            this.levels[3].value = Number( (result.lowRate*100).toFixed(1))\n            this.levels[4].value = Number( (result.veryLowRate*100).toFixed(1))\n            this.levels = _.filter(this.levels,function(e){return e.value>0})\n            this.$nextTick(()=>{\n                this.drawTir()\n            })\n           \n        })\n       \n    },\n    methods:{\n        drawTir(){\n           \n            const canvas = document.getElementById(\"myCanvas\");\n            const ctx = canvas.getContext(\"2d\")\n            const W = 160\n            // const W = this.$refs.tir.offsetWidth*2\n            const H = this.$refs.tir.offsetHeight*2\n            canvas.width = W\n            canvas.height = H\n            ctx.scale(2, 2)\n            const barW = 40 //柱状图宽度\n            const splitInterval = 1 //间隔距离\n            const lineStart = barW+5 //标识线x轴起点\n            const lineWidth =30//标识线总宽度\n            let  start_y = 2 //柱状图y轴起始点 \n            let tir_key_tops = this.$refs.tirInfo //每段文字说明y轴起点\n            // let tir_key_tops = 11 //每段文字说明y轴起点\n            let noRangeLength = 1 //需要花第2段线的数量\n            console.log(tir_key_tops)\n            for(var i=0;i<this.levels.length;i++){\n                let value = Number(this.levels[i].value)*2.8\n                // 画柱\n                ctx.fillStyle = this.levels[i].color\n                ctx.fillRect(0,start_y,barW,value)\n\n                // 画线\n               \n                let tir_key_top = null\n                if( tir_key_tops[i]) tir_key_top = tir_key_tops[i].offsetTop-42-60+3\n                let lineOneX = 0\n                let lineOneY = 0\n                let lineTwoX = 0\n                let lineTwoY = 0\n                let lineThreeX = 0\n                let lineThreeY = 0\n                if(tir_key_top-start_y>10&&start_y+value-tir_key_top>10){\n                    lineOneX = lineStart+lineWidth\n                    lineOneY= tir_key_top\n                    lineTwoX =lineOneX\n                    lineTwoY = lineOneY\n                    lineThreeX = lineOneX\n                    lineThreeY = lineOneY\n                    noRangeLength = 1\n                }else{\n                    noRangeLength++\n                    lineOneX = tir_key_top<start_y+value?lineStart+lineWidth-(lineWidth-noRangeLength*3):lineStart+(lineWidth-noRangeLength*3)-lineWidth/2\n                    lineOneY= start_y +(value/2)\n                    lineTwoX =  tir_key_top<start_y+value?lineStart+lineWidth-(lineWidth-noRangeLength*3):lineStart+(lineWidth-noRangeLength*3)-lineWidth/2\n                    lineTwoY = tir_key_top\n                    lineThreeX = lineStart+lineWidth\n                    lineThreeY = tir_key_top\n                }\n                if(value!=0){\n                    ctx.lineWidth=\"1\";\n                    ctx.strokeStyle=\"#e5e5e5\";\n                    ctx.moveTo(lineStart,lineOneY);\n                    ctx.lineTo(lineOneX,lineOneY);\n                    ctx.lineTo(lineTwoX,lineTwoY);\n                    ctx.lineTo(lineThreeX,lineThreeY);\n                    ctx.stroke();\n                }\n               \n                start_y = start_y + value + splitInterval\n\n                // ctx.lineWidth=\"1\";\n                // ctx.strokeStyle=\"#e5e5e5\";\n                // let  lineTwoX = lineOneX\n                // let  lineTwoY = labelLineIndex>1&&this.levels[i].value<=20?start_y-(value/2)+labelLineIndex*35:lineOneY\n                // this.$nextTick(()=>{\n                //     console.log(i)\n                //         console.log(start_y,this.$refs.tirKey[2].clientTop)\n                //     console.log(start_y,this.$refs.tirKey[i].offsetTop)\n                // })\n                \n                // if(value<21){\n                //     labelLineIndex++\n                // }else if(value>30) {\n                //     labelLineIndex = 0\n                // }\n                // let  lineOneX =value>20 ? lineStart+lineWidth : lineStart+(lineWidth-labelLineIndex*3)\n                // let  lineOneY = start_y-(value/2)\n                // let  lineTwoX = lineOneX\n                // let  lineTwoY = labelLineIndex>1&&this.levels[i].value<=20?start_y-(value/2)+labelLineIndex*35:lineOneY\n\n                // if(value<35){\n                //     labelLineIndex++\n                // }else if(value>40) {\n                //     labelLineIndex = 0\n                // }\n                // let  lineOneX =value>30 ? lineStart+lineWidth : lineStart+(lineWidth-labelLineIndex*3)\n                // let  lineOneY = start_y-(value/2)\n                // let  lineTwoX = lineOneX\n                // let  lineTwoY = labelLineIndex>1&&this.levels[i].value<=30?start_y-(value/2)+labelLineIndex*this.levels[i].value-10:lineOneY\n                // if(i>2&&this.levels[i].value<30&&labelLineIndex>1){\n                //     lineTwoY = start_y-(value/2)+labelLineIndex*40\n                // }\n                // let  lineThreeX = lineWidth+lineStart\n                // let  lineThreeY = lineTwoY\n                \n                // if(value>0){\n                //     // 标识线\n                //     ctx.lineWidth=\"1\";\n                //     ctx.strokeStyle=\"#e5e5e5\";\n                //     ctx.moveTo(lineStart,start_y-(value/2));\n                //     ctx.lineTo(lineOneX,lineOneY);\n                //     ctx.lineTo(lineTwoX,lineTwoY);\n                //     ctx.lineTo(lineThreeX,lineThreeY);\n                //     ctx.stroke();\n\n                //     // lengeng\n                //     ctx.fillRect(lineThreeX+5,lineThreeY-4,8,8)\n                    \n                //     // key\n                //     ctx.font=\"16px Arial\";\n                //     ctx.fillStyle = '#333'\n                //     ctx.fillText(this.levels[i].key,lineThreeX+20,lineThreeY+5);\n\n                //     // 目标范围\n                //     ctx.font=\"13px Arial\";\n                //     ctx.fillStyle = '#999'\n                //     ctx.fillText(this.levels[i].desc,lineThreeX+30,lineThreeY+25);\n\n\n\n                //     // value值\n                //     const textWidth= ctx.measureText(this.levels[i].key).width;\n                //     ctx.font=\"16px Arial\";\n                //     ctx.fillStyle = '#000'\n                //     ctx.fillText(this.levels[i].value,lineThreeX+40+textWidth,lineThreeY+5);\n\n                //     // 百分号\n                //     const valueWidth= ctx.measureText(this.levels[i].value).width;\n                //     ctx.fillStyle = '#666'\n                //     ctx.fillText('%',lineThreeX+42+textWidth+valueWidth,lineThreeY+5);\n\n                //     // 范围\n                //     const descWidth = ctx.measureText(this.levels[i].desc).width;\n                //     ctx.fillText(this.levels[i].desc,W/2-descWidth-10,lineThreeY+5)\n                // }\n                \n            }\n           this.$nextTick(()=>{\n                console.log(formatTime(new Date()),'渲染完成')\n            })\n        },\n    },\n    beforeDestroy(){\n        this.$bus.$off('getDatas')\n        this.$bus.$off('getVuexTag')\n    }\n}\n</script>\n<style scoped>\n    .TIR{\n        height:300px;\n        display: flex;\n    }\n    .canvas{\n        width:80px;\n        height:300px;\n    }\n    .tir-info{\n        flex-grow: 1;\n        display: flex;\n    }\n    .tir-key{\n        width:100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n    }\n    .tir-key-item{\n        width:100%;\n        height:42px;\n        /* margin-bottom:20px; */\n        display: flex;\n        justify-content: space-between;\n    }\n    .tir-key-box{\n        display: flex;\n        align-items:baseline;\n    }\n    .tir-key-legend{\n        width:7px;\n        height:7px;\n        margin-right:10px;\n    }\n    .tir-key-item:last-child{\n        margin:0;\n    }\n    .tir-key-key{\n        font-size:var(--fontSize-big);\n        color:var(--color-black-80);\n        line-height: 22px;\n    }\n    .tir-key-range{\n        font-size:var(--fontSize-small);\n        color:var(--color-black-40);\n        line-height: 18px;\n    }\n    .tir-all-1{\n        height:50px;\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n        margin-top:21px;\n        width:140px;\n    } \n    .tir-all-line{\n        width:60px;\n        height:50px;\n        border-top-right-radius: 10px;\n        border-bottom-right-radius: 10px;\n        border:1px solid var(--color-black-10);\n        border-left:none;\n        margin-right:10px;\n    }\n    .tir-all-value{\n        width:60px;\n    }\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}