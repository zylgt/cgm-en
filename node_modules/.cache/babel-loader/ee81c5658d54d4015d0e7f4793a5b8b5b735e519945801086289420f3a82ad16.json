{"ast":null,"code":"import { Message } from \"element-ui\";\nvar socket = null; //实例对象\nvar lockReconnect = false; //是否真正建立连接\nvar timeoutnum = null; //断开重连倒计时\nvar port = [8971, 8972, 8973, 8974, 8975, 8976, 8977, 8978, 8979, 8980]; //端口号\nvar repeat = 0; //重连次数\n\nconst initwebSocket = async () => {\n  if (\"WebSocket\" in window) {\n    var wsUrl = 'ws://ivd.cgm3.com:' + port[repeat] + '/uploader';\n    console.log(wsUrl, '连接地址');\n    socket = new WebSocket(wsUrl);\n    socket.onerror = webSocketOnError;\n    socket.onmessage = webSocketOnMessage;\n    socket.onclose = closeWebsocket;\n    socket.onopen = openWebsocket;\n  } else {\n    Message.error({\n      showClose: true,\n      message: '您的浏览器不支持websocket，请更换Chrome或者Firefox'\n    });\n  }\n};\n\n//建立连接\nconst openWebsocket = e => {};\n// 重新连接\nconst reconnect = () => {\n  if (lockReconnect) {\n    return;\n  }\n  if (repeat >= 9) {\n    socket.close();\n    return;\n  }\n  repeat++;\n  initwebSocket();\n};\nconst sendWebsocket = e => {\n  // socket.send(`我发消息了`);\n};\nconst webSocketOnError = e => {\n  reconnect();\n};\nconst closeWebsocket = e => {\n  console.log('关闭通信');\n};\n//断开连接\nconst close = () => {\n  //WebSocket对象也有发送和关闭的两个方法，只需要在自定义方法中分别调用send()和close()即可实现。\n  socket.close();\n};\nexport default {\n  initwebSocket\n};","map":{"version":3,"names":["Message","socket","lockReconnect","timeoutnum","port","repeat","initwebSocket","window","wsUrl","console","log","WebSocket","onerror","webSocketOnError","onmessage","webSocketOnMessage","onclose","closeWebsocket","onopen","openWebsocket","error","showClose","message","e","reconnect","close","sendWebsocket"],"sources":["/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/src/utils/webSocket.js"],"sourcesContent":["\nimport { Message } from \"element-ui\";\nvar socket = null; //实例对象\nvar lockReconnect = false; //是否真正建立连接\nvar timeoutnum = null; //断开重连倒计时\nvar port = [8971,8972,8973,8974,8975,8976,8977,8978,8979,8980]; //端口号\nvar repeat = 0; //重连次数\n\nconst initwebSocket = async()=>{\n    if(\"WebSocket\" in window){\n        var wsUrl = 'ws://ivd.cgm3.com:'+port[repeat]+'/uploader'\n        console.log(wsUrl,'连接地址')\n        socket = new WebSocket(wsUrl);\n        socket.onerror = webSocketOnError;\n        socket.onmessage = webSocketOnMessage;\n        socket.onclose = closeWebsocket;\n        socket.onopen = openWebsocket;\n    }else{\n        Message.error({\n            showClose: true,\n            message: '您的浏览器不支持websocket，请更换Chrome或者Firefox'\n        });\n    }\n}\n\n\n//建立连接\nconst openWebsocket = (e) => {\n   \n}\n// 重新连接\nconst reconnect = () =>{\n    if(lockReconnect){\n        return ;\n    }\n    if(repeat>=9){\n        socket.close();\n        return ;\n    }\n    repeat++\n\n    initwebSocket()\n}\n\n\nconst sendWebsocket =(e) =>{\n    // socket.send(`我发消息了`);\n  }\n   \nconst webSocketOnError =(e) => {\n\n    reconnect();\n    \n}  \n\nconst closeWebsocket=(e) => {\n    console.log('关闭通信')\n} \n//断开连接\nconst close =() => {\n    //WebSocket对象也有发送和关闭的两个方法，只需要在自定义方法中分别调用send()和close()即可实现。\n      socket.close();\n}    \n\nexport default{initwebSocket}"],"mappings":"AACA,SAASA,OAAO,QAAQ,YAAY;AACpC,IAAIC,MAAM,GAAG,IAAI,CAAC,CAAC;AACnB,IAAIC,aAAa,GAAG,KAAK,CAAC,CAAC;AAC3B,IAAIC,UAAU,GAAG,IAAI,CAAC,CAAC;AACvB,IAAIC,IAAI,GAAG,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC,CAAC,CAAC;AAChE,IAAIC,MAAM,GAAG,CAAC,CAAC,CAAC;;AAEhB,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAS;EAC3B,IAAG,WAAW,IAAIC,MAAM,EAAC;IACrB,IAAIC,KAAK,GAAG,oBAAoB,GAACJ,IAAI,CAACC,MAAM,CAAC,GAAC,WAAW;IACzDI,OAAO,CAACC,GAAG,CAACF,KAAK,EAAC,MAAM,CAAC;IACzBP,MAAM,GAAG,IAAIU,SAAS,CAACH,KAAK,CAAC;IAC7BP,MAAM,CAACW,OAAO,GAAGC,gBAAgB;IACjCZ,MAAM,CAACa,SAAS,GAAGC,kBAAkB;IACrCd,MAAM,CAACe,OAAO,GAAGC,cAAc;IAC/BhB,MAAM,CAACiB,MAAM,GAAGC,aAAa;EACjC,CAAC,MAAI;IACDnB,OAAO,CAACoB,KAAK,CAAC;MACVC,SAAS,EAAE,IAAI;MACfC,OAAO,EAAE;IACb,CAAC,CAAC;EACN;AACJ,CAAC;;AAGD;AACA,MAAMH,aAAa,GAAII,CAAC,IAAK,CAE7B,CAAC;AACD;AACA,MAAMC,SAAS,GAAGA,CAAA,KAAK;EACnB,IAAGtB,aAAa,EAAC;IACb;EACJ;EACA,IAAGG,MAAM,IAAE,CAAC,EAAC;IACTJ,MAAM,CAACwB,KAAK,CAAC,CAAC;IACd;EACJ;EACApB,MAAM,EAAE;EAERC,aAAa,CAAC,CAAC;AACnB,CAAC;AAGD,MAAMoB,aAAa,GAAGH,CAAC,IAAI;EACvB;AAAA,CACD;AAEH,MAAMV,gBAAgB,GAAGU,CAAC,IAAK;EAE3BC,SAAS,CAAC,CAAC;AAEf,CAAC;AAED,MAAMP,cAAc,GAAEM,CAAC,IAAK;EACxBd,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;AACvB,CAAC;AACD;AACA,MAAMe,KAAK,GAAEA,CAAA,KAAM;EACf;EACExB,MAAM,CAACwB,KAAK,CAAC,CAAC;AACpB,CAAC;AAED,eAAc;EAACnB;AAAa,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}