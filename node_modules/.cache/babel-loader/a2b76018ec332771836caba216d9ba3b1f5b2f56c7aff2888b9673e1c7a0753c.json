{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.interpolateFunction = exports.stringifyFunction = exports.createFunction = void 0;\n/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nconst createdFunctions = new Map();\n/**\n * Creates a function from a string.\n *\n * @internal\n */\nconst createFunction = functionValue => {\n  let fn = createdFunctions.get(functionValue);\n  if (fn) {\n    return fn;\n  }\n  fn = new Function(`return ${functionValue}`)();\n  createdFunctions.set(functionValue, fn);\n  return fn;\n};\nexports.createFunction = createFunction;\n/**\n * @internal\n */\nfunction stringifyFunction(fn) {\n  let value = fn.toString();\n  try {\n    new Function(`(${value})`);\n  } catch (err) {\n    if (err.message.includes(`Refused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of script in the following Content Security Policy directive`)) {\n      // The content security policy does not allow Function eval. Let's\n      // assume the value might be valid as is.\n      return value;\n    }\n    // This means we might have a function shorthand (e.g. `test(){}`). Let's\n    // try prefixing.\n    let prefix = 'function ';\n    if (value.startsWith('async ')) {\n      prefix = `async ${prefix}`;\n      value = value.substring('async '.length);\n    }\n    value = `${prefix}${value}`;\n    try {\n      new Function(`(${value})`);\n    } catch {\n      // We tried hard to serialize, but there's a weird beast here.\n      throw new Error('Passed function cannot be serialized!');\n    }\n  }\n  return value;\n}\nexports.stringifyFunction = stringifyFunction;\n/**\n * Replaces `PLACEHOLDER`s with the given replacements.\n *\n * All replacements must be valid JS code.\n *\n * @example\n *\n * ```ts\n * interpolateFunction(() => PLACEHOLDER('test'), {test: 'void 0'});\n * // Equivalent to () => void 0\n * ```\n *\n * @internal\n */\nconst interpolateFunction = (fn, replacements) => {\n  let value = stringifyFunction(fn);\n  for (const [name, jsValue] of Object.entries(replacements)) {\n    value = value.replace(new RegExp(`PLACEHOLDER\\\\(\\\\s*(?:'${name}'|\"${name}\")\\\\s*\\\\)`, 'g'),\n    // Wrapping this ensures tersers that accidentally inline PLACEHOLDER calls\n    // are still valid. Without, we may get calls like ()=>{...}() which is\n    // not valid.\n    `(${jsValue})`);\n  }\n  return (0, exports.createFunction)(value);\n};\nexports.interpolateFunction = interpolateFunction;","map":{"version":3,"names":["createdFunctions","Map","createFunction","functionValue","fn","get","Function","set","exports","stringifyFunction","value","toString","err","message","includes","prefix","startsWith","substring","length","Error","interpolateFunction","replacements","name","jsValue","Object","entries","replace","RegExp"],"sources":["../../../../src/util/Function.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA;;;;;AAKA,MAAMA,gBAAgB,GAAG,IAAIC,GAAG,EAA2C;AAE3E;;;;;AAKO,MAAMC,cAAc,GACzBC,aAAqB,IACgB;EACrC,IAAIC,EAAE,GAAGJ,gBAAgB,CAACK,GAAG,CAACF,aAAa,CAAC;EAC5C,IAAIC,EAAE,EAAE;IACN,OAAOA,EAAE;EACX;EACAA,EAAE,GAAG,IAAIE,QAAQ,CAAC,UAAUH,aAAa,EAAE,CAAC,EAEhC;EACZH,gBAAgB,CAACO,GAAG,CAACJ,aAAa,EAAEC,EAAE,CAAC;EACvC,OAAOA,EAAE;AACX,CAAC;AAZYI,OAAA,CAAAN,cAAc,GAAAA,cAAA;AAc3B;;;AAGA,SAAgBO,iBAAiBA,CAACL,EAA+B;EAC/D,IAAIM,KAAK,GAAGN,EAAE,CAACO,QAAQ,EAAE;EACzB,IAAI;IACF,IAAIL,QAAQ,CAAC,IAAII,KAAK,GAAG,CAAC;EAC5B,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZ,IACGA,GAAa,CAACC,OAAO,CAACC,QAAQ,CAC7B,wJAAwJ,CACzJ,EACD;MACA;MACA;MACA,OAAOJ,KAAK;IACd;IACA;IACA;IACA,IAAIK,MAAM,GAAG,WAAW;IACxB,IAAIL,KAAK,CAACM,UAAU,CAAC,QAAQ,CAAC,EAAE;MAC9BD,MAAM,GAAG,SAASA,MAAM,EAAE;MAC1BL,KAAK,GAAGA,KAAK,CAACO,SAAS,CAAC,QAAQ,CAACC,MAAM,CAAC;IAC1C;IACAR,KAAK,GAAG,GAAGK,MAAM,GAAGL,KAAK,EAAE;IAC3B,IAAI;MACF,IAAIJ,QAAQ,CAAC,IAAII,KAAK,GAAG,CAAC;IAC5B,CAAC,CAAC,MAAM;MACN;MACA,MAAM,IAAIS,KAAK,CAAC,uCAAuC,CAAC;IAC1D;EACF;EACA,OAAOT,KAAK;AACd;AA9BAF,OAAA,CAAAC,iBAAA,GAAAA,iBAAA;AAgCA;;;;;;;;;;;;;;AAcO,MAAMW,mBAAmB,GAAGA,CACjChB,EAAK,EACLiB,YAAoC,KAC/B;EACL,IAAIX,KAAK,GAAGD,iBAAiB,CAACL,EAAE,CAAC;EACjC,KAAK,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACJ,YAAY,CAAC,EAAE;IAC1DX,KAAK,GAAGA,KAAK,CAACgB,OAAO,CACnB,IAAIC,MAAM,CAAC,yBAAyBL,IAAI,MAAMA,IAAI,WAAW,EAAE,GAAG,CAAC;IACnE;IACA;IACA;IACA,IAAIC,OAAO,GAAG,CACf;EACH;EACA,OAAO,IAAAf,OAAA,CAAAN,cAAc,EAACQ,KAAK,CAAiB;AAC9C,CAAC;AAfYF,OAAA,CAAAY,mBAAmB,GAAAA,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}