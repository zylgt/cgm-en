{"ast":null,"code":"import { TIRUtils } from \"@/utils/algorithm/TIR\";\nimport { formatDate, formatTime } from '@/utils/formatTime';\nexport default {\n  name: 'TIR',\n  data() {\n    return {\n      levels: [{\n        key: '2 级高血糖',\n        value: 1,\n        color: '#E98C41',\n        desc: '>13.9mmol/L'\n      }, {\n        key: '1 级高血糖',\n        value: 1,\n        color: '#F6C059',\n        desc: '5.1-13.9mmol/L'\n      }, {\n        key: '目标范围内',\n        value: 60,\n        color: '#32BAC0',\n        desc: '3.9~10.0mmol/L'\n      }, {\n        key: '1 级低血糖',\n        value: 30,\n        color: '#F43F31',\n        desc: '3.0~3.8mmol/L'\n      }, {\n        key: '2 级低血糖',\n        value: 2,\n        color: '#96251C',\n        desc: '<3.0mmol/L'\n      }]\n    };\n  },\n  created() {},\n  mounted() {\n    console.log(formatTime(new Date()), '组件渲染完成');\n    this.drawTir();\n    this.$bus.$on('getData', data => {\n      console.log(formatTime(new Date()));\n      // let result = TIRUtils.getTIRResult(_.map(data, 'Value'))\n      // this.levels[0].value = result.veryHighRate*100\n      // this.levels[1].value = result.highRate*100\n      // this.levels[2].value = result.normalRate*100\n      // this.levels[3].value = result.lowRate*100\n      // this.levels[4].value = result.veryLowRate*100\n      // this.drawTir()\n    });\n  },\n  methods: {\n    drawTir() {\n      const canvas = document.getElementById(\"myCanvas\");\n      const ctx = canvas.getContext(\"2d\");\n      const W = 160;\n      // const W = this.$refs.tir.offsetWidth*2\n      const H = this.$refs.tir.offsetHeight * 2;\n      canvas.width = W;\n      canvas.height = H;\n      ctx.scale(2, 2);\n      const barW = 40; //柱状图宽度\n      const splitInterval = 1; //间隔距离\n      const lineStart = barW + 5; //标识线x轴起点\n      const lineWidth = 30; //标识线总宽度\n      let start_y = 2; //柱状图y轴起始点 \n      const tir_key_tops = 11; //文字说明y轴起点\n      let noRangeLength = 1; //需要花第2段线的数量\n      for (var i = 0; i < this.levels.length; i++) {\n        let value = Number(this.levels[i].value) * 2.8;\n        // 画柱\n        ctx.fillStyle = this.levels[i].color;\n        ctx.fillRect(0, start_y, barW, value);\n\n        // 画线\n        let tir_key_top = tir_key_tops + i * 63;\n        let lineOneX = 0;\n        let lineOneY = 0;\n        let lineTwoX = 0;\n        let lineTwoY = 0;\n        let lineThreeX = 0;\n        let lineThreeY = 0;\n        if (tir_key_top - start_y > 10 && start_y + value - tir_key_top > 10) {\n          lineOneX = lineStart + lineWidth;\n          lineOneY = tir_key_top;\n          lineTwoX = lineOneX;\n          lineTwoY = lineOneY;\n          lineThreeX = lineOneX;\n          lineThreeY = lineOneY;\n          noRangeLength = 1;\n        } else {\n          noRangeLength++;\n          lineOneX = tir_key_top < start_y + value ? lineStart + lineWidth - (lineWidth - noRangeLength * 3) : lineStart + (lineWidth - noRangeLength * 3) - lineWidth / 2;\n          lineOneY = start_y + value / 2;\n          lineTwoX = tir_key_top < start_y + value ? lineStart + lineWidth - (lineWidth - noRangeLength * 3) : lineStart + (lineWidth - noRangeLength * 3) - lineWidth / 2;\n          lineTwoY = tir_key_top;\n          lineThreeX = lineStart + lineWidth;\n          lineThreeY = tir_key_top;\n        }\n        console.log(start_y, tir_key_top, start_y + value);\n        ctx.lineWidth = \"1\";\n        ctx.strokeStyle = \"#e5e5e5\";\n        ctx.moveTo(lineStart, lineOneY);\n        ctx.lineTo(lineOneX, lineOneY);\n        ctx.lineTo(lineTwoX, lineTwoY);\n        ctx.lineTo(lineThreeX, lineThreeY);\n        ctx.stroke();\n        start_y = start_y + value + splitInterval;\n\n        // ctx.lineWidth=\"1\";\n        // ctx.strokeStyle=\"#e5e5e5\";\n        // let  lineTwoX = lineOneX\n        // let  lineTwoY = labelLineIndex>1&&this.levels[i].value<=20?start_y-(value/2)+labelLineIndex*35:lineOneY\n        // this.$nextTick(()=>{\n        //     console.log(i)\n        //         console.log(start_y,this.$refs.tirKey[2].clientTop)\n        //     console.log(start_y,this.$refs.tirKey[i].offsetTop)\n        // })\n\n        // if(value<21){\n        //     labelLineIndex++\n        // }else if(value>30) {\n        //     labelLineIndex = 0\n        // }\n        // let  lineOneX =value>20 ? lineStart+lineWidth : lineStart+(lineWidth-labelLineIndex*3)\n        // let  lineOneY = start_y-(value/2)\n        // let  lineTwoX = lineOneX\n        // let  lineTwoY = labelLineIndex>1&&this.levels[i].value<=20?start_y-(value/2)+labelLineIndex*35:lineOneY\n\n        // if(value<35){\n        //     labelLineIndex++\n        // }else if(value>40) {\n        //     labelLineIndex = 0\n        // }\n        // let  lineOneX =value>30 ? lineStart+lineWidth : lineStart+(lineWidth-labelLineIndex*3)\n        // let  lineOneY = start_y-(value/2)\n        // let  lineTwoX = lineOneX\n        // let  lineTwoY = labelLineIndex>1&&this.levels[i].value<=30?start_y-(value/2)+labelLineIndex*this.levels[i].value-10:lineOneY\n        // if(i>2&&this.levels[i].value<30&&labelLineIndex>1){\n        //     lineTwoY = start_y-(value/2)+labelLineIndex*40\n        // }\n        // let  lineThreeX = lineWidth+lineStart\n        // let  lineThreeY = lineTwoY\n\n        // if(value>0){\n        //     // 标识线\n        //     ctx.lineWidth=\"1\";\n        //     ctx.strokeStyle=\"#e5e5e5\";\n        //     ctx.moveTo(lineStart,start_y-(value/2));\n        //     ctx.lineTo(lineOneX,lineOneY);\n        //     ctx.lineTo(lineTwoX,lineTwoY);\n        //     ctx.lineTo(lineThreeX,lineThreeY);\n        //     ctx.stroke();\n\n        //     // lengeng\n        //     ctx.fillRect(lineThreeX+5,lineThreeY-4,8,8)\n\n        //     // key\n        //     ctx.font=\"16px Arial\";\n        //     ctx.fillStyle = '#333'\n        //     ctx.fillText(this.levels[i].key,lineThreeX+20,lineThreeY+5);\n\n        //     // 目标范围\n        //     ctx.font=\"13px Arial\";\n        //     ctx.fillStyle = '#999'\n        //     ctx.fillText(this.levels[i].desc,lineThreeX+30,lineThreeY+25);\n\n        //     // value值\n        //     const textWidth= ctx.measureText(this.levels[i].key).width;\n        //     ctx.font=\"16px Arial\";\n        //     ctx.fillStyle = '#000'\n        //     ctx.fillText(this.levels[i].value,lineThreeX+40+textWidth,lineThreeY+5);\n\n        //     // 百分号\n        //     const valueWidth= ctx.measureText(this.levels[i].value).width;\n        //     ctx.fillStyle = '#666'\n        //     ctx.fillText('%',lineThreeX+42+textWidth+valueWidth,lineThreeY+5);\n\n        //     // 范围\n        //     const descWidth = ctx.measureText(this.levels[i].desc).width;\n        //     ctx.fillText(this.levels[i].desc,W/2-descWidth-10,lineThreeY+5)\n        // }\n      }\n      this.$nextTick(() => {\n        console.log(formatTime(new Date()), '渲染完成');\n      });\n    }\n  },\n  beforeDestroy() {\n    this.$bus.$off('getData');\n  }\n};","map":{"version":3,"names":["TIRUtils","formatDate","formatTime","name","data","levels","key","value","color","desc","created","mounted","console","log","Date","drawTir","$bus","$on","methods","canvas","document","getElementById","ctx","getContext","W","H","$refs","tir","offsetHeight","width","height","scale","barW","splitInterval","lineStart","lineWidth","start_y","tir_key_tops","noRangeLength","i","length","Number","fillStyle","fillRect","tir_key_top","lineOneX","lineOneY","lineTwoX","lineTwoY","lineThreeX","lineThreeY","strokeStyle","moveTo","lineTo","stroke","$nextTick","beforeDestroy","$off"],"sources":["src/views/components/Chart/TIR.vue"],"sourcesContent":["<template>\n    <!-- <div class='TIR' ref='tir'>\n        <canvas id='myCanvas' ref='canvas' class='canvas' ></canvas>\n    </div> -->\n    <div class='TIR' ref='tir'>\n        <canvas id='myCanvas' ref='canvas' class='canvas' ></canvas>\n        <div class='tir-info' >\n            <div class='tir-key' >\n                <div class='tir-key-item'  v-for='(item) in levels'  :key='item.key'>\n                    <div class='tir-key-box'>\n                        <div class='tir-key-legend' :style='{backgroundColor:item.color}'></div>\n                        <div class='tir-key-desc' >\n                            <div class='tir-key-key' >{{item.key}}</div>\n                            <div class='tir-key-range' >{{item.desc}}</div>\n                        </div>\n                    </div>\n                    <div class='tir-value' >\n                        <div class='tir-key-key' >{{item.value}}%</div>\n                        <div class='tir-key-range' >目标＜{{item.value}}%</div>\n                    </div>\n                    <div class='tir-all' >\n                        <div></div>\n                        <div></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport { TIRUtils } from \"@/utils/algorithm/TIR\";\nimport {formatDate,formatTime} from '@/utils/formatTime'\nexport default {\n    name:'TIR',\n    data(){\n        return{\n            levels: [\n                {key: '2 级高血糖', value:1, color: '#E98C41', desc: '>13.9mmol/L'},\n                {\n                    key: '1 级高血糖',\n                    value: 1,\n                    color: '#F6C059',\n                    desc: '5.1-13.9mmol/L',\n                },\n                {\n                    key: '目标范围内',\n                    value: 60,\n                    color: '#32BAC0',\n                    desc: '3.9~10.0mmol/L',\n                },\n                {key: '1 级低血糖', value: 30, color: '#F43F31', desc: '3.0~3.8mmol/L'},\n                {key: '2 级低血糖', value:2, color: '#96251C', desc: '<3.0mmol/L'},\n            ],\n        }\n    },\n    created(){\n    },\n    mounted(){\n        console.log(formatTime(new Date()),'组件渲染完成')  \n        this.drawTir()\n        this.$bus.$on('getData',(data)=>{\n            console.log(formatTime(new Date()))\n            // let result = TIRUtils.getTIRResult(_.map(data, 'Value'))\n            // this.levels[0].value = result.veryHighRate*100\n            // this.levels[1].value = result.highRate*100\n            // this.levels[2].value = result.normalRate*100\n            // this.levels[3].value = result.lowRate*100\n            // this.levels[4].value = result.veryLowRate*100\n            // this.drawTir()\n        })\n    },\n    methods:{\n        drawTir(){\n           \n            const canvas = document.getElementById(\"myCanvas\");\n            const ctx = canvas.getContext(\"2d\")\n            const W = 160\n            // const W = this.$refs.tir.offsetWidth*2\n            const H = this.$refs.tir.offsetHeight*2\n            canvas.width = W\n            canvas.height = H\n            ctx.scale(2, 2)\n            const barW = 40 //柱状图宽度\n            const splitInterval = 1 //间隔距离\n            const lineStart = barW+5 //标识线x轴起点\n            const lineWidth =30//标识线总宽度\n            let  start_y = 2 //柱状图y轴起始点 \n            const tir_key_tops = 11 //文字说明y轴起点\n            let noRangeLength = 1 //需要花第2段线的数量\n            for(var i=0;i<this.levels.length;i++){\n                let value = Number(this.levels[i].value)*2.8\n                // 画柱\n                ctx.fillStyle = this.levels[i].color\n                ctx.fillRect(0,start_y,barW,value)\n\n                // 画线\n                let tir_key_top = tir_key_tops+(i*63)\n                let lineOneX = 0\n                let lineOneY = 0\n                let lineTwoX = 0\n                let lineTwoY = 0\n                let lineThreeX = 0\n                let lineThreeY = 0\n                if(tir_key_top-start_y>10&&start_y+value-tir_key_top>10){\n                    lineOneX = lineStart+lineWidth\n                    lineOneY= tir_key_top\n                    lineTwoX =lineOneX\n                    lineTwoY = lineOneY\n                    lineThreeX = lineOneX\n                    lineThreeY = lineOneY\n                    noRangeLength = 1\n                }else{\n                    noRangeLength++\n                    lineOneX = tir_key_top<start_y+value?lineStart+lineWidth-(lineWidth-noRangeLength*3):lineStart+(lineWidth-noRangeLength*3)-lineWidth/2\n                    lineOneY= start_y +(value/2)\n                    lineTwoX =  tir_key_top<start_y+value?lineStart+lineWidth-(lineWidth-noRangeLength*3):lineStart+(lineWidth-noRangeLength*3)-lineWidth/2\n                    lineTwoY = tir_key_top\n                    lineThreeX = lineStart+lineWidth\n                    lineThreeY = tir_key_top\n                }\n                console.log(start_y,tir_key_top,start_y + value)\n                ctx.lineWidth=\"1\";\n                ctx.strokeStyle=\"#e5e5e5\";\n                ctx.moveTo(lineStart,lineOneY);\n                ctx.lineTo(lineOneX,lineOneY);\n                ctx.lineTo(lineTwoX,lineTwoY);\n                ctx.lineTo(lineThreeX,lineThreeY);\n                ctx.stroke();\n                start_y = start_y + value + splitInterval\n\n                // ctx.lineWidth=\"1\";\n                // ctx.strokeStyle=\"#e5e5e5\";\n                // let  lineTwoX = lineOneX\n                // let  lineTwoY = labelLineIndex>1&&this.levels[i].value<=20?start_y-(value/2)+labelLineIndex*35:lineOneY\n                // this.$nextTick(()=>{\n                //     console.log(i)\n                //         console.log(start_y,this.$refs.tirKey[2].clientTop)\n                //     console.log(start_y,this.$refs.tirKey[i].offsetTop)\n                // })\n                \n                // if(value<21){\n                //     labelLineIndex++\n                // }else if(value>30) {\n                //     labelLineIndex = 0\n                // }\n                // let  lineOneX =value>20 ? lineStart+lineWidth : lineStart+(lineWidth-labelLineIndex*3)\n                // let  lineOneY = start_y-(value/2)\n                // let  lineTwoX = lineOneX\n                // let  lineTwoY = labelLineIndex>1&&this.levels[i].value<=20?start_y-(value/2)+labelLineIndex*35:lineOneY\n\n                // if(value<35){\n                //     labelLineIndex++\n                // }else if(value>40) {\n                //     labelLineIndex = 0\n                // }\n                // let  lineOneX =value>30 ? lineStart+lineWidth : lineStart+(lineWidth-labelLineIndex*3)\n                // let  lineOneY = start_y-(value/2)\n                // let  lineTwoX = lineOneX\n                // let  lineTwoY = labelLineIndex>1&&this.levels[i].value<=30?start_y-(value/2)+labelLineIndex*this.levels[i].value-10:lineOneY\n                // if(i>2&&this.levels[i].value<30&&labelLineIndex>1){\n                //     lineTwoY = start_y-(value/2)+labelLineIndex*40\n                // }\n                // let  lineThreeX = lineWidth+lineStart\n                // let  lineThreeY = lineTwoY\n                \n                // if(value>0){\n                //     // 标识线\n                //     ctx.lineWidth=\"1\";\n                //     ctx.strokeStyle=\"#e5e5e5\";\n                //     ctx.moveTo(lineStart,start_y-(value/2));\n                //     ctx.lineTo(lineOneX,lineOneY);\n                //     ctx.lineTo(lineTwoX,lineTwoY);\n                //     ctx.lineTo(lineThreeX,lineThreeY);\n                //     ctx.stroke();\n\n                //     // lengeng\n                //     ctx.fillRect(lineThreeX+5,lineThreeY-4,8,8)\n                    \n                //     // key\n                //     ctx.font=\"16px Arial\";\n                //     ctx.fillStyle = '#333'\n                //     ctx.fillText(this.levels[i].key,lineThreeX+20,lineThreeY+5);\n\n                //     // 目标范围\n                //     ctx.font=\"13px Arial\";\n                //     ctx.fillStyle = '#999'\n                //     ctx.fillText(this.levels[i].desc,lineThreeX+30,lineThreeY+25);\n\n\n\n                //     // value值\n                //     const textWidth= ctx.measureText(this.levels[i].key).width;\n                //     ctx.font=\"16px Arial\";\n                //     ctx.fillStyle = '#000'\n                //     ctx.fillText(this.levels[i].value,lineThreeX+40+textWidth,lineThreeY+5);\n\n                //     // 百分号\n                //     const valueWidth= ctx.measureText(this.levels[i].value).width;\n                //     ctx.fillStyle = '#666'\n                //     ctx.fillText('%',lineThreeX+42+textWidth+valueWidth,lineThreeY+5);\n\n                //     // 范围\n                //     const descWidth = ctx.measureText(this.levels[i].desc).width;\n                //     ctx.fillText(this.levels[i].desc,W/2-descWidth-10,lineThreeY+5)\n                // }\n                \n            }\n           this.$nextTick(()=>{\n                console.log(formatTime(new Date()),'渲染完成')\n            })\n        },\n    },\n    beforeDestroy(){\n        this.$bus.$off('getData')\n    }\n}\n</script>\n<style scoped>\n    .TIR{\n        height:300px;\n        display: flex;\n    }\n    .canvas{\n        width:80px;\n        height:300px;\n    }\n    .tir-info{\n        flex-grow: 1;\n    }\n    .tir-key{\n        width:60%;\n    }\n    .tir-key-item{\n        width:100%;\n        height:42px;\n        margin-bottom:20px;\n        display: flex;\n        justify-content: space-between;\n    }\n    .tir-key-box{\n        display: flex;\n        align-items:baseline;\n    }\n    .tir-key-legend{\n        width:7px;\n        height:7px;\n        margin-right:10px;\n    }\n    .tir-key-item:last-child{\n        margin:0;\n    }\n    .tir-key-key{\n        font-size:var(--fontSize-big);\n        color:var(--color-black-80);\n        line-height: 22px;\n    }\n    .tir-key-range{\n        font-size:var(--fontSize-small);\n        color:var(--color-black-40);\n        line-height: 18px;\n    }\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}