{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Cookies from \"js-cookie\";\nimport { account, phoneLogin, sendsmscode, protocol, verifysmscode, setPassword, phoneRegister } from '@/api/userApi';\nimport { getToken, removeToken, setToken } from '@/utils/auth';\nexport default {\n  data() {\n    var validateCheckPass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.passData.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      accountForm: {\n        username: '',\n        password: '',\n        agree: []\n      },\n      phoneForm: {\n        username: '',\n        code: '',\n        agree: []\n      },\n      passData: {\n        password: '',\n        new_password: ''\n      },\n      changeDialog: false,\n      setPasswordTab: false,\n      PasswordLoading: false,\n      passRules: {\n        password: [{\n          required: true,\n          trigger: \"blur\",\n          message: \"请输入密码\"\n        }, {\n          pattern: /^[0-9]{6,20}$/,\n          message: '密码位数必须在6~20位之内',\n          trigger: ['blur', 'change']\n        }],\n        new_password: [{\n          validator: validateCheckPass,\n          required: true,\n          trigger: 'blur'\n        }]\n      },\n      loading: false,\n      activeName: 'login',\n      loginType: 2,\n      //1验证码登录，2密码登录\n      codeType: 1,\n      //1获取验证码 2倒计时 3重新发送\n      codeTime: 60,\n      user_agreement_url: '',\n      privacy_policy_url: '',\n      accountRules: {\n        username: [{\n          required: true,\n          message: '请输入手机号',\n          trigger: 'blur'\n        }, {\n          pattern: /^1[3456789]\\d{9}$/,\n          message: '请输入有效的11位数字手机号码',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          trigger: \"blur\",\n          message: \"请输入密码\"\n        }, {\n          pattern: /^[0-9]{6,20}$/,\n          message: '请输入6-20位密码',\n          trigger: 'blur'\n        }],\n        agree: [{\n          required: true,\n          trigger: \"blur\",\n          message: \"请先阅读并同意勾选协议\"\n        }]\n      },\n      phoneRules: {\n        username: [{\n          required: true,\n          message: '请输入手机号',\n          trigger: 'blur'\n        }, {\n          pattern: /^1[3456789]\\d{9}$/,\n          message: '请输入有效的11位数字手机号码',\n          trigger: 'blur'\n        }],\n        code: [{\n          required: true,\n          trigger: 'blur',\n          message: \"请输入验证码\"\n        }],\n        agree: [{\n          required: true,\n          trigger: \"blur\",\n          message: \"请先阅读并同意勾选协议\"\n        }]\n      }\n    };\n  },\n  computed: {\n    comDiabled() {\n      let upattern = /^1[3456789]\\d{9}$/;\n      let ppattern = /^[0-9]{6,20}$/;\n      if (upattern.test(this.accountForm.username) && ppattern.test(this.accountForm.password)) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    comDiableds() {\n      let pattern = /^1[3456789]\\d{9}$/;\n      if (pattern.test(this.phoneForm.username) && this.phoneForm.code) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    passwordDisabled() {\n      if (this.passData.password && this.passData.new_password) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  },\n  created() {},\n  mounted() {\n    this.getprotocol();\n  },\n  methods: {\n    getCookie() {\n      const username = Cookies.get(\"username\");\n      const password = Cookies.get(\"password\");\n      const rememberMe = Cookies.get(\"rememberMe\");\n      this.loginForm = {\n        username: username === undefined ? this.loginForm.username : username,\n        password: password === undefined ? this.loginForm.password : password\n      };\n    },\n    // 登录注册切换\n    tabClick(tab, e) {\n      this.$refs['phoneForm'].resetFields();\n      if (tab.name == 'register') {\n        this.loginType = 2;\n      }\n    },\n    // 切换登录方式\n    changeLogin(loginType) {\n      this.loginType = loginType;\n      this.activeName = 'login';\n      let self = this;\n      this.$refs['phoneForm'].resetFields();\n      this.$refs['accountForm'].resetFields();\n      this.$nextTick(() => {\n        self.$refs['phoneForm'].clearValidate();\n        self.$refs['accountForm'].clearValidate();\n      });\n    },\n    // 注册\n    registerSubmit() {\n      this.$refs.phoneForm.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          phoneRegister({\n            phone_number: this.phoneForm.username,\n            code: this.phoneForm.code\n          }).then(response => {\n            this.loading = false;\n            if (response.code == 1000) {\n              this.$message({\n                type: 'success',\n                message: '注册成功,请设置密码'\n              });\n              setToken(response.data.token);\n              Cookies.set(\"username\", this.phoneForm.username, {\n                expires: 30\n              });\n              // this.$router.push('/')\n              this.setPasswordTab = true;\n            } else if (response.code == 1002) {\n              setToken(response.data.token);\n              this.setPasswordTab = true;\n            } else {\n              var msg = '';\n              switch (response.code) {\n                case 2101:\n                  msg = '手机号码不合法';\n                  break;\n                case 2102:\n                  msg = '验证码发送过于频繁';\n                  break;\n                case 2103:\n                  msg = '无效的验证码';\n                  break;\n                case 2104:\n                  msg = '验证码已失效，请重新获取';\n                  break;\n                case 2201:\n                  msg = '该账号已注册，请登录';\n                  break;\n              }\n              this.$message({\n                type: 'error',\n                message: msg\n              });\n            }\n          }).catch(res => {\n            console.log(res);\n          });\n        }\n      });\n    },\n    // 账号密码\n    accountLogin() {\n      this.$refs.accountForm.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          account({\n            username: this.accountForm.username,\n            password: this.$md5(this.accountForm.password)\n          }).then(response => {\n            this.loading = false;\n            if (response.code == 1000) {\n              this.$message({\n                type: 'success',\n                message: '登录成功'\n              });\n              setToken(response.data.token);\n              Cookies.set(\"username\", this.accountForm.username, {\n                expires: 30\n              });\n              this.$router.push('/');\n            } else if (response.code == 1002) {\n              setToken(response.data.token);\n              this.setPasswordTab = true;\n            } else {\n              var msg = '';\n              switch (response.code) {\n                case 2202:\n                  msg = '用户不存在';\n                  break;\n                case 2203:\n                  msg = '请先设置密码';\n                  break;\n                case 2204:\n                  msg = '密码不正确';\n                  break;\n              }\n              this.$message({\n                type: 'error',\n                message: msg\n              });\n            }\n          }).catch(res => {\n            console.log(res);\n          });\n        }\n      });\n    },\n    // 手机号登录\n    phoneSubmit() {\n      this.$refs.phoneForm.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          phoneLogin({\n            phone_number: this.phoneForm.username,\n            code: this.phoneForm.code\n          }).then(response => {\n            this.loading = false;\n            if (response.code == 1000) {\n              this.$message({\n                type: 'success',\n                message: '登录成功'\n              });\n              setToken(response.data.token);\n              Cookies.set(\"username\", this.phoneForm.username, {\n                expires: 30\n              });\n              this.$router.push('/');\n            } else if (response.code == 1002) {\n              setToken(response.data.token);\n              this.changeDialog = true;\n            } else {\n              var msg = '';\n              switch (response.code) {\n                case 2101:\n                  msg = '手机号码不合法';\n                  break;\n                case 2102:\n                  msg = '验证码发送过于频繁';\n                  break;\n                case 2103:\n                  msg = '无效的验证码';\n                  break;\n                case 2104:\n                  msg = '验证码已失效，请重新获取';\n                  break;\n              }\n              this.$message({\n                type: 'error',\n                message: msg\n              });\n            }\n          }).catch(res => {\n            console.log(res);\n          });\n        }\n      });\n    },\n    // 获取验证码\n    getCode(codeType) {\n      this.$refs['phoneForm'].validateField('username', value => {\n        if (!value) {\n          this.codeType = 2;\n          this.timeOut();\n          this.setCode();\n        }\n      });\n    },\n    // 验证码倒计时\n    timeOut() {\n      let time = this.codeTime;\n      let that = this;\n      setTimeout(function () {\n        if (time > 1) {\n          time--;\n          that.codeTime = time;\n          that.timeOut();\n        } else {\n          that.codeType = 3;\n          that.codeTime = 60;\n        }\n      }, 1000);\n    },\n    // 发送验证码\n    setCode() {\n      sendsmscode({\n        phone_number: this.phoneForm.username,\n        type: 0\n      }).then(response => {\n        this.loading = false;\n        if (response.code == 1000) {\n          this.$message({\n            type: 'success',\n            message: '发送成功'\n          });\n        } else {\n          this.$message({\n            type: 'error',\n            message: response.msg\n          });\n        }\n      }).catch(res => {\n        console.log(res);\n      });\n    },\n    // 获取隐私和条款\n    getprotocol() {\n      protocol({}).then(response => {\n        if (response.code == 1000) {\n          this.user_agreement_url = response.data.user_agreement_url;\n          this.privacy_policy_url = response.data.privacy_policy_url;\n        } else {\n          this.$message({\n            type: 'error',\n            message: response.msg\n          });\n        }\n      }).catch(res => {\n        console.log(res);\n      });\n    },\n    // 设置密码\n    changePassword() {\n      this.$refs.passData.validate(valid => {\n        if (valid) {\n          setPassword({\n            password: this.$md5(this.passData.password),\n            new_password: this.$md5(this.passData.new_password)\n          }).then(response => {\n            this.PasswordLoading = false;\n            if (response.code == 1000) {\n              this.$message({\n                type: 'success',\n                message: '设置成功'\n              });\n              this.$router.push('/');\n            } else {\n              this.$message({\n                type: 'error',\n                message: response.msg\n              });\n            }\n          }).catch(res => {\n            console.log(res);\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["Cookies","account","phoneLogin","sendsmscode","protocol","verifysmscode","setPassword","phoneRegister","getToken","removeToken","setToken","data","validateCheckPass","rule","value","callback","Error","passData","password","accountForm","username","agree","phoneForm","code","new_password","changeDialog","setPasswordTab","PasswordLoading","passRules","required","trigger","message","pattern","validator","loading","activeName","loginType","codeType","codeTime","user_agreement_url","privacy_policy_url","accountRules","phoneRules","computed","comDiabled","upattern","ppattern","test","comDiableds","passwordDisabled","created","mounted","getprotocol","methods","getCookie","get","rememberMe","loginForm","undefined","tabClick","tab","e","$refs","resetFields","name","changeLogin","self","$nextTick","clearValidate","registerSubmit","validate","valid","phone_number","then","response","$message","type","token","set","expires","msg","catch","res","console","log","accountLogin","$md5","$router","push","phoneSubmit","getCode","validateField","timeOut","setCode","time","that","setTimeout","changePassword"],"sources":["src/views/login/login.vue"],"sourcesContent":["<template>\n        <div class=\"login\" id='login'>\n            <div class='login-main' >\n                <!-- <div class='login-box' >\n                    <el-tabs v-model=\"activeName\" @tab-click='tabClick'>\n                        <el-tab-pane label=\"登录\" name=\"login\"></el-tab-pane>\n                        <el-tab-pane label=\"注册\" name=\"register\"></el-tab-pane>\n                    </el-tabs>\n                    <div  class='login-form'>\n                        <el-form ref=\"accountForm\" :model=\"accountForm\"  :validate-on-rule-change=\"false\" :rules=\"accountRules\" v-show='loginType==1' >\n                            <el-form-item  prop='username' class='form-item-normal'>\n                                <el-input v-model=\"accountForm.username\"\n                                    placeholder=\"请输入您的手机号\"></el-input>\n                            </el-form-item>\n                            <el-form-item  prop='password' class='form-item-special'>\n                                <el-input v-model=\"accountForm.password\"\n                                    placeholder=\"密码\"\n                                    show-password></el-input>\n                            </el-form-item>\n                            <el-form-item prop='agree' class='login-rules' >\n                                <div class='login-rule' >\n                                    <el-checkbox v-model=\"accountForm.agree\" ></el-checkbox>\n                                    <div class='login-text'>请阅读并同意  <a :href=\"user_agreement_url\" target=\"_blank\" rel=\"noopener noreferrer\">《用户服务协议》</a>及<a :href=\"privacy_policy_url\" target=\"_blank\" rel=\"noopener noreferrer\">《隐私政策》</a></div>\n                                </div>\n                            </el-form-item>\n                            <el-form-item >\n                                <el-button  :loading=\"loading\" class=\"login-submit\"  :disabled=\"comDiabled\"  style=\"width: 100%\" type=\"primary\" @click.native.prevent=\"accountLogin\"  >\n                                    <span v-if=\"!loading\">登录</span>\n                                    <span v-else>登录中</span>\n                                </el-button>\n                            </el-form-item>\n                        </el-form>\n                        <el-form ref=\"phoneForm\" :model=\"phoneForm\"  :rules=\"phoneRules\" v-show='loginType==2'>\n                            <el-form-item  prop='username' class='form-item-normal'>\n                                <el-input v-model=\"phoneForm.username\"\n                                    placeholder=\"请输入您的手机号\"></el-input>\n                            </el-form-item>\n                            <el-form-item  prop='code'  class='form-item-special'>\n                                <div class='code-item' >\n                                    <el-input v-model=\"phoneForm.code\"  placeholder=\"请输入验证码\"></el-input>\n                                    <div class='get-code' @click='getCode' v-if='codeType==1' >获取验证码</div>\n                                    <div class='code-time'  v-if='codeType==2'>{{codeTime}}s</div>\n                                    <div class='get-code'  v-if='codeType==3' @click='getCode'>重新发送</div>\n                                </div>\n                            </el-form-item>\n                            <el-form-item prop='agree' class='login-rules' >\n                                <div class='login-rule' >\n                                    <el-checkbox v-model=\"phoneForm.agree\"></el-checkbox>\n                                    <div class='login-text'>请阅读并同意  <a :href=\"user_agreement_url\" target=\"_blank\" rel=\"noopener noreferrer\">《用户服务协议》</a>及<a :href=\"privacy_policy_url\" target=\"_blank\" rel=\"noopener noreferrer\">《隐私政策》</a></div>\n                                </div>\n                            </el-form-item>\n                            <el-form-item >\n                                 <el-button v-if='activeName==\"login\"' :loading=\"loading\" class=\"login-submit\"  :disabled=\"comDiableds\"  style=\"width: 100%\" type=\"primary\" @click.native.prevent=\"phoneSubmit\"  >\n                                    <span v-if=\"!loading\">登录</span>\n                                    <span v-else>登录中</span>\n                                </el-button>\n                                 <el-button v-else :loading=\"loading\" class=\"login-submit\"  :disabled=\"comDiableds\"  style=\"width: 100%\" type=\"primary\" @click.native.prevent=\"registerSubmit\"  >\n                                    <span v-if=\"!loading\">注册</span>\n                                    <span v-else>注册中</span>\n                                </el-button>\n                            </el-form-item>\n                        </el-form>\n                        <div class='login-item' >\n                                <p>忘记密码</p>\n                                <p @click='changeLogin(2)' v-if='loginType==1' >验证码登录</p>\n                                <p @click='changeLogin(1)' v-if='loginType==2'>密码登录</p>\n                            </div>\n                            <div  class='san'>\n                                <el-divider >第三方账号登录</el-divider>\n                                <div class='san-logo' >\n                                    <img src=\"~@/assets/image/login-mi.png\" alt=\"\" class='san-icon' >\n                                    <img src=\"~@/assets/image/login-wechat.png\" alt=\"\" class='san-icon' > \n                                </div>\n                            </div>\n                    </div>\n                </div> -->\n                <div class='login-box' >\n                    <div class='module-title' >设置密码</div>\n                     <div  class='login-form'>\n                        <el-form ref=\"passData\" :model=\"passData\"  :rules=\"passRules\">\n                            <el-form-item  prop='password' class='form-item-normal'>\n                                <el-input v-model=\"passData.password\"\n                                    placeholder=\"请输入6-20位新密码\" show-password></el-input>\n                            </el-form-item>\n                            <el-form-item  prop='new_password' class='form-item-special'>\n                                <el-input v-model=\"passData.new_password\"\n                                    placeholder=\"请确认新密码\"\n                                    show-password></el-input>\n                            </el-form-item>\n                            <el-form-item >\n                                <el-button  :loading=\"loading\" class=\"password-submit\"  :disabled=\"passwordDisabled\"  style=\"width: 100%\" type=\"primary\" @click.native.prevent=\"changePassword\"  >\n                                    <span>确认</span>\n                                </el-button>\n                            </el-form-item>\n                        </el-form>\n                    </div>\n                </div> \n                <div class='divider' ></div>\n                <div class='login-design' >\n                    <img src=\"~@/assets/image/login-img.png\" alt=\"\" class='login-img' >\n                </div>\n            </div>\n            <!-- 设置密码 -->\n            <!-- <el-dialog :visible.sync=\"changeDialog\" title=\"设置密码\" border width=\"40%\">\n                <el-form ref=\"formData\"  label-width=\"120px\" label-position=\"right\" :model=\"formData\" :rules='formRules' >\n                \n                    <el-form-item label=\"密码\"  prop=\"password\">\n                        <el-input v-model=\"formData.password\" />\n                    </el-form-item>\n                    <el-form-item label=\"确认密码\"  prop=\"new_password\">\n                        <el-input v-model=\"formData.new_password\" />\n                    </el-form-item>\n                    <div class='flex record-btn'  >\n                        <el-button :loading=\"PasswordLoading\" type=\"primary\" @click=\"changePassword\">确认</el-button>\n                        <el-button  @click=\"changeDialog = false\">取消</el-button>\n                    </div>\n                </el-form>\n            </el-dialog> -->\n        </div>\n</template>\n\n<script>\nimport Cookies from \"js-cookie\"\nimport {account,phoneLogin,sendsmscode,protocol,verifysmscode,setPassword,phoneRegister} from '@/api/userApi'\nimport {getToken, removeToken, setToken} from '@/utils/auth'\nexport default {\n    data(){\n        var validateCheckPass = (rule,value,callback)=>{\n            if (value === '') {\n                callback(new Error('请再次输入密码'));\n            } else if (value !== this.passData.password) {\n                callback(new Error('两次输入密码不一致!'));\n            } else {\n                callback();\n            }\n        };\n        return {\n            accountForm:{\n                username:'',\n                password:'',\n                agree:[]\n            },\n            phoneForm:{\n                username:'',\n                code:'',\n                agree:[]\n            },\n            passData:{\n                password:'',\n                new_password:''\n            },\n            changeDialog:false,\n            setPasswordTab:false,\n            PasswordLoading:false,\n            passRules:{\n                password: [{ required: true, trigger: \"blur\", message: \"请输入密码\" },\n                {pattern: /^[0-9]{6,20}$/, message: '密码位数必须在6~20位之内', trigger: ['blur', 'change']}],\n                new_password: [{validator: validateCheckPass,required: true, trigger: 'blur'}],\n            },\n            loading:false,\n            activeName:'login',\n            loginType:2, //1验证码登录，2密码登录\n            codeType:1, //1获取验证码 2倒计时 3重新发送\n            codeTime:60,\n            user_agreement_url:'',\n            privacy_policy_url:'',\n            accountRules: {\n                username: [{ required: true, message: '请输入手机号', trigger: 'blur' },\n                            { pattern: /^1[3456789]\\d{9}$/, message: '请输入有效的11位数字手机号码', trigger: 'blur'}],\n                password: [{ required: true, trigger: \"blur\", message: \"请输入密码\" },\n                {pattern: /^[0-9]{6,20}$/, message: '请输入6-20位密码', trigger: 'blur'}],\n                agree: [{required: true, trigger: \"blur\", message: \"请先阅读并同意勾选协议\" }]\n            },\n             phoneRules: {\n                username: [{ required: true, message: '请输入手机号', trigger: 'blur' },\n                            { pattern: /^1[3456789]\\d{9}$/, message: '请输入有效的11位数字手机号码', trigger: 'blur'}],\n                code: [{ required: true, trigger: 'blur', message: \"请输入验证码\" }],\n                agree: [{required: true, trigger: \"blur\", message: \"请先阅读并同意勾选协议\" }]\n            },\n        }\n    },\n    computed:{\n        comDiabled(){\n            let upattern =  /^1[3456789]\\d{9}$/\n            let ppattern = /^[0-9]{6,20}$/\n            if(upattern.test(this.accountForm.username)&&ppattern.test(this.accountForm.password)){\n                return false\n            }else{\n                return true\n            }\n        },\n        comDiableds(){\n            let pattern =  /^1[3456789]\\d{9}$/\n            if(pattern.test(this.phoneForm.username)&&this.phoneForm.code){\n                return false\n            }else{\n                return true\n            }\n        },\n        passwordDisabled(){\n            if(this.passData.password&&this.passData.new_password){\n                return false\n            }else{\n                return true\n            }\n        }\n    },\n    created(){\n        \n    },\n    mounted(){\n        this.getprotocol()\n    },\n    methods:{\n        getCookie() {\n            const username = Cookies.get(\"username\")\n            const password = Cookies.get(\"password\")\n            const rememberMe = Cookies.get(\"rememberMe\")\n            this.loginForm = {\n                username: username === undefined ? this.loginForm.username : username,\n                password: password === undefined ? this.loginForm.password :  password,\n            }\n        },\n        // 登录注册切换\n        tabClick(tab,e){\n            this.$refs['phoneForm'].resetFields();\n            if(tab.name=='register'){\n                this.loginType = 2\n            }\n        },\n        // 切换登录方式\n        changeLogin(loginType){\n            this.loginType = loginType\n            this.activeName='login'\n            let self = this\n            this.$refs['phoneForm'].resetFields();\n            this.$refs['accountForm'].resetFields();\n            this.$nextTick(() => {\n                self.$refs['phoneForm'].clearValidate();\n                self.$refs['accountForm'].clearValidate();\n            })\n            \n        },\n        // 注册\n        registerSubmit(){\n             this.$refs.phoneForm.validate((valid) => {\n                if(valid){\n                    this.loading = true\n                     phoneRegister({phone_number:this.phoneForm.username,code:this.phoneForm.code}).then(response => {\n                            this.loading=false\n\t\t\t\t\t\t\tif(response.code == 1000){\n\t\t\t\t\t\t\t\tthis.$message({\n\t\t\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\t\t\tmessage: '注册成功,请设置密码'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tsetToken(response.data.token)\n                                Cookies.set(\"username\", this.phoneForm.username, { expires: 30 })\n                                // this.$router.push('/')\n                                this.setPasswordTab = true\n\t\t\t\t\t\t\t}else if(response.code == 1002){\n                                setToken(response.data.token)\n                                this.setPasswordTab = true\n                            }else{\n                                var msg = ''\n                                switch(response.code){\n                                    case 2101 :\n                                        msg='手机号码不合法'\n                                        break;\n                                    case 2102 :\n                                        msg='验证码发送过于频繁'\n                                        break;\n                                    case 2103 :\n                                        msg='无效的验证码'\n                                        break;\n                                    case 2104 :\n                                        msg='验证码已失效，请重新获取'\n                                        break;\n                                    case 2201 :\n                                        msg='该账号已注册，请登录'\n                                        break;\n                                }\n\t\t\t\t\t\t\t\tthis.$message({\n                                    type: 'error',\n                                    message: msg\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}).catch((res) => {\n\t\t\t\t\t\tconsole.log(res)\n\t\t\t\t\t})\n                  \n                }\n             })\n        },\n        // 账号密码\n        accountLogin(){\n             this.$refs.accountForm.validate((valid) => {\n                if(valid){\n                    this.loading = true\n                    account({username:this.accountForm.username,password:this.$md5(this.accountForm.password)}).then(response => {\n                            this.loading=false\n\t\t\t\t\t\t\tif(response.code == 1000){\n\t\t\t\t\t\t\t\tthis.$message({\n\t\t\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\t\t\tmessage: '登录成功'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tsetToken(response.data.token)\n                                Cookies.set(\"username\", this.accountForm.username, { expires: 30 })\n                                this.$router.push('/')\n\t\t\t\t\t\t\t}else if(response.code == 1002){\n                                setToken(response.data.token)\n                                 this.setPasswordTab = true\n                            }else{\n\t\t\t\t\t\t\t\t var msg = ''\n                                switch(response.code){\n                                    case 2202 :\n                                        msg='用户不存在'\n                                        break;\n                                    case 2203 :\n                                        msg='请先设置密码'\n                                        break;\n                                    case 2204 :\n                                        msg='密码不正确'\n                                        break;\n                                }\n\t\t\t\t\t\t\t\tthis.$message({\n                                    type: 'error',\n                                    message: msg\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}).catch((res) => {\n\t\t\t\t\t\tconsole.log(res)\n\t\t\t\t\t})\n                   \n                  \n                }\n             })\n        },\n        // 手机号登录\n        phoneSubmit(){\n             this.$refs.phoneForm.validate((valid) => {\n                if(valid){\n                    this.loading = true\n                     phoneLogin({phone_number:this.phoneForm.username,code:this.phoneForm.code}).then(response => {\n                            this.loading=false\n\t\t\t\t\t\t\tif(response.code == 1000){\n\t\t\t\t\t\t\t\tthis.$message({\n\t\t\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\t\t\tmessage: '登录成功'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tsetToken(response.data.token)\n                                Cookies.set(\"username\", this.phoneForm.username, { expires: 30 })\n                                this.$router.push('/')\n\t\t\t\t\t\t\t}else if(response.code == 1002){\n                                setToken(response.data.token)\n                                this.changeDialog = true\n                            }else{\n                                var msg = ''\n                                switch(response.code){\n                                    case 2101 :\n                                        msg='手机号码不合法'\n                                        break;\n                                    case 2102 :\n                                        msg='验证码发送过于频繁'\n                                        break;\n                                    case 2103 :\n                                        msg='无效的验证码'\n                                        break;\n                                    case 2104 :\n                                        msg='验证码已失效，请重新获取'\n                                        break;\n                                }\n\t\t\t\t\t\t\t\tthis.$message({\n                                    type: 'error',\n                                    message: msg\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}).catch((res) => {\n\t\t\t\t\t\tconsole.log(res)\n\t\t\t\t\t})\n                  \n                }\n             })\n        },\n        // 获取验证码\n        getCode(codeType){\n             this.$refs['phoneForm'].validateField('username',value => {\n                if(!value){\n                    this.codeType=2\n                    this.timeOut()\n                    this.setCode()\n                }\n             })\n        },\n        // 验证码倒计时\n        timeOut(){\n            let time = this.codeTime\n            let that = this\n            setTimeout(function(){\n                if(time>1){\n                    time--\n                    that.codeTime = time\n                    that.timeOut()\n                }else{\n                    that.codeType=3\n                    that.codeTime = 60\n                }\n            },1000)\n        },\n        // 发送验证码\n        setCode(){\n            sendsmscode({phone_number:this.phoneForm.username,type:0}).then(response => {\n                    this.loading=false\n                    if(response.code == 1000){\n                        this.$message({\n                            type: 'success',\n                            message: '发送成功'\n                        });\n                    }else{\n                        this.$message({\n                            type: 'error',\n                            message: response.msg\n                        });\n                    }\n            }).catch((res) => {\n                console.log(res)\n            })\n        },\n        // 获取隐私和条款\n        getprotocol(){\n            protocol({}).then(response => {\n                    if(response.code == 1000){\n                       this.user_agreement_url = response.data.user_agreement_url\n                       this.privacy_policy_url = response.data.privacy_policy_url\n                    }else{\n                        this.$message({\n                            type: 'error',\n                            message: response.msg\n                        });\n                    }\n            }).catch((res) => {\n              console.log(res)\n            })\n        },\n        // 设置密码\n        changePassword(){\n            this.$refs.passData.validate((valid) =>{\n                if(valid){\n                    setPassword({password:this.$md5(this.passData.password),new_password:this.$md5(this.passData.new_password)}).then(response => {\n                        this.PasswordLoading=false\n                        if(response.code == 1000){\n                            this.$message({\n                                type: 'success',\n                                message: '设置成功'\n                            });\n                            this.$router.push('/')\n                        }else{\n                            \n                            this.$message({\n                                type: 'error',\n                                message: response.msg\n                            });\n                        }\n                }).catch((res) => {\n                    console.log(res)\n                })\n                }\n            })\n        }\n    }\n}\n</script>\n\n<style >\n    .login{\n        height: 100%;\n        width:100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background:#f7fcfd;\n    }\n    #login .login-main{\n        display: flex;\n        align-items: center;\n    }\n    #login .login-box{\n        width:400px;\n        height:490px;\n        box-shadow: 0px 4px 20px 0px #0000001A;\n        background:rgba(255,255,255,0.9);\n        border-radius:10px;\n        box-sizing: border-box;\n        padding:50px 46px;\n    }\n    #login .login-box .el-tabs__nav-wrap::after{\n        background:none;\n        height:3px;\n    }\n    .el-tabs__active-bar{\n        height:3px;\n        border-radius:1px;\n    }\n    #login .title{\n        text-align: center;\n        margin-bottom:50px;\n        font-size:28px;\n        font-weight: bold;\n        color:var(--color-black-80);\n    }\n    .module-title{\n        font-size: var(--fontSize-max);\n        color:var(--color-black-80);\n        margin-bottom:25px;\n    }\n    #login .el-input__inner{\n        background: none;\n    }\n    #login .el-tabs__item{\n        font-size:20px;\n        font-weight:305;\n    }\n    #login .el-tabs__item.is-active{\n        font-weight: 440;\n    }\n    #login .form-item-normal{\n        margin-bottom:22px;\n    }\n    #login .form-item-special{\n         margin-bottom:6px;\n    }\n    #login .el-checkbox{\n        font-size:var(-fontSize-small);\n    }\n    #login .divider{\n        margin:0 100px;\n        width:1px ;\n        height:590px;\n        background:#e3e3e3;\n        margin-left:150px;\n    }\n    #login .login-rule{\n        display: flex;\n        align-items: center;\n    }\n    #login .login-rules .el-form-item__error{\n        top:70%;\n    }\n    #login .check-img{\n        width:20px;\n        display: block;\n    }\n    #login .login-text{\n        font-size:var(-fontSize-small);\n        color:var(--color-black-40);\n        margin-left:6px;\n    }\n    #login .login-text a{\n        text-decoration: none;\n        color:#0d84ff;\n    }\n    #login .login-item{\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        font-size:var(-fontSize-default);\n        color:rgba(0,0,0,0,.6)\n    }\n    #login .el-divider__text{\n        font-size:var(-fontSize-small);\n        color:var(--color-black-60);\n    }\n    #login .san-logo{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    #login .san-icon{\n        width:36px;\n        height:36px;\n        display: block;;\n    }\n    #login .san-icon:nth-child(1){\n        margin-right:30px;\n    }\n    #login .login-item p{\n        cursor: pointer;\n    }\n    #login .code-item{\n        position: relative;\n    }\n    #login .get-code{\n        color:#0D84FF;\n        font-size: var(-fontSize-small);\n        position: absolute;\n        right:14px;\n        top:0;\n        cursor: pointer;\n    }\n    #login .code-time{\n        font-size: var(-fontSize-small);\n        position: absolute;\n        right:14px;\n        top:0;\n        color:var(--color-black-30);\n    }\n    #login .record-btn{\n        display: flex;\n        justify-content: flex-end;\n    }\n    #login .password-submit{\n        margin-top:60px;\n    }\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}