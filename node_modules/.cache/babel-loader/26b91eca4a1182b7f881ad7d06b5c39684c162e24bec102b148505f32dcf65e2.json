{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.possibleElisions = exports.simpleRegularExpression = exports.ADDRESS_BOUNDARY = exports.padGroup = exports.groupPossibilities = void 0;\nconst v6 = __importStar(require(\"./constants\"));\nconst sprintf_js_1 = require(\"sprintf-js\");\nfunction groupPossibilities(possibilities) {\n  return (0, sprintf_js_1.sprintf)('(%s)', possibilities.join('|'));\n}\nexports.groupPossibilities = groupPossibilities;\nfunction padGroup(group) {\n  if (group.length < 4) {\n    return (0, sprintf_js_1.sprintf)('0{0,%d}%s', 4 - group.length, group);\n  }\n  return group;\n}\nexports.padGroup = padGroup;\nexports.ADDRESS_BOUNDARY = '[^A-Fa-f0-9:]';\nfunction simpleRegularExpression(groups) {\n  const zeroIndexes = [];\n  groups.forEach((group, i) => {\n    const groupInteger = parseInt(group, 16);\n    if (groupInteger === 0) {\n      zeroIndexes.push(i);\n    }\n  });\n  // You can technically elide a single 0, this creates the regular expressions\n  // to match that eventuality\n  const possibilities = zeroIndexes.map(zeroIndex => groups.map((group, i) => {\n    if (i === zeroIndex) {\n      const elision = i === 0 || i === v6.GROUPS - 1 ? ':' : '';\n      return groupPossibilities([padGroup(group), elision]);\n    }\n    return padGroup(group);\n  }).join(':'));\n  // The simplest case\n  possibilities.push(groups.map(padGroup).join(':'));\n  return groupPossibilities(possibilities);\n}\nexports.simpleRegularExpression = simpleRegularExpression;\nfunction possibleElisions(elidedGroups, moreLeft, moreRight) {\n  const left = moreLeft ? '' : ':';\n  const right = moreRight ? '' : ':';\n  const possibilities = [];\n  // 1. elision of everything (::)\n  if (!moreLeft && !moreRight) {\n    possibilities.push('::');\n  }\n  // 2. complete elision of the middle\n  if (moreLeft && moreRight) {\n    possibilities.push('');\n  }\n  if (moreRight && !moreLeft || !moreRight && moreLeft) {\n    // 3. complete elision of one side\n    possibilities.push(':');\n  }\n  // 4. elision from the left side\n  possibilities.push((0, sprintf_js_1.sprintf)('%s(:0{1,4}){1,%d}', left, elidedGroups - 1));\n  // 5. elision from the right side\n  possibilities.push((0, sprintf_js_1.sprintf)('(0{1,4}:){1,%d}%s', elidedGroups - 1, right));\n  // 6. no elision\n  possibilities.push((0, sprintf_js_1.sprintf)('(0{1,4}:){%d}0{1,4}', elidedGroups - 1));\n  // 7. elision (including sloppy elision) from the middle\n  for (let groups = 1; groups < elidedGroups - 1; groups++) {\n    for (let position = 1; position < elidedGroups - groups; position++) {\n      possibilities.push((0, sprintf_js_1.sprintf)('(0{1,4}:){%d}:(0{1,4}:){%d}0{1,4}', position, elidedGroups - position - groups - 1));\n    }\n  }\n  return groupPossibilities(possibilities);\n}\nexports.possibleElisions = possibleElisions;","map":{"version":3,"names":["v6","__importStar","require","sprintf_js_1","groupPossibilities","possibilities","sprintf","join","exports","padGroup","group","length","ADDRESS_BOUNDARY","simpleRegularExpression","groups","zeroIndexes","forEach","i","groupInteger","parseInt","push","map","zeroIndex","elision","GROUPS","possibleElisions","elidedGroups","moreLeft","moreRight","left","right","position"],"sources":["../../src/v6/regular-expressions.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}