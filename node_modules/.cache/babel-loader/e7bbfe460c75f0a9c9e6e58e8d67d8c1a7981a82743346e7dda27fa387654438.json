{"ast":null,"code":"/**\n * 注册事件监听器，并返回一个可用于移除事件监听的对象。\n *\n * @param {Object} target - 事件监听器要添加到的目标对象。\n * @param {string} eventType - 事件类型，如 'click'、'blur' 等。\n * @param {function} cb - 事件回调函数。\n * @returns {Object} - 可用于移除事件监听的对象，具有一个 `remove` 方法。\n */\nexport function _registerEvent(target, eventType, cb) {\n  const eventListener = target.addEventListener || target.attachEvent;\n  eventListener.call(target, eventType, cb);\n  return {\n    remove: function () {\n      const eventRemover = target.removeEventListener || target.detachEvent;\n      eventRemover.call(target, eventType, cb);\n    }\n  };\n}\n\n/**\n * 在打开指定URI之前设置一个超时，以处理超时情况。\n *\n * @param {string} uri - 要打开的URI。\n * @param {function} failCb - 超时或失败时的回调函数。\n * @param {function} successCb - 成功时的回调函数。\n * @param {number} timeoutDuration - 超时时长（毫秒）。\n */\n\n// function openUriWithTimeoutHack(){\n\n// }\n\nfunction _createHiddenIframe(target, uri) {\n  let iframe = document.createElement(\"iframe\");\n  iframe.src = uri;\n  iframe.id = \"hiddenIframe\";\n  iframe.style.display = \"none\";\n  target.appendChild(iframe);\n  return iframe;\n}\nfunction openUriWithHiddenFrame(uri, failCb, successCb, timeoutDuration) {\n  let timeout = setTimeout(function () {\n    failCb();\n    handler.remove();\n  }, timeoutDuration);\n  let iframe = document.querySelector(\"#hiddenIframe\");\n  if (!iframe) {\n    iframe = _createHiddenIframe(document.body, \"about:blank\");\n  }\n  let handler = _registerEvent(window, \"blur\", onBlur);\n  function onBlur() {\n    clearTimeout(timeout);\n    handler.remove();\n    successCb();\n  }\n  iframe.contentWindow.location.href = uri;\n}\nfunction openUriWithTimeoutHack(uri, failCb, successCb, timeoutDuration) {\n  let timeout = setTimeout(function () {\n    failCb();\n    handler.remove();\n  }, timeoutDuration);\n  let target = window;\n  while (target !== target.parent) {\n    target = target.parent;\n  }\n  let handler = _registerEvent(target, 'blur', onBlur);\n  function onBlur() {\n    clearTimeout(timeout);\n    handler.remove();\n    successCb();\n  }\n  window.location = uri;\n}\nfunction checkBrowser() {\n  var isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\n  var ua = navigator.userAgent.toLowerCase();\n  return {\n    isOpera: isOpera,\n    isFirefox: typeof InstallTrigger !== 'undefined',\n    isSafari: ~ua.indexOf('safari') && !~ua.indexOf('chrome') || Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0,\n    isIOS: /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream,\n    isChrome: !!window.chrome && !isOpera,\n    isIE: /*@cc_on!@*/false || !!document.documentMode // At least IE6\n  };\n}\nexport function openProcedure(uri, failCb, successCb, timeoutDuration) {\n  var browser = checkBrowser();\n  if (browser.isSafari) {\n    return openUriWithHiddenFrame(uri, failCb, successCb, timeoutDuration);\n  } else {\n    return openUriWithTimeoutHack(uri, failCb, successCb, timeoutDuration);\n  }\n}","map":{"version":3,"names":["_registerEvent","target","eventType","cb","eventListener","addEventListener","attachEvent","call","remove","eventRemover","removeEventListener","detachEvent","_createHiddenIframe","uri","iframe","document","createElement","src","id","style","display","appendChild","openUriWithHiddenFrame","failCb","successCb","timeoutDuration","timeout","setTimeout","handler","querySelector","body","window","onBlur","clearTimeout","contentWindow","location","href","openUriWithTimeoutHack","parent","checkBrowser","isOpera","opera","navigator","userAgent","indexOf","ua","toLowerCase","isFirefox","InstallTrigger","isSafari","Object","prototype","toString","HTMLElement","isIOS","test","MSStream","isChrome","chrome","isIE","documentMode","openProcedure","browser"],"sources":["/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/src/utils/monitoringApp.js"],"sourcesContent":["/**\n * 注册事件监听器，并返回一个可用于移除事件监听的对象。\n *\n * @param {Object} target - 事件监听器要添加到的目标对象。\n * @param {string} eventType - 事件类型，如 'click'、'blur' 等。\n * @param {function} cb - 事件回调函数。\n * @returns {Object} - 可用于移除事件监听的对象，具有一个 `remove` 方法。\n */\n export function _registerEvent(target, eventType, cb) {\n    const eventListener = target.addEventListener || target.attachEvent;\n    eventListener.call(target, eventType, cb);\n  \n    return {\n      remove: function () {\n        const eventRemover = target.removeEventListener || target.detachEvent;\n        eventRemover.call(target, eventType, cb);\n      },\n    };\n  }\n  \n  /**\n   * 在打开指定URI之前设置一个超时，以处理超时情况。\n   *\n   * @param {string} uri - 要打开的URI。\n   * @param {function} failCb - 超时或失败时的回调函数。\n   * @param {function} successCb - 成功时的回调函数。\n   * @param {number} timeoutDuration - 超时时长（毫秒）。\n   */\n\n\n  // function openUriWithTimeoutHack(){\n\n  // }\n\n  function _createHiddenIframe(target, uri) {\n    let iframe = document.createElement(\"iframe\");\n    iframe.src = uri;\n    iframe.id = \"hiddenIframe\";\n    iframe.style.display = \"none\";\n    target.appendChild(iframe);\n\n    return iframe;\n  }\n\n  function openUriWithHiddenFrame(uri, failCb, successCb, timeoutDuration) {\n\n      let timeout = setTimeout(function () {\n          failCb();\n          handler.remove();\n      }, timeoutDuration);\n\n      let iframe = document.querySelector(\"#hiddenIframe\");\n      if (!iframe) {\n          iframe = _createHiddenIframe(document.body, \"about:blank\");\n      }\n\n      let handler = _registerEvent(window, \"blur\", onBlur);\n\n      function onBlur() {\n          clearTimeout(timeout);\n          handler.remove();\n          successCb();\n      }\n\n      iframe.contentWindow.location.href = uri;\n  }\n  function openUriWithTimeoutHack(uri, failCb, successCb, timeoutDuration) {\n    let timeout = setTimeout(function () {\n      failCb();\n      handler.remove();\n    }, timeoutDuration);\n  \n    let target = window;\n    while (target !== target.parent) {\n      target = target.parent;\n    }\n    let handler = _registerEvent(target, 'blur', onBlur);\n  \n    function onBlur() {\n      clearTimeout(timeout);\n      handler.remove();\n      successCb();\n    }\n  \n    window.location = uri;\n  }\n  function checkBrowser() {\n    var isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\n    var ua = navigator.userAgent.toLowerCase();\n    return {\n        isOpera   : isOpera,\n        isFirefox : typeof InstallTrigger !== 'undefined',\n        isSafari  : (~ua.indexOf('safari') && !~ua.indexOf('chrome')) || Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0,\n        isIOS     : /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream,\n        isChrome  : !!window.chrome && !isOpera,\n        isIE      : /*@cc_on!@*/false || !!document.documentMode // At least IE6\n    }\n  }\n  export function openProcedure(uri, failCb, successCb, timeoutDuration){\n    var browser = checkBrowser();\n    if(browser.isSafari){\n      return openUriWithHiddenFrame(uri, failCb, successCb, timeoutDuration)\n    }else{\n      return openUriWithTimeoutHack(uri, failCb, successCb, timeoutDuration)\n    }\n\n  }\n  "],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,OAAO,SAASA,cAAcA,CAACC,MAAM,EAAEC,SAAS,EAAEC,EAAE,EAAE;EACnD,MAAMC,aAAa,GAAGH,MAAM,CAACI,gBAAgB,IAAIJ,MAAM,CAACK,WAAW;EACnEF,aAAa,CAACG,IAAI,CAACN,MAAM,EAAEC,SAAS,EAAEC,EAAE,CAAC;EAEzC,OAAO;IACLK,MAAM,EAAE,SAAAA,CAAA,EAAY;MAClB,MAAMC,YAAY,GAAGR,MAAM,CAACS,mBAAmB,IAAIT,MAAM,CAACU,WAAW;MACrEF,YAAY,CAACF,IAAI,CAACN,MAAM,EAAEC,SAAS,EAAEC,EAAE,CAAC;IAC1C;EACF,CAAC;AACH;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE;;AAEA;;AAEA,SAASS,mBAAmBA,CAACX,MAAM,EAAEY,GAAG,EAAE;EACxC,IAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAC7CF,MAAM,CAACG,GAAG,GAAGJ,GAAG;EAChBC,MAAM,CAACI,EAAE,GAAG,cAAc;EAC1BJ,MAAM,CAACK,KAAK,CAACC,OAAO,GAAG,MAAM;EAC7BnB,MAAM,CAACoB,WAAW,CAACP,MAAM,CAAC;EAE1B,OAAOA,MAAM;AACf;AAEA,SAASQ,sBAAsBA,CAACT,GAAG,EAAEU,MAAM,EAAEC,SAAS,EAAEC,eAAe,EAAE;EAErE,IAAIC,OAAO,GAAGC,UAAU,CAAC,YAAY;IACjCJ,MAAM,CAAC,CAAC;IACRK,OAAO,CAACpB,MAAM,CAAC,CAAC;EACpB,CAAC,EAAEiB,eAAe,CAAC;EAEnB,IAAIX,MAAM,GAAGC,QAAQ,CAACc,aAAa,CAAC,eAAe,CAAC;EACpD,IAAI,CAACf,MAAM,EAAE;IACTA,MAAM,GAAGF,mBAAmB,CAACG,QAAQ,CAACe,IAAI,EAAE,aAAa,CAAC;EAC9D;EAEA,IAAIF,OAAO,GAAG5B,cAAc,CAAC+B,MAAM,EAAE,MAAM,EAAEC,MAAM,CAAC;EAEpD,SAASA,MAAMA,CAAA,EAAG;IACdC,YAAY,CAACP,OAAO,CAAC;IACrBE,OAAO,CAACpB,MAAM,CAAC,CAAC;IAChBgB,SAAS,CAAC,CAAC;EACf;EAEAV,MAAM,CAACoB,aAAa,CAACC,QAAQ,CAACC,IAAI,GAAGvB,GAAG;AAC5C;AACA,SAASwB,sBAAsBA,CAACxB,GAAG,EAAEU,MAAM,EAAEC,SAAS,EAAEC,eAAe,EAAE;EACvE,IAAIC,OAAO,GAAGC,UAAU,CAAC,YAAY;IACnCJ,MAAM,CAAC,CAAC;IACRK,OAAO,CAACpB,MAAM,CAAC,CAAC;EAClB,CAAC,EAAEiB,eAAe,CAAC;EAEnB,IAAIxB,MAAM,GAAG8B,MAAM;EACnB,OAAO9B,MAAM,KAAKA,MAAM,CAACqC,MAAM,EAAE;IAC/BrC,MAAM,GAAGA,MAAM,CAACqC,MAAM;EACxB;EACA,IAAIV,OAAO,GAAG5B,cAAc,CAACC,MAAM,EAAE,MAAM,EAAE+B,MAAM,CAAC;EAEpD,SAASA,MAAMA,CAAA,EAAG;IAChBC,YAAY,CAACP,OAAO,CAAC;IACrBE,OAAO,CAACpB,MAAM,CAAC,CAAC;IAChBgB,SAAS,CAAC,CAAC;EACb;EAEAO,MAAM,CAACI,QAAQ,GAAGtB,GAAG;AACvB;AACA,SAAS0B,YAAYA,CAAA,EAAG;EACtB,IAAIC,OAAO,GAAG,CAAC,CAACT,MAAM,CAACU,KAAK,IAAIC,SAAS,CAACC,SAAS,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;EACzE,IAAIC,EAAE,GAAGH,SAAS,CAACC,SAAS,CAACG,WAAW,CAAC,CAAC;EAC1C,OAAO;IACHN,OAAO,EAAKA,OAAO;IACnBO,SAAS,EAAG,OAAOC,cAAc,KAAK,WAAW;IACjDC,QAAQ,EAAK,CAACJ,EAAE,CAACD,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAACC,EAAE,CAACD,OAAO,CAAC,QAAQ,CAAC,IAAKM,MAAM,CAACC,SAAS,CAACC,QAAQ,CAAC7C,IAAI,CAACwB,MAAM,CAACsB,WAAW,CAAC,CAACT,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC;IAC9IU,KAAK,EAAO,kBAAkB,CAACC,IAAI,CAACb,SAAS,CAACC,SAAS,CAAC,IAAI,CAACZ,MAAM,CAACyB,QAAQ;IAC5EC,QAAQ,EAAI,CAAC,CAAC1B,MAAM,CAAC2B,MAAM,IAAI,CAAClB,OAAO;IACvCmB,IAAI,EAAQ,YAAY,KAAK,IAAI,CAAC,CAAC5C,QAAQ,CAAC6C,YAAY,CAAC;EAC7D,CAAC;AACH;AACA,OAAO,SAASC,aAAaA,CAAChD,GAAG,EAAEU,MAAM,EAAEC,SAAS,EAAEC,eAAe,EAAC;EACpE,IAAIqC,OAAO,GAAGvB,YAAY,CAAC,CAAC;EAC5B,IAAGuB,OAAO,CAACb,QAAQ,EAAC;IAClB,OAAO3B,sBAAsB,CAACT,GAAG,EAAEU,MAAM,EAAEC,SAAS,EAAEC,eAAe,CAAC;EACxE,CAAC,MAAI;IACH,OAAOY,sBAAsB,CAACxB,GAAG,EAAEU,MAAM,EAAEC,SAAS,EAAEC,eAAe,CAAC;EACxE;AAEF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}