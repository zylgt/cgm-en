{"ast":null,"code":"import { TIRUtils } from \"@/utils/algorithm/TIR\";\nimport { formatDate, formatTime } from '@/utils/formatTime';\nexport default {\n  name: 'TIR',\n  data() {\n    return {\n      levels: [{\n        key: '2 级高血糖',\n        value: 1,\n        color: '#E98C41',\n        desc: '>13.9mmol/L',\n        target: '5',\n        index: 0\n      }, {\n        key: '1 级高血糖',\n        value: 1,\n        color: '#F6C059',\n        desc: '5.1-13.9mmol/L',\n        target: '25',\n        index: 1\n      }, {\n        key: '目标范围内',\n        value: 60,\n        color: '#32BAC0',\n        desc: '3.9~10.0mmol/L',\n        target: '70',\n        index: 2\n      }, {\n        key: '1 级低血糖',\n        value: 30,\n        color: '#F43F31',\n        desc: '3.0~3.8mmol/L',\n        target: '4',\n        index: 3\n      }, {\n        key: '2 级低血糖',\n        value: 0,\n        color: '#96251C',\n        desc: '<3.0mmol/L',\n        target: '1',\n        index: 4\n      }],\n      tirList: [],\n      canvas: null,\n      ctx: null,\n      highTarget: 0,\n      lowTarget: 0\n    };\n  },\n  created() {},\n  mounted() {\n    console.log(formatTime(new Date()), '组件渲染完成');\n    this.$bus.$on('getDatas', data => {\n      let new_data = _.uniqBy(data[1], 'DataTs');\n      let v_data = _.map(new_data, 'Value');\n      let result = TIRUtils.getTIRResult(v_data);\n      console.log(result);\n      this.$store.dispatch('setTir', {\n        key: data[0],\n        value: result\n      }); //处理完数据存vuex\n      this.levels[0].value = Number((result.veryHighRate * 100).toFixed(1));\n      this.levels[1].value = Number((result.highRate * 100).toFixed(1));\n      this.levels[2].value = Number((result.normalRate * 100).toFixed(1));\n      this.levels[3].value = Number((result.lowRate * 100).toFixed(1));\n      this.levels[4].value = Number((result.veryLowRate * 100).toFixed(1));\n      this.highTarget = this.levels[0].value && this.levels[1].value ? this.levels[0].value + this.levels[1].value : 0;\n      this.lowTarget = this.levels[3].value && this.levels[4].value ? this.levels[4].value + this.levels[4].value : 0;\n      this.tirList = _.filter(this.levels, function (e) {\n        return e.value > 0;\n      });\n      this.$nextTick(() => {\n        this.drawTir();\n      });\n    });\n    this.$bus.$on('getVuexTag', data => {\n      let result = this.$store.state.report.tir[data];\n      this.levels[0].value = Number((result.veryHighRate * 100).toFixed(1));\n      this.levels[1].value = Number((result.highRate * 100).toFixed(1));\n      this.levels[2].value = Number((result.normalRate * 100).toFixed(1));\n      this.levels[3].value = Number((result.lowRate * 100).toFixed(1));\n      this.levels[4].value = Number((result.veryLowRate * 100).toFixed(1));\n      this.highTarget = this.levels[0].value && this.levels[1].value ? this.levels[0].value + this.levels[1].value : 0;\n      this.lowTarget = this.levels[3].value && this.levels[4].value ? this.levels[4].value + this.levels[4].value : 0;\n      this.tirList = _.filter(this.levels, function (e) {\n        return e.value > 0;\n      });\n      this.$nextTick(() => {\n        this.drawTir();\n      });\n    });\n  },\n  methods: {\n    drawTir() {\n      const canvas = document.getElementById(\"myCanvas\");\n      const ctx = canvas.getContext(\"2d\");\n      const W = 160;\n      const H = this.$refs.tir.offsetHeight * 2;\n      canvas.width = W;\n      canvas.height = H;\n      ctx.scale(2, 2);\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      const barW = 40; //柱状图宽度\n      const splitInterval = 1; //间隔距离\n      const lineStart = barW + 5; //标识线x轴起点\n      const lineWidth = 30; //标识线总宽度\n      let start_y = 2; //柱状图y轴起始点 \n      let start_text_y = this.$refs.tir.offsetTop; //第一段文字说明的起点\n      let tir_key_tops = _.sortBy(this.$refs.tirInfo, ['dataset.index']); //每段文字说明y轴起点\n      let noRangeLength = 1; //需要花第2段线的数量\n\n      for (var i = 0; i < this.tirList.length; i++) {\n        let value = Number(this.tirList[i].value) * 2.8;\n\n        // 画柱\n        ctx.fillStyle = this.tirList[i].color;\n        ctx.fillRect(0, start_y, barW, value);\n\n        // 画线\n        let tir_key_top = null;\n        // if( tir_key_tops[i]) tir_key_top = tir_key_tops[i].offsetTop-42-60+3\n        if (tir_key_tops[i]) tir_key_top = tir_key_tops[i].offsetTop - (start_text_y - 13) + 3;\n        let lineOneX = 0;\n        let lineOneY = 0;\n        let lineTwoX = 0;\n        let lineTwoY = 0;\n        let lineThreeX = 0;\n        let lineThreeY = 0;\n        if (tir_key_top - start_y > 10 && start_y + value - tir_key_top > 10) {\n          lineOneX = lineStart + lineWidth;\n          lineOneY = tir_key_top;\n          lineTwoX = lineOneX;\n          lineTwoY = lineOneY;\n          lineThreeX = lineOneX;\n          lineThreeY = lineOneY;\n          noRangeLength = 1;\n        } else {\n          noRangeLength++;\n          lineOneX = tir_key_top < start_y + value ? lineStart + lineWidth - (lineWidth - noRangeLength * 3) : lineStart + (lineWidth - noRangeLength * 3) - lineWidth / 2;\n          lineOneY = start_y + value / 2;\n          lineTwoX = tir_key_top < start_y + value ? lineStart + lineWidth - (lineWidth - noRangeLength * 3) : lineStart + (lineWidth - noRangeLength * 3) - lineWidth / 2;\n          lineTwoY = tir_key_top;\n          lineThreeX = lineStart + lineWidth;\n          lineThreeY = tir_key_top;\n        }\n        if (value != 0) {\n          ctx.lineWidth = \"1\";\n          ctx.strokeStyle = \"#e5e5e5\";\n          ctx.beginPath();\n          ctx.moveTo(lineStart, lineOneY);\n          ctx.lineTo(lineOneX, lineOneY);\n          ctx.lineTo(lineTwoX, lineTwoY);\n          ctx.lineTo(lineThreeX, lineThreeY);\n          ctx.stroke();\n        }\n        start_y = start_y + value + splitInterval;\n      }\n      this.$nextTick(() => {\n        console.log(formatTime(new Date()), '渲染完成');\n      });\n    }\n  },\n  beforeDestroy() {\n    this.$bus.$off('getDatas');\n    this.$bus.$off('getVuexTag');\n  }\n};","map":{"version":3,"names":["TIRUtils","formatDate","formatTime","name","data","levels","key","value","color","desc","target","index","tirList","canvas","ctx","highTarget","lowTarget","created","mounted","console","log","Date","$bus","$on","new_data","_","uniqBy","v_data","map","result","getTIRResult","$store","dispatch","Number","veryHighRate","toFixed","highRate","normalRate","lowRate","veryLowRate","filter","e","$nextTick","drawTir","state","report","tir","methods","document","getElementById","getContext","W","H","$refs","offsetHeight","width","height","scale","clearRect","barW","splitInterval","lineStart","lineWidth","start_y","start_text_y","offsetTop","tir_key_tops","sortBy","tirInfo","noRangeLength","i","length","fillStyle","fillRect","tir_key_top","lineOneX","lineOneY","lineTwoX","lineTwoY","lineThreeX","lineThreeY","strokeStyle","beginPath","moveTo","lineTo","stroke","beforeDestroy","$off"],"sources":["src/views/components/Chart/TIR.vue"],"sourcesContent":["<template>\n    <!-- <div class='TIR' ref='tir'>\n        <canvas id='myCanvas' ref='canvas' class='canvas' ></canvas>\n    </div> -->\n    <div class='TIR' ref='tir'>\n        <canvas id='myCanvas' ref='canvas' class='canvas' ></canvas>\n        <div class='tir-info' >\n            <div class='tir-key' >\n                <div  v-for='(item) in tirList'  :key='item.key'>\n                    <div class='tir-key-item' ref='tirInfo'  :data-index='item.index'  v-if='item.value!=0'>\n                        <div class='tir-key-box'>\n                            <div class='tir-key-legend' :style='{backgroundColor:item.color}'></div>\n                            <div class='tir-key-desc' >\n                                <div class='tir-key-key' >{{item.key}}</div>\n                                <div class='tir-key-range' >{{item.desc}}</div>\n                            </div>\n                        </div>\n                        <div class='tir-value'   >\n                            <div class='tir-key-key ' > <span :class='[item.value>70?\"active\":\"\",\"tir-print-key\"]' >{{item.value}}%</span>(--时--分)</div>\n                            <div class='tir-key-range' v-if='item.index==2'>目标＞{{item.target}}%</div>\n                            <div class='tir-key-range' v-else>目标＜{{item.target}}%</div>\n                        </div>\n                    </div>\n                </div>\n                 <div class='tir-all-1' v-if='highTarget!=0'>\n                    <div class='tir-all-line'></div>\n                    <div class='tir-all-value' >\n                        <div class='tir-key-key' >{{highTarget}}%</div>\n                        <div class='tir-key-range' >目标＜25%</div>\n                    </div>\n                </div>\n                <div class='tir-all-2'  v-if='lowTarget!=0'>\n                    <div class='tir-all-line' ></div>\n                    <div class='tir-all-value'  >\n                        <div class='tir-key-key' >{{lowTarget}}%</div>\n                        <div class='tir-key-range' >目标＜4%</div>\n                    </div>\n                </div>\n            </div>\n            \n        </div>\n    </div>\n</template>\n<script>\nimport { TIRUtils } from \"@/utils/algorithm/TIR\";\nimport {formatDate,formatTime} from '@/utils/formatTime'\nexport default {\n    name:'TIR',\n    data(){\n        return{\n            levels: [\n                {key: '2 级高血糖', value:1, color: '#E98C41', desc: '>13.9mmol/L',target:'5',index:0},\n                {\n                    key: '1 级高血糖',\n                    value: 1,\n                    color: '#F6C059',\n                    desc: '5.1-13.9mmol/L',\n                    target:'25',\n                    index:1\n                },\n                {\n                    key: '目标范围内',\n                    value: 60,\n                    color: '#32BAC0',\n                    desc: '3.9~10.0mmol/L',\n                    target:'70',\n                    index:2\n                },\n                {key: '1 级低血糖', value: 30, color: '#F43F31', desc: '3.0~3.8mmol/L',target:'4', index:3},\n                {key: '2 级低血糖', value:0, color: '#96251C', desc: '<3.0mmol/L',target:'1', index:4},\n            ],\n            tirList:[],\n            canvas:null,\n            ctx:null,\n            highTarget:0,\n            lowTarget:0\n        }\n    },\n    created(){\n    },\n    mounted(){\n        console.log(formatTime(new Date()),'组件渲染完成')\n        this.$bus.$on('getDatas',(data)=>{\n            let new_data = _.uniqBy(data[1],'DataTs')\n            let v_data = _.map(new_data,'Value')\n            let result = TIRUtils.getTIRResult(v_data)\n            console.log(result)\n            this.$store.dispatch('setTir',{key:data[0],value:result}) //处理完数据存vuex\n            this.levels[0].value = Number((result.veryHighRate*100).toFixed(1))\n            this.levels[1].value = Number( (result.highRate*100).toFixed(1))\n            this.levels[2].value = Number( (result.normalRate*100).toFixed(1))\n            this.levels[3].value = Number( (result.lowRate*100).toFixed(1))\n            this.levels[4].value = Number( (result.veryLowRate*100).toFixed(1))\n            this.highTarget = this.levels[0].value && this.levels[1].value ?this.levels[0].value+this.levels[1].value:0\n            this.lowTarget =  this.levels[3].value && this.levels[4].value ?this.levels[4].value+this.levels[4].value:0\n            this.tirList = _.filter(this.levels,function(e){return e.value>0})\n            this.$nextTick(()=>{\n                this.drawTir()\n            }) \n        })\n        this.$bus.$on('getVuexTag',(data)=>{\n            let result  = this.$store.state.report.tir[data]\n            this.levels[0].value = Number((result.veryHighRate*100).toFixed(1))\n            this.levels[1].value = Number( (result.highRate*100).toFixed(1))\n            this.levels[2].value = Number( (result.normalRate*100).toFixed(1))\n            this.levels[3].value = Number( (result.lowRate*100).toFixed(1))\n            this.levels[4].value = Number( (result.veryLowRate*100).toFixed(1))\n            this.highTarget = this.levels[0].value && this.levels[1].value ?this.levels[0].value+this.levels[1].value:0\n            this.lowTarget =  this.levels[3].value && this.levels[4].value ?this.levels[4].value+this.levels[4].value:0\n            this.tirList = _.filter(this.levels,function(e){return e.value>0})\n            this.$nextTick(()=>{\n                this.drawTir()\n            })\n           \n        })\n       \n    },\n    methods:{\n        drawTir(){\n            const canvas = document.getElementById(\"myCanvas\");\n            const ctx = canvas.getContext(\"2d\")\n            const W = 160\n            const H = this.$refs.tir.offsetHeight*2\n            canvas.width = W\n            canvas.height = H\n            ctx.scale(2, 2)\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            \n            const barW = 40 //柱状图宽度\n            const splitInterval = 1 //间隔距离\n            const lineStart = barW+5 //标识线x轴起点\n            const lineWidth =30//标识线总宽度\n            let  start_y = 2 //柱状图y轴起始点 \n            let  start_text_y = this.$refs.tir.offsetTop //第一段文字说明的起点\n            let tir_key_tops = _.sortBy(this.$refs.tirInfo,['dataset.index'])  //每段文字说明y轴起点\n            let noRangeLength = 1 //需要花第2段线的数量\n\n            for(var i=0;i<this.tirList.length;i++){\n                let value = Number(this.tirList[i].value)*2.8\n\n                // 画柱\n                ctx.fillStyle = this.tirList[i].color\n                ctx.fillRect(0,start_y,barW,value)\n\n                // 画线\n                let tir_key_top = null\n                // if( tir_key_tops[i]) tir_key_top = tir_key_tops[i].offsetTop-42-60+3\n                if( tir_key_tops[i]) tir_key_top = tir_key_tops[i].offsetTop-(start_text_y-13)+3\n                let lineOneX = 0\n                let lineOneY = 0\n                let lineTwoX = 0\n                let lineTwoY = 0\n                let lineThreeX = 0\n                let lineThreeY = 0\n                if(tir_key_top-start_y>10&&start_y+value-tir_key_top>10){\n                    lineOneX = lineStart+lineWidth\n                    lineOneY= tir_key_top\n                    lineTwoX =lineOneX\n                    lineTwoY = lineOneY\n                    lineThreeX = lineOneX\n                    lineThreeY = lineOneY\n                    noRangeLength = 1\n                }else{\n                    noRangeLength++\n                    lineOneX = tir_key_top<start_y+value?lineStart+lineWidth-(lineWidth-noRangeLength*3):lineStart+(lineWidth-noRangeLength*3)-lineWidth/2\n                    lineOneY= start_y +(value/2)\n                    lineTwoX =  tir_key_top<start_y+value?lineStart+lineWidth-(lineWidth-noRangeLength*3):lineStart+(lineWidth-noRangeLength*3)-lineWidth/2\n                    lineTwoY = tir_key_top\n                    lineThreeX = lineStart+lineWidth\n                    lineThreeY = tir_key_top\n                }\n                if(value!=0){\n                    ctx.lineWidth=\"1\";\n                    ctx.strokeStyle=\"#e5e5e5\";\n                    ctx.beginPath();\n                    ctx.moveTo(lineStart,lineOneY);\n                    ctx.lineTo(lineOneX,lineOneY);\n                    ctx.lineTo(lineTwoX,lineTwoY);\n                    ctx.lineTo(lineThreeX,lineThreeY);\n                    ctx.stroke();\n                }\n                start_y = start_y + value + splitInterval\n            }\n           this.$nextTick(()=>{\n                console.log(formatTime(new Date()),'渲染完成')\n            })\n        },\n    },\n    beforeDestroy(){\n        this.$bus.$off('getDatas')\n        this.$bus.$off('getVuexTag')\n    }\n}\n</script>\n<style scoped>\n    .TIR{\n        height:300px;\n        display: flex;\n    }\n    .canvas{\n        width:80px;\n        height:300px;\n    }\n    .tir-info{\n        flex-grow: 1;\n        display: flex;\n    }\n    .tir-key{\n        width:100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        position: relative;\n    }\n    .tir-key-item{\n        width:100%;\n        height:47px;\n        display: flex;\n    }\n    .tir-key-box{\n        display: flex;\n        align-items:baseline;\n        width:220px;\n    }\n    .tir-key-legend{\n        width:7px;\n        height:7px;\n        margin-right:10px;\n    }\n    .tir-key-key{\n        font-size:var(--fontSize-max);\n        color:var(--color-black-100);\n        line-height: 26px;\n    }\n    .tir-print-key{\n        font-size:24px;\n        font-weight: 440;\n        line-height: 26px;\n    }\n    .tir-print-key.active{\n        color:var(--color-primary);\n    }\n    .tir-key-range{\n        font-size:var(--fontSize-big);\n        color:var(--color-black-60);\n        line-height: 18px;\n    }\n    .tir-value{\n        width:200px;\n    }\n    .tir-value-all{\n        display: flex;\n    }\n    .tir-all-1{\n        height:60px;\n        display: flex;\n        align-items: center;\n        width:200px;\n        position: absolute;\n        right:0;\n        top:25px;\n    } \n    .tir-all-2{\n        height:60px;\n        display: flex;\n        align-items: center;\n        margin-top:25px;\n        width:200px;\n        position: absolute;\n        right:0;\n        bottom:0;\n    }\n    .tir-all-line{\n        width:120px;\n        height:60px;\n        border-top-right-radius: 10px;\n        border-bottom-right-radius: 10px;\n        border:1px solid var(--color-black-40);\n        border-left:none;\n        margin-right:10px;\n    }\n    .tir-all-value{\n        width:100px;\n    }\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}