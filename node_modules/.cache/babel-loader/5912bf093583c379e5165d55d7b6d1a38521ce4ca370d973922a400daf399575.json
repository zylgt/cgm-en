{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2022 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar _classPrivateFieldInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _classPrivateFieldSet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldSet2.js\").default;\nvar _classPrivateFieldGet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldGet2.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FrameTree = void 0;\nconst Deferred_js_1 = require(\"../util/Deferred.js\");\n/**\n * Keeps track of the page frame tree and it's is managed by\n * {@link FrameManager}. FrameTree uses frame IDs to reference frame and it\n * means that referenced frames might not be in the tree anymore. Thus, the tree\n * structure is eventually consistent.\n * @internal\n */\nvar _frames = /*#__PURE__*/new WeakMap();\nvar _parentIds = /*#__PURE__*/new WeakMap();\nvar _childIds = /*#__PURE__*/new WeakMap();\nvar _mainFrame = /*#__PURE__*/new WeakMap();\nvar _isMainFrameStale = /*#__PURE__*/new WeakMap();\nvar _waitRequests = /*#__PURE__*/new WeakMap();\nclass FrameTree {\n  constructor() {\n    _classPrivateFieldInitSpec(this, _frames, new Map());\n    // frameID -> parentFrameID\n    _classPrivateFieldInitSpec(this, _parentIds, new Map());\n    // frameID -> childFrameIDs\n    _classPrivateFieldInitSpec(this, _childIds, new Map());\n    _classPrivateFieldInitSpec(this, _mainFrame, void 0);\n    _classPrivateFieldInitSpec(this, _isMainFrameStale, false);\n    _classPrivateFieldInitSpec(this, _waitRequests, new Map());\n  }\n  getMainFrame() {\n    return _classPrivateFieldGet(_mainFrame, this);\n  }\n  getById(frameId) {\n    return _classPrivateFieldGet(_frames, this).get(frameId);\n  }\n  /**\n   * Returns a promise that is resolved once the frame with\n   * the given ID is added to the tree.\n   */\n  waitForFrame(frameId) {\n    const frame = this.getById(frameId);\n    if (frame) {\n      return Promise.resolve(frame);\n    }\n    const deferred = Deferred_js_1.Deferred.create();\n    const callbacks = _classPrivateFieldGet(_waitRequests, this).get(frameId) || new Set();\n    callbacks.add(deferred);\n    return deferred.valueOrThrow();\n  }\n  frames() {\n    return Array.from(_classPrivateFieldGet(_frames, this).values());\n  }\n  addFrame(frame) {\n    _classPrivateFieldGet(_frames, this).set(frame._id, frame);\n    if (frame._parentId) {\n      _classPrivateFieldGet(_parentIds, this).set(frame._id, frame._parentId);\n      if (!_classPrivateFieldGet(_childIds, this).has(frame._parentId)) {\n        _classPrivateFieldGet(_childIds, this).set(frame._parentId, new Set());\n      }\n      _classPrivateFieldGet(_childIds, this).get(frame._parentId).add(frame._id);\n    } else if (!_classPrivateFieldGet(_mainFrame, this) || _classPrivateFieldGet(_isMainFrameStale, this)) {\n      _classPrivateFieldSet(_mainFrame, this, frame);\n      _classPrivateFieldSet(_isMainFrameStale, this, false);\n    }\n    _classPrivateFieldGet(_waitRequests, this).get(frame._id)?.forEach(request => {\n      return request.resolve(frame);\n    });\n  }\n  removeFrame(frame) {\n    _classPrivateFieldGet(_frames, this).delete(frame._id);\n    _classPrivateFieldGet(_parentIds, this).delete(frame._id);\n    if (frame._parentId) {\n      _classPrivateFieldGet(_childIds, this).get(frame._parentId)?.delete(frame._id);\n    } else {\n      _classPrivateFieldSet(_isMainFrameStale, this, true);\n    }\n  }\n  childFrames(frameId) {\n    const childIds = _classPrivateFieldGet(_childIds, this).get(frameId);\n    if (!childIds) {\n      return [];\n    }\n    return Array.from(childIds).map(id => {\n      return this.getById(id);\n    }).filter(frame => {\n      return frame !== undefined;\n    });\n  }\n  parentFrame(frameId) {\n    const parentId = _classPrivateFieldGet(_parentIds, this).get(frameId);\n    return parentId ? this.getById(parentId) : undefined;\n  }\n}\nexports.FrameTree = FrameTree;","map":{"version":3,"names":["_classPrivateFieldInitSpec","require","default","_classPrivateFieldSet","_classPrivateFieldGet","Deferred_js_1","_frames","WeakMap","_parentIds","_childIds","_mainFrame","_isMainFrameStale","_waitRequests","FrameTree","constructor","Map","getMainFrame","getById","frameId","get","waitForFrame","frame","Promise","resolve","deferred","Deferred","create","callbacks","Set","add","valueOrThrow","frames","Array","from","values","addFrame","set","_id","_parentId","has","forEach","request","removeFrame","delete","childFrames","childIds","map","id","filter","undefined","parentFrame","parentId","exports"],"sources":["../../../../src/cdp/FrameTree.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}