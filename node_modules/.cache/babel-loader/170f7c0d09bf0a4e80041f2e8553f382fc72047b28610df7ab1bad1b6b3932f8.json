{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar _classPrivateMethodInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateMethodInitSpec.js\").default;\nvar _classPrivateFieldInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _assertClassBrand = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/assertClassBrand.js\").default;\nvar _classPrivateFieldGet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldGet2.js\").default;\nvar _classPrivateFieldSet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldSet2.js\").default;\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isTargetClosedError = exports.Connection = void 0;\nconst CDPSession_js_1 = require(\"../api/CDPSession.js\");\nconst CallbackRegistry_js_1 = require(\"../common/CallbackRegistry.js\");\nconst Debug_js_1 = require(\"../common/Debug.js\");\nconst Errors_js_1 = require(\"../common/Errors.js\");\nconst EventEmitter_js_1 = require(\"../common/EventEmitter.js\");\nconst assert_js_1 = require(\"../util/assert.js\");\nconst ErrorLike_js_1 = require(\"../util/ErrorLike.js\");\nconst CDPSession_js_2 = require(\"./CDPSession.js\");\nconst debugProtocolSend = (0, Debug_js_1.debug)('puppeteer:protocol:SEND ►');\nconst debugProtocolReceive = (0, Debug_js_1.debug)('puppeteer:protocol:RECV ◀');\n/**\n * @public\n */\nvar _url = /*#__PURE__*/new WeakMap();\nvar _transport = /*#__PURE__*/new WeakMap();\nvar _delay = /*#__PURE__*/new WeakMap();\nvar _timeout = /*#__PURE__*/new WeakMap();\nvar _sessions = /*#__PURE__*/new WeakMap();\nvar _closed = /*#__PURE__*/new WeakMap();\nvar _manuallyAttached = /*#__PURE__*/new WeakMap();\nvar _callbacks = /*#__PURE__*/new WeakMap();\nvar _Connection_brand = /*#__PURE__*/new WeakSet();\nclass Connection extends EventEmitter_js_1.EventEmitter {\n  constructor(url, transport, delay = 0, timeout) {\n    super();\n    _classPrivateMethodInitSpec(this, _Connection_brand);\n    _classPrivateFieldInitSpec(this, _url, void 0);\n    _classPrivateFieldInitSpec(this, _transport, void 0);\n    _classPrivateFieldInitSpec(this, _delay, void 0);\n    _classPrivateFieldInitSpec(this, _timeout, void 0);\n    _classPrivateFieldInitSpec(this, _sessions, new Map());\n    _classPrivateFieldInitSpec(this, _closed, false);\n    _classPrivateFieldInitSpec(this, _manuallyAttached, new Set());\n    _classPrivateFieldInitSpec(this, _callbacks, new CallbackRegistry_js_1.CallbackRegistry());\n    _classPrivateFieldSet(_url, this, url);\n    _classPrivateFieldSet(_delay, this, delay);\n    _classPrivateFieldSet(_timeout, this, timeout ?? 180000);\n    _classPrivateFieldSet(_transport, this, transport);\n    _classPrivateFieldGet(_transport, this).onmessage = this.onMessage.bind(this);\n    _classPrivateFieldGet(_transport, this).onclose = _assertClassBrand(_Connection_brand, this, _onClose).bind(this);\n  }\n  static fromSession(session) {\n    return session.connection();\n  }\n  /**\n   * @internal\n   */\n  get delay() {\n    return _classPrivateFieldGet(_delay, this);\n  }\n  get timeout() {\n    return _classPrivateFieldGet(_timeout, this);\n  }\n  /**\n   * @internal\n   */\n  get _closed() {\n    return _classPrivateFieldGet(_closed, this);\n  }\n  /**\n   * @internal\n   */\n  get _sessions() {\n    return _classPrivateFieldGet(_sessions, this);\n  }\n  /**\n   * @param sessionId - The session id\n   * @returns The current CDP session if it exists\n   */\n  session(sessionId) {\n    return _classPrivateFieldGet(_sessions, this).get(sessionId) || null;\n  }\n  url() {\n    return _classPrivateFieldGet(_url, this);\n  }\n  send(method, params, options) {\n    // There is only ever 1 param arg passed, but the Protocol defines it as an\n    // array of 0 or 1 items See this comment:\n    // https://github.com/ChromeDevTools/devtools-protocol/pull/113#issuecomment-412603285\n    // which explains why the protocol defines the params this way for better\n    // type-inference.\n    // So now we check if there are any params or not and deal with them accordingly.\n    return this._rawSend(_classPrivateFieldGet(_callbacks, this), method, params, undefined, options);\n  }\n  /**\n   * @internal\n   */\n  _rawSend(callbacks, method, params, sessionId, options) {\n    (0, assert_js_1.assert)(!_classPrivateFieldGet(_closed, this), 'Protocol error: Connection closed.');\n    return callbacks.create(method, options?.timeout ?? _classPrivateFieldGet(_timeout, this), id => {\n      const stringifiedMessage = JSON.stringify({\n        method,\n        params,\n        id,\n        sessionId\n      });\n      debugProtocolSend(stringifiedMessage);\n      _classPrivateFieldGet(_transport, this).send(stringifiedMessage);\n    });\n  }\n  /**\n   * @internal\n   */\n  async closeBrowser() {\n    await this.send('Browser.close');\n  }\n  /**\n   * @internal\n   */\n  async onMessage(message) {\n    if (_classPrivateFieldGet(_delay, this)) {\n      await new Promise(r => {\n        return setTimeout(r, _classPrivateFieldGet(_delay, this));\n      });\n    }\n    debugProtocolReceive(message);\n    const object = JSON.parse(message);\n    if (object.method === 'Target.attachedToTarget') {\n      const sessionId = object.params.sessionId;\n      const session = new CDPSession_js_2.CdpCDPSession(this, object.params.targetInfo.type, sessionId, object.sessionId);\n      _classPrivateFieldGet(_sessions, this).set(sessionId, session);\n      this.emit(CDPSession_js_1.CDPSessionEvent.SessionAttached, session);\n      const parentSession = _classPrivateFieldGet(_sessions, this).get(object.sessionId);\n      if (parentSession) {\n        parentSession.emit(CDPSession_js_1.CDPSessionEvent.SessionAttached, session);\n      }\n    } else if (object.method === 'Target.detachedFromTarget') {\n      const session = _classPrivateFieldGet(_sessions, this).get(object.params.sessionId);\n      if (session) {\n        session._onClosed();\n        _classPrivateFieldGet(_sessions, this).delete(object.params.sessionId);\n        this.emit(CDPSession_js_1.CDPSessionEvent.SessionDetached, session);\n        const parentSession = _classPrivateFieldGet(_sessions, this).get(object.sessionId);\n        if (parentSession) {\n          parentSession.emit(CDPSession_js_1.CDPSessionEvent.SessionDetached, session);\n        }\n      }\n    }\n    if (object.sessionId) {\n      const session = _classPrivateFieldGet(_sessions, this).get(object.sessionId);\n      if (session) {\n        session._onMessage(object);\n      }\n    } else if (object.id) {\n      if (object.error) {\n        _classPrivateFieldGet(_callbacks, this).reject(object.id, (0, ErrorLike_js_1.createProtocolErrorMessage)(object), object.error.message);\n      } else {\n        _classPrivateFieldGet(_callbacks, this).resolve(object.id, object.result);\n      }\n    } else {\n      this.emit(object.method, object.params);\n    }\n  }\n  dispose() {\n    _assertClassBrand(_Connection_brand, this, _onClose).call(this);\n    _classPrivateFieldGet(_transport, this).close();\n  }\n  /**\n   * @internal\n   */\n  isAutoAttached(targetId) {\n    return !_classPrivateFieldGet(_manuallyAttached, this).has(targetId);\n  }\n  /**\n   * @internal\n   */\n  async _createSession(targetInfo, isAutoAttachEmulated = true) {\n    if (!isAutoAttachEmulated) {\n      _classPrivateFieldGet(_manuallyAttached, this).add(targetInfo.targetId);\n    }\n    const {\n      sessionId\n    } = await this.send('Target.attachToTarget', {\n      targetId: targetInfo.targetId,\n      flatten: true\n    });\n    _classPrivateFieldGet(_manuallyAttached, this).delete(targetInfo.targetId);\n    const session = _classPrivateFieldGet(_sessions, this).get(sessionId);\n    if (!session) {\n      throw new Error('CDPSession creation failed.');\n    }\n    return session;\n  }\n  /**\n   * @param targetInfo - The target info\n   * @returns The CDP session that is created\n   */\n  async createSession(targetInfo) {\n    return await this._createSession(targetInfo, false);\n  }\n  /**\n   * @internal\n   */\n  getPendingProtocolErrors() {\n    const result = [];\n    result.push(..._classPrivateFieldGet(_callbacks, this).getPendingProtocolErrors());\n    for (const session of _classPrivateFieldGet(_sessions, this).values()) {\n      result.push(...session.getPendingProtocolErrors());\n    }\n    return result;\n  }\n}\nfunction _onClose() {\n  if (_classPrivateFieldGet(_closed, this)) {\n    return;\n  }\n  _classPrivateFieldSet(_closed, this, true);\n  _classPrivateFieldGet(_transport, this).onmessage = undefined;\n  _classPrivateFieldGet(_transport, this).onclose = undefined;\n  _classPrivateFieldGet(_callbacks, this).clear();\n  for (const session of _classPrivateFieldGet(_sessions, this).values()) {\n    session._onClosed();\n  }\n  _classPrivateFieldGet(_sessions, this).clear();\n  this.emit(CDPSession_js_1.CDPSessionEvent.Disconnected, undefined);\n}\nexports.Connection = Connection;\n/**\n * @internal\n */\nfunction isTargetClosedError(error) {\n  return error instanceof Errors_js_1.TargetCloseError;\n}\nexports.isTargetClosedError = isTargetClosedError;","map":{"version":3,"names":["_classPrivateMethodInitSpec","require","default","_classPrivateFieldInitSpec","_assertClassBrand","_classPrivateFieldGet","_classPrivateFieldSet","CDPSession_js_1","CallbackRegistry_js_1","Debug_js_1","Errors_js_1","EventEmitter_js_1","assert_js_1","ErrorLike_js_1","CDPSession_js_2","debugProtocolSend","debug","debugProtocolReceive","_url","WeakMap","_transport","_delay","_timeout","_sessions","_closed","_manuallyAttached","_callbacks","_Connection_brand","WeakSet","Connection","EventEmitter","constructor","url","transport","delay","timeout","Map","Set","CallbackRegistry","onmessage","onMessage","bind","onclose","_onClose","fromSession","session","connection","sessionId","get","send","method","params","options","_rawSend","undefined","callbacks","assert","create","id","stringifiedMessage","JSON","stringify","closeBrowser","message","Promise","r","setTimeout","object","parse","CdpCDPSession","targetInfo","type","set","emit","CDPSessionEvent","SessionAttached","parentSession","_onClosed","delete","SessionDetached","_onMessage","error","reject","createProtocolErrorMessage","resolve","result","dispose","call","close","isAutoAttached","targetId","has","_createSession","isAutoAttachEmulated","add","flatten","Error","createSession","getPendingProtocolErrors","push","values","clear","Disconnected","exports","isTargetClosedError","TargetCloseError"],"sources":["../../../../src/cdp/Connection.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}