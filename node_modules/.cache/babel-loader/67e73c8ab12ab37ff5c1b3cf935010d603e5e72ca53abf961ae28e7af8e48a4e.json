{"ast":null,"code":"\"use strict\";\n\nvar _classPrivateFieldInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _classPrivateFieldGet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldGet2.js\").default;\nvar _classPrivateFieldSet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldSet2.js\").default;\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Tracing = void 0;\nconst util_js_1 = require(\"../common/util.js\");\nconst assert_js_1 = require(\"../util/assert.js\");\nconst Deferred_js_1 = require(\"../util/Deferred.js\");\nconst ErrorLike_js_1 = require(\"../util/ErrorLike.js\");\n/**\n * The Tracing class exposes the tracing audit interface.\n * @remarks\n * You can use `tracing.start` and `tracing.stop` to create a trace file\n * which can be opened in Chrome DevTools or {@link https://chromedevtools.github.io/timeline-viewer/ | timeline viewer}.\n *\n * @example\n *\n * ```ts\n * await page.tracing.start({path: 'trace.json'});\n * await page.goto('https://www.google.com');\n * await page.tracing.stop();\n * ```\n *\n * @public\n */\nvar _client = /*#__PURE__*/new WeakMap();\nvar _recording = /*#__PURE__*/new WeakMap();\nvar _path = /*#__PURE__*/new WeakMap();\nclass Tracing {\n  /**\n   * @internal\n   */\n  constructor(client) {\n    _classPrivateFieldInitSpec(this, _client, void 0);\n    _classPrivateFieldInitSpec(this, _recording, false);\n    _classPrivateFieldInitSpec(this, _path, void 0);\n    _classPrivateFieldSet(_client, this, client);\n  }\n  /**\n   * @internal\n   */\n  updateClient(client) {\n    _classPrivateFieldSet(_client, this, client);\n  }\n  /**\n   * Starts a trace for the current page.\n   * @remarks\n   * Only one trace can be active at a time per browser.\n   *\n   * @param options - Optional `TracingOptions`.\n   */\n  async start(options = {}) {\n    (0, assert_js_1.assert)(!_classPrivateFieldGet(_recording, this), 'Cannot start recording trace while already recording trace.');\n    const defaultCategories = ['-*', 'devtools.timeline', 'v8.execute', 'disabled-by-default-devtools.timeline', 'disabled-by-default-devtools.timeline.frame', 'toplevel', 'blink.console', 'blink.user_timing', 'latencyInfo', 'disabled-by-default-devtools.timeline.stack', 'disabled-by-default-v8.cpu_profiler'];\n    const {\n      path,\n      screenshots = false,\n      categories = defaultCategories\n    } = options;\n    if (screenshots) {\n      categories.push('disabled-by-default-devtools.screenshot');\n    }\n    const excludedCategories = categories.filter(cat => {\n      return cat.startsWith('-');\n    }).map(cat => {\n      return cat.slice(1);\n    });\n    const includedCategories = categories.filter(cat => {\n      return !cat.startsWith('-');\n    });\n    _classPrivateFieldSet(_path, this, path);\n    _classPrivateFieldSet(_recording, this, true);\n    await _classPrivateFieldGet(_client, this).send('Tracing.start', {\n      transferMode: 'ReturnAsStream',\n      traceConfig: {\n        excludedCategories,\n        includedCategories\n      }\n    });\n  }\n  /**\n   * Stops a trace started with the `start` method.\n   * @returns Promise which resolves to buffer with trace data.\n   */\n  async stop() {\n    const contentDeferred = Deferred_js_1.Deferred.create();\n    _classPrivateFieldGet(_client, this).once('Tracing.tracingComplete', async event => {\n      try {\n        (0, assert_js_1.assert)(event.stream, 'Missing \"stream\"');\n        const readable = await (0, util_js_1.getReadableFromProtocolStream)(_classPrivateFieldGet(_client, this), event.stream);\n        const buffer = await (0, util_js_1.getReadableAsBuffer)(readable, _classPrivateFieldGet(_path, this));\n        contentDeferred.resolve(buffer ?? undefined);\n      } catch (error) {\n        if ((0, ErrorLike_js_1.isErrorLike)(error)) {\n          contentDeferred.reject(error);\n        } else {\n          contentDeferred.reject(new Error(`Unknown error: ${error}`));\n        }\n      }\n    });\n    await _classPrivateFieldGet(_client, this).send('Tracing.end');\n    _classPrivateFieldSet(_recording, this, false);\n    return await contentDeferred.valueOrThrow();\n  }\n}\nexports.Tracing = Tracing;","map":{"version":3,"names":["util_js_1","require","assert_js_1","Deferred_js_1","ErrorLike_js_1","_client","WeakMap","_recording","_path","Tracing","constructor","client","_classPrivateFieldInitSpec","_classPrivateFieldSet","updateClient","start","options","assert","_classPrivateFieldGet","defaultCategories","path","screenshots","categories","push","excludedCategories","filter","cat","startsWith","map","slice","includedCategories","send","transferMode","traceConfig","stop","contentDeferred","Deferred","create","once","event","stream","readable","getReadableFromProtocolStream","buffer","getReadableAsBuffer","resolve","undefined","error","isErrorLike","reject","Error","valueOrThrow","exports"],"sources":["../../../../src/cdp/Tracing.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}