{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nrequire(\"core-js/modules/web.url-search-params.delete.js\");\nrequire(\"core-js/modules/web.url-search-params.has.js\");\nrequire(\"core-js/modules/web.url-search-params.size.js\");\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.canDownload = exports.getInstalledBrowsers = exports.uninstall = exports.install = void 0;\nconst assert_1 = __importDefault(require(\"assert\"));\nconst fs_1 = require(\"fs\");\nconst promises_1 = require(\"fs/promises\");\nconst os_1 = __importDefault(require(\"os\"));\nconst path_1 = __importDefault(require(\"path\"));\nconst browser_data_js_1 = require(\"./browser-data/browser-data.js\");\nconst Cache_js_1 = require(\"./Cache.js\");\nconst debug_js_1 = require(\"./debug.js\");\nconst detectPlatform_js_1 = require(\"./detectPlatform.js\");\nconst fileUtil_js_1 = require(\"./fileUtil.js\");\nconst httpUtil_js_1 = require(\"./httpUtil.js\");\nconst debugInstall = (0, debug_js_1.debug)('puppeteer:browsers:install');\nconst times = new Map();\nfunction debugTime(label) {\n  times.set(label, process.hrtime());\n}\nfunction debugTimeEnd(label) {\n  const end = process.hrtime();\n  const start = times.get(label);\n  if (!start) {\n    return;\n  }\n  const duration = end[0] * 1000 + end[1] / 1e6 - (start[0] * 1000 + start[1] / 1e6); // calculate duration in milliseconds\n  debugInstall(`Duration for ${label}: ${duration}ms`);\n}\nasync function install(options) {\n  options.platform ??= (0, detectPlatform_js_1.detectBrowserPlatform)();\n  options.unpack ??= true;\n  if (!options.platform) {\n    throw new Error(`Cannot download a binary for the provided platform: ${os_1.default.platform()} (${os_1.default.arch()})`);\n  }\n  const url = getDownloadUrl(options.browser, options.platform, options.buildId, options.baseUrl);\n  try {\n    return await installUrl(url, options);\n  } catch (err) {\n    // If custom baseUrl is provided, do not fall back to CfT dashboard.\n    if (options.baseUrl && !options.forceFallbackForTesting) {\n      throw err;\n    }\n    debugInstall(`Error downloading from ${url}.`);\n    switch (options.browser) {\n      case browser_data_js_1.Browser.CHROME:\n      case browser_data_js_1.Browser.CHROMEDRIVER:\n      case browser_data_js_1.Browser.CHROMEHEADLESSSHELL:\n        {\n          debugInstall(`Trying to find download URL via https://googlechromelabs.github.io/chrome-for-testing.`);\n          const version = await (0, httpUtil_js_1.getJSON)(new URL(`https://googlechromelabs.github.io/chrome-for-testing/${options.buildId}.json`));\n          let platform = '';\n          switch (options.platform) {\n            case browser_data_js_1.BrowserPlatform.LINUX:\n              platform = 'linux64';\n              break;\n            case browser_data_js_1.BrowserPlatform.MAC_ARM:\n              platform = 'mac-arm64';\n              break;\n            case browser_data_js_1.BrowserPlatform.MAC:\n              platform = 'mac-x64';\n              break;\n            case browser_data_js_1.BrowserPlatform.WIN32:\n              platform = 'win32';\n              break;\n            case browser_data_js_1.BrowserPlatform.WIN64:\n              platform = 'win64';\n              break;\n          }\n          const url = version.downloads[options.browser]?.find(link => {\n            return link['platform'] === platform;\n          })?.url;\n          if (url) {\n            debugInstall(`Falling back to downloading from ${url}.`);\n            return await installUrl(new URL(url), options);\n          }\n          throw err;\n        }\n      default:\n        throw err;\n    }\n  }\n}\nexports.install = install;\nasync function installUrl(url, options) {\n  options.platform ??= (0, detectPlatform_js_1.detectBrowserPlatform)();\n  if (!options.platform) {\n    throw new Error(`Cannot download a binary for the provided platform: ${os_1.default.platform()} (${os_1.default.arch()})`);\n  }\n  const fileName = url.toString().split('/').pop();\n  (0, assert_1.default)(fileName, `A malformed download URL was found: ${url}.`);\n  const cache = new Cache_js_1.Cache(options.cacheDir);\n  const browserRoot = cache.browserRoot(options.browser);\n  const archivePath = path_1.default.join(browserRoot, `${options.buildId}-${fileName}`);\n  if (!(0, fs_1.existsSync)(browserRoot)) {\n    await (0, promises_1.mkdir)(browserRoot, {\n      recursive: true\n    });\n  }\n  if (!options.unpack) {\n    if ((0, fs_1.existsSync)(archivePath)) {\n      return archivePath;\n    }\n    debugInstall(`Downloading binary from ${url}`);\n    debugTime('download');\n    await (0, httpUtil_js_1.downloadFile)(url, archivePath, options.downloadProgressCallback);\n    debugTimeEnd('download');\n    return archivePath;\n  }\n  const outputPath = cache.installationDir(options.browser, options.platform, options.buildId);\n  try {\n    if ((0, fs_1.existsSync)(outputPath)) {\n      const installedBrowser = new Cache_js_1.InstalledBrowser(cache, options.browser, options.buildId, options.platform);\n      if (!(0, fs_1.existsSync)(installedBrowser.executablePath)) {\n        throw new Error(`The browser folder (${outputPath}) exists but the executable (${installedBrowser.executablePath}) is missing`);\n      }\n      return installedBrowser;\n    }\n    debugInstall(`Downloading binary from ${url}`);\n    try {\n      debugTime('download');\n      await (0, httpUtil_js_1.downloadFile)(url, archivePath, options.downloadProgressCallback);\n    } finally {\n      debugTimeEnd('download');\n    }\n    debugInstall(`Installing ${archivePath} to ${outputPath}`);\n    try {\n      debugTime('extract');\n      await (0, fileUtil_js_1.unpackArchive)(archivePath, outputPath);\n    } finally {\n      debugTimeEnd('extract');\n    }\n    const installedBrowser = new Cache_js_1.InstalledBrowser(cache, options.browser, options.buildId, options.platform);\n    if (options.buildIdAlias) {\n      const metadata = installedBrowser.readMetadata();\n      metadata.aliases[options.buildIdAlias] = options.buildId;\n      installedBrowser.writeMetadata(metadata);\n    }\n    return installedBrowser;\n  } finally {\n    if ((0, fs_1.existsSync)(archivePath)) {\n      await (0, promises_1.unlink)(archivePath);\n    }\n  }\n}\n/**\n *\n * @public\n */\nasync function uninstall(options) {\n  options.platform ??= (0, detectPlatform_js_1.detectBrowserPlatform)();\n  if (!options.platform) {\n    throw new Error(`Cannot detect the browser platform for: ${os_1.default.platform()} (${os_1.default.arch()})`);\n  }\n  new Cache_js_1.Cache(options.cacheDir).uninstall(options.browser, options.platform, options.buildId);\n}\nexports.uninstall = uninstall;\n/**\n * Returns metadata about browsers installed in the cache directory.\n *\n * @public\n */\nasync function getInstalledBrowsers(options) {\n  return new Cache_js_1.Cache(options.cacheDir).getInstalledBrowsers();\n}\nexports.getInstalledBrowsers = getInstalledBrowsers;\n/**\n * @public\n */\nasync function canDownload(options) {\n  options.platform ??= (0, detectPlatform_js_1.detectBrowserPlatform)();\n  if (!options.platform) {\n    throw new Error(`Cannot download a binary for the provided platform: ${os_1.default.platform()} (${os_1.default.arch()})`);\n  }\n  return await (0, httpUtil_js_1.headHttpRequest)(getDownloadUrl(options.browser, options.platform, options.buildId, options.baseUrl));\n}\nexports.canDownload = canDownload;\nfunction getDownloadUrl(browser, platform, buildId, baseUrl) {\n  return new URL(browser_data_js_1.downloadUrls[browser](platform, buildId, baseUrl));\n}","map":{"version":3,"names":["require","assert_1","__importDefault","fs_1","promises_1","os_1","path_1","browser_data_js_1","Cache_js_1","debug_js_1","detectPlatform_js_1","fileUtil_js_1","httpUtil_js_1","debugInstall","debug","times","Map","debugTime","label","set","process","hrtime","debugTimeEnd","end","start","get","duration","install","options","platform","detectBrowserPlatform","unpack","Error","default","arch","url","getDownloadUrl","browser","buildId","baseUrl","installUrl","err","forceFallbackForTesting","Browser","CHROME","CHROMEDRIVER","CHROMEHEADLESSSHELL","version","getJSON","URL","BrowserPlatform","LINUX","MAC_ARM","MAC","WIN32","WIN64","downloads","find","link","exports","fileName","toString","split","pop","cache","Cache","cacheDir","browserRoot","archivePath","join","existsSync","mkdir","recursive","downloadFile","downloadProgressCallback","outputPath","installationDir","installedBrowser","InstalledBrowser","executablePath","unpackArchive","buildIdAlias","metadata","readMetadata","aliases","writeMetadata","unlink","uninstall","getInstalledBrowsers","canDownload","headHttpRequest","downloadUrls"],"sources":["../../src/install.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}