{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar _assertClassBrand = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/assertClassBrand.js\").default;\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.regexp.flags.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BidiSerializer = void 0;\nconst util_js_1 = require(\"../common/util.js\");\n/**\n * @internal\n */\nclass UnserializableError extends Error {}\n/**\n * @internal\n */\nclass BidiSerializer {\n  static serialize(arg) {\n    switch (typeof arg) {\n      case 'symbol':\n      case 'function':\n        throw new UnserializableError(`Unable to serializable ${typeof arg}`);\n      case 'object':\n        return _assertClassBrand(BidiSerializer, this, _serializeObject).call(this, arg);\n      case 'undefined':\n        return {\n          type: 'undefined'\n        };\n      case 'number':\n        return _assertClassBrand(BidiSerializer, this, _serializeNumber).call(this, arg);\n      case 'bigint':\n        return {\n          type: 'bigint',\n          value: arg.toString()\n        };\n      case 'string':\n        return {\n          type: 'string',\n          value: arg\n        };\n      case 'boolean':\n        return {\n          type: 'boolean',\n          value: arg\n        };\n    }\n  }\n}\nfunction _serializeNumber(arg) {\n  let value;\n  if (Object.is(arg, -0)) {\n    value = '-0';\n  } else if (Object.is(arg, Infinity)) {\n    value = 'Infinity';\n  } else if (Object.is(arg, -Infinity)) {\n    value = '-Infinity';\n  } else if (Object.is(arg, NaN)) {\n    value = 'NaN';\n  } else {\n    value = arg;\n  }\n  return {\n    type: 'number',\n    value\n  };\n}\nfunction _serializeObject(arg) {\n  if (arg === null) {\n    return {\n      type: 'null'\n    };\n  } else if (Array.isArray(arg)) {\n    const parsedArray = arg.map(subArg => {\n      return this.serialize(subArg);\n    });\n    return {\n      type: 'array',\n      value: parsedArray\n    };\n  } else if ((0, util_js_1.isPlainObject)(arg)) {\n    try {\n      JSON.stringify(arg);\n    } catch (error) {\n      if (error instanceof TypeError && error.message.startsWith('Converting circular structure to JSON')) {\n        error.message += ' Recursive objects are not allowed.';\n      }\n      throw error;\n    }\n    const parsedObject = [];\n    for (const key in arg) {\n      parsedObject.push([this.serialize(key), this.serialize(arg[key])]);\n    }\n    return {\n      type: 'object',\n      value: parsedObject\n    };\n  } else if ((0, util_js_1.isRegExp)(arg)) {\n    return {\n      type: 'regexp',\n      value: {\n        pattern: arg.source,\n        flags: arg.flags\n      }\n    };\n  } else if ((0, util_js_1.isDate)(arg)) {\n    return {\n      type: 'date',\n      value: arg.toISOString()\n    };\n  }\n  throw new UnserializableError('Custom object sterilization not possible. Use plain objects instead.');\n}\nexports.BidiSerializer = BidiSerializer;","map":{"version":3,"names":["_assertClassBrand","require","default","util_js_1","UnserializableError","Error","BidiSerializer","serialize","arg","_serializeObject","call","type","_serializeNumber","value","toString","Object","is","Infinity","NaN","Array","isArray","parsedArray","map","subArg","isPlainObject","JSON","stringify","error","TypeError","message","startsWith","parsedObject","key","push","isRegExp","pattern","source","flags","isDate","toISOString","exports"],"sources":["../../../../src/bidi/Serializer.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}