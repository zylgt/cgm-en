{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RE_URL_WITH_PORT = exports.RE_URL = exports.RE_ZONE_STRING = exports.RE_SUBNET_STRING = exports.RE_BAD_ADDRESS = exports.RE_BAD_CHARACTERS = exports.TYPES = exports.SCOPES = exports.GROUPS = exports.BITS = void 0;\nexports.BITS = 128;\nexports.GROUPS = 8;\n/**\n * Represents IPv6 address scopes\n * @memberof Address6\n * @static\n */\nexports.SCOPES = {\n  0: 'Reserved',\n  1: 'Interface local',\n  2: 'Link local',\n  4: 'Admin local',\n  5: 'Site local',\n  8: 'Organization local',\n  14: 'Global',\n  15: 'Reserved'\n};\n/**\n * Represents IPv6 address types\n * @memberof Address6\n * @static\n */\nexports.TYPES = {\n  'ff01::1/128': 'Multicast (All nodes on this interface)',\n  'ff01::2/128': 'Multicast (All routers on this interface)',\n  'ff02::1/128': 'Multicast (All nodes on this link)',\n  'ff02::2/128': 'Multicast (All routers on this link)',\n  'ff05::2/128': 'Multicast (All routers in this site)',\n  'ff02::5/128': 'Multicast (OSPFv3 AllSPF routers)',\n  'ff02::6/128': 'Multicast (OSPFv3 AllDR routers)',\n  'ff02::9/128': 'Multicast (RIP routers)',\n  'ff02::a/128': 'Multicast (EIGRP routers)',\n  'ff02::d/128': 'Multicast (PIM routers)',\n  'ff02::16/128': 'Multicast (MLDv2 reports)',\n  'ff01::fb/128': 'Multicast (mDNSv6)',\n  'ff02::fb/128': 'Multicast (mDNSv6)',\n  'ff05::fb/128': 'Multicast (mDNSv6)',\n  'ff02::1:2/128': 'Multicast (All DHCP servers and relay agents on this link)',\n  'ff05::1:2/128': 'Multicast (All DHCP servers and relay agents in this site)',\n  'ff02::1:3/128': 'Multicast (All DHCP servers on this link)',\n  'ff05::1:3/128': 'Multicast (All DHCP servers in this site)',\n  '::/128': 'Unspecified',\n  '::1/128': 'Loopback',\n  'ff00::/8': 'Multicast',\n  'fe80::/10': 'Link-local unicast'\n};\n/**\n * A regular expression that matches bad characters in an IPv6 address\n * @memberof Address6\n * @static\n */\nexports.RE_BAD_CHARACTERS = /([^0-9a-f:/%])/gi;\n/**\n * A regular expression that matches an incorrect IPv6 address\n * @memberof Address6\n * @static\n */\nexports.RE_BAD_ADDRESS = /([0-9a-f]{5,}|:{3,}|[^:]:$|^:[^:]|\\/$)/gi;\n/**\n * A regular expression that matches an IPv6 subnet\n * @memberof Address6\n * @static\n */\nexports.RE_SUBNET_STRING = /\\/\\d{1,3}(?=%|$)/;\n/**\n * A regular expression that matches an IPv6 zone\n * @memberof Address6\n * @static\n */\nexports.RE_ZONE_STRING = /%.*$/;\nexports.RE_URL = new RegExp(/^\\[{0,1}([0-9a-f:]+)\\]{0,1}/);\nexports.RE_URL_WITH_PORT = new RegExp(/\\[([0-9a-f:]+)\\]:([0-9]{1,5})/);","map":{"version":3,"names":["exports","BITS","GROUPS","SCOPES","TYPES","RE_BAD_CHARACTERS","RE_BAD_ADDRESS","RE_SUBNET_STRING","RE_ZONE_STRING","RE_URL","RegExp","RE_URL_WITH_PORT"],"sources":["../../src/v6/constants.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAaA,OAAA,CAAAC,IAAI,GAAG,GAAG;AACVD,OAAA,CAAAE,MAAM,GAAG,CAAC;AAEvB;;;;;AAKaF,OAAA,CAAAG,MAAM,GAA0C;EAC3D,CAAC,EAAE,UAAU;EACb,CAAC,EAAE,iBAAiB;EACpB,CAAC,EAAE,YAAY;EACf,CAAC,EAAE,aAAa;EAChB,CAAC,EAAE,YAAY;EACf,CAAC,EAAE,oBAAoB;EACvB,EAAE,EAAE,QAAQ;EACZ,EAAE,EAAE;CACI;AAEV;;;;;AAKaH,OAAA,CAAAI,KAAK,GAA0C;EAC1D,aAAa,EAAE,yCAAyC;EACxD,aAAa,EAAE,2CAA2C;EAC1D,aAAa,EAAE,oCAAoC;EACnD,aAAa,EAAE,sCAAsC;EACrD,aAAa,EAAE,sCAAsC;EACrD,aAAa,EAAE,mCAAmC;EAClD,aAAa,EAAE,kCAAkC;EACjD,aAAa,EAAE,yBAAyB;EACxC,aAAa,EAAE,2BAA2B;EAC1C,aAAa,EAAE,yBAAyB;EACxC,cAAc,EAAE,2BAA2B;EAC3C,cAAc,EAAE,oBAAoB;EACpC,cAAc,EAAE,oBAAoB;EACpC,cAAc,EAAE,oBAAoB;EACpC,eAAe,EAAE,4DAA4D;EAC7E,eAAe,EAAE,4DAA4D;EAC7E,eAAe,EAAE,2CAA2C;EAC5D,eAAe,EAAE,2CAA2C;EAC5D,QAAQ,EAAE,aAAa;EACvB,SAAS,EAAE,UAAU;EACrB,UAAU,EAAE,WAAW;EACvB,WAAW,EAAE;CACL;AAEV;;;;;AAKaJ,OAAA,CAAAK,iBAAiB,GAAG,kBAAkB;AAEnD;;;;;AAKaL,OAAA,CAAAM,cAAc,GAAG,0CAA0C;AAExE;;;;;AAKaN,OAAA,CAAAO,gBAAgB,GAAG,kBAAkB;AAElD;;;;;AAKaP,OAAA,CAAAQ,cAAc,GAAG,MAAM;AAEvBR,OAAA,CAAAS,MAAM,GAAG,IAAIC,MAAM,CAAC,6BAA6B,CAAC;AAClDV,OAAA,CAAAW,gBAAgB,GAAG,IAAID,MAAM,CAAC,+BAA+B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}