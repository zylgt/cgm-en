{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar _classPrivateMethodInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateMethodInitSpec.js\").default;\nvar _defineProperty = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nvar _classPrivateFieldInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _assertClassBrand = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/assertClassBrand.js\").default;\nvar _classPrivateFieldSet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldSet2.js\").default;\nvar _classPrivateFieldGet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldGet2.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FrameManager = void 0;\nconst CDPSession_js_1 = require(\"../api/CDPSession.js\");\nconst Frame_js_1 = require(\"../api/Frame.js\");\nconst EventEmitter_js_1 = require(\"../common/EventEmitter.js\");\nconst util_js_1 = require(\"../common/util.js\");\nconst assert_js_1 = require(\"../util/assert.js\");\nconst Deferred_js_1 = require(\"../util/Deferred.js\");\nconst disposable_js_1 = require(\"../util/disposable.js\");\nconst ErrorLike_js_1 = require(\"../util/ErrorLike.js\");\nconst CDPSession_js_2 = require(\"./CDPSession.js\");\nconst Connection_js_1 = require(\"./Connection.js\");\nconst DeviceRequestPrompt_js_1 = require(\"./DeviceRequestPrompt.js\");\nconst ExecutionContext_js_1 = require(\"./ExecutionContext.js\");\nconst Frame_js_2 = require(\"./Frame.js\");\nconst FrameManagerEvents_js_1 = require(\"./FrameManagerEvents.js\");\nconst FrameTree_js_1 = require(\"./FrameTree.js\");\nconst IsolatedWorlds_js_1 = require(\"./IsolatedWorlds.js\");\nconst NetworkManager_js_1 = require(\"./NetworkManager.js\");\nconst TIME_FOR_WAITING_FOR_SWAP = 100; // ms.\n/**\n * A frame manager manages the frames for a given {@link Page | page}.\n *\n * @internal\n */\nvar _page = /*#__PURE__*/new WeakMap();\nvar _networkManager = /*#__PURE__*/new WeakMap();\nvar _timeoutSettings = /*#__PURE__*/new WeakMap();\nvar _isolatedWorlds = /*#__PURE__*/new WeakMap();\nvar _client = /*#__PURE__*/new WeakMap();\nvar _frameNavigatedReceived = /*#__PURE__*/new WeakMap();\nvar _deviceRequestPromptManagerMap = /*#__PURE__*/new WeakMap();\nvar _frameTreeHandled = /*#__PURE__*/new WeakMap();\nvar _FrameManager_brand = /*#__PURE__*/new WeakSet();\nclass FrameManager extends EventEmitter_js_1.EventEmitter {\n  get timeoutSettings() {\n    return _classPrivateFieldGet(_timeoutSettings, this);\n  }\n  get networkManager() {\n    return _classPrivateFieldGet(_networkManager, this);\n  }\n  get client() {\n    return _classPrivateFieldGet(_client, this);\n  }\n  constructor(client, page, timeoutSettings) {\n    super();\n    /**\n     * Called when the frame's client is disconnected. We don't know if the\n     * disconnect means that the frame is removed or if it will be replaced by a\n     * new frame. Therefore, we wait for a swap event.\n     */\n    _classPrivateMethodInitSpec(this, _FrameManager_brand);\n    _classPrivateFieldInitSpec(this, _page, void 0);\n    _classPrivateFieldInitSpec(this, _networkManager, void 0);\n    _classPrivateFieldInitSpec(this, _timeoutSettings, void 0);\n    _classPrivateFieldInitSpec(this, _isolatedWorlds, new Set());\n    _classPrivateFieldInitSpec(this, _client, void 0);\n    _defineProperty(this, \"_frameTree\", new FrameTree_js_1.FrameTree());\n    /**\n     * Set of frame IDs stored to indicate if a frame has received a\n     * frameNavigated event so that frame tree responses could be ignored as the\n     * frameNavigated event usually contains the latest information.\n     */\n    _classPrivateFieldInitSpec(this, _frameNavigatedReceived, new Set());\n    _classPrivateFieldInitSpec(this, _deviceRequestPromptManagerMap, new WeakMap());\n    _classPrivateFieldInitSpec(this, _frameTreeHandled, void 0);\n    _classPrivateFieldSet(_client, this, client);\n    _classPrivateFieldSet(_page, this, page);\n    _classPrivateFieldSet(_networkManager, this, new NetworkManager_js_1.NetworkManager(this));\n    _classPrivateFieldSet(_timeoutSettings, this, timeoutSettings);\n    this.setupEventListeners(_classPrivateFieldGet(_client, this));\n    client.once(CDPSession_js_1.CDPSessionEvent.Disconnected, () => {\n      _assertClassBrand(_FrameManager_brand, this, _onClientDisconnect).call(this).catch(util_js_1.debugError);\n    });\n  }\n  /**\n   * When the main frame is replaced by another main frame,\n   * we maintain the main frame object identity while updating\n   * its frame tree and ID.\n   */\n  async swapFrameTree(client) {\n    _classPrivateFieldSet(_client, this, client);\n    (0, assert_js_1.assert)(_classPrivateFieldGet(_client, this) instanceof CDPSession_js_2.CdpCDPSession, 'CDPSession is not an instance of CDPSessionImpl.');\n    const frame = this._frameTree.getMainFrame();\n    if (frame) {\n      _classPrivateFieldGet(_frameNavigatedReceived, this).add(_classPrivateFieldGet(_client, this)._target()._targetId);\n      this._frameTree.removeFrame(frame);\n      frame.updateId(_classPrivateFieldGet(_client, this)._target()._targetId);\n      this._frameTree.addFrame(frame);\n      frame.updateClient(client);\n    }\n    this.setupEventListeners(client);\n    client.once(CDPSession_js_1.CDPSessionEvent.Disconnected, () => {\n      _assertClassBrand(_FrameManager_brand, this, _onClientDisconnect).call(this).catch(util_js_1.debugError);\n    });\n    await this.initialize(client);\n    await _classPrivateFieldGet(_networkManager, this).addClient(client);\n    if (frame) {\n      frame.emit(Frame_js_1.FrameEvent.FrameSwappedByActivation, undefined);\n    }\n  }\n  async registerSpeculativeSession(client) {\n    await _classPrivateFieldGet(_networkManager, this).addClient(client);\n  }\n  setupEventListeners(session) {\n    session.on('Page.frameAttached', async event => {\n      await _classPrivateFieldGet(_frameTreeHandled, this)?.valueOrThrow();\n      _assertClassBrand(_FrameManager_brand, this, _onFrameAttached).call(this, session, event.frameId, event.parentFrameId);\n    });\n    session.on('Page.frameNavigated', async event => {\n      _classPrivateFieldGet(_frameNavigatedReceived, this).add(event.frame.id);\n      await _classPrivateFieldGet(_frameTreeHandled, this)?.valueOrThrow();\n      void _assertClassBrand(_FrameManager_brand, this, _onFrameNavigated).call(this, event.frame, event.type);\n    });\n    session.on('Page.navigatedWithinDocument', async event => {\n      await _classPrivateFieldGet(_frameTreeHandled, this)?.valueOrThrow();\n      _assertClassBrand(_FrameManager_brand, this, _onFrameNavigatedWithinDocument).call(this, event.frameId, event.url);\n    });\n    session.on('Page.frameDetached', async event => {\n      await _classPrivateFieldGet(_frameTreeHandled, this)?.valueOrThrow();\n      _assertClassBrand(_FrameManager_brand, this, _onFrameDetached).call(this, event.frameId, event.reason);\n    });\n    session.on('Page.frameStartedLoading', async event => {\n      await _classPrivateFieldGet(_frameTreeHandled, this)?.valueOrThrow();\n      _assertClassBrand(_FrameManager_brand, this, _onFrameStartedLoading).call(this, event.frameId);\n    });\n    session.on('Page.frameStoppedLoading', async event => {\n      await _classPrivateFieldGet(_frameTreeHandled, this)?.valueOrThrow();\n      _assertClassBrand(_FrameManager_brand, this, _onFrameStoppedLoading).call(this, event.frameId);\n    });\n    session.on('Runtime.executionContextCreated', async event => {\n      await _classPrivateFieldGet(_frameTreeHandled, this)?.valueOrThrow();\n      _assertClassBrand(_FrameManager_brand, this, _onExecutionContextCreated).call(this, event.context, session);\n    });\n    session.on('Page.lifecycleEvent', async event => {\n      await _classPrivateFieldGet(_frameTreeHandled, this)?.valueOrThrow();\n      _assertClassBrand(_FrameManager_brand, this, _onLifecycleEvent).call(this, event);\n    });\n  }\n  async initialize(client) {\n    try {\n      _classPrivateFieldGet(_frameTreeHandled, this)?.resolve();\n      _classPrivateFieldSet(_frameTreeHandled, this, Deferred_js_1.Deferred.create());\n      // We need to schedule all these commands while the target is paused,\n      // therefore, it needs to happen synchroniously. At the same time we\n      // should not start processing execution context and frame events before\n      // we received the initial information about the frame tree.\n      await Promise.all([_classPrivateFieldGet(_networkManager, this).addClient(client), client.send('Page.enable'), client.send('Page.getFrameTree').then(({\n        frameTree\n      }) => {\n        _assertClassBrand(_FrameManager_brand, this, _handleFrameTree).call(this, client, frameTree);\n        _classPrivateFieldGet(_frameTreeHandled, this)?.resolve();\n      }), client.send('Page.setLifecycleEventsEnabled', {\n        enabled: true\n      }), client.send('Runtime.enable').then(() => {\n        return _assertClassBrand(_FrameManager_brand, this, _createIsolatedWorld).call(this, client, util_js_1.UTILITY_WORLD_NAME);\n      })]);\n    } catch (error) {\n      _classPrivateFieldGet(_frameTreeHandled, this)?.resolve();\n      // The target might have been closed before the initialization finished.\n      if ((0, ErrorLike_js_1.isErrorLike)(error) && (0, Connection_js_1.isTargetClosedError)(error)) {\n        return;\n      }\n      throw error;\n    }\n  }\n  page() {\n    return _classPrivateFieldGet(_page, this);\n  }\n  mainFrame() {\n    const mainFrame = this._frameTree.getMainFrame();\n    (0, assert_js_1.assert)(mainFrame, 'Requesting main frame too early!');\n    return mainFrame;\n  }\n  frames() {\n    return Array.from(this._frameTree.frames());\n  }\n  frame(frameId) {\n    return this._frameTree.getById(frameId) || null;\n  }\n  onAttachedToTarget(target) {\n    if (target._getTargetInfo().type !== 'iframe') {\n      return;\n    }\n    const frame = this.frame(target._getTargetInfo().targetId);\n    if (frame) {\n      frame.updateClient(target._session());\n    }\n    this.setupEventListeners(target._session());\n    void this.initialize(target._session());\n  }\n  _deviceRequestPromptManager(client) {\n    let manager = _classPrivateFieldGet(_deviceRequestPromptManagerMap, this).get(client);\n    if (manager === undefined) {\n      manager = new DeviceRequestPrompt_js_1.DeviceRequestPromptManager(client, _classPrivateFieldGet(_timeoutSettings, this));\n      _classPrivateFieldGet(_deviceRequestPromptManagerMap, this).set(client, manager);\n    }\n    return manager;\n  }\n}\nasync function _onClientDisconnect() {\n  const mainFrame = this._frameTree.getMainFrame();\n  if (!mainFrame) {\n    return;\n  }\n  for (const child of mainFrame.childFrames()) {\n    _assertClassBrand(_FrameManager_brand, this, _removeFramesRecursively).call(this, child);\n  }\n  const swapped = Deferred_js_1.Deferred.create({\n    timeout: TIME_FOR_WAITING_FOR_SWAP,\n    message: 'Frame was not swapped'\n  });\n  mainFrame.once(Frame_js_1.FrameEvent.FrameSwappedByActivation, () => {\n    swapped.resolve();\n  });\n  try {\n    await swapped.valueOrThrow();\n  } catch (err) {\n    _assertClassBrand(_FrameManager_brand, this, _removeFramesRecursively).call(this, mainFrame);\n  }\n}\nfunction _onLifecycleEvent(event) {\n  const frame = this.frame(event.frameId);\n  if (!frame) {\n    return;\n  }\n  frame._onLifecycleEvent(event.loaderId, event.name);\n  this.emit(FrameManagerEvents_js_1.FrameManagerEvent.LifecycleEvent, frame);\n  frame.emit(Frame_js_1.FrameEvent.LifecycleEvent, undefined);\n}\nfunction _onFrameStartedLoading(frameId) {\n  const frame = this.frame(frameId);\n  if (!frame) {\n    return;\n  }\n  frame._onLoadingStarted();\n}\nfunction _onFrameStoppedLoading(frameId) {\n  const frame = this.frame(frameId);\n  if (!frame) {\n    return;\n  }\n  frame._onLoadingStopped();\n  this.emit(FrameManagerEvents_js_1.FrameManagerEvent.LifecycleEvent, frame);\n  frame.emit(Frame_js_1.FrameEvent.LifecycleEvent, undefined);\n}\nfunction _handleFrameTree(session, frameTree) {\n  if (frameTree.frame.parentId) {\n    _assertClassBrand(_FrameManager_brand, this, _onFrameAttached).call(this, session, frameTree.frame.id, frameTree.frame.parentId);\n  }\n  if (!_classPrivateFieldGet(_frameNavigatedReceived, this).has(frameTree.frame.id)) {\n    void _assertClassBrand(_FrameManager_brand, this, _onFrameNavigated).call(this, frameTree.frame, 'Navigation');\n  } else {\n    _classPrivateFieldGet(_frameNavigatedReceived, this).delete(frameTree.frame.id);\n  }\n  if (!frameTree.childFrames) {\n    return;\n  }\n  for (const child of frameTree.childFrames) {\n    _assertClassBrand(_FrameManager_brand, this, _handleFrameTree).call(this, session, child);\n  }\n}\nfunction _onFrameAttached(session, frameId, parentFrameId) {\n  let frame = this.frame(frameId);\n  if (frame) {\n    if (session && frame.isOOPFrame()) {\n      // If an OOP iframes becomes a normal iframe again\n      // it is first attached to the parent page before\n      // the target is removed.\n      frame.updateClient(session);\n    }\n    return;\n  }\n  frame = new Frame_js_2.CdpFrame(this, frameId, parentFrameId, session);\n  this._frameTree.addFrame(frame);\n  this.emit(FrameManagerEvents_js_1.FrameManagerEvent.FrameAttached, frame);\n}\nasync function _onFrameNavigated(framePayload, navigationType) {\n  const frameId = framePayload.id;\n  const isMainFrame = !framePayload.parentId;\n  let frame = this._frameTree.getById(frameId);\n  // Detach all child frames first.\n  if (frame) {\n    for (const child of frame.childFrames()) {\n      _assertClassBrand(_FrameManager_brand, this, _removeFramesRecursively).call(this, child);\n    }\n  }\n  // Update or create main frame.\n  if (isMainFrame) {\n    if (frame) {\n      // Update frame id to retain frame identity on cross-process navigation.\n      this._frameTree.removeFrame(frame);\n      frame._id = frameId;\n    } else {\n      // Initial main frame navigation.\n      frame = new Frame_js_2.CdpFrame(this, frameId, undefined, _classPrivateFieldGet(_client, this));\n    }\n    this._frameTree.addFrame(frame);\n  }\n  frame = await this._frameTree.waitForFrame(frameId);\n  frame._navigated(framePayload);\n  this.emit(FrameManagerEvents_js_1.FrameManagerEvent.FrameNavigated, frame);\n  frame.emit(Frame_js_1.FrameEvent.FrameNavigated, navigationType);\n}\nasync function _createIsolatedWorld(session, name) {\n  const key = `${session.id()}:${name}`;\n  if (_classPrivateFieldGet(_isolatedWorlds, this).has(key)) {\n    return;\n  }\n  await session.send('Page.addScriptToEvaluateOnNewDocument', {\n    source: `//# sourceURL=${util_js_1.PuppeteerURL.INTERNAL_URL}`,\n    worldName: name\n  });\n  await Promise.all(this.frames().filter(frame => {\n    return frame.client === session;\n  }).map(frame => {\n    // Frames might be removed before we send this, so we don't want to\n    // throw an error.\n    return session.send('Page.createIsolatedWorld', {\n      frameId: frame._id,\n      worldName: name,\n      grantUniveralAccess: true\n    }).catch(util_js_1.debugError);\n  }));\n  _classPrivateFieldGet(_isolatedWorlds, this).add(key);\n}\nfunction _onFrameNavigatedWithinDocument(frameId, url) {\n  const frame = this.frame(frameId);\n  if (!frame) {\n    return;\n  }\n  frame._navigatedWithinDocument(url);\n  this.emit(FrameManagerEvents_js_1.FrameManagerEvent.FrameNavigatedWithinDocument, frame);\n  frame.emit(Frame_js_1.FrameEvent.FrameNavigatedWithinDocument, undefined);\n  this.emit(FrameManagerEvents_js_1.FrameManagerEvent.FrameNavigated, frame);\n  frame.emit(Frame_js_1.FrameEvent.FrameNavigated, 'Navigation');\n}\nfunction _onFrameDetached(frameId, reason) {\n  const frame = this.frame(frameId);\n  if (!frame) {\n    return;\n  }\n  switch (reason) {\n    case 'remove':\n      // Only remove the frame if the reason for the detached event is\n      // an actual removement of the frame.\n      // For frames that become OOP iframes, the reason would be 'swap'.\n      _assertClassBrand(_FrameManager_brand, this, _removeFramesRecursively).call(this, frame);\n      break;\n    case 'swap':\n      this.emit(FrameManagerEvents_js_1.FrameManagerEvent.FrameSwapped, frame);\n      frame.emit(Frame_js_1.FrameEvent.FrameSwapped, undefined);\n      break;\n  }\n}\nfunction _onExecutionContextCreated(contextPayload, session) {\n  const auxData = contextPayload.auxData;\n  const frameId = auxData && auxData.frameId;\n  const frame = typeof frameId === 'string' ? this.frame(frameId) : undefined;\n  let world;\n  if (frame) {\n    // Only care about execution contexts created for the current session.\n    if (frame.client !== session) {\n      return;\n    }\n    if (contextPayload.auxData && contextPayload.auxData['isDefault']) {\n      world = frame.worlds[IsolatedWorlds_js_1.MAIN_WORLD];\n    } else if (contextPayload.name === util_js_1.UTILITY_WORLD_NAME && !frame.worlds[IsolatedWorlds_js_1.PUPPETEER_WORLD].hasContext()) {\n      // In case of multiple sessions to the same target, there's a race between\n      // connections so we might end up creating multiple isolated worlds.\n      // We can use either.\n      world = frame.worlds[IsolatedWorlds_js_1.PUPPETEER_WORLD];\n    }\n  }\n  // If there is no world, the context is not meant to be handled by us.\n  if (!world) {\n    return;\n  }\n  const context = new ExecutionContext_js_1.ExecutionContext(frame?.client || _classPrivateFieldGet(_client, this), contextPayload, world);\n  world.setContext(context);\n}\nfunction _removeFramesRecursively(frame) {\n  for (const child of frame.childFrames()) {\n    _assertClassBrand(_FrameManager_brand, this, _removeFramesRecursively).call(this, child);\n  }\n  frame[disposable_js_1.disposeSymbol]();\n  this._frameTree.removeFrame(frame);\n  this.emit(FrameManagerEvents_js_1.FrameManagerEvent.FrameDetached, frame);\n  frame.emit(Frame_js_1.FrameEvent.FrameDetached, frame);\n}\nexports.FrameManager = FrameManager;","map":{"version":3,"names":["_classPrivateMethodInitSpec","require","default","_defineProperty","_classPrivateFieldInitSpec","_assertClassBrand","_classPrivateFieldSet","_classPrivateFieldGet","CDPSession_js_1","Frame_js_1","EventEmitter_js_1","util_js_1","assert_js_1","Deferred_js_1","disposable_js_1","ErrorLike_js_1","CDPSession_js_2","Connection_js_1","DeviceRequestPrompt_js_1","ExecutionContext_js_1","Frame_js_2","FrameManagerEvents_js_1","FrameTree_js_1","IsolatedWorlds_js_1","NetworkManager_js_1","TIME_FOR_WAITING_FOR_SWAP","_page","WeakMap","_networkManager","_timeoutSettings","_isolatedWorlds","_client","_frameNavigatedReceived","_deviceRequestPromptManagerMap","_frameTreeHandled","_FrameManager_brand","WeakSet","FrameManager","EventEmitter","timeoutSettings","networkManager","client","constructor","page","Set","FrameTree","NetworkManager","setupEventListeners","once","CDPSessionEvent","Disconnected","_onClientDisconnect","call","catch","debugError","swapFrameTree","assert","CdpCDPSession","frame","_frameTree","getMainFrame","add","_target","_targetId","removeFrame","updateId","addFrame","updateClient","initialize","addClient","emit","FrameEvent","FrameSwappedByActivation","undefined","registerSpeculativeSession","session","on","event","valueOrThrow","_onFrameAttached","frameId","parentFrameId","id","_onFrameNavigated","type","_onFrameNavigatedWithinDocument","url","_onFrameDetached","reason","_onFrameStartedLoading","_onFrameStoppedLoading","_onExecutionContextCreated","context","_onLifecycleEvent","resolve","Deferred","create","Promise","all","send","then","frameTree","_handleFrameTree","enabled","_createIsolatedWorld","UTILITY_WORLD_NAME","error","isErrorLike","isTargetClosedError","mainFrame","frames","Array","from","getById","onAttachedToTarget","target","_getTargetInfo","targetId","_session","_deviceRequestPromptManager","manager","get","DeviceRequestPromptManager","set","child","childFrames","_removeFramesRecursively","swapped","timeout","message","err","loaderId","name","FrameManagerEvent","LifecycleEvent","_onLoadingStarted","_onLoadingStopped","parentId","has","delete","isOOPFrame","CdpFrame","FrameAttached","framePayload","navigationType","isMainFrame","_id","waitForFrame","_navigated","FrameNavigated","key","source","PuppeteerURL","INTERNAL_URL","worldName","filter","map","grantUniveralAccess","_navigatedWithinDocument","FrameNavigatedWithinDocument","FrameSwapped","contextPayload","auxData","world","worlds","MAIN_WORLD","PUPPETEER_WORLD","hasContext","ExecutionContext","setContext","disposeSymbol","FrameDetached","exports"],"sources":["../../../../src/cdp/FrameManager.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}