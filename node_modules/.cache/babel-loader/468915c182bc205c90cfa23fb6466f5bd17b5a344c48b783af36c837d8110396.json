{"ast":null,"code":"import Cookies from \"js-cookie\";\nimport { login } from '@/api/api';\nexport default {\n  data() {\n    return {\n      loginForm: {\n        name: '',\n        password: '',\n        rememberMe: false\n      },\n      loading: false,\n      loginRules: {\n        name: [{\n          required: true,\n          trigger: \"blur\",\n          message: \" \"\n        }],\n        password: [{\n          required: true,\n          trigger: \"blur\",\n          message: \" \"\n        }]\n      }\n    };\n  },\n  created() {\n    this.getCookie();\n  },\n  methods: {\n    getCookie() {\n      const name = Cookies.get(\"name\");\n      const password = Cookies.get(\"password\");\n      const rememberMe = Cookies.get(\"rememberMe\");\n      this.loginForm = {\n        name: name === undefined ? this.loginForm.name : name,\n        password: password === undefined ? this.loginForm.password : password,\n        rememberMe: rememberMe === undefined ? false : Boolean(rememberMe)\n      };\n    },\n    handleLogin() {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          login(this.loginForm).then(response => {\n            if (response.data.code == 1) {\n              this.$message({\n                type: 'success',\n                message: '登录成功'\n              });\n              // this.$router.push('/city')\n              // setToken(response.data.msg.token)\n            } else {\n              this.$message({\n                type: 'error',\n                message: response.data.msg\n              });\n            }\n          }).catch(res => {\n            this.$message({\n              type: 'error',\n              message: res.message\n            });\n          });\n          if (this.loginForm.rememberMe) {\n            Cookies.set(\"name\", this.loginForm.name, {\n              expires: 30\n            });\n            Cookies.set(\"password\", this.loginForm.password, {\n              expires: 30\n            });\n            Cookies.set(\"rememberMe\", this.loginForm.rememberMe, {\n              expires: 30\n            });\n            this.loading = false;\n          } else {\n            Cookies.remove(\"name\");\n            Cookies.remove(\"password\");\n            Cookies.remove(\"rememberMe\");\n            this.loading = false;\n          }\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["Cookies","login","data","loginForm","name","password","rememberMe","loading","loginRules","required","trigger","message","created","getCookie","methods","get","undefined","Boolean","handleLogin","$refs","validate","valid","then","response","code","$message","type","msg","catch","res","set","expires","remove"],"sources":["src/views/login/login.vue"],"sourcesContent":["<template>\n        <div class=\"login\">\n            <div class='login-box' >\n                <div  class='title' >{{ $t(\"message.themeTitle\") }}</div>\n                <div  class='login-form'>\n                    <el-form ref=\"loginForm\" :model=\"loginForm\"  :rules=\"loginRules\">\n                        <el-form-item  prop='name'>\n                            <el-input v-model=\"loginForm.name\"\n                                prefix-icon=\"el-icon-user\"\n                                :placeholder=\"$t('message.login.placeholderName')\"></el-input>\n                        </el-form-item>\n                        <el-form-item  prop='password'>\n                            <el-input v-model=\"loginForm.password\"\n                                :placeholder=\"$t('message.login.placeholderPwd')\"\n                                prefix-icon=\"el-icon-lock\"></el-input>\n                        </el-form-item>\n                        <el-form-item >\n                            <el-checkbox v-model=\"loginForm.rememberMe\">\n                                {{ $t(\"message.login.rememberPwdText\") }}\n                            </el-checkbox>\n                        </el-form-item>\n                        <el-form-item >\n                            <el-button :loading=\"loading\" class=\"login-submit\" style=\"width: 100%\" type=\"primary\" @click.native.prevent=\"handleLogin\">\n                                <span v-if=\"!loading\">{{ $t(\"message.login.loginBtnText\") }}</span>\n                                <span v-else>{{ $t(\"message.login.loginInBtnText\") }}</span>\n                            </el-button>\n                        </el-form-item>\n                    </el-form>\n                </div>\n            </div>\n        </div>\n</template>\n\n<script>\nimport Cookies from \"js-cookie\"\n  import {login} from '@/api/api'\nexport default {\n    data(){\n        return {\n            loginForm:{\n                name:'',\n                password:'',\n                rememberMe:false\n            },\n            loading:false,\n            loginRules: {\n                name: [{ required: true, trigger: \"blur\", message: \" \" }],\n                password: [{ required: true, trigger: \"blur\", message: \" \" }]\n            },\n        }\n    },\n    created(){\n        this.getCookie()\n    },\n    methods:{\n        getCookie() {\n            const name = Cookies.get(\"name\")\n            const password = Cookies.get(\"password\")\n            const rememberMe = Cookies.get(\"rememberMe\")\n        this.loginForm = {\n            name: name === undefined ? this.loginForm.name : name,\n            password: password === undefined ? this.loginForm.password :  password,\n            rememberMe: rememberMe === undefined ? false : Boolean(rememberMe)\n        }\n        },\n        handleLogin(){\n             this.$refs.loginForm.validate((valid) => {\n                if(valid){\n                    this.loading = true\n                    login(this.loginForm).then(response => {\n\t\t\t\t\t\t\tif(response.data.code == 1){\n\t\t\t\t\t\t\t\tthis.$message({\n\t\t\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\t\t\tmessage: '登录成功'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t// this.$router.push('/city')\n\t\t\t\t\t\t\t\t// setToken(response.data.msg.token)\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tthis.$message({\n\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\tmessage: response.data.msg\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}).catch((res) => {\n\t\t\t\t\t\t\tthis.$message({\n\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\tmessage: res.message\n\t\t\t\t\t\t\t});\n\t\t\t\t\t})\n                    if (this.loginForm.rememberMe) {\n                        Cookies.set(\"name\", this.loginForm.name, { expires: 30 })\n                        Cookies.set(\"password\",  this.loginForm.password, { expires: 30 })\n                        Cookies.set(\"rememberMe\", this.loginForm.rememberMe, { expires: 30 })\n                        this.loading=false\n                    } else {\n                        Cookies.remove(\"name\")\n                        Cookies.remove(\"password\")\n                        Cookies.remove(\"rememberMe\")\n                        this.loading=false\n                    }\n                }\n             })\n        }\n    }\n}\n</script>\n\n<style >\n    .login{\n        height: 100%;\n        width:100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background: url(\"/src/assets/image/bottomRighht.png\") no-repeat;\n        background-size: cover;\n    }\n    .login-box{\n        padding:80px;\n        background:rgba(255,255,255,0.9);\n        border-radius:14px;\n        width:480px;\n        box-sizing: border-box;\n    }\n    .title{\n        text-align: center;\n        margin-bottom:50px;\n        font-size:28px;\n        font-weight: bold;\n        color:#333;\n    }\n    .el-input__inner{\n        background: none;\n    }\n</style>"],"mappings":"AAkCA,OAAAA,OAAA;AACA,SAAAC,KAAA;AACA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,IAAA;QACAC,QAAA;QACAC,UAAA;MACA;MACAC,OAAA;MACAC,UAAA;QACAJ,IAAA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAN,QAAA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACAD,UAAA;MACA,MAAAT,IAAA,GAAAJ,OAAA,CAAAe,GAAA;MACA,MAAAV,QAAA,GAAAL,OAAA,CAAAe,GAAA;MACA,MAAAT,UAAA,GAAAN,OAAA,CAAAe,GAAA;MACA,KAAAZ,SAAA;QACAC,IAAA,EAAAA,IAAA,KAAAY,SAAA,QAAAb,SAAA,CAAAC,IAAA,GAAAA,IAAA;QACAC,QAAA,EAAAA,QAAA,KAAAW,SAAA,QAAAb,SAAA,CAAAE,QAAA,GAAAA,QAAA;QACAC,UAAA,EAAAA,UAAA,KAAAU,SAAA,WAAAC,OAAA,CAAAX,UAAA;MACA;IACA;IACAY,YAAA;MACA,KAAAC,KAAA,CAAAhB,SAAA,CAAAiB,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAd,OAAA;UACAN,KAAA,MAAAE,SAAA,EAAAmB,IAAA,CAAAC,QAAA;YACA,IAAAA,QAAA,CAAArB,IAAA,CAAAsB,IAAA;cACA,KAAAC,QAAA;gBACAC,IAAA;gBACAf,OAAA;cACA;cACA;cACA;YACA;cACA,KAAAc,QAAA;gBACAC,IAAA;gBACAf,OAAA,EAAAY,QAAA,CAAArB,IAAA,CAAAyB;cACA;YACA;UACA,GAAAC,KAAA,CAAAC,GAAA;YACA,KAAAJ,QAAA;cACAC,IAAA;cACAf,OAAA,EAAAkB,GAAA,CAAAlB;YACA;UACA;UACA,SAAAR,SAAA,CAAAG,UAAA;YACAN,OAAA,CAAA8B,GAAA,cAAA3B,SAAA,CAAAC,IAAA;cAAA2B,OAAA;YAAA;YACA/B,OAAA,CAAA8B,GAAA,kBAAA3B,SAAA,CAAAE,QAAA;cAAA0B,OAAA;YAAA;YACA/B,OAAA,CAAA8B,GAAA,oBAAA3B,SAAA,CAAAG,UAAA;cAAAyB,OAAA;YAAA;YACA,KAAAxB,OAAA;UACA;YACAP,OAAA,CAAAgC,MAAA;YACAhC,OAAA,CAAAgC,MAAA;YACAhC,OAAA,CAAAgC,MAAA;YACA,KAAAzB,OAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}