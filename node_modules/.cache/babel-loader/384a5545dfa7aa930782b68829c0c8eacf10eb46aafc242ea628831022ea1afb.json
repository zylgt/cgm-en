{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { formatDate, formatTime } from '@/utils/formatTime';\nimport { mapGetters } from \"vuex\";\nimport { getAgpData, getAgpInfo } from '@/api/dataApi';\nexport default {\n  data() {\n    return {\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近7天',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近14天',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 14);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近30天',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近90天',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n      //日期选择快速选项\n      agpDate: ['', ''],\n      //日期选中值\n      dayDate: 14,\n      //天数\n      checkAll: false,\n      //下载打印全选\n      isIndeterminate: true,\n      //全选框配置\n      downloadList: ['AGP报告', '每日分析', '多日血糖分析', '报告解读', '饮食分析'],\n      //下载，打印选项\n      checkedDowns: [],\n      //复选框选中项\n      dialogVisible: false,\n      //下载打印弹窗开关\n      dialogType: \"\",\n      // print 打印 download 下载\n      empty: true,\n      list: []\n    };\n  },\n  computed: {\n    ...mapGetters(['unit'])\n  },\n  mounted() {\n    let end_ts = new Date();\n    let start_ts = new Date().setDate(end_ts.getDate() - 13);\n    this.chooseDay(new Date(start_ts), end_ts);\n    this.agpDate = [formatDate(start_ts, \"YYYY-mm-dd\"), formatDate(end_ts, \"YYYY-mm-dd\")];\n  },\n  methods: {\n    // 选择时间\n    changeDate(e) {\n      this.chooseDay(new Date(e[0]), new Date(e[1]));\n      if (_.indexOf(this.$store.state.report.chooseDateList, this.agpDate.join('/')) == -1) {\n        this.getData();\n      } else {\n        let result = this.$store.state.report.data[this.agpDate.join('/')];\n        if (result.length > 0) {\n          this.empty = false;\n        } else {\n          this.empty = true;\n        }\n        this.handelTemplateDay(result);\n      }\n    },\n    // 选择天数\n    chooseDay(date1, date2) {\n      let s_date = date1.setHours(0, 0, 0) / 1000;\n      let e_date = date2.setHours(23, 59, 59) / 1000;\n      let oneDay = 24 * 60 * 60; // 每天的毫秒数\n      let diff = Math.abs(s_date - e_date); // 计算差值的绝对值\n      this.dayDate = Math.ceil(diff / oneDay);\n    },\n    // 从云拉取数据\n    getData() {\n      let s = new Date(this.agpDate[0]);\n      let e = new Date(this.agpDate[1]);\n      let start_ts = s.setHours(0, 0, 0) / 1000;\n      let end_ts = e.setHours(23, 59, 59) / 1000;\n      this.loading = true;\n      getAgpData({\n        start_ts: start_ts,\n        end_ts: end_ts\n      }).then(response => {\n        if (response.code == 1000) {\n          let arrayData = response.data;\n          this.loading = false;\n          if (arrayData.length > 0) {\n            console.log(formatTime(new Date()), '得到数据');\n            this.empty = false;\n            this.handelTemplateDay(this.handleData(arrayData, start_ts, end_ts));\n            this.$store.dispatch('setChooseDateList', this.agpDate.join('/'));\n          } else {\n            this.empty = true;\n          }\n        } else {\n          this.loading = false;\n          this.$message({\n            type: 'error',\n            message: response.msg\n          });\n        }\n      }).catch(res => {\n        console.log(res);\n      });\n    },\n    // 从云获取报告基本信息\n    getInfo() {\n      let s = new Date(this.agpDate[0]);\n      let e = new Date(this.agpDate[1]);\n      let start_ts = s.setHours(0, 0, 0) / 1000;\n      let end_ts = e.setHours(23, 59, 59) / 1000;\n      getAgpInfo({\n        start_ts: start_ts,\n        end_ts: end_ts\n      }).then(response => {\n        if (response.code == 1000) {\n          con;\n        } else {\n          this.$message({\n            type: 'error',\n            message: response.msg\n          });\n        }\n      }).catch(res => {\n        console.log(res);\n      });\n    },\n    processArray(arr, interval) {\n      let result = [];\n      for (let i = 0; i < arr.length - 1; i++) {\n        result.push(arr[i]);\n        let diff = arr[i + 1].DataTs - arr[i].DataTs;\n        let addTs = arr[i].DataTs + interval;\n        while (diff > interval) {\n          result.push({\n            DataTs: addTs,\n            value: undefined\n          });\n          diff = arr[i + 1].DataTs - addTs;\n          addTs += interval;\n        }\n      }\n      result.push(arr[arr.length - 1]);\n      return result;\n    },\n    filterArray(data) {\n      const result = [];\n      const seenTimes = new Set();\n      let levelLowInvalidMg = 20;\n      let levelHighInvalidMg = 800;\n      let levelTooLowMg = 40;\n      let levelTooHighMg = 400;\n      data.forEach(item => {\n        const timeStr = formatDate(item.DataTs * 1000, 'YYYY-mm-dd HH:MM');\n        if (!seenTimes.has(timeStr)) {\n          seenTimes.add(timeStr);\n          if (item.value > levelLowInvalidMg || item.value < levelHighInvalidMg) {\n            result.push({\n              ...item,\n              value: undefined\n            });\n          } else if (item.value < levelTooLowMg) {\n            result.push({\n              ...item,\n              value: levelTooLowMg\n            });\n          } else if (item.value > levelTooHighMg) {\n            result.push({\n              ...item,\n              value: levelTooHighMg\n            });\n          } else {\n            result.push(item);\n          }\n        }\n      });\n      return result;\n    },\n    handleData(objects, s_ts, e_ts) {\n      let measuringInterval = 60;\n      objects = this.processArray(objects, measuringInterval);\n      objects = this.filterArray(objects);\n      let startTs = objects[0].DataTs;\n      while (startTs - measuringInterval >= s_ts) {\n        objects.unshift({\n          DataTs: startTs - measuringInterval,\n          value: undefined\n        });\n        startTs = startTs - measuringInterval;\n      }\n      let endTs = objects[objects.length - 1].DataTs;\n      while (endTs + measuringInterval < e_ts) {\n        objects.push({\n          DataTs: endTs + measuringInterval,\n          value: undefined\n        });\n        endTs = endTs + measuringInterval;\n      }\n      this.$store.dispatch('setData', {\n        key: this.agpDate.join('/'),\n        value: objects\n      }); //处理完数据存vuex\n      return objects;\n    },\n    upload() {\n      this.$router.push('/upLoad');\n    },\n    // 选择下载。打印的内容\n    handleCheckedCitiesChange(val) {\n      let checkedCount = val.length;\n      this.checkAll = checkedCount === this.downloadList.length;\n      this.isIndeterminate = checkedCount > 0 && checkedCount < this.downloadList.length;\n    },\n    // 全选\n    handleCheckAllChange(val) {\n      this.checkedDowns = val ? this.downloadList : [];\n      this.isIndeterminate = false;\n    },\n    // 打印\n    async print() {\n      this.dialogVisible = true;\n      this.dialogType = 'print';\n    },\n    // 导出pdf\n    handleExport() {\n      this.dialogVisible = true;\n      this.dialogType = 'export';\n    }\n  }\n};","map":{"version":3,"names":["formatDate","formatTime","mapGetters","getAgpData","getAgpInfo","data","pickerOptions","shortcuts","text","onClick","picker","end","Date","start","setTime","getTime","$emit","agpDate","dayDate","checkAll","isIndeterminate","downloadList","checkedDowns","dialogVisible","dialogType","empty","list","computed","mounted","end_ts","start_ts","setDate","getDate","chooseDay","methods","changeDate","e","_","indexOf","$store","state","report","chooseDateList","join","getData","result","length","handelTemplateDay","date1","date2","s_date","setHours","e_date","oneDay","diff","Math","abs","ceil","s","loading","then","response","code","arrayData","console","log","handleData","dispatch","$message","type","message","msg","catch","res","getInfo","con","processArray","arr","interval","i","push","DataTs","addTs","value","undefined","filterArray","seenTimes","Set","levelLowInvalidMg","levelHighInvalidMg","levelTooLowMg","levelTooHighMg","forEach","item","timeStr","has","add","objects","s_ts","e_ts","measuringInterval","startTs","unshift","endTs","key","upload","$router","handleCheckedCitiesChange","val","checkedCount","handleCheckAllChange","print","handleExport"],"sources":["/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/src/views/report/mixin.js"],"sourcesContent":["import {formatDate,formatTime} from '@/utils/formatTime'\nimport {mapGetters} from \"vuex\"\nimport {getAgpData,getAgpInfo} from '@/api/dataApi'\n\nexport default{\n    data(){\n        return{\n            pickerOptions: {\n                shortcuts: [{\n                    text: '最近7天',\n                    onClick(picker) {\n                    const end = new Date();\n                    const start = new Date();\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n                    picker.$emit('pick', [start, end]);\n                    }\n                },{\n                    text: '最近14天',\n                    onClick(picker) {\n                    const end = new Date();\n                    const start = new Date();\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 14);\n                    picker.$emit('pick', [start, end]);\n                    }\n                }, {\n                    text: '最近30天',\n                    onClick(picker) {\n                    const end = new Date();\n                    const start = new Date();\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n                    picker.$emit('pick', [start, end]);\n                    }\n                }, {\n                    text: '最近90天',\n                    onClick(picker) {\n                    const end = new Date();\n                    const start = new Date();\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n                    picker.$emit('pick', [start, end]);\n                    }\n                }]\n            },  //日期选择快速选项\n            agpDate:['',''], //日期选中值\n            dayDate:14,//天数\n            checkAll:false, //下载打印全选\n            isIndeterminate: true, //全选框配置\n            downloadList:['AGP报告','每日分析','多日血糖分析','报告解读','饮食分析'], //下载，打印选项\n            checkedDowns:[], //复选框选中项\n            dialogVisible:false, //下载打印弹窗开关\n            dialogType:\"\", // print 打印 download 下载\n            empty:true,\n            list:[]\n        }\n    },\n    computed:{\n        ...mapGetters([\n           'unit']),\n    },\n    mounted() {\n        let end_ts = new Date()\n        let start_ts = new Date().setDate(end_ts.getDate() - 13)\n        this.chooseDay(new Date(start_ts),end_ts)\n        this.agpDate = [formatDate(start_ts,\"YYYY-mm-dd\"), formatDate(end_ts,\"YYYY-mm-dd\")] \n    },\n    methods: {\n         // 选择时间\n        changeDate(e){\n            this.chooseDay(new Date(e[0]), new Date(e[1]))\n            if( _.indexOf(this.$store.state.report.chooseDateList,this.agpDate.join('/'))==-1){\n                this.getData()\n            }else{\n                let result  = this.$store.state.report.data[this.agpDate.join('/')]\n                if(result.length>0){\n                    this.empty = false\n                }else{\n                    this.empty = true\n                }\n                this.handelTemplateDay(result)\n            }\n        },\n        // 选择天数\n        chooseDay(date1,date2){\n            let s_date = date1.setHours(0,0,0)/1000\n            let e_date = date2.setHours(23,59,59)/1000\n            let oneDay = 24 * 60 * 60 ; // 每天的毫秒数\n            let diff = Math.abs(s_date - e_date); // 计算差值的绝对值\n            this.dayDate  = Math.ceil(diff / oneDay)\n        },\n         // 从云拉取数据\n        getData (){\n            let s = new Date(this.agpDate[0])\n            let e = new Date(this.agpDate[1])\n            let start_ts = s.setHours(0,0,0)/1000\n            let end_ts = e.setHours(23,59,59)/1000\n            this.loading = true\n            getAgpData({start_ts:start_ts,end_ts:end_ts}).then(response => {\n\t\t\t\t\t\t\tif(response.code == 1000){\n                                let arrayData = response.data\n                                this.loading = false\n                                if(arrayData.length>0){\n                                    console.log(formatTime(new Date()),'得到数据')   \n                                    this.empty = false\n                                    this.handelTemplateDay(this.handleData(arrayData,start_ts,end_ts))\n                                    this.$store.dispatch('setChooseDateList',this.agpDate.join('/'))\n                                }else{\n                                    this.empty = true\n                                }\n\t\t\t\t\t\t\t}else{\n                                this.loading = false\n\t\t\t\t\t\t\t\tthis.$message({\n                                    type: 'error',\n                                    message: response.msg\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n            }).catch((res) => {\n                console.log(res)\n            })\n        },\n        // 从云获取报告基本信息\n        getInfo(){\n            let s = new Date(this.agpDate[0])\n            let e = new Date(this.agpDate[1])\n            let start_ts = s.setHours(0,0,0)/1000\n            let end_ts = e.setHours(23,59,59)/1000\n            getAgpInfo({start_ts:start_ts,end_ts:end_ts}).then(response => {\n                    if(response.code == 1000){\n                        con\n                    }else{\n                        this.$message({\n                            type: 'error',\n                            message: response.msg\n                        });\n                    }\n            }).catch((res) => {\n                console.log(res)\n            })\n        },\n        processArray(arr, interval) {\n            let result = [];\n\n            for (let i = 0; i < arr.length - 1; i++) {\n                result.push(arr[i]);\n\n                let diff = arr[i + 1].DataTs - arr[i].DataTs;\n                let addTs = arr[i].DataTs + interval;\n                while (diff > interval) {\n                result.push({DataTs: addTs, value: undefined});\n                diff = arr[i + 1].DataTs - addTs;\n                addTs += interval;\n                }\n            }\n            result.push(arr[arr.length - 1]);\n\n            return result;\n        },\n\n        filterArray  (data) {\n            const result = [];\n\n            const seenTimes = new Set();\n            let levelLowInvalidMg = 20\n            let levelHighInvalidMg = 800\n            let levelTooLowMg = 40\n            let levelTooHighMg = 400\n            data.forEach(item => {\n                const timeStr = formatDate(item.DataTs*1000,'YYYY-mm-dd HH:MM')\n\n                if (!seenTimes.has(timeStr)) {\n                seenTimes.add(timeStr);\n                if (item.value > levelLowInvalidMg || item.value < levelHighInvalidMg) {\n                    result.push({...item, value: undefined});\n                } else if (item.value < levelTooLowMg) {\n                    result.push({\n                    ...item,\n                    value: levelTooLowMg,\n                    });\n                } else if (item.value > levelTooHighMg) {\n                    result.push({\n                    ...item,\n                    value: levelTooHighMg,\n                    });\n                } else {\n                    result.push(item);\n                }\n                }\n            });\n\n            return result;\n        },\n\n        handleData (objects, s_ts, e_ts)  {\n            let measuringInterval = 60\n            objects = this.processArray(objects, measuringInterval);\n            objects = this.filterArray(objects);\n\n            let startTs = objects[0].DataTs;\n            while (startTs - measuringInterval >= s_ts) {\n                objects.unshift({\n                DataTs: startTs - measuringInterval,\n                value: undefined,\n                });\n                startTs = startTs - measuringInterval;\n            }\n\n            let endTs = objects[objects.length - 1].DataTs;\n            while (endTs + measuringInterval < e_ts) {\n                objects.push({\n                DataTs: endTs + measuringInterval,\n                value: undefined,\n                });\n                endTs = endTs + measuringInterval;\n            }\n            this.$store.dispatch('setData',{key:this.agpDate.join('/'),value:objects}) //处理完数据存vuex\n            return objects;\n        },\n        upload(){\n            this.$router.push('/upLoad')\n        },\n          // 选择下载。打印的内容\n        handleCheckedCitiesChange(val){\n            let checkedCount = val.length;\n            this.checkAll = checkedCount === this.downloadList.length;\n            this.isIndeterminate = checkedCount > 0 && checkedCount < this.downloadList.length;\n        },\n        // 全选\n        handleCheckAllChange(val){\n            this.checkedDowns = val ? this.downloadList : [];\n            this.isIndeterminate = false;\n        },\n          // 打印\n        async print(){\n            this.dialogVisible = true\n            this.dialogType='print'\n        },\n        // 导出pdf\n        handleExport() {\n            this.dialogVisible = true\n            this.dialogType='export'\n        },\n    },\n   \n\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}