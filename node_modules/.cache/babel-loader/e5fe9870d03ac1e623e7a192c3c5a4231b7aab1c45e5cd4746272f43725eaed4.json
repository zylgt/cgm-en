{"ast":null,"code":"import _classPrivateMethodInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateMethodInitSpec.js\";\nimport _classPrivateFieldInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _checkInRHS from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/checkInRHS.js\";\nimport _assertClassBrand from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/assertClassBrand.js\";\nimport _classPrivateFieldSet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\nimport _classPrivateGetter from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateGetter.js\";\nimport _classPrivateFieldGet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\nimport \"core-js/modules/es.array.push.js\";\n/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __runInitializers = this && this.__runInitializers || function (thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n    value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\nvar __esDecorate = this && this.__esDecorate || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) {\n    if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n    return f;\n  }\n  var kind = contextIn.kind,\n    key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _,\n    done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n    var context = {};\n    for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n    for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n    context.addInitializer = function (f) {\n      if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n      extraInitializers.push(accept(f || null));\n    };\n    var result = (0, decorators[i])(kind === \"accessor\" ? {\n      get: descriptor.get,\n      set: descriptor.set\n    } : descriptor[key], context);\n    if (kind === \"accessor\") {\n      if (result === void 0) continue;\n      if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n      if (_ = accept(result.get)) descriptor.get = _;\n      if (_ = accept(result.set)) descriptor.set = _;\n      if (_ = accept(result.init)) initializers.unshift(_);\n    } else if (_ = accept(result)) {\n      if (kind === \"field\") initializers.unshift(_);else descriptor[key] = _;\n    }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\nvar __setFunctionName = this && this.__setFunctionName || function (f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", {\n    configurable: true,\n    value: prefix ? \"\".concat(prefix, \" \", name) : name\n  });\n};\nimport { spawn, spawnSync } from 'child_process';\nimport { PassThrough } from 'stream';\nimport debug from 'debug';\nimport { bufferCount, concatMap, filter, from, fromEvent, lastValueFrom, map, takeUntil, tap } from '../../third_party/rxjs/rxjs.js';\nimport { CDPSessionEvent } from '../api/CDPSession.js';\nimport { debugError, fromEmitterEvent } from '../common/util.js';\nimport { guarded } from '../util/decorators.js';\nimport { asyncDisposeSymbol } from '../util/disposable.js';\nconst CRF_VALUE = 30;\nconst DEFAULT_FPS = 30;\nconst debugFfmpeg = debug('puppeteer:ffmpeg');\n/**\n * @public\n */\nlet ScreenRecorder = ((_ref, _ScreenRecorder, _page, _process, _controller, _lastFrame, _ScreenRecorder_brand) => {\n  let _classSuper = PassThrough;\n  let _instanceExtraInitializers = [];\n  let _private_writeFrame_decorators;\n  let _private_writeFrame_descriptor;\n  let _stop_decorators;\n  return _page = /*#__PURE__*/new WeakMap(), _process = /*#__PURE__*/new WeakMap(), _controller = /*#__PURE__*/new WeakMap(), _lastFrame = /*#__PURE__*/new WeakMap(), _ScreenRecorder_brand = /*#__PURE__*/new WeakSet(), _ref = (_private_writeFrame_decorators = [guarded()], _stop_decorators = [guarded()], asyncDisposeSymbol), (_ScreenRecorder = class ScreenRecorder extends _classSuper {\n    /**\n     * @internal\n     */\n    constructor(page, width, height, {\n      speed,\n      scale,\n      crop,\n      format: _format,\n      path\n    } = {}) {\n      super({\n        allowHalfOpen: false\n      });\n      _classPrivateMethodInitSpec(this, _ScreenRecorder_brand);\n      _classPrivateFieldInitSpec(this, _page, (__runInitializers(this, _instanceExtraInitializers), void 0));\n      _classPrivateFieldInitSpec(this, _process, void 0);\n      _classPrivateFieldInitSpec(this, _controller, new AbortController());\n      _classPrivateFieldInitSpec(this, _lastFrame, void 0);\n      path ??= 'ffmpeg';\n      // Tests if `ffmpeg` exists.\n      const {\n        error\n      } = spawnSync(path);\n      if (error) {\n        throw error;\n      }\n      _classPrivateFieldSet(_process, this, spawn(path,\n      // See https://trac.ffmpeg.org/wiki/Encode/VP9 for more information on flags.\n      [['-loglevel', 'error'],\n      // Reduces general buffering.\n      ['-avioflags', 'direct'],\n      // Reduces initial buffering while analyzing input fps and other stats.\n      ['-fpsprobesize', '0', '-probesize', '32', '-analyzeduration', '0', '-fflags', 'nobuffer'],\n      // Forces input to be read from standard input, and forces png input\n      // image format.\n      ['-f', 'image2pipe', '-c:v', 'png', '-i', 'pipe:0'],\n      // Overwrite output and no audio.\n      ['-y', '-an'],\n      // This drastically reduces stalling when cpu is overbooked. By default\n      // VP9 tries to use all available threads?\n      ['-threads', '1'],\n      // Specifies the frame rate we are giving ffmpeg.\n      ['-framerate', `${DEFAULT_FPS}`], // Specifies the encoding and format we are using.\n      _assertClassBrand(_ScreenRecorder_brand, this, _getFormatArgs).call(this, _format ?? 'webm'),\n      // Disable bitrate.\n      ['-b:v', '0'],\n      // Filters to ensure the images are piped correctly.\n      ['-vf', `${speed ? `setpts=${1 / speed}*PTS,` : ''}crop='min(${width},iw):min(${height},ih):0:0',pad=${width}:${height}:0:0${crop ? `,crop=${crop.width}:${crop.height}:${crop.x}:${crop.y}` : ''}${scale ? `,scale=iw*${scale}:-1` : ''}`], 'pipe:1'].flat(), {\n        stdio: ['pipe', 'pipe', 'pipe']\n      }));\n      _classPrivateFieldGet(_process, this).stdout.pipe(this);\n      _classPrivateFieldGet(_process, this).stderr.on('data', data => {\n        debugFfmpeg(data.toString('utf8'));\n      });\n      _classPrivateFieldSet(_page, this, page);\n      const {\n        client\n      } = _classPrivateFieldGet(_page, this).mainFrame();\n      client.once(CDPSessionEvent.Disconnected, () => {\n        void this.stop().catch(debugError);\n      });\n      _classPrivateFieldSet(_lastFrame, this, lastValueFrom(fromEmitterEvent(client, 'Page.screencastFrame').pipe(tap(event => {\n        void client.send('Page.screencastFrameAck', {\n          sessionId: event.sessionId\n        });\n      }), filter(event => {\n        return event.metadata.timestamp !== undefined;\n      }), map(event => {\n        return {\n          buffer: Buffer.from(event.data, 'base64'),\n          timestamp: event.metadata.timestamp\n        };\n      }), bufferCount(2, 1), concatMap(([{\n        timestamp: previousTimestamp,\n        buffer\n      }, {\n        timestamp\n      }]) => {\n        return from(Array(Math.round(DEFAULT_FPS * Math.max(timestamp - previousTimestamp, 0))).fill(buffer));\n      }), map(buffer => {\n        void _classPrivateGetter(_ScreenRecorder_brand, this, _get_writeFrame).call(this, buffer);\n        return [buffer, performance.now()];\n      }), takeUntil(fromEvent(_classPrivateFieldGet(_controller, this).signal, 'abort'))), {\n        defaultValue: [Buffer.from([]), performance.now()]\n      }));\n    }\n    /**\n     * Stops the recorder.\n     *\n     * @public\n     */\n    async stop() {\n      if (_classPrivateFieldGet(_controller, this).signal.aborted) {\n        return;\n      }\n      // Stopping the screencast will flush the frames.\n      await _classPrivateFieldGet(_page, this)._stopScreencast().catch(debugError);\n      _classPrivateFieldGet(_controller, this).abort();\n      // Repeat the last frame for the remaining frames.\n      const [buffer, timestamp] = await _classPrivateFieldGet(_lastFrame, this);\n      await Promise.all(Array(Math.max(1, Math.round(DEFAULT_FPS * (performance.now() - timestamp) / 1000))).fill(buffer).map(_classPrivateGetter(_ScreenRecorder_brand, this, _get_writeFrame).bind(this)));\n      // Close stdin to notify FFmpeg we are done.\n      _classPrivateFieldGet(_process, this).stdin.end();\n      await new Promise(resolve => {\n        _classPrivateFieldGet(_process, this).once('close', resolve);\n      });\n    }\n    /**\n     * @internal\n     */\n    async [_ref]() {\n      await this.stop();\n    }\n  }, (() => {\n    const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n    __esDecorate(_ScreenRecorder, _private_writeFrame_descriptor = {\n      value: __setFunctionName(async function (buffer) {\n        const error = await new Promise(resolve => {\n          _classPrivateFieldGet(_process, this).stdin.write(buffer, resolve);\n        });\n        if (error) {\n          console.log(`ffmpeg failed to write: ${error.message}.`);\n        }\n      }, \"#writeFrame\")\n    }, _private_writeFrame_decorators, {\n      kind: \"method\",\n      name: \"#writeFrame\",\n      static: false,\n      private: true,\n      access: {\n        has: obj => _ScreenRecorder_brand.has(_checkInRHS(obj)),\n        get: obj => _classPrivateGetter(_ScreenRecorder_brand, obj, _get_writeFrame)\n      },\n      metadata: _metadata\n    }, null, _instanceExtraInitializers);\n    __esDecorate(_ScreenRecorder, null, _stop_decorators, {\n      kind: \"method\",\n      name: \"stop\",\n      static: false,\n      private: false,\n      access: {\n        has: obj => \"stop\" in obj,\n        get: obj => obj.stop\n      },\n      metadata: _metadata\n    }, null, _instanceExtraInitializers);\n    if (_metadata) Object.defineProperty(_ScreenRecorder, Symbol.metadata, {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _metadata\n    });\n  })(), _ScreenRecorder);\n  function _getFormatArgs(format) {\n    switch (format) {\n      case 'webm':\n        return [\n        // Sets the codec to use.\n        ['-c:v', 'vp9'],\n        // Sets the format\n        ['-f', 'webm'],\n        // Sets the quality. Lower the better.\n        ['-crf', `${CRF_VALUE}`],\n        // Sets the quality and how efficient the compression will be.\n        ['-deadline', 'realtime', '-cpu-used', '8']].flat();\n      case 'gif':\n        return [\n        // Sets the frame rate and uses a custom palette generated from the\n        // input.\n        ['-vf', 'fps=5,split[s0][s1];[s0]palettegen=stats_mode=diff[p];[s1][p]paletteuse'],\n        // Sets the format\n        ['-f', 'gif']].flat();\n    }\n  }\n  function _get_writeFrame(_this) {\n    return _private_writeFrame_descriptor.value;\n  }\n})();\nexport { ScreenRecorder };","map":{"version":3,"names":["spawn","spawnSync","PassThrough","debug","bufferCount","concatMap","filter","from","fromEvent","lastValueFrom","map","takeUntil","tap","CDPSessionEvent","debugError","fromEmitterEvent","guarded","asyncDisposeSymbol","CRF_VALUE","DEFAULT_FPS","debugFfmpeg","ScreenRecorder","_ref","_ScreenRecorder","_page","_process","_controller","_lastFrame","_ScreenRecorder_brand","_private_writeFrame_decorators","_stop_decorators","_classSuper","constructor","page","width","height","speed","scale","crop","format","path","allowHalfOpen","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","__runInitializers","_instanceExtraInitializers","AbortController","error","_classPrivateFieldSet","_assertClassBrand","_getFormatArgs","call","x","y","flat","stdio","_classPrivateFieldGet","stdout","pipe","stderr","on","data","toString","client","mainFrame","once","Disconnected","stop","catch","event","send","sessionId","metadata","timestamp","undefined","buffer","Buffer","previousTimestamp","Array","Math","round","max","fill","_classPrivateGetter","_get_writeFrame","performance","now","signal","defaultValue","aborted","_stopScreencast","abort","Promise","all","bind","stdin","end","resolve","__esDecorate","_private_writeFrame_descriptor","value","__setFunctionName","write","console","log","message","kind","name","static","private","access","has","obj","_checkInRHS","get","_metadata","_this"],"sources":["../../../../src/node/ScreenRecorder.ts"],"sourcesContent":[null],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,SAAQA,KAAK,EAAEC,SAAS,QAAO,eAAe;AAC9C,SAAQC,WAAW,QAAO,QAAQ;AAElC,OAAOC,KAAK,MAAM,OAAO;AAGzB,SACEC,WAAW,EACXC,SAAS,EACTC,MAAM,EACNC,IAAI,EACJC,SAAS,EACTC,aAAa,EACbC,GAAG,EACHC,SAAS,EACTC,GAAG,QACE,gCAAgC;AACvC,SAAQC,eAAe,QAAO,sBAAsB;AAGpD,SAAQC,UAAU,EAAEC,gBAAgB,QAAO,mBAAmB;AAC9D,SAAQC,OAAO,QAAO,uBAAuB;AAC7C,SAAQC,kBAAkB,QAAO,uBAAuB;AAExD,MAAMC,SAAS,GAAG,EAAE;AACpB,MAAMC,WAAW,GAAG,EAAE;AAEtB,MAAMC,WAAW,GAAGjB,KAAK,CAAC,kBAAkB,CAAC;AAa7C;;;IAGakB,cAAc,KAAAC,IAAA,EAAAC,eAAA,EAAAC,KAAA,EAAAC,QAAA,EAAAC,WAAA,EAAAC,UAAA,EAAAC,qBAAA;oBAAS1B,WAAW;;;;;mOAyMvC2B,8BAAA,IAhDLb,OAAO,EAAE,GAAAc,gBAAA,IAeTd,OAAO,EAAE,GAiCHC,kBAAkB,IAAAM,eAAA,G,MAzMdF,cAAe,SAAQU,WAAW;IAQ7C;;;IAGAC,YACEC,IAAU,EACVC,KAAa,EACbC,MAAc,EACd;MAACC,KAAK;MAAEC,KAAK;MAAEC,IAAI;MAAEC,MAAM,EAANA,OAAM;MAAEC;IAAI,IAA2B,EAAE;MAE9D,KAAK,CAAC;QAACC,aAAa,EAAE;MAAK,CAAC,CAAC;MAACC,2BAAA,OAAAd,qBAAA;MAAAe,0BAAA,OAAAnB,KAAA,GAhB3BoB,iBAAA,OAAAC,0BAAA;MAAAF,0BAAA,OAAAlB,QAAA;MAAAkB,0BAAA,OAAAjB,WAAA,EAIS,IAAIoB,eAAe,EAAE;MAAAH,0BAAA,OAAAhB,UAAA;MAcjCa,IAAI,KAAK,QAAQ;MAEjB;MACA,MAAM;QAACO;MAAK,CAAC,GAAG9C,SAAS,CAACuC,IAAI,CAAC;MAC/B,IAAIO,KAAK,EAAE;QACT,MAAMA,KAAK;MACb;MAEAC,qBAAA,CAAAvB,QAAA,MAAI,EAAYzB,KAAK,CACnBwC,IAAI;MACJ;MACA,CACE,CAAC,WAAW,EAAE,OAAO,CAAC;MACtB;MACA,CAAC,YAAY,EAAE,QAAQ,CAAC;MACxB;MACA,CACE,eAAe,EACf,GAAG,EACH,YAAY,EACZ,IAAI,EACJ,kBAAkB,EAClB,GAAG,EACH,SAAS,EACT,UAAU,CACX;MACD;MACA;MACA,CAAC,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC;MACnD;MACA,CAAC,IAAI,EAAE,KAAK,CAAC;MACb;MACA;MACA,CAAC,UAAU,EAAE,GAAG,CAAC;MACjB;MACA,CAAC,YAAY,EAAE,GAAGrB,WAAW,EAAE,CAAC,EAChC;MAAA8B,iBAAA,CAAArB,qBAAA,EACA,IAAI,EAAAsB,cAAA,EAAAC,IAAA,CAAJ,IAAI,EAAgBZ,OAAM,IAAI,MAAM;MACpC;MACA,CAAC,MAAM,EAAE,GAAG,CAAC;MACb;MACA,CACE,KAAK,EACL,GACEH,KAAK,GAAG,UAAU,CAAC,GAAGA,KAAK,OAAO,GAAG,EACvC,aAAaF,KAAK,YAAYC,MAAM,iBAAiBD,KAAK,IAAIC,MAAM,OAClEG,IAAI,GAAG,SAASA,IAAI,CAACJ,KAAK,IAAII,IAAI,CAACH,MAAM,IAAIG,IAAI,CAACc,CAAC,IAAId,IAAI,CAACe,CAAC,EAAE,GAAG,EACpE,GAAGhB,KAAK,GAAG,aAAaA,KAAK,KAAK,GAAG,EAAE,EAAE,CAC1C,EACD,QAAQ,CACT,CAACiB,IAAI,EAAE,EACR;QAACC,KAAK,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM;MAAC,CAAC,CAClC;MACDC,qBAAA,CAAA/B,QAAA,MAAI,EAAUgC,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC;MAC/BF,qBAAA,CAAA/B,QAAA,MAAI,EAAUkC,MAAM,CAACC,EAAE,CAAC,MAAM,EAAGC,IAAY,IAAI;QAC/CzC,WAAW,CAACyC,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAC,CAAC;MACpC,CAAC,CAAC;MAEFd,qBAAA,CAAAxB,KAAA,MAAI,EAASS,IAAI;MAEjB,MAAM;QAAC8B;MAAM,CAAC,GAAGP,qBAAA,CAAAhC,KAAA,MAAI,EAAOwC,SAAS,EAAE;MACvCD,MAAM,CAACE,IAAI,CAACpD,eAAe,CAACqD,YAAY,EAAE,MAAK;QAC7C,KAAK,IAAI,CAACC,IAAI,EAAE,CAACC,KAAK,CAACtD,UAAU,CAAC;MACpC,CAAC,CAAC;MAEFkC,qBAAA,CAAArB,UAAA,MAAI,EAAclB,aAAa,CAC7BM,gBAAgB,CAACgD,MAAM,EAAE,sBAAsB,CAAC,CAACL,IAAI,CACnD9C,GAAG,CAACyD,KAAK,IAAG;QACV,KAAKN,MAAM,CAACO,IAAI,CAAC,yBAAyB,EAAE;UAC1CC,SAAS,EAAEF,KAAK,CAACE;SAClB,CAAC;MACJ,CAAC,CAAC,EACFjE,MAAM,CAAC+D,KAAK,IAAG;QACb,OAAOA,KAAK,CAACG,QAAQ,CAACC,SAAS,KAAKC,SAAS;MAC/C,CAAC,CAAC,EACFhE,GAAG,CAAC2D,KAAK,IAAG;QACV,OAAO;UACLM,MAAM,EAAEC,MAAM,CAACrE,IAAI,CAAC8D,KAAK,CAACR,IAAI,EAAE,QAAQ,CAAC;UACzCY,SAAS,EAAEJ,KAAK,CAACG,QAAQ,CAACC;SAC3B;MACH,CAAC,CAAC,EACFrE,WAAW,CAAC,CAAC,EAAE,CAAC,CAMf,EACDC,SAAS,CAAC,CAAC,CAAC;QAACoE,SAAS,EAAEI,iBAAiB;QAAEF;MAAM,CAAC,EAAE;QAACF;MAAS,CAAC,CAAC,KAAI;QAClE,OAAOlE,IAAI,CACTuE,KAAK,CACHC,IAAI,CAACC,KAAK,CACR7D,WAAW,GAAG4D,IAAI,CAACE,GAAG,CAACR,SAAS,GAAGI,iBAAiB,EAAE,CAAC,CAAC,CACzD,CACF,CAACK,IAAI,CAACP,MAAM,CAAC,CACf;MACH,CAAC,CAAC,EACFjE,GAAG,CAACiE,MAAM,IAAG;QACX,KAAAQ,mBAAA,CAAAvD,qBAAA,EAAK,IAAI,EAAAwD,eAAA,EAAAjC,IAAA,CAAJ,IAAI,EAAawB,MAAM,CAAC;QAC7B,OAAO,CAACA,MAAM,EAAEU,WAAW,CAACC,GAAG,EAAE,CAAU;MAC7C,CAAC,CAAC,EACF3E,SAAS,CAACH,SAAS,CAACgD,qBAAA,CAAA9B,WAAA,MAAI,EAAa6D,MAAM,EAAE,OAAO,CAAC,CAAC,CACvD,EACD;QAACC,YAAY,EAAE,CAACZ,MAAM,CAACrE,IAAI,CAAC,EAAE,CAAC,EAAE8E,WAAW,CAACC,GAAG,EAAE;MAAU,CAAC,CAC9D;IACH;IAuCA;;;;;IAMA,MAAMnB,IAAIA,CAAA;MACR,IAAIX,qBAAA,CAAA9B,WAAA,MAAI,EAAa6D,MAAM,CAACE,OAAO,EAAE;QACnC;MACF;MACA;MACA,MAAMjC,qBAAA,CAAAhC,KAAA,MAAI,EAAOkE,eAAe,EAAE,CAACtB,KAAK,CAACtD,UAAU,CAAC;MAEpD0C,qBAAA,CAAA9B,WAAA,MAAI,EAAaiE,KAAK,EAAE;MAExB;MACA,MAAM,CAAChB,MAAM,EAAEF,SAAS,CAAC,GAAG,MAAAjB,qBAAA,CAAA7B,UAAA,EAAM,IAAI,CAAW;MACjD,MAAMiE,OAAO,CAACC,GAAG,CACff,KAAK,CACHC,IAAI,CAACE,GAAG,CACN,CAAC,EACDF,IAAI,CAACC,KAAK,CAAE7D,WAAW,IAAIkE,WAAW,CAACC,GAAG,EAAE,GAAGb,SAAS,CAAC,GAAI,IAAI,CAAC,CACnE,CACF,CACES,IAAI,CAACP,MAAM,CAAC,CACZjE,GAAG,CAACyE,mBAAA,CAAAvD,qBAAA,MAAI,EAAAwD,eAAA,EAAaU,IAAI,CAAC,IAAI,CAAC,CAAC,CACpC;MAED;MACAtC,qBAAA,CAAA/B,QAAA,MAAI,EAAUsE,KAAK,CAACC,GAAG,EAAE;MACzB,MAAM,IAAIJ,OAAO,CAACK,OAAO,IAAG;QAC1BzC,qBAAA,CAAA/B,QAAA,MAAI,EAAUwC,IAAI,CAAC,OAAO,EAAEgC,OAAO,CAAC;MACtC,CAAC,CAAC;IACJ;IAEA;;;IAGA,OAAA3E,IAAA,IAA0B;MACxB,MAAM,IAAI,CAAC6C,IAAI,EAAE;IACnB;;;IAjDA+B,YAAA,CAAA3E,eAAA,EAAA4E,8BAAA;MAAAC,KAAA,EAAAC,iBAAA,iBAAkB1B,MAAc;QAC9B,MAAM5B,KAAK,GAAG,MAAM,IAAI6C,OAAO,CAA2BK,OAAO,IAAG;UAClEzC,qBAAA,CAAA/B,QAAA,MAAI,EAAUsE,KAAK,CAACO,KAAK,CAAC3B,MAAM,EAAEsB,OAAO,CAAC;QAC5C,CAAC,CAAC;QACF,IAAIlD,KAAK,EAAE;UACTwD,OAAO,CAACC,GAAG,CAAC,2BAA2BzD,KAAK,CAAC0D,OAAO,GAAG,CAAC;QAC1D;MACF,CAAC;IAAA,GAAA5E,8BAAA;MAAA6E,IAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,OAAA;MAAAC,MAAA;QAAAC,GAAA,EAAAC,GAAA,IAAApF,qBAAA,CAAAmF,GAAA,CAAAE,WAAA,CAPgBD,GAAA;QAAAE,GAAA,EAAAF,GAAA,IAAA7B,mBAAA,CAAAvD,qBAAA,EAAAoF,GAAA,EAAA5B,eAAA;MAAA;MAAAZ,QAAA,EAAA2C;IAAA,SAAAtE,0BAAA;IAejBqD,YAAA,CAAA3E,eAAA,QAAAO,gBAAA;MAAA4E,IAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,OAAA;MAAAC,MAAA;QAAAC,GAAA,EAAAC,GAAA,cAAAA,GAAA;QAAAE,GAAA,EAAAF,GAAA,IAAAA,GAAA,CAAM7C;MAAI;MAAAK,QAAA,EAAA2C;IAAA,SAAAtE,0BAAA;;;;;;;;0BA3CKN,MAAsB;IACnC,QAAQA,MAAM;MACZ,KAAK,MAAM;QACT,OAAO;QACL;QACA,CAAC,MAAM,EAAE,KAAK,CAAC;QACf;QACA,CAAC,IAAI,EAAE,MAAM,CAAC;QACd;QACA,CAAC,MAAM,EAAE,GAAGrB,SAAS,EAAE,CAAC;QACxB;QACA,CAAC,WAAW,EAAE,UAAU,EAAE,WAAW,EAAE,GAAG,CAAC,CAC5C,CAACoC,IAAI,EAAE;MACV,KAAK,KAAK;QACR,OAAO;QACL;QACA;QACA,CACE,KAAK,EACL,yEAAyE,CAC1E;QACD;QACA,CAAC,IAAI,EAAE,KAAK,CAAC,CACd,CAACA,IAAI,EAAE;IACZ;EACF;EAAC,SAAA8B,gBAAAgC,KAAA,EAGgB;IAAA,OAAAjB,8BAAA,CAAAC,KAAA;EAAA;;SA1JN/E,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}