{"ast":null,"code":"\"use strict\";\n\nvar _classPrivateMethodInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateMethodInitSpec.js\").default;\nvar _classPrivateFieldInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _defineProperty = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nvar _assertClassBrand = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/assertClassBrand.js\").default;\nvar _classPrivateFieldGet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldGet2.js\").default;\nvar _classPrivateFieldSet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldSet2.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExtensionTransport = void 0;\nconst tabTargetInfo = {\n  targetId: 'tabTargetId',\n  type: 'tab',\n  title: 'tab',\n  url: 'about:blank',\n  attached: false,\n  canAccessOpener: false\n};\nconst pageTargetInfo = {\n  targetId: 'pageTargetId',\n  type: 'page',\n  title: 'page',\n  url: 'about:blank',\n  attached: false,\n  canAccessOpener: false\n};\n/**\n * Experimental ExtensionTransport allows establishing a connection via\n * chrome.debugger API if Puppeteer runs in an extension. Since Chrome\n * DevTools Protocol is restricted for extensions, the transport\n * implements missing commands and events.\n *\n * @experimental\n * @public\n */\nvar _tabId = /*#__PURE__*/new WeakMap();\nvar _debuggerEventHandler = /*#__PURE__*/new WeakMap();\nvar _ExtensionTransport_brand = /*#__PURE__*/new WeakSet();\nclass ExtensionTransport {\n  static async connectTab(tabId) {\n    await chrome.debugger.attach({\n      tabId\n    }, '1.3');\n    return new ExtensionTransport(tabId);\n  }\n  /**\n   * @internal\n   */\n  constructor(tabId) {\n    _classPrivateMethodInitSpec(this, _ExtensionTransport_brand);\n    _defineProperty(this, \"onmessage\", void 0);\n    _defineProperty(this, \"onclose\", void 0);\n    _classPrivateFieldInitSpec(this, _tabId, void 0);\n    _classPrivateFieldInitSpec(this, _debuggerEventHandler, (source, method, params) => {\n      if (source.tabId !== _classPrivateFieldGet(_tabId, this)) {\n        return;\n      }\n      _assertClassBrand(_ExtensionTransport_brand, this, _dispatchResponse).call(this, {\n        // @ts-expect-error sessionId is not in stable yet.\n        sessionId: source.sessionId ?? 'pageTargetSessionId',\n        method: method,\n        params: params\n      });\n    });\n    _classPrivateFieldSet(_tabId, this, tabId);\n    chrome.debugger.onEvent.addListener(_classPrivateFieldGet(_debuggerEventHandler, this));\n  }\n  send(message) {\n    const parsed = JSON.parse(message);\n    switch (parsed.method) {\n      case 'Browser.getVersion':\n        {\n          _assertClassBrand(_ExtensionTransport_brand, this, _dispatchResponse).call(this, {\n            id: parsed.id,\n            sessionId: parsed.sessionId,\n            method: parsed.method,\n            result: {\n              protocolVersion: '1.3',\n              product: 'chrome',\n              revision: 'unknown',\n              userAgent: 'chrome',\n              jsVersion: 'unknown'\n            }\n          });\n          return;\n        }\n      case 'Target.getBrowserContexts':\n        {\n          _assertClassBrand(_ExtensionTransport_brand, this, _dispatchResponse).call(this, {\n            id: parsed.id,\n            sessionId: parsed.sessionId,\n            method: parsed.method,\n            result: {\n              browserContextIds: []\n            }\n          });\n          return;\n        }\n      case 'Target.setDiscoverTargets':\n        {\n          _assertClassBrand(_ExtensionTransport_brand, this, _dispatchResponse).call(this, {\n            method: 'Target.targetCreated',\n            params: {\n              targetInfo: tabTargetInfo\n            }\n          });\n          _assertClassBrand(_ExtensionTransport_brand, this, _dispatchResponse).call(this, {\n            method: 'Target.targetCreated',\n            params: {\n              targetInfo: pageTargetInfo\n            }\n          });\n          _assertClassBrand(_ExtensionTransport_brand, this, _dispatchResponse).call(this, {\n            id: parsed.id,\n            sessionId: parsed.sessionId,\n            method: parsed.method,\n            result: {}\n          });\n          return;\n        }\n      case 'Target.setAutoAttach':\n        {\n          if (parsed.sessionId === 'tabTargetSessionId') {\n            _assertClassBrand(_ExtensionTransport_brand, this, _dispatchResponse).call(this, {\n              method: 'Target.attachedToTarget',\n              params: {\n                targetInfo: pageTargetInfo,\n                sessionId: 'pageTargetSessionId'\n              }\n            });\n          } else if (!parsed.sessionId) {\n            _assertClassBrand(_ExtensionTransport_brand, this, _dispatchResponse).call(this, {\n              method: 'Target.attachedToTarget',\n              params: {\n                targetInfo: tabTargetInfo,\n                sessionId: 'tabTargetSessionId'\n              }\n            });\n          }\n          _assertClassBrand(_ExtensionTransport_brand, this, _dispatchResponse).call(this, {\n            id: parsed.id,\n            sessionId: parsed.sessionId,\n            method: parsed.method,\n            result: {}\n          });\n          return;\n        }\n    }\n    if (parsed.sessionId === 'pageTargetSessionId') {\n      delete parsed.sessionId;\n    }\n    chrome.debugger.sendCommand(\n    // @ts-expect-error sessionId is not in stable yet.\n    {\n      tabId: _classPrivateFieldGet(_tabId, this),\n      sessionId: parsed.sessionId\n    }, parsed.method, parsed.params).then(response => {\n      _assertClassBrand(_ExtensionTransport_brand, this, _dispatchResponse).call(this, {\n        id: parsed.id,\n        sessionId: parsed.sessionId ?? 'pageTargetSessionId',\n        method: parsed.method,\n        result: response\n      });\n    }).catch(err => {\n      _assertClassBrand(_ExtensionTransport_brand, this, _dispatchResponse).call(this, {\n        id: parsed.id,\n        sessionId: parsed.sessionId ?? 'pageTargetSessionId',\n        method: parsed.method,\n        error: err\n      });\n    });\n  }\n  close() {\n    chrome.debugger.onEvent.removeListener(_classPrivateFieldGet(_debuggerEventHandler, this));\n    void chrome.debugger.detach({\n      tabId: _classPrivateFieldGet(_tabId, this)\n    });\n  }\n}\nfunction _dispatchResponse(message) {\n  this.onmessage?.(JSON.stringify(message));\n}\nexports.ExtensionTransport = ExtensionTransport;","map":{"version":3,"names":["tabTargetInfo","targetId","type","title","url","attached","canAccessOpener","pageTargetInfo","_tabId","WeakMap","_debuggerEventHandler","_ExtensionTransport_brand","WeakSet","ExtensionTransport","connectTab","tabId","chrome","debugger","attach","constructor","_classPrivateMethodInitSpec","_defineProperty","_classPrivateFieldInitSpec","source","method","params","_classPrivateFieldGet","_assertClassBrand","_dispatchResponse","call","sessionId","_classPrivateFieldSet","onEvent","addListener","send","message","parsed","JSON","parse","id","result","protocolVersion","product","revision","userAgent","jsVersion","browserContextIds","targetInfo","sendCommand","then","response","catch","err","error","close","removeListener","detach","onmessage","stringify","exports"],"sources":["../../../../src/cdp/ExtensionTransport.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}