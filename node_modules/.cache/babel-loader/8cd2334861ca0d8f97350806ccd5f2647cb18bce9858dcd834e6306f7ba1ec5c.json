{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _classPrivateMethodInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateMethodInitSpec.js\").default;\nvar _classPrivateFieldInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _assertClassBrand = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/assertClassBrand.js\").default;\nvar _classPrivateFieldGet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldGet2.js\").default;\nvar _classPrivateFieldSet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldSet2.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommandProcessor = void 0;\nconst protocol_js_1 = require(\"../protocol/protocol.js\");\nconst EventEmitter_js_1 = require(\"../utils/EventEmitter.js\");\nconst log_js_1 = require(\"../utils/log.js\");\nconst BidiNoOpParser_js_1 = require(\"./BidiNoOpParser.js\");\nconst BrowserProcessor_js_1 = require(\"./modules/browser/BrowserProcessor.js\");\nconst CdpProcessor_js_1 = require(\"./modules/cdp/CdpProcessor.js\");\nconst BrowsingContextProcessor_js_1 = require(\"./modules/context/BrowsingContextProcessor.js\");\nconst InputProcessor_js_1 = require(\"./modules/input/InputProcessor.js\");\nconst NetworkProcessor_js_1 = require(\"./modules/network/NetworkProcessor.js\");\nconst PermissionsProcessor_js_1 = require(\"./modules/permissions/PermissionsProcessor.js\");\nconst ScriptProcessor_js_1 = require(\"./modules/script/ScriptProcessor.js\");\nconst SessionProcessor_js_1 = require(\"./modules/session/SessionProcessor.js\");\nconst StorageProcessor_js_1 = require(\"./modules/storage/StorageProcessor.js\");\nconst OutgoingMessage_js_1 = require(\"./OutgoingMessage.js\");\nvar _browserProcessor = /*#__PURE__*/new WeakMap();\nvar _browsingContextProcessor = /*#__PURE__*/new WeakMap();\nvar _cdpProcessor = /*#__PURE__*/new WeakMap();\nvar _inputProcessor = /*#__PURE__*/new WeakMap();\nvar _networkProcessor = /*#__PURE__*/new WeakMap();\nvar _permissionsProcessor = /*#__PURE__*/new WeakMap();\nvar _scriptProcessor = /*#__PURE__*/new WeakMap();\nvar _sessionProcessor = /*#__PURE__*/new WeakMap();\nvar _storageProcessor = /*#__PURE__*/new WeakMap();\nvar _parser = /*#__PURE__*/new WeakMap();\nvar _logger = /*#__PURE__*/new WeakMap();\nvar _CommandProcessor_brand = /*#__PURE__*/new WeakSet();\nclass CommandProcessor extends EventEmitter_js_1.EventEmitter {\n  constructor(cdpConnection, browserCdpClient, eventManager, browsingContextStorage, realmStorage, preloadScriptStorage, networkStorage, parser = new BidiNoOpParser_js_1.BidiNoOpParser(), logger) {\n    super();\n    _classPrivateMethodInitSpec(this, _CommandProcessor_brand);\n    // keep-sorted start\n    _classPrivateFieldInitSpec(this, _browserProcessor, void 0);\n    _classPrivateFieldInitSpec(this, _browsingContextProcessor, void 0);\n    _classPrivateFieldInitSpec(this, _cdpProcessor, void 0);\n    _classPrivateFieldInitSpec(this, _inputProcessor, void 0);\n    _classPrivateFieldInitSpec(this, _networkProcessor, void 0);\n    _classPrivateFieldInitSpec(this, _permissionsProcessor, void 0);\n    _classPrivateFieldInitSpec(this, _scriptProcessor, void 0);\n    _classPrivateFieldInitSpec(this, _sessionProcessor, void 0);\n    _classPrivateFieldInitSpec(this, _storageProcessor, void 0);\n    // keep-sorted end\n    _classPrivateFieldInitSpec(this, _parser, void 0);\n    _classPrivateFieldInitSpec(this, _logger, void 0);\n    _classPrivateFieldSet(_parser, this, parser);\n    _classPrivateFieldSet(_logger, this, logger);\n    // keep-sorted start block=yes\n    _classPrivateFieldSet(_browserProcessor, this, new BrowserProcessor_js_1.BrowserProcessor(browserCdpClient));\n    _classPrivateFieldSet(_browsingContextProcessor, this, new BrowsingContextProcessor_js_1.BrowsingContextProcessor(browserCdpClient, browsingContextStorage));\n    _classPrivateFieldSet(_cdpProcessor, this, new CdpProcessor_js_1.CdpProcessor(browsingContextStorage, realmStorage, cdpConnection, browserCdpClient));\n    _classPrivateFieldSet(_inputProcessor, this, new InputProcessor_js_1.InputProcessor(browsingContextStorage, realmStorage));\n    _classPrivateFieldSet(_networkProcessor, this, new NetworkProcessor_js_1.NetworkProcessor(browsingContextStorage, networkStorage));\n    _classPrivateFieldSet(_permissionsProcessor, this, new PermissionsProcessor_js_1.PermissionsProcessor(browserCdpClient));\n    _classPrivateFieldSet(_scriptProcessor, this, new ScriptProcessor_js_1.ScriptProcessor(browsingContextStorage, realmStorage, preloadScriptStorage, logger));\n    _classPrivateFieldSet(_sessionProcessor, this, new SessionProcessor_js_1.SessionProcessor(eventManager, browserCdpClient));\n    _classPrivateFieldSet(_storageProcessor, this, new StorageProcessor_js_1.StorageProcessor(browserCdpClient, browsingContextStorage, logger));\n    // keep-sorted end\n  }\n  async processCommand(command) {\n    try {\n      const result = await _assertClassBrand(_CommandProcessor_brand, this, _processCommand).call(this, command);\n      const response = {\n        type: 'success',\n        id: command.id,\n        result\n      };\n      this.emit(\"response\" /* CommandProcessorEvents.Response */, {\n        message: OutgoingMessage_js_1.OutgoingMessage.createResolved(response, command.channel),\n        event: command.method\n      });\n    } catch (e) {\n      if (e instanceof protocol_js_1.Exception) {\n        this.emit(\"response\" /* CommandProcessorEvents.Response */, {\n          message: OutgoingMessage_js_1.OutgoingMessage.createResolved(e.toErrorResponse(command.id), command.channel),\n          event: command.method\n        });\n      } else {\n        const error = e;\n        _classPrivateFieldGet(_logger, this)?.call(this, log_js_1.LogType.bidi, error);\n        this.emit(\"response\" /* CommandProcessorEvents.Response */, {\n          message: OutgoingMessage_js_1.OutgoingMessage.createResolved(new protocol_js_1.UnknownErrorException(error.message, error.stack).toErrorResponse(command.id), command.channel),\n          event: command.method\n        });\n      }\n    }\n  }\n}\nasync function _processCommand(command) {\n  switch (command.method) {\n    case 'session.end':\n      // TODO: Implement.\n      break;\n    // Browser domain\n    // keep-sorted start block=yes\n    case 'browser.close':\n      return _classPrivateFieldGet(_browserProcessor, this).close();\n    case 'browser.createUserContext':\n      return await _classPrivateFieldGet(_browserProcessor, this).createUserContext(command.params);\n    case 'browser.getUserContexts':\n      return await _classPrivateFieldGet(_browserProcessor, this).getUserContexts();\n    case 'browser.removeUserContext':\n      return await _classPrivateFieldGet(_browserProcessor, this).removeUserContext(_classPrivateFieldGet(_parser, this).parseRemoveUserContextParams(command.params));\n    // keep-sorted end\n    // Browsing Context domain\n    // keep-sorted start block=yes\n    case 'browsingContext.activate':\n      return await _classPrivateFieldGet(_browsingContextProcessor, this).activate(_classPrivateFieldGet(_parser, this).parseActivateParams(command.params));\n    case 'browsingContext.captureScreenshot':\n      return await _classPrivateFieldGet(_browsingContextProcessor, this).captureScreenshot(_classPrivateFieldGet(_parser, this).parseCaptureScreenshotParams(command.params));\n    case 'browsingContext.close':\n      return await _classPrivateFieldGet(_browsingContextProcessor, this).close(_classPrivateFieldGet(_parser, this).parseCloseParams(command.params));\n    case 'browsingContext.create':\n      return await _classPrivateFieldGet(_browsingContextProcessor, this).create(_classPrivateFieldGet(_parser, this).parseCreateParams(command.params));\n    case 'browsingContext.getTree':\n      return _classPrivateFieldGet(_browsingContextProcessor, this).getTree(_classPrivateFieldGet(_parser, this).parseGetTreeParams(command.params));\n    case 'browsingContext.handleUserPrompt':\n      return await _classPrivateFieldGet(_browsingContextProcessor, this).handleUserPrompt(_classPrivateFieldGet(_parser, this).parseHandleUserPromptParams(command.params));\n    case 'browsingContext.locateNodes':\n      return await _classPrivateFieldGet(_browsingContextProcessor, this).locateNodes(_classPrivateFieldGet(_parser, this).parseLocateNodesParams(command.params));\n    case 'browsingContext.navigate':\n      return await _classPrivateFieldGet(_browsingContextProcessor, this).navigate(_classPrivateFieldGet(_parser, this).parseNavigateParams(command.params));\n    case 'browsingContext.print':\n      return await _classPrivateFieldGet(_browsingContextProcessor, this).print(_classPrivateFieldGet(_parser, this).parsePrintParams(command.params));\n    case 'browsingContext.reload':\n      return await _classPrivateFieldGet(_browsingContextProcessor, this).reload(_classPrivateFieldGet(_parser, this).parseReloadParams(command.params));\n    case 'browsingContext.setViewport':\n      return await _classPrivateFieldGet(_browsingContextProcessor, this).setViewport(_classPrivateFieldGet(_parser, this).parseSetViewportParams(command.params));\n    case 'browsingContext.traverseHistory':\n      return await _classPrivateFieldGet(_browsingContextProcessor, this).traverseHistory(_classPrivateFieldGet(_parser, this).parseTraverseHistoryParams(command.params));\n    // keep-sorted end\n    // CDP domain\n    // keep-sorted start block=yes\n    case 'cdp.getSession':\n      return _classPrivateFieldGet(_cdpProcessor, this).getSession(_classPrivateFieldGet(_parser, this).parseGetSessionParams(command.params));\n    case 'cdp.resolveRealm':\n      return _classPrivateFieldGet(_cdpProcessor, this).resolveRealm(_classPrivateFieldGet(_parser, this).parseResolveRealmParams(command.params));\n    case 'cdp.sendCommand':\n      return await _classPrivateFieldGet(_cdpProcessor, this).sendCommand(_classPrivateFieldGet(_parser, this).parseSendCommandParams(command.params));\n    // keep-sorted end\n    // Input domain\n    // keep-sorted start block=yes\n    case 'input.performActions':\n      return await _classPrivateFieldGet(_inputProcessor, this).performActions(_classPrivateFieldGet(_parser, this).parsePerformActionsParams(command.params));\n    case 'input.releaseActions':\n      return await _classPrivateFieldGet(_inputProcessor, this).releaseActions(_classPrivateFieldGet(_parser, this).parseReleaseActionsParams(command.params));\n    case 'input.setFiles':\n      return await _classPrivateFieldGet(_inputProcessor, this).setFiles(_classPrivateFieldGet(_parser, this).parseSetFilesParams(command.params));\n    // keep-sorted end\n    // Network domain\n    // keep-sorted start block=yes\n    case 'network.addIntercept':\n      return await _classPrivateFieldGet(_networkProcessor, this).addIntercept(_classPrivateFieldGet(_parser, this).parseAddInterceptParams(command.params));\n    case 'network.continueRequest':\n      return await _classPrivateFieldGet(_networkProcessor, this).continueRequest(_classPrivateFieldGet(_parser, this).parseContinueRequestParams(command.params));\n    case 'network.continueResponse':\n      return await _classPrivateFieldGet(_networkProcessor, this).continueResponse(_classPrivateFieldGet(_parser, this).parseContinueResponseParams(command.params));\n    case 'network.continueWithAuth':\n      return await _classPrivateFieldGet(_networkProcessor, this).continueWithAuth(_classPrivateFieldGet(_parser, this).parseContinueWithAuthParams(command.params));\n    case 'network.failRequest':\n      return await _classPrivateFieldGet(_networkProcessor, this).failRequest(_classPrivateFieldGet(_parser, this).parseFailRequestParams(command.params));\n    case 'network.provideResponse':\n      return await _classPrivateFieldGet(_networkProcessor, this).provideResponse(_classPrivateFieldGet(_parser, this).parseProvideResponseParams(command.params));\n    case 'network.removeIntercept':\n      return await _classPrivateFieldGet(_networkProcessor, this).removeIntercept(_classPrivateFieldGet(_parser, this).parseRemoveInterceptParams(command.params));\n    // keep-sorted end\n    // Permissions domain\n    // keep-sorted start block=yes\n    case 'permissions.setPermission':\n      return await _classPrivateFieldGet(_permissionsProcessor, this).setPermissions(_classPrivateFieldGet(_parser, this).parseSetPermissionsParams(command.params));\n    // keep-sorted end\n    // Script domain\n    // keep-sorted start block=yes\n    case 'script.addPreloadScript':\n      return await _classPrivateFieldGet(_scriptProcessor, this).addPreloadScript(_classPrivateFieldGet(_parser, this).parseAddPreloadScriptParams(command.params));\n    case 'script.callFunction':\n      return await _classPrivateFieldGet(_scriptProcessor, this).callFunction(_classPrivateFieldGet(_parser, this).parseCallFunctionParams(_assertClassBrand(_CommandProcessor_brand, this, _processTargetParams).call(this, command.params)));\n    case 'script.disown':\n      return await _classPrivateFieldGet(_scriptProcessor, this).disown(_classPrivateFieldGet(_parser, this).parseDisownParams(_assertClassBrand(_CommandProcessor_brand, this, _processTargetParams).call(this, command.params)));\n    case 'script.evaluate':\n      return await _classPrivateFieldGet(_scriptProcessor, this).evaluate(_classPrivateFieldGet(_parser, this).parseEvaluateParams(_assertClassBrand(_CommandProcessor_brand, this, _processTargetParams).call(this, command.params)));\n    case 'script.getRealms':\n      return _classPrivateFieldGet(_scriptProcessor, this).getRealms(_classPrivateFieldGet(_parser, this).parseGetRealmsParams(command.params));\n    case 'script.removePreloadScript':\n      return await _classPrivateFieldGet(_scriptProcessor, this).removePreloadScript(_classPrivateFieldGet(_parser, this).parseRemovePreloadScriptParams(command.params));\n    // keep-sorted end\n    // Session domain\n    // keep-sorted start block=yes\n    case 'session.new':\n      return await _classPrivateFieldGet(_sessionProcessor, this).create(command.params);\n    case 'session.status':\n      return _classPrivateFieldGet(_sessionProcessor, this).status();\n    case 'session.subscribe':\n      return await _classPrivateFieldGet(_sessionProcessor, this).subscribe(_classPrivateFieldGet(_parser, this).parseSubscribeParams(command.params), command.channel);\n    case 'session.unsubscribe':\n      return await _classPrivateFieldGet(_sessionProcessor, this).unsubscribe(_classPrivateFieldGet(_parser, this).parseSubscribeParams(command.params), command.channel);\n    // keep-sorted end\n    // Storage domain\n    // keep-sorted start block=yes\n    case 'storage.deleteCookies':\n      return await _classPrivateFieldGet(_storageProcessor, this).deleteCookies(_classPrivateFieldGet(_parser, this).parseDeleteCookiesParams(command.params));\n    case 'storage.getCookies':\n      return await _classPrivateFieldGet(_storageProcessor, this).getCookies(_classPrivateFieldGet(_parser, this).parseGetCookiesParams(command.params));\n    case 'storage.setCookie':\n      return await _classPrivateFieldGet(_storageProcessor, this).setCookie(_classPrivateFieldGet(_parser, this).parseSetCookieParams(command.params));\n    // keep-sorted end\n  }\n  // Intentionally kept outside the switch statement to ensure that\n  // ESLint @typescript-eslint/switch-exhaustiveness-check triggers if a new\n  // command is added.\n  throw new protocol_js_1.UnknownCommandException(`Unknown command '${command.method}'.`);\n}\n// Workaround for as zod.union always take the first schema\n// https://github.com/w3c/webdriver-bidi/issues/635\nfunction _processTargetParams(params) {\n  if (typeof params === 'object' && params && 'target' in params && typeof params.target === 'object' && params.target && 'context' in params.target) {\n    delete params.target['realm'];\n  }\n  return params;\n}\nexports.CommandProcessor = CommandProcessor;","map":{"version":3,"names":["_classPrivateMethodInitSpec","require","default","_classPrivateFieldInitSpec","_assertClassBrand","_classPrivateFieldGet","_classPrivateFieldSet","protocol_js_1","EventEmitter_js_1","log_js_1","BidiNoOpParser_js_1","BrowserProcessor_js_1","CdpProcessor_js_1","BrowsingContextProcessor_js_1","InputProcessor_js_1","NetworkProcessor_js_1","PermissionsProcessor_js_1","ScriptProcessor_js_1","SessionProcessor_js_1","StorageProcessor_js_1","OutgoingMessage_js_1","_browserProcessor","WeakMap","_browsingContextProcessor","_cdpProcessor","_inputProcessor","_networkProcessor","_permissionsProcessor","_scriptProcessor","_sessionProcessor","_storageProcessor","_parser","_logger","_CommandProcessor_brand","WeakSet","CommandProcessor","EventEmitter","constructor","cdpConnection","browserCdpClient","eventManager","browsingContextStorage","realmStorage","preloadScriptStorage","networkStorage","parser","BidiNoOpParser","logger","BrowserProcessor","BrowsingContextProcessor","CdpProcessor","InputProcessor","NetworkProcessor","PermissionsProcessor","ScriptProcessor","SessionProcessor","StorageProcessor","processCommand","command","result","_processCommand","call","response","type","id","emit","message","OutgoingMessage","createResolved","channel","event","method","e","Exception","toErrorResponse","error","LogType","bidi","UnknownErrorException","stack","close","createUserContext","params","getUserContexts","removeUserContext","parseRemoveUserContextParams","activate","parseActivateParams","captureScreenshot","parseCaptureScreenshotParams","parseCloseParams","create","parseCreateParams","getTree","parseGetTreeParams","handleUserPrompt","parseHandleUserPromptParams","locateNodes","parseLocateNodesParams","navigate","parseNavigateParams","print","parsePrintParams","reload","parseReloadParams","setViewport","parseSetViewportParams","traverseHistory","parseTraverseHistoryParams","getSession","parseGetSessionParams","resolveRealm","parseResolveRealmParams","sendCommand","parseSendCommandParams","performActions","parsePerformActionsParams","releaseActions","parseReleaseActionsParams","setFiles","parseSetFilesParams","addIntercept","parseAddInterceptParams","continueRequest","parseContinueRequestParams","continueResponse","parseContinueResponseParams","continueWithAuth","parseContinueWithAuthParams","failRequest","parseFailRequestParams","provideResponse","parseProvideResponseParams","removeIntercept","parseRemoveInterceptParams","setPermissions","parseSetPermissionsParams","addPreloadScript","parseAddPreloadScriptParams","callFunction","parseCallFunctionParams","_processTargetParams","disown","parseDisownParams","evaluate","parseEvaluateParams","getRealms","parseGetRealmsParams","removePreloadScript","parseRemovePreloadScriptParams","status","subscribe","parseSubscribeParams","unsubscribe","deleteCookies","parseDeleteCookiesParams","getCookies","parseGetCookiesParams","setCookie","parseSetCookieParams","UnknownCommandException","target","exports"],"sources":["../../../src/bidiMapper/CommandProcessor.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}