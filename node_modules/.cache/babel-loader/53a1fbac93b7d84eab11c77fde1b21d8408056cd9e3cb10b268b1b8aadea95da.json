{"ast":null,"code":"import _classPrivateFieldInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldGet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\nimport _classPrivateFieldSet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\nimport \"core-js/modules/es.array.push.js\";\nvar __addDisposableResource = this && this.__addDisposableResource || function (env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({\n      value: value,\n      dispose: dispose,\n      async: async\n    });\n  } else if (async) {\n    env.stack.push({\n      async: true\n    });\n  }\n  return value;\n};\nvar __disposeResources = this && this.__disposeResources || function (SuppressedError) {\n  return function (env) {\n    function fail(e) {\n      env.error = env.hasError ? new SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n      env.hasError = true;\n    }\n    function next() {\n      while (env.stack.length) {\n        var rec = env.stack.pop();\n        try {\n          var result = rec.dispose && rec.dispose.call(rec.value);\n          if (rec.async) return Promise.resolve(result).then(next, function (e) {\n            fail(e);\n            return next();\n          });\n        } catch (e) {\n          fail(e);\n        }\n      }\n      if (env.hasError) throw env.error;\n    }\n    return next();\n  };\n}(typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n});\n/**\n * @license\n * Copyright 2024 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { JSHandle } from '../api/JSHandle.js';\nimport { debugError } from '../common/util.js';\nimport { DisposableStack } from '../util/disposable.js';\nimport { isErrorLike } from '../util/ErrorLike.js';\n/**\n * @internal\n */\nvar _name = /*#__PURE__*/new WeakMap();\nvar _fn = /*#__PURE__*/new WeakMap();\nexport class Binding {\n  constructor(name, fn) {\n    _classPrivateFieldInitSpec(this, _name, void 0);\n    _classPrivateFieldInitSpec(this, _fn, void 0);\n    _classPrivateFieldSet(_name, this, name);\n    _classPrivateFieldSet(_fn, this, fn);\n  }\n  get name() {\n    return _classPrivateFieldGet(_name, this);\n  }\n  /**\n   * @param context - Context to run the binding in; the context should have\n   * the binding added to it beforehand.\n   * @param id - ID of the call. This should come from the CDP\n   * `onBindingCalled` response.\n   * @param args - Plain arguments from CDP.\n   */\n  async run(context, id, args, isTrivial) {\n    const stack = new DisposableStack();\n    try {\n      if (!isTrivial) {\n        const env_1 = {\n          stack: [],\n          error: void 0,\n          hasError: false\n        };\n        try {\n          // Getting non-trivial arguments.\n          const handles = __addDisposableResource(env_1, await context.evaluateHandle((name, seq) => {\n            // @ts-expect-error Code is evaluated in a different context.\n            return globalThis[name].args.get(seq);\n          }, _classPrivateFieldGet(_name, this), id), false);\n          const properties = await handles.getProperties();\n          for (const [index, handle] of properties) {\n            // This is not straight-forward since some arguments can stringify, but\n            // aren't plain objects so add subtypes when the use-case arises.\n            if (index in args) {\n              switch (handle.remoteObject().subtype) {\n                case 'node':\n                  args[+index] = handle;\n                  break;\n                default:\n                  stack.use(handle);\n              }\n            } else {\n              stack.use(handle);\n            }\n          }\n        } catch (e_1) {\n          env_1.error = e_1;\n          env_1.hasError = true;\n        } finally {\n          __disposeResources(env_1);\n        }\n      }\n      await context.evaluate((name, seq, result) => {\n        // @ts-expect-error Code is evaluated in a different context.\n        const callbacks = globalThis[name].callbacks;\n        callbacks.get(seq).resolve(result);\n        callbacks.delete(seq);\n      }, _classPrivateFieldGet(_name, this), id, await _classPrivateFieldGet(_fn, this).call(this, ...args));\n      for (const arg of args) {\n        if (arg instanceof JSHandle) {\n          stack.use(arg);\n        }\n      }\n    } catch (error) {\n      if (isErrorLike(error)) {\n        await context.evaluate((name, seq, message, stack) => {\n          const error = new Error(message);\n          error.stack = stack;\n          // @ts-expect-error Code is evaluated in a different context.\n          const callbacks = globalThis[name].callbacks;\n          callbacks.get(seq).reject(error);\n          callbacks.delete(seq);\n        }, _classPrivateFieldGet(_name, this), id, error.message, error.stack).catch(debugError);\n      } else {\n        await context.evaluate((name, seq, error) => {\n          // @ts-expect-error Code is evaluated in a different context.\n          const callbacks = globalThis[name].callbacks;\n          callbacks.get(seq).reject(error);\n          callbacks.delete(seq);\n        }, _classPrivateFieldGet(_name, this), id, error).catch(debugError);\n      }\n    }\n  }\n}","map":{"version":3,"names":["JSHandle","debugError","DisposableStack","isErrorLike","_name","WeakMap","_fn","Binding","constructor","name","fn","_classPrivateFieldInitSpec","_classPrivateFieldSet","_classPrivateFieldGet","run","context","id","args","isTrivial","stack","handles","__addDisposableResource","env_1","evaluateHandle","seq","globalThis","get","properties","getProperties","index","handle","remoteObject","subtype","use","evaluate","result","callbacks","resolve","delete","call","arg","error","message","Error","reject","catch"],"sources":["../../../../src/cdp/Binding.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}