{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _classPrivateMethodInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateMethodInitSpec.js\").default;\nvar _classPrivateFieldInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _assertClassBrand = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/assertClassBrand.js\").default;\nvar _classPrivateFieldGet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldGet2.js\").default;\nvar _classPrivateFieldSet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldSet2.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SubscriptionManager = exports.unrollEvents = exports.cartesianProduct = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst events_js_1 = require(\"./events.js\");\n/**\n * Returns the cartesian product of the given arrays.\n *\n * Example:\n *   cartesian([1, 2], ['a', 'b']); => [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n */\nfunction cartesianProduct(...a) {\n  return a.reduce((a, b) => a.flatMap(d => b.map(e => [d, e].flat())));\n}\nexports.cartesianProduct = cartesianProduct;\n/** Expands \"AllEvents\" events into atomic events. */\nfunction unrollEvents(events) {\n  const allEvents = new Set();\n  function addEvents(events) {\n    for (const event of events) {\n      allEvents.add(event);\n    }\n  }\n  for (const event of events) {\n    switch (event) {\n      case protocol_js_1.ChromiumBidi.BiDiModule.BrowsingContext:\n        addEvents(Object.values(protocol_js_1.ChromiumBidi.BrowsingContext.EventNames));\n        break;\n      case protocol_js_1.ChromiumBidi.BiDiModule.Log:\n        addEvents(Object.values(protocol_js_1.ChromiumBidi.Log.EventNames));\n        break;\n      case protocol_js_1.ChromiumBidi.BiDiModule.Network:\n        addEvents(Object.values(protocol_js_1.ChromiumBidi.Network.EventNames));\n        break;\n      case protocol_js_1.ChromiumBidi.BiDiModule.Script:\n        addEvents(Object.values(protocol_js_1.ChromiumBidi.Script.EventNames));\n        break;\n      default:\n        allEvents.add(event);\n    }\n  }\n  return [...allEvents.values()];\n}\nexports.unrollEvents = unrollEvents;\nvar _subscriptionPriority = /*#__PURE__*/new WeakMap();\nvar _channelToContextToEventMap = /*#__PURE__*/new WeakMap();\nvar _browsingContextStorage = /*#__PURE__*/new WeakMap();\nvar _SubscriptionManager_brand = /*#__PURE__*/new WeakSet();\nclass SubscriptionManager {\n  constructor(browsingContextStorage) {\n    _classPrivateMethodInitSpec(this, _SubscriptionManager_brand);\n    _classPrivateFieldInitSpec(this, _subscriptionPriority, 0);\n    // BrowsingContext `null` means the event has subscription across all the\n    // browsing contexts.\n    // Channel `null` means no `channel` should be added.\n    _classPrivateFieldInitSpec(this, _channelToContextToEventMap, new Map());\n    _classPrivateFieldInitSpec(this, _browsingContextStorage, void 0);\n    _classPrivateFieldSet(_browsingContextStorage, this, browsingContextStorage);\n  }\n  getChannelsSubscribedToEvent(eventMethod, contextId) {\n    const prioritiesAndChannels = Array.from(_classPrivateFieldGet(_channelToContextToEventMap, this).keys()).map(channel => ({\n      priority: _assertClassBrand(_SubscriptionManager_brand, this, _getEventSubscriptionPriorityForChannel).call(this, eventMethod, contextId, channel),\n      channel\n    })).filter(({\n      priority\n    }) => priority !== null);\n    // Sort channels by priority.\n    return prioritiesAndChannels.sort((a, b) => a.priority - b.priority).map(({\n      channel\n    }) => channel);\n  }\n  /**\n   * @param module BiDi+ module\n   * @param contextId `null` == globally subscribed\n   *\n   * @returns\n   */\n  isSubscribedTo(moduleOrEvent, contextId = null) {\n    const topLevelContext = _classPrivateFieldGet(_browsingContextStorage, this).findTopLevelContextId(contextId);\n    for (const browserContextToEventMap of _classPrivateFieldGet(_channelToContextToEventMap, this).values()) {\n      for (const [id, eventMap] of browserContextToEventMap.entries()) {\n        // Not subscribed to this context or globally\n        if (topLevelContext !== id && id !== null) {\n          continue;\n        }\n        for (const event of eventMap.keys()) {\n          // This also covers the `cdp` case where\n          // we don't unroll the event names\n          if (\n          // Event explicitly subscribed\n          event === moduleOrEvent ||\n          // Event subscribed via module\n          event === moduleOrEvent.split('.').at(0) ||\n          // Event explicitly subscribed compared to module\n          event.split('.').at(0) === moduleOrEvent) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n  subscribe(event, contextId, channel) {\n    var _this$subscriptionPri, _this$subscriptionPri2;\n    // All the subscriptions are handled on the top-level contexts.\n    contextId = _classPrivateFieldGet(_browsingContextStorage, this).findTopLevelContextId(contextId);\n    // Check if subscribed event is a whole module\n    switch (event) {\n      case protocol_js_1.ChromiumBidi.BiDiModule.BrowsingContext:\n        Object.values(protocol_js_1.ChromiumBidi.BrowsingContext.EventNames).map(specificEvent => this.subscribe(specificEvent, contextId, channel));\n        return;\n      case protocol_js_1.ChromiumBidi.BiDiModule.Log:\n        Object.values(protocol_js_1.ChromiumBidi.Log.EventNames).map(specificEvent => this.subscribe(specificEvent, contextId, channel));\n        return;\n      case protocol_js_1.ChromiumBidi.BiDiModule.Network:\n        Object.values(protocol_js_1.ChromiumBidi.Network.EventNames).map(specificEvent => this.subscribe(specificEvent, contextId, channel));\n        return;\n      case protocol_js_1.ChromiumBidi.BiDiModule.Script:\n        Object.values(protocol_js_1.ChromiumBidi.Script.EventNames).map(specificEvent => this.subscribe(specificEvent, contextId, channel));\n        return;\n      default:\n      // Intentionally left empty.\n    }\n    if (!_classPrivateFieldGet(_channelToContextToEventMap, this).has(channel)) {\n      _classPrivateFieldGet(_channelToContextToEventMap, this).set(channel, new Map());\n    }\n    const contextToEventMap = _classPrivateFieldGet(_channelToContextToEventMap, this).get(channel);\n    if (!contextToEventMap.has(contextId)) {\n      contextToEventMap.set(contextId, new Map());\n    }\n    const eventMap = contextToEventMap.get(contextId);\n    // Do not re-subscribe to events to keep the priority.\n    if (eventMap.has(event)) {\n      return;\n    }\n    eventMap.set(event, (_classPrivateFieldSet(_subscriptionPriority, this, (_this$subscriptionPri = _classPrivateFieldGet(_subscriptionPriority, this), _this$subscriptionPri2 = _this$subscriptionPri++, _this$subscriptionPri)), _this$subscriptionPri2));\n  }\n  /**\n   * Unsubscribes atomically from all events in the given contexts and channel.\n   */\n  unsubscribeAll(events, contextIds, channel) {\n    // Assert all contexts are known.\n    for (const contextId of contextIds) {\n      if (contextId !== null) {\n        _classPrivateFieldGet(_browsingContextStorage, this).getContext(contextId);\n      }\n    }\n    const eventContextPairs = cartesianProduct(unrollEvents(events), contextIds);\n    // Assert all unsubscriptions are valid.\n    // If any of the unsubscriptions are invalid, do not unsubscribe from anything.\n    eventContextPairs.map(([event, contextId]) => _assertClassBrand(_SubscriptionManager_brand, this, _checkUnsubscribe).call(this, event, contextId, channel)).forEach(unsubscribe => unsubscribe());\n  }\n  /**\n   * Unsubscribes from the event in the given context and channel.\n   * Syntactic sugar for \"unsubscribeAll\".\n   */\n  unsubscribe(eventName, contextId, channel) {\n    this.unsubscribeAll([eventName], [contextId], channel);\n  }\n}\nfunction _getEventSubscriptionPriorityForChannel(eventMethod, contextId, channel) {\n  const contextToEventMap = _classPrivateFieldGet(_channelToContextToEventMap, this).get(channel);\n  if (contextToEventMap === undefined) {\n    return null;\n  }\n  const maybeTopLevelContextId = _classPrivateFieldGet(_browsingContextStorage, this).findTopLevelContextId(contextId);\n  // `null` covers global subscription.\n  const relevantContexts = [...new Set([null, maybeTopLevelContextId])];\n  // Get all the subscription priorities.\n  const priorities = relevantContexts.map(context => {\n    // Get the priority for exact event name\n    const priority = contextToEventMap.get(context)?.get(eventMethod);\n    // For CDP we can't provide specific event name when subscribing\n    // to the module directly.\n    // Because of that we need to see event `cdp` exits in the map.\n    if ((0, events_js_1.isCdpEvent)(eventMethod)) {\n      const cdpPriority = contextToEventMap.get(context)?.get(protocol_js_1.ChromiumBidi.BiDiModule.Cdp);\n      // If we subscribe to the event directly and `cdp` module as well\n      // priority will be different we take minimal priority\n      return priority && cdpPriority ? Math.min(priority, cdpPriority) :\n      // At this point we know that we have subscribed\n      // to only one of the two\n      priority ?? cdpPriority;\n    }\n    return priority;\n  }).filter(p => p !== undefined);\n  if (priorities.length === 0) {\n    // Not subscribed, return null.\n    return null;\n  }\n  // Return minimal priority.\n  return Math.min(...priorities);\n}\nfunction _checkUnsubscribe(event, contextId, channel) {\n  // All the subscriptions are handled on the top-level contexts.\n  contextId = _classPrivateFieldGet(_browsingContextStorage, this).findTopLevelContextId(contextId);\n  if (!_classPrivateFieldGet(_channelToContextToEventMap, this).has(channel)) {\n    throw new protocol_js_1.InvalidArgumentException(`Cannot unsubscribe from ${event}, ${contextId === null ? 'null' : contextId}. No subscription found.`);\n  }\n  const contextToEventMap = _classPrivateFieldGet(_channelToContextToEventMap, this).get(channel);\n  if (!contextToEventMap.has(contextId)) {\n    throw new protocol_js_1.InvalidArgumentException(`Cannot unsubscribe from ${event}, ${contextId === null ? 'null' : contextId}. No subscription found.`);\n  }\n  const eventMap = contextToEventMap.get(contextId);\n  if (!eventMap.has(event)) {\n    throw new protocol_js_1.InvalidArgumentException(`Cannot unsubscribe from ${event}, ${contextId === null ? 'null' : contextId}. No subscription found.`);\n  }\n  return () => {\n    eventMap.delete(event);\n    // Clean up maps if empty.\n    if (eventMap.size === 0) {\n      contextToEventMap.delete(event);\n    }\n    if (contextToEventMap.size === 0) {\n      _classPrivateFieldGet(_channelToContextToEventMap, this).delete(channel);\n    }\n  };\n}\nexports.SubscriptionManager = SubscriptionManager;","map":{"version":3,"names":["_classPrivateMethodInitSpec","require","default","_classPrivateFieldInitSpec","_assertClassBrand","_classPrivateFieldGet","_classPrivateFieldSet","protocol_js_1","events_js_1","cartesianProduct","a","reduce","b","flatMap","d","map","e","flat","exports","unrollEvents","events","allEvents","Set","addEvents","event","add","ChromiumBidi","BiDiModule","BrowsingContext","Object","values","EventNames","Log","Network","Script","_subscriptionPriority","WeakMap","_channelToContextToEventMap","_browsingContextStorage","_SubscriptionManager_brand","WeakSet","SubscriptionManager","constructor","browsingContextStorage","Map","getChannelsSubscribedToEvent","eventMethod","contextId","prioritiesAndChannels","Array","from","keys","channel","priority","_getEventSubscriptionPriorityForChannel","call","filter","sort","isSubscribedTo","moduleOrEvent","topLevelContext","findTopLevelContextId","browserContextToEventMap","id","eventMap","entries","split","at","subscribe","_this$subscriptionPri","_this$subscriptionPri2","specificEvent","has","set","contextToEventMap","get","unsubscribeAll","contextIds","getContext","eventContextPairs","_checkUnsubscribe","forEach","unsubscribe","eventName","undefined","maybeTopLevelContextId","relevantContexts","priorities","context","isCdpEvent","cdpPriority","Cdp","Math","min","p","length","InvalidArgumentException","delete","size"],"sources":["../../../../../src/bidiMapper/modules/session/SubscriptionManager.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}