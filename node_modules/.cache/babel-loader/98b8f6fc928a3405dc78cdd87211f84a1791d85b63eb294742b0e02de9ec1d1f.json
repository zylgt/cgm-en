{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nVue.use(VueRouter);\n\n//解决编程式路由往同一地址跳转时会报错的情况\nconst originalPush = VueRouter.prototype.push;\nconst originalReplace = VueRouter.prototype.replace;\n//push\nVueRouter.prototype.push = function push(location, onResolve, onReject) {\n  if (onResolve || onReject) return originalPush.call(this, location, onResolve, onReject);\n  return originalPush.call(this, location).catch(err => err);\n};\n//replace\nVueRouter.prototype.replace = function push(location, onResolve, onReject) {\n  if (onResolve || onReject) return originalReplace.call(this, location, onResolve, onReject);\n  return originalReplace.call(this, location).catch(err => err);\n};\nconst routes = [{\n  path: '/login',\n  name: 'login',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  meta: {\n    title: \"登录\"\n  },\n  component: resolve => require([\"@/views/login/login\"], resolve)\n}];\nconst router = new VueRouter({\n  mode: \"\",\n  // 去掉url中的#\n  base: '',\n  routes\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","use","originalPush","prototype","push","originalReplace","replace","location","onResolve","onReject","call","catch","err","routes","path","name","meta","title","component","resolve","require","router","mode","base"],"sources":["/Users/hexuemin/Desktop/jiuan/CGM/CGM3Admin/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\n\nVue.use(VueRouter)\n\n//解决编程式路由往同一地址跳转时会报错的情况\nconst originalPush = VueRouter.prototype.push;\nconst originalReplace = VueRouter.prototype.replace;\n//push\nVueRouter.prototype.push = function push(location, onResolve, onReject) {\n  if (onResolve || onReject)\n    return originalPush.call(this, location, onResolve, onReject);\n  return originalPush.call(this, location).catch(err => err);\n};\n//replace\nVueRouter.prototype.replace = function push(location, onResolve, onReject) {\n  if (onResolve || onReject)\n    return originalReplace.call(this, location, onResolve, onReject);\n  return originalReplace.call(this, location).catch(err => err);\n\n}\n\nconst routes = [\n  {\n    path: '/login',\n    name: 'login',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    meta: { title: \"登录\"},\n    component:(resolve) => require([\"@/views/login/login\"], resolve)\n  }\n]\n\nconst router = new VueRouter({\n  mode: \"\", // 去掉url中的#\n  base:'',\n  routes\n})\n\nexport default router"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAElCD,GAAG,CAACE,GAAG,CAACD,SAAS,CAAC;;AAElB;AACA,MAAME,YAAY,GAAGF,SAAS,CAACG,SAAS,CAACC,IAAI;AAC7C,MAAMC,eAAe,GAAGL,SAAS,CAACG,SAAS,CAACG,OAAO;AACnD;AACAN,SAAS,CAACG,SAAS,CAACC,IAAI,GAAG,SAASA,IAAIA,CAACG,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,EAAE;EACtE,IAAID,SAAS,IAAIC,QAAQ,EACvB,OAAOP,YAAY,CAACQ,IAAI,CAAC,IAAI,EAAEH,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,CAAC;EAC/D,OAAOP,YAAY,CAACQ,IAAI,CAAC,IAAI,EAAEH,QAAQ,CAAC,CAACI,KAAK,CAACC,GAAG,IAAIA,GAAG,CAAC;AAC5D,CAAC;AACD;AACAZ,SAAS,CAACG,SAAS,CAACG,OAAO,GAAG,SAASF,IAAIA,CAACG,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,EAAE;EACzE,IAAID,SAAS,IAAIC,QAAQ,EACvB,OAAOJ,eAAe,CAACK,IAAI,CAAC,IAAI,EAAEH,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,CAAC;EAClE,OAAOJ,eAAe,CAACK,IAAI,CAAC,IAAI,EAAEH,QAAQ,CAAC,CAACI,KAAK,CAACC,GAAG,IAAIA,GAAG,CAAC;AAE/D,CAAC;AAED,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACb;EACA;EACA;EACAC,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAI,CAAC;EACpBC,SAAS,EAAEC,OAAO,IAAKC,OAAO,CAAC,CAAC,qBAAqB,CAAC,EAAED,OAAO;AACjE,CAAC,CACF;AAED,MAAME,MAAM,GAAG,IAAIrB,SAAS,CAAC;EAC3BsB,IAAI,EAAE,EAAE;EAAE;EACVC,IAAI,EAAC,EAAE;EACPV;AACF,CAAC,CAAC;AAEF,eAAeQ,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}