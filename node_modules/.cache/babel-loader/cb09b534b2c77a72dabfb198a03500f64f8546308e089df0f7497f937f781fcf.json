{"ast":null,"code":"import { formatDate } from '@/utils/formatTime';\nimport { TIRUtils } from \"@/utils/algorithm/TIR\";\n// 监听主线程传来的消息\nself.addEventListener('message', e => {\n  // heavyCalculation(e.data)\n  self.postMessage(heavyCalculation(e.data));\n});\n// 处理数据\nfunction heavyCalculation(data) {\n  let array = data;\n  // 将数组按天分割\n  let dayMap = new Map();\n  array.forEach(item => {\n    item.day = formatDate(item.DataTs * 1000, 'mm.dd');\n    item.week = formatDate(item.DataTs * 1000, 'WW');\n    item.moment = Number(formatDate(item.DataTs * 1000, 'HH')) * 60 + Number(formatDate(item.DataTs * 1000, 'MM'));\n    item.dayArray = new Array(24 * 60);\n    item.dayArray[item.moment] = item.Value;\n    dayMap.has(item.day) ? dayMap.get(item.day).value[item.moment] = item.Value : dayMap.set(item.day, {\n      value: item.dayArray,\n      week: item.week,\n      tir: TIRUtils.getTIRResult(item.dayArray).normalRate\n    });\n  });\n  return dayMap;\n}","map":{"version":3,"names":["formatDate","TIRUtils","self","addEventListener","e","postMessage","heavyCalculation","data","array","dayMap","Map","forEach","item","day","DataTs","week","moment","Number","dayArray","Array","Value","has","get","value","set","tir","getTIRResult","normalRate"],"sources":["/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/src/workers/day_worker.js"],"sourcesContent":["import {formatDate} from '@/utils/formatTime'\nimport { TIRUtils } from \"@/utils/algorithm/TIR\";\n// 监听主线程传来的消息\nself.addEventListener('message',(e)=>{\n    // heavyCalculation(e.data)\n    self.postMessage(heavyCalculation(e.data))\n})\n// 处理数据\nfunction heavyCalculation(data){\n    let array = data\n     // 将数组按天分割\n     let dayMap = new Map()\n     array.forEach(item=>{\n        item.day = formatDate(item.DataTs*1000,'mm.dd')\n        item.week = formatDate(item.DataTs*1000,'WW')\n        item.moment = Number(formatDate(item.DataTs*1000,'HH'))*60+Number(formatDate(item.DataTs*1000,'MM'))\n        item.dayArray = new Array(24*60)\n        item.dayArray[item.moment] = item.Value\n        dayMap.has(item.day) ? dayMap.get(item.day).value[item.moment]=item.Value: dayMap.set(item.day, {value:item.dayArray,week:item.week,tir:TIRUtils.getTIRResult(item.dayArray).normalRate});\n    })\n    return dayMap\n}"],"mappings":"AAAA,SAAQA,UAAU,QAAO,oBAAoB;AAC7C,SAASC,QAAQ,QAAQ,uBAAuB;AAChD;AACAC,IAAI,CAACC,gBAAgB,CAAC,SAAS,EAAEC,CAAC,IAAG;EACjC;EACAF,IAAI,CAACG,WAAW,CAACC,gBAAgB,CAACF,CAAC,CAACG,IAAI,CAAC,CAAC;AAC9C,CAAC,CAAC;AACF;AACA,SAASD,gBAAgBA,CAACC,IAAI,EAAC;EAC3B,IAAIC,KAAK,GAAGD,IAAI;EACf;EACA,IAAIE,MAAM,GAAG,IAAIC,GAAG,CAAC,CAAC;EACtBF,KAAK,CAACG,OAAO,CAACC,IAAI,IAAE;IACjBA,IAAI,CAACC,GAAG,GAAGb,UAAU,CAACY,IAAI,CAACE,MAAM,GAAC,IAAI,EAAC,OAAO,CAAC;IAC/CF,IAAI,CAACG,IAAI,GAAGf,UAAU,CAACY,IAAI,CAACE,MAAM,GAAC,IAAI,EAAC,IAAI,CAAC;IAC7CF,IAAI,CAACI,MAAM,GAAGC,MAAM,CAACjB,UAAU,CAACY,IAAI,CAACE,MAAM,GAAC,IAAI,EAAC,IAAI,CAAC,CAAC,GAAC,EAAE,GAACG,MAAM,CAACjB,UAAU,CAACY,IAAI,CAACE,MAAM,GAAC,IAAI,EAAC,IAAI,CAAC,CAAC;IACpGF,IAAI,CAACM,QAAQ,GAAG,IAAIC,KAAK,CAAC,EAAE,GAAC,EAAE,CAAC;IAChCP,IAAI,CAACM,QAAQ,CAACN,IAAI,CAACI,MAAM,CAAC,GAAGJ,IAAI,CAACQ,KAAK;IACvCX,MAAM,CAACY,GAAG,CAACT,IAAI,CAACC,GAAG,CAAC,GAAGJ,MAAM,CAACa,GAAG,CAACV,IAAI,CAACC,GAAG,CAAC,CAACU,KAAK,CAACX,IAAI,CAACI,MAAM,CAAC,GAACJ,IAAI,CAACQ,KAAK,GAAEX,MAAM,CAACe,GAAG,CAACZ,IAAI,CAACC,GAAG,EAAE;MAACU,KAAK,EAACX,IAAI,CAACM,QAAQ;MAACH,IAAI,EAACH,IAAI,CAACG,IAAI;MAACU,GAAG,EAACxB,QAAQ,CAACyB,YAAY,CAACd,IAAI,CAACM,QAAQ,CAAC,CAACS;IAAU,CAAC,CAAC;EAC7L,CAAC,CAAC;EACF,OAAOlB,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}