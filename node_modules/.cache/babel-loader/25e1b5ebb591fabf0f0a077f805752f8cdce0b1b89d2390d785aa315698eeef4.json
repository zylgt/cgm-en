{"ast":null,"code":"\"use strict\";\n\nvar _classPrivateMethodInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateMethodInitSpec.js\").default;\nvar _classPrivateFieldInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _classPrivateFieldGet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldGet2.js\").default;\nvar _assertClassBrand = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/assertClassBrand.js\").default;\nvar _classPrivateFieldSet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldSet2.js\").default;\nvar _LogManager;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LogManager = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst log_js_1 = require(\"../../../utils/log.js\");\nconst logHelper_js_1 = require(\"./logHelper.js\");\n/** Converts CDP StackTrace object to BiDi StackTrace object. */\nfunction getBidiStackTrace(cdpStackTrace) {\n  const stackFrames = cdpStackTrace?.callFrames.map(callFrame => {\n    return {\n      columnNumber: callFrame.columnNumber,\n      functionName: callFrame.functionName,\n      lineNumber: callFrame.lineNumber,\n      url: callFrame.url\n    };\n  });\n  return stackFrames ? {\n    callFrames: stackFrames\n  } : undefined;\n}\nfunction getLogLevel(consoleApiType) {\n  if ([\"error\" /* Log.Level.Error */, 'assert'].includes(consoleApiType)) {\n    return \"error\" /* Log.Level.Error */;\n  }\n  if ([\"debug\" /* Log.Level.Debug */, 'trace'].includes(consoleApiType)) {\n    return \"debug\" /* Log.Level.Debug */;\n  }\n  if ([\"warn\" /* Log.Level.Warn */, 'warning'].includes(consoleApiType)) {\n    return \"warn\" /* Log.Level.Warn */;\n  }\n  return \"info\" /* Log.Level.Info */;\n}\nvar _eventManager = /*#__PURE__*/new WeakMap();\nvar _realmStorage = /*#__PURE__*/new WeakMap();\nvar _cdpTarget = /*#__PURE__*/new WeakMap();\nvar _logger = /*#__PURE__*/new WeakMap();\nvar _LogManager_brand = /*#__PURE__*/new WeakSet();\nclass LogManager {\n  constructor(cdpTarget, realmStorage, eventManager, logger) {\n    _classPrivateMethodInitSpec(this, _LogManager_brand);\n    _classPrivateFieldInitSpec(this, _eventManager, void 0);\n    _classPrivateFieldInitSpec(this, _realmStorage, void 0);\n    _classPrivateFieldInitSpec(this, _cdpTarget, void 0);\n    _classPrivateFieldInitSpec(this, _logger, void 0);\n    _classPrivateFieldSet(_cdpTarget, this, cdpTarget);\n    _classPrivateFieldSet(_realmStorage, this, realmStorage);\n    _classPrivateFieldSet(_eventManager, this, eventManager);\n    _classPrivateFieldSet(_logger, this, logger);\n  }\n  static create(cdpTarget, realmStorage, eventManager, logger) {\n    const logManager = new LogManager(cdpTarget, realmStorage, eventManager, logger);\n    _assertClassBrand(_LogManager_brand, logManager, _initializeEntryAddedEventListener).call(logManager);\n    return logManager;\n  }\n}\n_LogManager = LogManager;\nfunction _initializeEntryAddedEventListener() {\n  _classPrivateFieldGet(_cdpTarget, this).cdpClient.on('Runtime.consoleAPICalled', params => {\n    // Try to find realm by `cdpSessionId` and `executionContextId`,\n    // if provided.\n    const realm = _classPrivateFieldGet(_realmStorage, this).findRealm({\n      cdpSessionId: _classPrivateFieldGet(_cdpTarget, this).cdpSessionId,\n      executionContextId: params.executionContextId\n    });\n    if (realm === undefined) {\n      // Ignore exceptions not attached to any realm.\n      _classPrivateFieldGet(_logger, this)?.call(this, log_js_1.LogType.cdp, params);\n      return;\n    }\n    const argsPromise = realm === undefined ? Promise.resolve(params.args) :\n    // Properly serialize arguments if possible.\n    Promise.all(params.args.map(arg => {\n      return realm.serializeCdpObject(arg, \"none\" /* Script.ResultOwnership.None */);\n    }));\n    for (const browsingContext of realm.associatedBrowsingContexts) {\n      _classPrivateFieldGet(_eventManager, this).registerPromiseEvent(argsPromise.then(args => ({\n        kind: 'success',\n        value: {\n          type: 'event',\n          method: protocol_js_1.ChromiumBidi.Log.EventNames.LogEntryAdded,\n          params: {\n            level: getLogLevel(params.type),\n            source: realm.source,\n            text: (0, logHelper_js_1.getRemoteValuesText)(args, true),\n            timestamp: Math.round(params.timestamp),\n            stackTrace: getBidiStackTrace(params.stackTrace),\n            type: 'console',\n            // Console method is `warn`, not `warning`.\n            method: params.type === 'warning' ? 'warn' : params.type,\n            args\n          }\n        }\n      })), browsingContext.id, protocol_js_1.ChromiumBidi.Log.EventNames.LogEntryAdded);\n    }\n  });\n  _classPrivateFieldGet(_cdpTarget, this).cdpClient.on('Runtime.exceptionThrown', params => {\n    // Try to find realm by `cdpSessionId` and `executionContextId`,\n    // if provided.\n    const realm = _classPrivateFieldGet(_realmStorage, this).findRealm({\n      cdpSessionId: _classPrivateFieldGet(_cdpTarget, this).cdpSessionId,\n      executionContextId: params.exceptionDetails.executionContextId\n    });\n    if (realm === undefined) {\n      // Ignore exceptions not attached to any realm.\n      _classPrivateFieldGet(_logger, this)?.call(this, log_js_1.LogType.cdp, params);\n      return;\n    }\n    for (const browsingContext of realm.associatedBrowsingContexts) {\n      _classPrivateFieldGet(_eventManager, this).registerPromiseEvent(_getExceptionText.call(_LogManager, params, realm).then(text => ({\n        kind: 'success',\n        value: {\n          type: 'event',\n          method: protocol_js_1.ChromiumBidi.Log.EventNames.LogEntryAdded,\n          params: {\n            level: \"error\" /* Log.Level.Error */,\n            source: realm.source,\n            text,\n            timestamp: Math.round(params.timestamp),\n            stackTrace: getBidiStackTrace(params.exceptionDetails.stackTrace),\n            type: 'javascript'\n          }\n        }\n      })), browsingContext.id, protocol_js_1.ChromiumBidi.Log.EventNames.LogEntryAdded);\n    }\n  });\n}\n/**\n * Try the best to get the exception text.\n */\nasync function _getExceptionText(params, realm) {\n  if (!params.exceptionDetails.exception) {\n    return params.exceptionDetails.text;\n  }\n  if (realm === undefined) {\n    return JSON.stringify(params.exceptionDetails.exception);\n  }\n  return await realm.stringifyObject(params.exceptionDetails.exception);\n}\nexports.LogManager = LogManager;","map":{"version":3,"names":["protocol_js_1","require","log_js_1","logHelper_js_1","getBidiStackTrace","cdpStackTrace","stackFrames","callFrames","map","callFrame","columnNumber","functionName","lineNumber","url","undefined","getLogLevel","consoleApiType","includes","_eventManager","WeakMap","_realmStorage","_cdpTarget","_logger","_LogManager_brand","WeakSet","LogManager","constructor","cdpTarget","realmStorage","eventManager","logger","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_classPrivateFieldSet","create","logManager","_assertClassBrand","_initializeEntryAddedEventListener","call","_LogManager","_classPrivateFieldGet","cdpClient","on","params","realm","findRealm","cdpSessionId","executionContextId","LogType","cdp","argsPromise","Promise","resolve","args","all","arg","serializeCdpObject","browsingContext","associatedBrowsingContexts","registerPromiseEvent","then","kind","value","type","method","ChromiumBidi","Log","EventNames","LogEntryAdded","level","source","text","getRemoteValuesText","timestamp","Math","round","stackTrace","id","exceptionDetails","_getExceptionText","exception","JSON","stringify","stringifyObject","exports"],"sources":["../../../../../src/bidiMapper/modules/log/LogManager.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;AAkBA,MAAAA,aAAA,GAAAC,OAAA;AACA,MAAAC,QAAA,GAAAD,OAAA;AAMA,MAAAE,cAAA,GAAAF,OAAA;AAEA;AACA,SAASG,iBAAiBA,CACxBC,aAAsD;EAEtD,MAAMC,WAAW,GAAGD,aAAa,EAAEE,UAAU,CAACC,GAAG,CAAEC,SAAS,IAAI;IAC9D,OAAO;MACLC,YAAY,EAAED,SAAS,CAACC,YAAY;MACpCC,YAAY,EAAEF,SAAS,CAACE,YAAY;MACpCC,UAAU,EAAEH,SAAS,CAACG,UAAU;MAChCC,GAAG,EAAEJ,SAAS,CAACI;KAChB;EACH,CAAC,CAAC;EAEF,OAAOP,WAAW,GAAG;IAACC,UAAU,EAAED;EAAW,CAAC,GAAGQ,SAAS;AAC5D;AAEA,SAASC,WAAWA,CAACC,cAAsB;EACzC,IAAI,gCAAkB,QAAQ,CAAC,CAACC,QAAQ,CAACD,cAAc,CAAC,EAAE;IACxD;EACF;EACA,IAAI,gCAAkB,OAAO,CAAC,CAACC,QAAQ,CAACD,cAAc,CAAC,EAAE;IACvD;EACF;EACA,IAAI,8BAAiB,SAAS,CAAC,CAACC,QAAQ,CAACD,cAAc,CAAC,EAAE;IACxD;EACF;EACA;AACF;AAAC,IAAAE,aAAA,oBAAAC,OAAA;AAAA,IAAAC,aAAA,oBAAAD,OAAA;AAAA,IAAAE,UAAA,oBAAAF,OAAA;AAAA,IAAAG,OAAA,oBAAAH,OAAA;AAAA,IAAAI,iBAAA,oBAAAC,OAAA;AAED,MAAaC,UAAU;EAMrBC,YACEC,SAAoB,EACpBC,YAA0B,EAC1BC,YAA0B,EAC1BC,MAAiB;IAAAC,2BAAA,OAAAR,iBAAA;IAAAS,0BAAA,OAAAd,aAAA;IAAAc,0BAAA,OAAAZ,aAAA;IAAAY,0BAAA,OAAAX,UAAA;IAAAW,0BAAA,OAAAV,OAAA;IAEjBW,qBAAA,CAAAZ,UAAA,MAAI,EAAcM,SAAS;IAC3BM,qBAAA,CAAAb,aAAA,MAAI,EAAiBQ,YAAY;IACjCK,qBAAA,CAAAf,aAAA,MAAI,EAAiBW,YAAY;IACjCI,qBAAA,CAAAX,OAAA,MAAI,EAAWQ,MAAM;EACvB;EAEA,OAAOI,MAAMA,CACXP,SAAoB,EACpBC,YAA0B,EAC1BC,YAA0B,EAC1BC,MAAiB;IAEjB,MAAMK,UAAU,GAAG,IAAIV,UAAU,CAC/BE,SAAS,EACTC,YAAY,EACZC,YAAY,EACZC,MAAM,CACP;IAEDM,iBAAA,CAAAb,iBAAA,EAAAY,UAAU,EAAAE,kCAAA,EAAAC,IAAA,CAAVH,UAAU;IAEV,OAAOA,UAAU;EACnB;;AAkHDI,WAAA,GApJYd,UAAU;AAAA,SAAAY,mCAAA,EAoCa;EAChCG,qBAAA,CAAAnB,UAAA,MAAI,EAAYoB,SAAS,CAACC,EAAE,CAC1B,0BAA0B,EACzBC,MAA8C,IAAI;IACjD;IACA;IACA,MAAMC,KAAK,GAAsBJ,qBAAA,CAAApB,aAAA,MAAI,EAAeyB,SAAS,CAAC;MAC5DC,YAAY,EAAEN,qBAAA,CAAAnB,UAAA,MAAI,EAAYyB,YAAY;MAC1CC,kBAAkB,EAAEJ,MAAM,CAACI;KAC5B,CAAC;IACF,IAAIH,KAAK,KAAK9B,SAAS,EAAE;MACvB;MACA0B,qBAAA,CAAAlB,OAAA,MAAI,GAAAgB,IAAA,CAAJ,IAAI,EAAWpC,QAAA,CAAA8C,OAAO,CAACC,GAAG,EAAEN,MAAM;MAClC;IACF;IAEA,MAAMO,WAAW,GACfN,KAAK,KAAK9B,SAAS,GACfqC,OAAO,CAACC,OAAO,CAACT,MAAM,CAACU,IAA4B,CAAC;IACpD;IACAF,OAAO,CAACG,GAAG,CACTX,MAAM,CAACU,IAAI,CAAC7C,GAAG,CAAE+C,GAAG,IAAI;MACtB,OAAOX,KAAK,CAACY,kBAAkB,CAC7BD,GAAG,2CAEJ;IACH,CAAC,CAAC,CACH;IACP,KAAK,MAAME,eAAe,IAAIb,KAAK,CAACc,0BAA0B,EAAE;MAC9DlB,qBAAA,CAAAtB,aAAA,MAAI,EAAeyC,oBAAoB,CACrCT,WAAW,CAACU,IAAI,CAAEP,IAAI,KAAM;QAC1BQ,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE;UACLC,IAAI,EAAE,OAAO;UACbC,MAAM,EAAEhE,aAAA,CAAAiE,YAAY,CAACC,GAAG,CAACC,UAAU,CAACC,aAAa;UACjDzB,MAAM,EAAE;YACN0B,KAAK,EAAEtD,WAAW,CAAC4B,MAAM,CAACoB,IAAI,CAAC;YAC/BO,MAAM,EAAE1B,KAAK,CAAC0B,MAAM;YACpBC,IAAI,EAAE,IAAApE,cAAA,CAAAqE,mBAAmB,EAACnB,IAAI,EAAE,IAAI,CAAC;YACrCoB,SAAS,EAAEC,IAAI,CAACC,KAAK,CAAChC,MAAM,CAAC8B,SAAS,CAAC;YACvCG,UAAU,EAAExE,iBAAiB,CAACuC,MAAM,CAACiC,UAAU,CAAC;YAChDb,IAAI,EAAE,SAAS;YACf;YACAC,MAAM,EAAErB,MAAM,CAACoB,IAAI,KAAK,SAAS,GAAG,MAAM,GAAGpB,MAAM,CAACoB,IAAI;YACxDV;;;OAGL,CAAC,CAAC,EACHI,eAAe,CAACoB,EAAE,EAClB7E,aAAA,CAAAiE,YAAY,CAACC,GAAG,CAACC,UAAU,CAACC,aAAa,CAC1C;IACH;EACF,CAAC,CACF;EAED5B,qBAAA,CAAAnB,UAAA,MAAI,EAAYoB,SAAS,CAACC,EAAE,CAC1B,yBAAyB,EACxBC,MAA6C,IAAI;IAChD;IACA;IACA,MAAMC,KAAK,GAAGJ,qBAAA,CAAApB,aAAA,MAAI,EAAeyB,SAAS,CAAC;MACzCC,YAAY,EAAEN,qBAAA,CAAAnB,UAAA,MAAI,EAAYyB,YAAY;MAC1CC,kBAAkB,EAAEJ,MAAM,CAACmC,gBAAgB,CAAC/B;KAC7C,CAAC;IACF,IAAIH,KAAK,KAAK9B,SAAS,EAAE;MACvB;MACA0B,qBAAA,CAAAlB,OAAA,MAAI,GAAAgB,IAAA,CAAJ,IAAI,EAAWpC,QAAA,CAAA8C,OAAO,CAACC,GAAG,EAAEN,MAAM;MAClC;IACF;IAEA,KAAK,MAAMc,eAAe,IAAIb,KAAK,CAACc,0BAA0B,EAAE;MAC9DlB,qBAAA,CAAAtB,aAAA,MAAI,EAAeyC,oBAAoB,CACrCoB,iBAAA,CAAAzC,IAAA,CAAAb,WAAU,EAAmBkB,MAAM,EAAEC,KAAK,EAAEgB,IAAI,CAAEW,IAAI,KAAM;QAC1DV,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE;UACLC,IAAI,EAAE,OAAO;UACbC,MAAM,EAAEhE,aAAA,CAAAiE,YAAY,CAACC,GAAG,CAACC,UAAU,CAACC,aAAa;UACjDzB,MAAM,EAAE;YACN0B,KAAK;YACLC,MAAM,EAAE1B,KAAK,CAAC0B,MAAM;YACpBC,IAAI;YACJE,SAAS,EAAEC,IAAI,CAACC,KAAK,CAAChC,MAAM,CAAC8B,SAAS,CAAC;YACvCG,UAAU,EAAExE,iBAAiB,CAC3BuC,MAAM,CAACmC,gBAAgB,CAACF,UAAU,CACnC;YACDb,IAAI,EAAE;;;OAGX,CAAC,CAAC,EACHN,eAAe,CAACoB,EAAE,EAClB7E,aAAA,CAAAiE,YAAY,CAACC,GAAG,CAACC,UAAU,CAACC,aAAa,CAC1C;IACH;EACF,CAAC,CACF;AACH;AAEA;;;AAAA,eAAAW,kBAIEpC,MAA6C,EAC7CC,KAAa;EAEb,IAAI,CAACD,MAAM,CAACmC,gBAAgB,CAACE,SAAS,EAAE;IACtC,OAAOrC,MAAM,CAACmC,gBAAgB,CAACP,IAAI;EACrC;EACA,IAAI3B,KAAK,KAAK9B,SAAS,EAAE;IACvB,OAAOmE,IAAI,CAACC,SAAS,CAACvC,MAAM,CAACmC,gBAAgB,CAACE,SAAS,CAAC;EAC1D;EACA,OAAO,MAAMpC,KAAK,CAACuC,eAAe,CAACxC,MAAM,CAACmC,gBAAgB,CAACE,SAAS,CAAC;AACvE;AAnJFI,OAAA,CAAA3D,UAAA,GAAAA,UAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}