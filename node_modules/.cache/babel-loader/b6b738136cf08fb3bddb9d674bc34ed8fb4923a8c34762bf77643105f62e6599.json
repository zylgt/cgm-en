{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar _classPrivateMethodInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateMethodInitSpec.js\").default;\nvar _classPrivateFieldInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _defineProperty = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nvar _classPrivateFieldSet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldSet2.js\").default;\nvar _assertClassBrand = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/assertClassBrand.js\").default;\nvar _classPrivateFieldGet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldGet2.js\").default;\nrequire(\"core-js/modules/es.array.push.js\");\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __runInitializers = this && this.__runInitializers || function (thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n    value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\nvar __esDecorate = this && this.__esDecorate || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) {\n    if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n    return f;\n  }\n  var kind = contextIn.kind,\n    key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _,\n    done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n    var context = {};\n    for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n    for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n    context.addInitializer = function (f) {\n      if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n      extraInitializers.push(accept(f || null));\n    };\n    var result = (0, decorators[i])(kind === \"accessor\" ? {\n      get: descriptor.get,\n      set: descriptor.set\n    } : descriptor[key], context);\n    if (kind === \"accessor\") {\n      if (result === void 0) continue;\n      if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n      if (_ = accept(result.get)) descriptor.get = _;\n      if (_ = accept(result.set)) descriptor.set = _;\n      if (_ = accept(result.init)) initializers.unshift(_);\n    } else if (_ = accept(result)) {\n      if (kind === \"field\") initializers.unshift(_);else descriptor[key] = _;\n    }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __addDisposableResource = this && this.__addDisposableResource || function (env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({\n      value: value,\n      dispose: dispose,\n      async: async\n    });\n  } else if (async) {\n    env.stack.push({\n      async: true\n    });\n  }\n  return value;\n};\nvar __disposeResources = this && this.__disposeResources || function (SuppressedError) {\n  return function (env) {\n    function fail(e) {\n      env.error = env.hasError ? new SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n      env.hasError = true;\n    }\n    function next() {\n      while (env.stack.length) {\n        var rec = env.stack.pop();\n        try {\n          var result = rec.dispose && rec.dispose.call(rec.value);\n          if (rec.async) return Promise.resolve(result).then(next, function (e) {\n            fail(e);\n            return next();\n          });\n        } catch (e) {\n          fail(e);\n        }\n      }\n      if (env.hasError) throw env.error;\n    }\n    return next();\n  };\n}(typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n});\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.supportedMetrics = exports.Page = exports.setDefaultScreenshotOptions = void 0;\nconst rxjs_js_1 = require(\"../../third_party/rxjs/rxjs.js\");\nconst Errors_js_1 = require(\"../common/Errors.js\");\nconst EventEmitter_js_1 = require(\"../common/EventEmitter.js\");\nconst TimeoutSettings_js_1 = require(\"../common/TimeoutSettings.js\");\nconst util_js_1 = require(\"../common/util.js\");\nconst decorators_js_1 = require(\"../util/decorators.js\");\nconst disposable_js_1 = require(\"../util/disposable.js\");\nconst locators_js_1 = require(\"./locators/locators.js\");\n/**\n * @internal\n */\nfunction setDefaultScreenshotOptions(options) {\n  options.optimizeForSpeed ??= false;\n  options.type ??= 'png';\n  options.fromSurface ??= true;\n  options.fullPage ??= false;\n  options.omitBackground ??= false;\n  options.encoding ??= 'binary';\n  options.captureBeyondViewport ??= true;\n}\nexports.setDefaultScreenshotOptions = setDefaultScreenshotOptions;\n/**\n * Page provides methods to interact with a single tab or\n * {@link https://developer.chrome.com/extensions/background_pages | extension background page}\n * in the browser.\n *\n * :::note\n *\n * One Browser instance might have multiple Page instances.\n *\n * :::\n *\n * @example\n * This example creates a page, navigates it to a URL, and then saves a screenshot:\n *\n * ```ts\n * import puppeteer from 'puppeteer';\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://example.com');\n *   await page.screenshot({path: 'screenshot.png'});\n *   await browser.close();\n * })();\n * ```\n *\n * The Page class extends from Puppeteer's {@link EventEmitter} class and will\n * emit various events which are documented in the {@link PageEvent} enum.\n *\n * @example\n * This example logs a message for a single page `load` event:\n *\n * ```ts\n * page.once('load', () => console.log('Page loaded!'));\n * ```\n *\n * To unsubscribe from events use the {@link EventEmitter.off} method:\n *\n * ```ts\n * function logRequest(interceptedRequest) {\n *   console.log('A request was made:', interceptedRequest.url());\n * }\n * page.on('request', logRequest);\n * // Sometime later...\n * page.off('request', logRequest);\n * ```\n *\n * @public\n */\nlet Page = ((_ref, _disposable_js_1$asyn, _Page, _requestHandlers, _inflight$, _screencastSessionCount, _startScreencastPromise, _Page_brand) => {\n  let _classSuper = EventEmitter_js_1.EventEmitter;\n  let _instanceExtraInitializers = [];\n  let _screenshot_decorators;\n  return _requestHandlers = /*#__PURE__*/new WeakMap(), _inflight$ = /*#__PURE__*/new WeakMap(), _screencastSessionCount = /*#__PURE__*/new WeakMap(), _startScreencastPromise = /*#__PURE__*/new WeakMap(), _Page_brand = /*#__PURE__*/new WeakSet(), _ref = (_screenshot_decorators = [(0, decorators_js_1.guarded)(function () {\n    return this.browser();\n  })], disposable_js_1.disposeSymbol), _disposable_js_1$asyn = disposable_js_1.asyncDisposeSymbol, (_Page = class Page extends _classSuper {\n    /**\n     * @internal\n     */\n    constructor() {\n      super();\n      /**\n       * Gets the native, non-emulated dimensions of the viewport.\n       */\n      _classPrivateMethodInitSpec(this, _Page_brand);\n      /**\n       * @internal\n       */\n      _defineProperty(this, \"_isDragging\", (__runInitializers(this, _instanceExtraInitializers), false));\n      /**\n       * @internal\n       */\n      _defineProperty(this, \"_timeoutSettings\", new TimeoutSettings_js_1.TimeoutSettings());\n      _classPrivateFieldInitSpec(this, _requestHandlers, new WeakMap());\n      _classPrivateFieldInitSpec(this, _inflight$, new rxjs_js_1.ReplaySubject(1));\n      _classPrivateFieldInitSpec(this, _screencastSessionCount, 0);\n      _classPrivateFieldInitSpec(this, _startScreencastPromise, void 0);\n      (0, util_js_1.fromEmitterEvent)(this, \"request\" /* PageEvent.Request */).pipe((0, rxjs_js_1.mergeMap)(originalRequest => {\n        return (0, rxjs_js_1.concat)((0, rxjs_js_1.of)(1), (0, rxjs_js_1.merge)((0, util_js_1.fromEmitterEvent)(this, \"requestfailed\" /* PageEvent.RequestFailed */), (0, util_js_1.fromEmitterEvent)(this, \"requestfinished\" /* PageEvent.RequestFinished */), (0, util_js_1.fromEmitterEvent)(this, \"response\" /* PageEvent.Response */).pipe((0, rxjs_js_1.map)(response => {\n          return response.request();\n        }))).pipe((0, rxjs_js_1.filter)(request => {\n          return request.id === originalRequest.id;\n        }), (0, rxjs_js_1.take)(1), (0, rxjs_js_1.map)(() => {\n          return -1;\n        })));\n      }), (0, rxjs_js_1.mergeScan)((acc, addend) => {\n        return (0, rxjs_js_1.of)(acc + addend);\n      }, 0), (0, rxjs_js_1.takeUntil)((0, util_js_1.fromEmitterEvent)(this, \"close\" /* PageEvent.Close */)), (0, rxjs_js_1.startWith)(0)).subscribe(_classPrivateFieldGet(_inflight$, this));\n    }\n    /**\n     * Listen to page events.\n     *\n     * @remarks\n     * This method exists to define event typings and handle proper wireup of\n     * cooperative request interception. Actual event listening and dispatching is\n     * delegated to {@link EventEmitter}.\n     *\n     * @internal\n     */\n    on(type, handler) {\n      if (type !== \"request\" /* PageEvent.Request */) {\n        return super.on(type, handler);\n      }\n      let wrapper = _classPrivateFieldGet(_requestHandlers, this).get(handler);\n      if (wrapper === undefined) {\n        wrapper = event => {\n          event.enqueueInterceptAction(() => {\n            return handler(event);\n          });\n        };\n        _classPrivateFieldGet(_requestHandlers, this).set(handler, wrapper);\n      }\n      return super.on(type, wrapper);\n    }\n    /**\n     * @internal\n     */\n    off(type, handler) {\n      if (type === \"request\" /* PageEvent.Request */) {\n        handler = _classPrivateFieldGet(_requestHandlers, this).get(handler) || handler;\n      }\n      return super.off(type, handler);\n    }\n    locator(selectorOrFunc) {\n      if (typeof selectorOrFunc === 'string') {\n        return locators_js_1.NodeLocator.create(this, selectorOrFunc);\n      } else {\n        return locators_js_1.FunctionLocator.create(this, selectorOrFunc);\n      }\n    }\n    /**\n     * A shortcut for {@link Locator.race} that does not require static imports.\n     *\n     * @internal\n     */\n    locatorRace(locators) {\n      return locators_js_1.Locator.race(locators);\n    }\n    /**\n     * Runs `document.querySelector` within the page. If no element matches the\n     * selector, the return value resolves to `null`.\n     *\n     * @param selector - A `selector` to query page for\n     * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n     * to query page for.\n     */\n    async $(selector) {\n      return await this.mainFrame().$(selector);\n    }\n    /**\n     * The method runs `document.querySelectorAll` within the page. If no elements\n     * match the selector, the return value resolves to `[]`.\n     *\n     * @param selector - A `selector` to query page for\n     *\n     * @remarks\n     *\n     * Shortcut for {@link Frame.$$ | Page.mainFrame().$$(selector) }.\n     */\n    async $$(selector) {\n      return await this.mainFrame().$$(selector);\n    }\n    /**\n     * @remarks\n     *\n     * The only difference between {@link Page.evaluate | page.evaluate} and\n     * `page.evaluateHandle` is that `evaluateHandle` will return the value\n     * wrapped in an in-page object.\n     *\n     * If the function passed to `page.evaluateHandle` returns a Promise, the\n     * function will wait for the promise to resolve and return its value.\n     *\n     * You can pass a string instead of a function (although functions are\n     * recommended as they are easier to debug and use with TypeScript):\n     *\n     * @example\n     *\n     * ```ts\n     * const aHandle = await page.evaluateHandle('document');\n     * ```\n     *\n     * @example\n     * {@link JSHandle} instances can be passed as arguments to the `pageFunction`:\n     *\n     * ```ts\n     * const aHandle = await page.evaluateHandle(() => document.body);\n     * const resultHandle = await page.evaluateHandle(\n     *   body => body.innerHTML,\n     *   aHandle\n     * );\n     * console.log(await resultHandle.jsonValue());\n     * await resultHandle.dispose();\n     * ```\n     *\n     * Most of the time this function returns a {@link JSHandle},\n     * but if `pageFunction` returns a reference to an element,\n     * you instead get an {@link ElementHandle} back:\n     *\n     * @example\n     *\n     * ```ts\n     * const button = await page.evaluateHandle(() =>\n     *   document.querySelector('button')\n     * );\n     * // can call `click` because `button` is an `ElementHandle`\n     * await button.click();\n     * ```\n     *\n     * The TypeScript definitions assume that `evaluateHandle` returns\n     * a `JSHandle`, but if you know it's going to return an\n     * `ElementHandle`, pass it as the generic argument:\n     *\n     * ```ts\n     * const button = await page.evaluateHandle<ElementHandle>(...);\n     * ```\n     *\n     * @param pageFunction - a function that is run within the page\n     * @param args - arguments to be passed to the pageFunction\n     */\n    async evaluateHandle(pageFunction, ...args) {\n      pageFunction = (0, util_js_1.withSourcePuppeteerURLIfNone)(this.evaluateHandle.name, pageFunction);\n      return await this.mainFrame().evaluateHandle(pageFunction, ...args);\n    }\n    /**\n     * This method runs `document.querySelector` within the page and passes the\n     * result as the first argument to the `pageFunction`.\n     *\n     * @remarks\n     *\n     * If no element is found matching `selector`, the method will throw an error.\n     *\n     * If `pageFunction` returns a promise `$eval` will wait for the promise to\n     * resolve and then return its value.\n     *\n     * @example\n     *\n     * ```ts\n     * const searchValue = await page.$eval('#search', el => el.value);\n     * const preloadHref = await page.$eval('link[rel=preload]', el => el.href);\n     * const html = await page.$eval('.main-container', el => el.outerHTML);\n     * ```\n     *\n     * If you are using TypeScript, you may have to provide an explicit type to the\n     * first argument of the `pageFunction`.\n     * By default it is typed as `Element`, but you may need to provide a more\n     * specific sub-type:\n     *\n     * @example\n     *\n     * ```ts\n     * // if you don't provide HTMLInputElement here, TS will error\n     * // as `value` is not on `Element`\n     * const searchValue = await page.$eval(\n     *   '#search',\n     *   (el: HTMLInputElement) => el.value\n     * );\n     * ```\n     *\n     * The compiler should be able to infer the return type\n     * from the `pageFunction` you provide. If it is unable to, you can use the generic\n     * type to tell the compiler what return type you expect from `$eval`:\n     *\n     * @example\n     *\n     * ```ts\n     * // The compiler can infer the return type in this case, but if it can't\n     * // or if you want to be more explicit, provide it as the generic type.\n     * const searchValue = await page.$eval<string>(\n     *   '#search',\n     *   (el: HTMLInputElement) => el.value\n     * );\n     * ```\n     *\n     * @param selector - the\n     * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n     * to query for\n     * @param pageFunction - the function to be evaluated in the page context.\n     * Will be passed the result of `document.querySelector(selector)` as its\n     * first argument.\n     * @param args - any additional arguments to pass through to `pageFunction`.\n     *\n     * @returns The result of calling `pageFunction`. If it returns an element it\n     * is wrapped in an {@link ElementHandle}, else the raw value itself is\n     * returned.\n     */\n    async $eval(selector, pageFunction, ...args) {\n      pageFunction = (0, util_js_1.withSourcePuppeteerURLIfNone)(this.$eval.name, pageFunction);\n      return await this.mainFrame().$eval(selector, pageFunction, ...args);\n    }\n    /**\n     * This method runs `Array.from(document.querySelectorAll(selector))` within\n     * the page and passes the result as the first argument to the `pageFunction`.\n     *\n     * @remarks\n     * If `pageFunction` returns a promise `$$eval` will wait for the promise to\n     * resolve and then return its value.\n     *\n     * @example\n     *\n     * ```ts\n     * // get the amount of divs on the page\n     * const divCount = await page.$$eval('div', divs => divs.length);\n     *\n     * // get the text content of all the `.options` elements:\n     * const options = await page.$$eval('div > span.options', options => {\n     *   return options.map(option => option.textContent);\n     * });\n     * ```\n     *\n     * If you are using TypeScript, you may have to provide an explicit type to the\n     * first argument of the `pageFunction`.\n     * By default it is typed as `Element[]`, but you may need to provide a more\n     * specific sub-type:\n     *\n     * @example\n     *\n     * ```ts\n     * await page.$$eval('input', elements => {\n     *   return elements.map(e => e.value);\n     * });\n     * ```\n     *\n     * The compiler should be able to infer the return type\n     * from the `pageFunction` you provide. If it is unable to, you can use the generic\n     * type to tell the compiler what return type you expect from `$$eval`:\n     *\n     * @example\n     *\n     * ```ts\n     * const allInputValues = await page.$$eval('input', elements =>\n     *   elements.map(e => e.textContent)\n     * );\n     * ```\n     *\n     * @param selector - the\n     * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n     * to query for\n     * @param pageFunction - the function to be evaluated in the page context.\n     * Will be passed the result of\n     * `Array.from(document.querySelectorAll(selector))` as its first argument.\n     * @param args - any additional arguments to pass through to `pageFunction`.\n     *\n     * @returns The result of calling `pageFunction`. If it returns an element it\n     * is wrapped in an {@link ElementHandle}, else the raw value itself is\n     * returned.\n     */\n    async $$eval(selector, pageFunction, ...args) {\n      pageFunction = (0, util_js_1.withSourcePuppeteerURLIfNone)(this.$$eval.name, pageFunction);\n      return await this.mainFrame().$$eval(selector, pageFunction, ...args);\n    }\n    /**\n     * Adds a `<script>` tag into the page with the desired URL or content.\n     *\n     * @remarks\n     * Shortcut for\n     * {@link Frame.addScriptTag | page.mainFrame().addScriptTag(options)}.\n     *\n     * @param options - Options for the script.\n     * @returns An {@link ElementHandle | element handle} to the injected\n     * `<script>` element.\n     */\n    async addScriptTag(options) {\n      return await this.mainFrame().addScriptTag(options);\n    }\n    async addStyleTag(options) {\n      return await this.mainFrame().addStyleTag(options);\n    }\n    /**\n     * The page's URL.\n     *\n     * @remarks\n     *\n     * Shortcut for {@link Frame.url | page.mainFrame().url()}.\n     */\n    url() {\n      return this.mainFrame().url();\n    }\n    /**\n     * The full HTML contents of the page, including the DOCTYPE.\n     */\n    async content() {\n      return await this.mainFrame().content();\n    }\n    /**\n     * Set the content of the page.\n     *\n     * @param html - HTML markup to assign to the page.\n     * @param options - Parameters that has some properties.\n     *\n     * @remarks\n     *\n     * The parameter `options` might have the following options.\n     *\n     * - `timeout` : Maximum time in milliseconds for resources to load, defaults\n     *   to 30 seconds, pass `0` to disable timeout. The default value can be\n     *   changed by using the {@link Page.setDefaultNavigationTimeout} or\n     *   {@link Page.setDefaultTimeout} methods.\n     *\n     * - `waitUntil`: When to consider setting markup succeeded, defaults to\n     *   `load`. Given an array of event strings, setting content is considered\n     *   to be successful after all events have been fired. Events can be\n     *   either:<br/>\n     * - `load` : consider setting content to be finished when the `load` event\n     *   is fired.<br/>\n     * - `domcontentloaded` : consider setting content to be finished when the\n     *   `DOMContentLoaded` event is fired.<br/>\n     * - `networkidle0` : consider setting content to be finished when there are\n     *   no more than 0 network connections for at least `500` ms.<br/>\n     * - `networkidle2` : consider setting content to be finished when there are\n     *   no more than 2 network connections for at least `500` ms.\n     */\n    async setContent(html, options) {\n      await this.mainFrame().setContent(html, options);\n    }\n    /**\n     * Navigates the page to the given `url`.\n     *\n     * @remarks\n     *\n     * Navigation to `about:blank` or navigation to the same URL with a different\n     * hash will succeed and return `null`.\n     *\n     * :::warning\n     *\n     * Headless mode doesn't support navigation to a PDF document. See the {@link\n     * https://bugs.chromium.org/p/chromium/issues/detail?id=761295 | upstream\n     * issue}.\n     *\n     * :::\n     *\n     * Shortcut for {@link Frame.goto | page.mainFrame().goto(url, options)}.\n     *\n     * @param url - URL to navigate page to. The URL should include scheme, e.g.\n     * `https://`\n     * @param options - Options to configure waiting behavior.\n     * @returns A promise which resolves to the main resource response. In case of\n     * multiple redirects, the navigation will resolve with the response of the\n     * last redirect.\n     * @throws If:\n     *\n     * - there's an SSL error (e.g. in case of self-signed certificates).\n     * - target URL is invalid.\n     * - the timeout is exceeded during navigation.\n     * - the remote server does not respond or is unreachable.\n     * - the main resource failed to load.\n     *\n     * This method will not throw an error when any valid HTTP status code is\n     * returned by the remote server, including 404 \"Not Found\" and 500 \"Internal\n     * Server Error\". The status code for such responses can be retrieved by\n     * calling {@link HTTPResponse.status}.\n     */\n    async goto(url, options) {\n      return await this.mainFrame().goto(url, options);\n    }\n    /**\n     * Waits for the page to navigate to a new URL or to reload. It is useful when\n     * you run code that will indirectly cause the page to navigate.\n     *\n     * @example\n     *\n     * ```ts\n     * const [response] = await Promise.all([\n     *   page.waitForNavigation(), // The promise resolves after navigation has finished\n     *   page.click('a.my-link'), // Clicking the link will indirectly cause a navigation\n     * ]);\n     * ```\n     *\n     * @remarks\n     *\n     * Usage of the\n     * {@link https://developer.mozilla.org/en-US/docs/Web/API/History_API | History API}\n     * to change the URL is considered a navigation.\n     *\n     * @param options - Navigation parameters which might have the following\n     * properties:\n     * @returns A `Promise` which resolves to the main resource response.\n     *\n     * - In case of multiple redirects, the navigation will resolve with the\n     *   response of the last redirect.\n     * - In case of navigation to a different anchor or navigation due to History\n     *   API usage, the navigation will resolve with `null`.\n     */\n    async waitForNavigation(options = {}) {\n      return await this.mainFrame().waitForNavigation(options);\n    }\n    /**\n     * @param urlOrPredicate - A URL or predicate to wait for\n     * @param options - Optional waiting parameters\n     * @returns Promise which resolves to the matched request\n     * @example\n     *\n     * ```ts\n     * const firstRequest = await page.waitForRequest(\n     *   'https://example.com/resource'\n     * );\n     * const finalRequest = await page.waitForRequest(\n     *   request => request.url() === 'https://example.com'\n     * );\n     * return finalRequest.response()?.ok();\n     * ```\n     *\n     * @remarks\n     * Optional Waiting Parameters have:\n     *\n     * - `timeout`: Maximum wait time in milliseconds, defaults to `30` seconds, pass\n     *   `0` to disable the timeout. The default value can be changed by using the\n     *   {@link Page.setDefaultTimeout} method.\n     */\n    waitForRequest(urlOrPredicate, options = {}) {\n      const {\n        timeout: ms = this._timeoutSettings.timeout()\n      } = options;\n      if (typeof urlOrPredicate === 'string') {\n        const url = urlOrPredicate;\n        urlOrPredicate = request => {\n          return request.url() === url;\n        };\n      }\n      const observable$ = (0, util_js_1.fromEmitterEvent)(this, \"request\" /* PageEvent.Request */).pipe((0, util_js_1.filterAsync)(urlOrPredicate), (0, rxjs_js_1.raceWith)((0, util_js_1.timeout)(ms), (0, util_js_1.fromEmitterEvent)(this, \"close\" /* PageEvent.Close */).pipe((0, rxjs_js_1.map)(() => {\n        throw new Errors_js_1.TargetCloseError('Page closed!');\n      }))));\n      return (0, rxjs_js_1.firstValueFrom)(observable$);\n    }\n    /**\n     * @param urlOrPredicate - A URL or predicate to wait for.\n     * @param options - Optional waiting parameters\n     * @returns Promise which resolves to the matched response.\n     * @example\n     *\n     * ```ts\n     * const firstResponse = await page.waitForResponse(\n     *   'https://example.com/resource'\n     * );\n     * const finalResponse = await page.waitForResponse(\n     *   response =>\n     *     response.url() === 'https://example.com' && response.status() === 200\n     * );\n     * const finalResponse = await page.waitForResponse(async response => {\n     *   return (await response.text()).includes('<html>');\n     * });\n     * return finalResponse.ok();\n     * ```\n     *\n     * @remarks\n     * Optional Parameter have:\n     *\n     * - `timeout`: Maximum wait time in milliseconds, defaults to `30` seconds,\n     *   pass `0` to disable the timeout. The default value can be changed by using\n     *   the {@link Page.setDefaultTimeout} method.\n     */\n    waitForResponse(urlOrPredicate, options = {}) {\n      const {\n        timeout: ms = this._timeoutSettings.timeout()\n      } = options;\n      if (typeof urlOrPredicate === 'string') {\n        const url = urlOrPredicate;\n        urlOrPredicate = response => {\n          return response.url() === url;\n        };\n      }\n      const observable$ = (0, util_js_1.fromEmitterEvent)(this, \"response\" /* PageEvent.Response */).pipe((0, util_js_1.filterAsync)(urlOrPredicate), (0, rxjs_js_1.raceWith)((0, util_js_1.timeout)(ms), (0, util_js_1.fromEmitterEvent)(this, \"close\" /* PageEvent.Close */).pipe((0, rxjs_js_1.map)(() => {\n        throw new Errors_js_1.TargetCloseError('Page closed!');\n      }))));\n      return (0, rxjs_js_1.firstValueFrom)(observable$);\n    }\n    /**\n     * Waits for the network to be idle.\n     *\n     * @param options - Options to configure waiting behavior.\n     * @returns A promise which resolves once the network is idle.\n     */\n    waitForNetworkIdle(options = {}) {\n      return (0, rxjs_js_1.firstValueFrom)(this.waitForNetworkIdle$(options));\n    }\n    /**\n     * @internal\n     */\n    waitForNetworkIdle$(options = {}) {\n      const {\n        timeout: ms = this._timeoutSettings.timeout(),\n        idleTime = util_js_1.NETWORK_IDLE_TIME,\n        concurrency = 0\n      } = options;\n      return _classPrivateFieldGet(_inflight$, this).pipe((0, rxjs_js_1.switchMap)(inflight => {\n        if (inflight > concurrency) {\n          return rxjs_js_1.EMPTY;\n        }\n        return (0, rxjs_js_1.timer)(idleTime);\n      }), (0, rxjs_js_1.map)(() => {}), (0, rxjs_js_1.raceWith)((0, util_js_1.timeout)(ms), (0, util_js_1.fromEmitterEvent)(this, \"close\" /* PageEvent.Close */).pipe((0, rxjs_js_1.map)(() => {\n        throw new Errors_js_1.TargetCloseError('Page closed!');\n      }))));\n    }\n    /**\n     * Waits for a frame matching the given conditions to appear.\n     *\n     * @example\n     *\n     * ```ts\n     * const frame = await page.waitForFrame(async frame => {\n     *   return frame.name() === 'Test';\n     * });\n     * ```\n     */\n    async waitForFrame(urlOrPredicate, options = {}) {\n      const {\n        timeout: ms = this.getDefaultTimeout()\n      } = options;\n      if ((0, util_js_1.isString)(urlOrPredicate)) {\n        urlOrPredicate = frame => {\n          return urlOrPredicate === frame.url();\n        };\n      }\n      return await (0, rxjs_js_1.firstValueFrom)((0, rxjs_js_1.merge)((0, util_js_1.fromEmitterEvent)(this, \"frameattached\" /* PageEvent.FrameAttached */), (0, util_js_1.fromEmitterEvent)(this, \"framenavigated\" /* PageEvent.FrameNavigated */), (0, rxjs_js_1.from)(this.frames())).pipe((0, util_js_1.filterAsync)(urlOrPredicate), (0, rxjs_js_1.first)(), (0, rxjs_js_1.raceWith)((0, util_js_1.timeout)(ms), (0, util_js_1.fromEmitterEvent)(this, \"close\" /* PageEvent.Close */).pipe((0, rxjs_js_1.map)(() => {\n        throw new Errors_js_1.TargetCloseError('Page closed.');\n      })))));\n    }\n    /**\n     * Emulates a given device's metrics and user agent.\n     *\n     * To aid emulation, Puppeteer provides a list of known devices that can be\n     * via {@link KnownDevices}.\n     *\n     * @remarks\n     * This method is a shortcut for calling two methods:\n     * {@link Page.setUserAgent} and {@link Page.setViewport}.\n     *\n     * This method will resize the page. A lot of websites don't expect phones to\n     * change size, so you should emulate before navigating to the page.\n     *\n     * @example\n     *\n     * ```ts\n     * import {KnownDevices} from 'puppeteer';\n     * const iPhone = KnownDevices['iPhone 6'];\n     *\n     * (async () => {\n     *   const browser = await puppeteer.launch();\n     *   const page = await browser.newPage();\n     *   await page.emulate(iPhone);\n     *   await page.goto('https://www.google.com');\n     *   // other actions...\n     *   await browser.close();\n     * })();\n     * ```\n     */\n    async emulate(device) {\n      await Promise.all([this.setUserAgent(device.userAgent), this.setViewport(device.viewport)]);\n    }\n    /**\n     * Evaluates a function in the page's context and returns the result.\n     *\n     * If the function passed to `page.evaluate` returns a Promise, the\n     * function will wait for the promise to resolve and return its value.\n     *\n     * @example\n     *\n     * ```ts\n     * const result = await frame.evaluate(() => {\n     *   return Promise.resolve(8 * 7);\n     * });\n     * console.log(result); // prints \"56\"\n     * ```\n     *\n     * You can pass a string instead of a function (although functions are\n     * recommended as they are easier to debug and use with TypeScript):\n     *\n     * @example\n     *\n     * ```ts\n     * const aHandle = await page.evaluate('1 + 2');\n     * ```\n     *\n     * To get the best TypeScript experience, you should pass in as the\n     * generic the type of `pageFunction`:\n     *\n     * ```ts\n     * const aHandle = await page.evaluate(() => 2);\n     * ```\n     *\n     * @example\n     *\n     * {@link ElementHandle} instances (including {@link JSHandle}s) can be passed\n     * as arguments to the `pageFunction`:\n     *\n     * ```ts\n     * const bodyHandle = await page.$('body');\n     * const html = await page.evaluate(body => body.innerHTML, bodyHandle);\n     * await bodyHandle.dispose();\n     * ```\n     *\n     * @param pageFunction - a function that is run within the page\n     * @param args - arguments to be passed to the pageFunction\n     *\n     * @returns the return value of `pageFunction`.\n     */\n    async evaluate(pageFunction, ...args) {\n      pageFunction = (0, util_js_1.withSourcePuppeteerURLIfNone)(this.evaluate.name, pageFunction);\n      return await this.mainFrame().evaluate(pageFunction, ...args);\n    }\n    /**\n     * @internal\n     */\n    async _maybeWriteBufferToFile(path, buffer) {\n      if (!path) {\n        return;\n      }\n      const fs = await (0, util_js_1.importFSPromises)();\n      await fs.writeFile(path, buffer);\n    }\n    /**\n     * Captures a screencast of this {@link Page | page}.\n     *\n     * @example\n     * Recording a {@link Page | page}:\n     *\n     * ```\n     * import puppeteer from 'puppeteer';\n     *\n     * // Launch a browser\n     * const browser = await puppeteer.launch();\n     *\n     * // Create a new page\n     * const page = await browser.newPage();\n     *\n     * // Go to your site.\n     * await page.goto(\"https://www.example.com\");\n     *\n     * // Start recording.\n     * const recorder = await page.screencast({path: 'recording.webm'});\n     *\n     * // Do something.\n     *\n     * // Stop recording.\n     * await recorder.stop();\n     *\n     * browser.close();\n     * ```\n     *\n     * @param options - Configures screencast behavior.\n     *\n     * @experimental\n     *\n     * @remarks\n     *\n     * All recordings will be {@link https://www.webmproject.org/ | WebM} format using\n     * the {@link https://www.webmproject.org/vp9/ | VP9} video codec. The FPS is 30.\n     *\n     * You must have {@link https://ffmpeg.org/ | ffmpeg} installed on your system.\n     */\n    async screencast(options = {}) {\n      const [{\n        ScreenRecorder\n      }, [width, height, devicePixelRatio]] = await Promise.all([Promise.resolve().then(() => __importStar(require('../node/ScreenRecorder.js'))), _assertClassBrand(_Page_brand, this, _getNativePixelDimensions).call(this)]);\n      let crop;\n      if (options.crop) {\n        const {\n          x,\n          y,\n          width: cropWidth,\n          height: cropHeight\n        } = roundRectangle(normalizeRectangle(options.crop));\n        if (x < 0 || y < 0) {\n          throw new Error(`\\`crop.x\\` and \\`crop.y\\` must be greater than or equal to 0.`);\n        }\n        if (cropWidth <= 0 || cropHeight <= 0) {\n          throw new Error(`\\`crop.height\\` and \\`crop.width\\` must be greater than or equal to 0.`);\n        }\n        const viewportWidth = width / devicePixelRatio;\n        const viewportHeight = height / devicePixelRatio;\n        if (x + cropWidth > viewportWidth) {\n          throw new Error(`\\`crop.width\\` cannot be larger than the viewport width (${viewportWidth}).`);\n        }\n        if (y + cropHeight > viewportHeight) {\n          throw new Error(`\\`crop.height\\` cannot be larger than the viewport height (${viewportHeight}).`);\n        }\n        crop = {\n          x: x * devicePixelRatio,\n          y: y * devicePixelRatio,\n          width: cropWidth * devicePixelRatio,\n          height: cropHeight * devicePixelRatio\n        };\n      }\n      if (options.speed !== undefined && options.speed <= 0) {\n        throw new Error(`\\`speed\\` must be greater than 0.`);\n      }\n      if (options.scale !== undefined && options.scale <= 0) {\n        throw new Error(`\\`scale\\` must be greater than 0.`);\n      }\n      const recorder = new ScreenRecorder(this, width, height, {\n        ...options,\n        path: options.ffmpegPath,\n        crop\n      });\n      try {\n        await this._startScreencast();\n      } catch (error) {\n        void recorder.stop();\n        throw error;\n      }\n      if (options.path) {\n        const {\n          createWriteStream\n        } = await Promise.resolve().then(() => __importStar(require('fs')));\n        const stream = createWriteStream(options.path, 'binary');\n        recorder.pipe(stream);\n      }\n      return recorder;\n    }\n    /**\n     * @internal\n     */\n    async _startScreencast() {\n      var _this$screencastSessi;\n      _classPrivateFieldSet(_screencastSessionCount, this, (_this$screencastSessi = _classPrivateFieldGet(_screencastSessionCount, this), ++_this$screencastSessi));\n      if (!_classPrivateFieldGet(_startScreencastPromise, this)) {\n        _classPrivateFieldSet(_startScreencastPromise, this, this.mainFrame().client.send('Page.startScreencast', {\n          format: 'png'\n        }).then(() => {\n          // Wait for the first frame.\n          return new Promise(resolve => {\n            return this.mainFrame().client.once('Page.screencastFrame', () => {\n              return resolve();\n            });\n          });\n        }));\n      }\n      await _classPrivateFieldGet(_startScreencastPromise, this);\n    }\n    /**\n     * @internal\n     */\n    async _stopScreencast() {\n      var _this$screencastSessi2;\n      _classPrivateFieldSet(_screencastSessionCount, this, (_this$screencastSessi2 = _classPrivateFieldGet(_screencastSessionCount, this), --_this$screencastSessi2));\n      if (!_classPrivateFieldGet(_startScreencastPromise, this)) {\n        return;\n      }\n      _classPrivateFieldSet(_startScreencastPromise, this, undefined);\n      if (_classPrivateFieldGet(_screencastSessionCount, this) === 0) {\n        await this.mainFrame().client.send('Page.stopScreencast');\n      }\n    }\n    async screenshot(userOptions = {}) {\n      const env_2 = {\n        stack: [],\n        error: void 0,\n        hasError: false\n      };\n      try {\n        await this.bringToFront();\n        // TODO: use structuredClone after Node 16 support is dropped.\n        const options = {\n          ...userOptions,\n          clip: userOptions.clip ? {\n            ...userOptions.clip\n          } : undefined\n        };\n        if (options.type === undefined && options.path !== undefined) {\n          const filePath = options.path;\n          // Note we cannot use Node.js here due to browser compatibility.\n          const extension = filePath.slice(filePath.lastIndexOf('.') + 1).toLowerCase();\n          switch (extension) {\n            case 'png':\n              options.type = 'png';\n              break;\n            case 'jpeg':\n            case 'jpg':\n              options.type = 'jpeg';\n              break;\n            case 'webp':\n              options.type = 'webp';\n              break;\n          }\n        }\n        if (options.quality !== undefined) {\n          if (options.quality < 0 && options.quality > 100) {\n            throw new Error(`Expected 'quality' (${options.quality}) to be between 0 and 100, inclusive.`);\n          }\n          if (options.type === undefined || !['jpeg', 'webp'].includes(options.type)) {\n            throw new Error(`${options.type ?? 'png'} screenshots do not support 'quality'.`);\n          }\n        }\n        if (options.clip) {\n          if (options.clip.width <= 0) {\n            throw new Error(\"'width' in 'clip' must be positive.\");\n          }\n          if (options.clip.height <= 0) {\n            throw new Error(\"'height' in 'clip' must be positive.\");\n          }\n        }\n        setDefaultScreenshotOptions(options);\n        const stack = __addDisposableResource(env_2, new disposable_js_1.AsyncDisposableStack(), true);\n        if (options.clip) {\n          if (options.fullPage) {\n            throw new Error(\"'clip' and 'fullPage' are mutually exclusive\");\n          }\n          options.clip = roundRectangle(normalizeRectangle(options.clip));\n        } else {\n          if (options.fullPage) {\n            // If `captureBeyondViewport` is `false`, then we set the viewport to\n            // capture the full page. Note this may be affected by on-page CSS and\n            // JavaScript.\n            if (!options.captureBeyondViewport) {\n              const scrollDimensions = await this.mainFrame().isolatedRealm().evaluate(() => {\n                const element = document.documentElement;\n                return {\n                  width: element.scrollWidth,\n                  height: element.scrollHeight\n                };\n              });\n              const viewport = this.viewport();\n              await this.setViewport({\n                ...viewport,\n                ...scrollDimensions\n              });\n              stack.defer(async () => {\n                if (viewport) {\n                  await this.setViewport(viewport).catch(util_js_1.debugError);\n                } else {\n                  await this.setViewport({\n                    width: 0,\n                    height: 0\n                  }).catch(util_js_1.debugError);\n                }\n              });\n            }\n          } else {\n            options.captureBeyondViewport = false;\n          }\n        }\n        const data = await this._screenshot(options);\n        if (options.encoding === 'base64') {\n          return data;\n        }\n        const buffer = Buffer.from(data, 'base64');\n        await this._maybeWriteBufferToFile(options.path, buffer);\n        return buffer;\n      } catch (e_2) {\n        env_2.error = e_2;\n        env_2.hasError = true;\n      } finally {\n        const result_1 = __disposeResources(env_2);\n        if (result_1) await result_1;\n      }\n    }\n    /**\n     * The page's title\n     *\n     * @remarks\n     *\n     * Shortcut for {@link Frame.title | page.mainFrame().title()}.\n     */\n    async title() {\n      return await this.mainFrame().title();\n    }\n    /**\n     * This method fetches an element with `selector`, scrolls it into view if\n     * needed, and then uses {@link Page.mouse} to click in the center of the\n     * element. If there's no element matching `selector`, the method throws an\n     * error.\n     *\n     * @remarks\n     *\n     * Bear in mind that if `click()` triggers a navigation event and\n     * there's a separate `page.waitForNavigation()` promise to be resolved, you\n     * may end up with a race condition that yields unexpected results. The\n     * correct pattern for click and wait for navigation is the following:\n     *\n     * ```ts\n     * const [response] = await Promise.all([\n     *   page.waitForNavigation(waitOptions),\n     *   page.click(selector, clickOptions),\n     * ]);\n     * ```\n     *\n     * Shortcut for {@link Frame.click | page.mainFrame().click(selector[, options]) }.\n     * @param selector - A `selector` to search for element to click. If there are\n     * multiple elements satisfying the `selector`, the first will be clicked\n     * @param options - `Object`\n     * @returns Promise which resolves when the element matching `selector` is\n     * successfully clicked. The Promise will be rejected if there is no element\n     * matching `selector`.\n     */\n    click(selector, options) {\n      return this.mainFrame().click(selector, options);\n    }\n    /**\n     * This method fetches an element with `selector` and focuses it. If there's no\n     * element matching `selector`, the method throws an error.\n     * @param selector - A\n     * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector }\n     * of an element to focus. If there are multiple elements satisfying the\n     * selector, the first will be focused.\n     * @returns Promise which resolves when the element matching selector is\n     * successfully focused. The promise will be rejected if there is no element\n     * matching selector.\n     *\n     * @remarks\n     *\n     * Shortcut for {@link Frame.focus | page.mainFrame().focus(selector)}.\n     */\n    focus(selector) {\n      return this.mainFrame().focus(selector);\n    }\n    /**\n     * This method fetches an element with `selector`, scrolls it into view if\n     * needed, and then uses {@link Page.mouse}\n     * to hover over the center of the element.\n     * If there's no element matching `selector`, the method throws an error.\n     * @param selector - A\n     * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n     * to search for element to hover. If there are multiple elements satisfying\n     * the selector, the first will be hovered.\n     * @returns Promise which resolves when the element matching `selector` is\n     * successfully hovered. Promise gets rejected if there's no element matching\n     * `selector`.\n     *\n     * @remarks\n     *\n     * Shortcut for {@link Page.hover | page.mainFrame().hover(selector)}.\n     */\n    hover(selector) {\n      return this.mainFrame().hover(selector);\n    }\n    /**\n     * Triggers a `change` and `input` event once all the provided options have been\n     * selected. If there's no `<select>` element matching `selector`, the method\n     * throws an error.\n     *\n     * @example\n     *\n     * ```ts\n     * page.select('select#colors', 'blue'); // single selection\n     * page.select('select#colors', 'red', 'green', 'blue'); // multiple selections\n     * ```\n     *\n     * @param selector - A\n     * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | Selector}\n     * to query the page for\n     * @param values - Values of options to select. If the `<select>` has the\n     * `multiple` attribute, all values are considered, otherwise only the first one\n     * is taken into account.\n     * @returns\n     *\n     * @remarks\n     *\n     * Shortcut for {@link Frame.select | page.mainFrame().select()}\n     */\n    select(selector, ...values) {\n      return this.mainFrame().select(selector, ...values);\n    }\n    /**\n     * This method fetches an element with `selector`, scrolls it into view if\n     * needed, and then uses {@link Page.touchscreen}\n     * to tap in the center of the element.\n     * If there's no element matching `selector`, the method throws an error.\n     * @param selector - A\n     * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | Selector}\n     * to search for element to tap. If there are multiple elements satisfying the\n     * selector, the first will be tapped.\n     *\n     * @remarks\n     *\n     * Shortcut for {@link Frame.tap | page.mainFrame().tap(selector)}.\n     */\n    tap(selector) {\n      return this.mainFrame().tap(selector);\n    }\n    /**\n     * Sends a `keydown`, `keypress/input`, and `keyup` event for each character\n     * in the text.\n     *\n     * To press a special key, like `Control` or `ArrowDown`, use {@link Keyboard.press}.\n     * @example\n     *\n     * ```ts\n     * await page.type('#mytextarea', 'Hello');\n     * // Types instantly\n     * await page.type('#mytextarea', 'World', {delay: 100});\n     * // Types slower, like a user\n     * ```\n     *\n     * @param selector - A\n     * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n     * of an element to type into. If there are multiple elements satisfying the\n     * selector, the first will be used.\n     * @param text - A text to type into a focused element.\n     * @param options - have property `delay` which is the Time to wait between\n     * key presses in milliseconds. Defaults to `0`.\n     * @returns\n     */\n    type(selector, text, options) {\n      return this.mainFrame().type(selector, text, options);\n    }\n    /**\n     * Wait for the `selector` to appear in page. If at the moment of calling the\n     * method the `selector` already exists, the method will return immediately. If\n     * the `selector` doesn't appear after the `timeout` milliseconds of waiting, the\n     * function will throw.\n     *\n     * @example\n     * This method works across navigations:\n     *\n     * ```ts\n     * import puppeteer from 'puppeteer';\n     * (async () => {\n     *   const browser = await puppeteer.launch();\n     *   const page = await browser.newPage();\n     *   let currentURL;\n     *   page\n     *     .waitForSelector('img')\n     *     .then(() => console.log('First URL with image: ' + currentURL));\n     *   for (currentURL of [\n     *     'https://example.com',\n     *     'https://google.com',\n     *     'https://bbc.com',\n     *   ]) {\n     *     await page.goto(currentURL);\n     *   }\n     *   await browser.close();\n     * })();\n     * ```\n     *\n     * @param selector - A\n     * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n     * of an element to wait for\n     * @param options - Optional waiting parameters\n     * @returns Promise which resolves when element specified by selector string\n     * is added to DOM. Resolves to `null` if waiting for hidden: `true` and\n     * selector is not found in DOM.\n     *\n     * @remarks\n     * The optional Parameter in Arguments `options` are:\n     *\n     * - `visible`: A boolean wait for element to be present in DOM and to be\n     *   visible, i.e. to not have `display: none` or `visibility: hidden` CSS\n     *   properties. Defaults to `false`.\n     *\n     * - `hidden`: Wait for element to not be found in the DOM or to be hidden,\n     *   i.e. have `display: none` or `visibility: hidden` CSS properties. Defaults to\n     *   `false`.\n     *\n     * - `timeout`: maximum time to wait for in milliseconds. Defaults to `30000`\n     *   (30 seconds). Pass `0` to disable timeout. The default value can be changed\n     *   by using the {@link Page.setDefaultTimeout} method.\n     */\n    async waitForSelector(selector, options = {}) {\n      return await this.mainFrame().waitForSelector(selector, options);\n    }\n    /**\n     * Waits for the provided function, `pageFunction`, to return a truthy value when\n     * evaluated in the page's context.\n     *\n     * @example\n     * {@link Page.waitForFunction} can be used to observe a viewport size change:\n     *\n     * ```ts\n     * import puppeteer from 'puppeteer';\n     * (async () => {\n     *   const browser = await puppeteer.launch();\n     *   const page = await browser.newPage();\n     *   const watchDog = page.waitForFunction('window.innerWidth < 100');\n     *   await page.setViewport({width: 50, height: 50});\n     *   await watchDog;\n     *   await browser.close();\n     * })();\n     * ```\n     *\n     * @example\n     * Arguments can be passed from Node.js to `pageFunction`:\n     *\n     * ```ts\n     * const selector = '.foo';\n     * await page.waitForFunction(\n     *   selector => !!document.querySelector(selector),\n     *   {},\n     *   selector\n     * );\n     * ```\n     *\n     * @example\n     * The provided `pageFunction` can be asynchronous:\n     *\n     * ```ts\n     * const username = 'github-username';\n     * await page.waitForFunction(\n     *   async username => {\n     *     const githubResponse = await fetch(\n     *       `https://api.github.com/users/${username}`\n     *     );\n     *     const githubUser = await githubResponse.json();\n     *     // show the avatar\n     *     const img = document.createElement('img');\n     *     img.src = githubUser.avatar_url;\n     *     // wait 3 seconds\n     *     await new Promise((resolve, reject) => setTimeout(resolve, 3000));\n     *     img.remove();\n     *   },\n     *   {},\n     *   username\n     * );\n     * ```\n     *\n     * @param pageFunction - Function to be evaluated in browser context until it returns a\n     * truthy value.\n     * @param options - Options for configuring waiting behavior.\n     */\n    waitForFunction(pageFunction, options, ...args) {\n      return this.mainFrame().waitForFunction(pageFunction, options, ...args);\n    }\n    /** @internal */\n    [_ref]() {\n      return void this.close().catch(util_js_1.debugError);\n    }\n    /** @internal */\n    [_disposable_js_1$asyn]() {\n      return this.close();\n    }\n  }, (() => {\n    const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n    __esDecorate(_Page, null, _screenshot_decorators, {\n      kind: \"method\",\n      name: \"screenshot\",\n      static: false,\n      private: false,\n      access: {\n        has: obj => \"screenshot\" in obj,\n        get: obj => obj.screenshot\n      },\n      metadata: _metadata\n    }, null, _instanceExtraInitializers);\n    if (_metadata) Object.defineProperty(_Page, Symbol.metadata, {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _metadata\n    });\n  })(), _Page);\n  async function _getNativePixelDimensions() {\n    const env_1 = {\n      stack: [],\n      error: void 0,\n      hasError: false\n    };\n    try {\n      const viewport = this.viewport();\n      const stack = __addDisposableResource(env_1, new disposable_js_1.DisposableStack(), false);\n      if (viewport && viewport.deviceScaleFactor !== 0) {\n        await this.setViewport({\n          ...viewport,\n          deviceScaleFactor: 0\n        });\n        stack.defer(() => {\n          void this.setViewport(viewport).catch(util_js_1.debugError);\n        });\n      }\n      return await this.mainFrame().isolatedRealm().evaluate(() => {\n        return [window.visualViewport.width * window.devicePixelRatio, window.visualViewport.height * window.devicePixelRatio, window.devicePixelRatio];\n      });\n    } catch (e_1) {\n      env_1.error = e_1;\n      env_1.hasError = true;\n    } finally {\n      __disposeResources(env_1);\n    }\n  }\n})();\nexports.Page = Page;\n/**\n * @internal\n */\nexports.supportedMetrics = new Set(['Timestamp', 'Documents', 'Frames', 'JSEventListeners', 'Nodes', 'LayoutCount', 'RecalcStyleCount', 'LayoutDuration', 'RecalcStyleDuration', 'ScriptDuration', 'TaskDuration', 'JSHeapUsedSize', 'JSHeapTotalSize']);\n/** @see https://w3c.github.io/webdriver-bidi/#normalize-rect */\nfunction normalizeRectangle(clip) {\n  return {\n    ...clip,\n    ...(clip.width < 0 ? {\n      x: clip.x + clip.width,\n      width: -clip.width\n    } : {\n      x: clip.x,\n      width: clip.width\n    }),\n    ...(clip.height < 0 ? {\n      y: clip.y + clip.height,\n      height: -clip.height\n    } : {\n      y: clip.y,\n      height: clip.height\n    })\n  };\n}\nfunction roundRectangle(clip) {\n  const x = Math.round(clip.x);\n  const y = Math.round(clip.y);\n  const width = Math.round(clip.width + clip.x - x);\n  const height = Math.round(clip.height + clip.y - y);\n  return {\n    ...clip,\n    x,\n    y,\n    width,\n    height\n  };\n}","map":{"version":3,"names":["_classPrivateMethodInitSpec","require","default","_classPrivateFieldInitSpec","_defineProperty","_classPrivateFieldSet","_assertClassBrand","_classPrivateFieldGet","rxjs_js_1","Errors_js_1","EventEmitter_js_1","TimeoutSettings_js_1","util_js_1","decorators_js_1","disposable_js_1","locators_js_1","setDefaultScreenshotOptions","options","optimizeForSpeed","type","fromSurface","fullPage","omitBackground","encoding","captureBeyondViewport","exports","Page","_ref","_disposable_js_1$asyn","_Page","_requestHandlers","_inflight$","_screencastSessionCount","_startScreencastPromise","_Page_brand","EventEmitter","_screenshot_decorators","guarded","browser","disposeSymbol","asyncDisposeSymbol","_classSuper","constructor","__runInitializers","_instanceExtraInitializers","TimeoutSettings","WeakMap","ReplaySubject","fromEmitterEvent","pipe","mergeMap","originalRequest","concat","of","merge","map","response","request","filter","id","take","mergeScan","acc","addend","takeUntil","startWith","subscribe","on","handler","wrapper","get","undefined","event","enqueueInterceptAction","set","off","locator","selectorOrFunc","NodeLocator","create","FunctionLocator","locatorRace","locators","Locator","race","$","selector","mainFrame","$$","evaluateHandle","pageFunction","args","withSourcePuppeteerURLIfNone","name","$eval","$$eval","addScriptTag","addStyleTag","url","content","setContent","html","goto","waitForNavigation","waitForRequest","urlOrPredicate","timeout","ms","_timeoutSettings","observable$","filterAsync","raceWith","TargetCloseError","firstValueFrom","waitForResponse","waitForNetworkIdle","waitForNetworkIdle$","idleTime","NETWORK_IDLE_TIME","concurrency","switchMap","inflight","EMPTY","timer","waitForFrame","getDefaultTimeout","isString","frame","from","frames","first","emulate","device","Promise","all","setUserAgent","userAgent","setViewport","viewport","evaluate","_maybeWriteBufferToFile","path","buffer","fs","importFSPromises","writeFile","screencast","ScreenRecorder","width","height","devicePixelRatio","_getNativePixelDimensions","call","crop","x","y","cropWidth","cropHeight","roundRectangle","normalizeRectangle","Error","viewportWidth","viewportHeight","speed","scale","recorder","ffmpegPath","_startScreencast","error","stop","createWriteStream","resolve","then","__importStar","stream","_this$screencastSessi","client","send","format","once","_stopScreencast","_this$screencastSessi2","screenshot","userOptions","bringToFront","clip","filePath","extension","slice","lastIndexOf","toLowerCase","quality","includes","stack","__addDisposableResource","env_2","AsyncDisposableStack","scrollDimensions","isolatedRealm","element","document","documentElement","scrollWidth","scrollHeight","defer","catch","debugError","data","_screenshot","Buffer","title","click","focus","hover","select","values","tap","text","waitForSelector","waitForFunction","close","__esDecorate","kind","static","private","access","has","obj","metadata","_metadata","env_1","DisposableStack","deviceScaleFactor","window","visualViewport","supportedMetrics","Set","Math","round"],"sources":["../../../../src/api/Page.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}