{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/web.url-search-params.delete.js\");\nrequire(\"core-js/modules/web.url-search-params.has.js\");\nrequire(\"core-js/modules/web.url-search-params.size.js\");\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.http = void 0;\nconst http_1 = __importDefault(require(\"http\"));\nconst https_1 = __importDefault(require(\"https\"));\nconst events_1 = require(\"events\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst http_error_1 = __importDefault(require(\"./http-error\"));\nconst notfound_1 = __importDefault(require(\"./notfound\"));\nconst notmodified_1 = __importDefault(require(\"./notmodified\"));\nconst debug = (0, debug_1.default)('get-uri:http');\n/**\n * Returns a Readable stream from an \"http:\" URI.\n */\nconst http = async (url, opts = {}) => {\n  debug('GET %o', url.href);\n  const cache = getCache(url, opts.cache);\n  // first check the previous Expires and/or Cache-Control headers\n  // of a previous response if a `cache` was provided\n  if (cache && isFresh(cache) && typeof cache.statusCode === 'number') {\n    // check for a 3xx \"redirect\" status code on the previous cache\n    const type = cache.statusCode / 100 | 0;\n    if (type === 3 && cache.headers.location) {\n      debug('cached redirect');\n      throw new Error('TODO: implement cached redirects!');\n    }\n    // otherwise we assume that it's the destination endpoint,\n    // since there's nowhere else to redirect to\n    throw new notmodified_1.default();\n  }\n  // 5 redirects allowed by default\n  const maxRedirects = typeof opts.maxRedirects === 'number' ? opts.maxRedirects : 5;\n  debug('allowing %o max redirects', maxRedirects);\n  let mod;\n  if (opts.http) {\n    // the `https` module passed in from the \"http.js\" file\n    mod = opts.http;\n    debug('using secure `https` core module');\n  } else {\n    mod = http_1.default;\n    debug('using `http` core module');\n  }\n  const options = {\n    ...opts\n  };\n  // add \"cache validation\" headers if a `cache` was provided\n  if (cache) {\n    if (!options.headers) {\n      options.headers = {};\n    }\n    const lastModified = cache.headers['last-modified'];\n    if (lastModified) {\n      options.headers['If-Modified-Since'] = lastModified;\n      debug('added \"If-Modified-Since\" request header: %o', lastModified);\n    }\n    const etag = cache.headers.etag;\n    if (etag) {\n      options.headers['If-None-Match'] = etag;\n      debug('added \"If-None-Match\" request header: %o', etag);\n    }\n  }\n  const req = mod.get(url, options);\n  const [res] = await (0, events_1.once)(req, 'response');\n  const code = res.statusCode || 0;\n  // assign a Date to this response for the \"Cache-Control\" delta calculation\n  res.date = Date.now();\n  res.parsed = url;\n  debug('got %o response status code', code);\n  // any 2xx response is a \"success\" code\n  const type = code / 100 | 0;\n  // check for a 3xx \"redirect\" status code\n  const location = res.headers.location;\n  if (type === 3 && location) {\n    if (!opts.redirects) opts.redirects = [];\n    const redirects = opts.redirects;\n    if (redirects.length < maxRedirects) {\n      debug('got a \"redirect\" status code with Location: %o', location);\n      // flush this response - we're not going to use it\n      res.resume();\n      // hang on to this Response object for the \"redirects\" Array\n      redirects.push(res);\n      const newUri = new URL(location, url.href);\n      debug('resolved redirect URL: %o', newUri.href);\n      const left = maxRedirects - redirects.length;\n      debug('%o more redirects allowed after this one', left);\n      // check if redirecting to a different protocol\n      if (newUri.protocol !== url.protocol) {\n        opts.http = newUri.protocol === 'https:' ? https_1.default : undefined;\n      }\n      return (0, exports.http)(newUri, opts);\n    }\n  }\n  // if we didn't get a 2xx \"success\" status code, then create an Error object\n  if (type !== 2) {\n    res.resume();\n    if (code === 304) {\n      throw new notmodified_1.default();\n    } else if (code === 404) {\n      throw new notfound_1.default();\n    }\n    // other HTTP-level error\n    throw new http_error_1.default(code);\n  }\n  if (opts.redirects) {\n    // store a reference to the \"redirects\" Array on the Response object so that\n    // they can be inspected during a subsequent call to GET the same URI\n    res.redirects = opts.redirects;\n  }\n  return res;\n};\nexports.http = http;\n/**\n * Returns `true` if the provided cache's \"freshness\" is valid. That is, either\n * the Cache-Control header or Expires header values are still within the allowed\n * time period.\n *\n * @return {Boolean}\n * @api private\n */\nfunction isFresh(cache) {\n  let fresh = false;\n  let expires = parseInt(cache.headers.expires || '', 10);\n  const cacheControl = cache.headers['cache-control'];\n  if (cacheControl) {\n    // for Cache-Control rules, see: http://www.mnot.net/cache_docs/#CACHE-CONTROL\n    debug('Cache-Control: %o', cacheControl);\n    const parts = cacheControl.split(/,\\s*?\\b/);\n    for (let i = 0; i < parts.length; i++) {\n      const part = parts[i];\n      const subparts = part.split('=');\n      const name = subparts[0];\n      switch (name) {\n        case 'max-age':\n          expires = (cache.date || 0) + parseInt(subparts[1], 10) * 1000;\n          fresh = Date.now() < expires;\n          if (fresh) {\n            debug('cache is \"fresh\" due to previous %o Cache-Control param', part);\n          }\n          return fresh;\n        case 'must-revalidate':\n          // XXX: what we supposed to do here?\n          break;\n        case 'no-cache':\n        case 'no-store':\n          debug('cache is \"stale\" due to explicit %o Cache-Control param', name);\n          return false;\n        default:\n          // ignore unknown cache value\n          break;\n      }\n    }\n  } else if (expires) {\n    // for Expires rules, see: http://www.mnot.net/cache_docs/#EXPIRES\n    debug('Expires: %o', expires);\n    fresh = Date.now() < expires;\n    if (fresh) {\n      debug('cache is \"fresh\" due to previous Expires response header');\n    }\n    return fresh;\n  }\n  return false;\n}\n/**\n * Attempts to return a previous Response object from a previous GET call to the\n * same URI.\n *\n * @api private\n */\nfunction getCache(url, cache) {\n  if (cache) {\n    if (cache.parsed && cache.parsed.href === url.href) {\n      return cache;\n    }\n    if (cache.redirects) {\n      for (let i = 0; i < cache.redirects.length; i++) {\n        const c = getCache(url, cache.redirects[i]);\n        if (c) {\n          return c;\n        }\n      }\n    }\n  }\n  return null;\n}","map":{"version":3,"names":["http_1","__importDefault","require","https_1","events_1","debug_1","http_error_1","notfound_1","notmodified_1","debug","default","http","url","opts","href","cache","getCache","isFresh","statusCode","type","headers","location","Error","maxRedirects","mod","options","lastModified","etag","req","get","res","once","code","date","Date","now","parsed","redirects","length","resume","push","newUri","URL","left","protocol","undefined","exports","fresh","expires","parseInt","cacheControl","parts","split","i","part","subparts","name","c"],"sources":["../src/http.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}