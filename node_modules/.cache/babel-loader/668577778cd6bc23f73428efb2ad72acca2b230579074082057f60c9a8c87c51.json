{"ast":null,"code":"import TChart from '@/views/components/TChart';\nimport { formatDate, formatTime } from '@/utils/formatTime';\nimport { mapGetters } from \"vuex\";\nimport { TIRUtils } from \"@/utils/algorithm/TIR\";\nimport { GlucoseUtils } from \"@/utils/algorithm/Glucose\";\nexport default {\n  data() {\n    return {\n      eventChecked: false,\n      //事件记录开关\n      initOptions: {\n        renderer: 'svg'\n      },\n      option: {\n        grid: [{\n          left: 60,\n          right: 0,\n          top: 10,\n          bottom: 50\n        }],\n        xAxis: [{\n          type: 'category',\n          gridIndex: 0,\n          boundaryGap: false,\n          axisTick: false,\n          splitLine: {\n            show: false,\n            lineStyle: {\n              color: 'var(--color-black-60)'\n            },\n            interval: 59\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: 'var(--color-black-60)',\n              width: 1\n            }\n          },\n          data: [],\n          axisLabel: {\n            formatter: function (value, index) {\n              if (index % 360 === 0) {\n                return value;\n              }\n            },\n            interval: 0,\n            color: 'var(--color-black-60)',\n            fontSize: 20,\n            margin: 14\n          }\n        }],\n        yAxis: [{\n          type: 'value',\n          gridIndex: 0,\n          min: 0,\n          max: 15,\n          splitLine: {\n            lineStyle: {\n              color: 'var(--color-black-60)'\n            }\n          },\n          axisLabel: {\n            formatter: '{value}',\n            color: 'var(--color-black-60)',\n            fontSize: 20,\n            margin: 14\n          }\n        }],\n        series: [\n        //中位线\n        {\n          type: 'line',\n          data: [],\n          itemStyle: {\n            color: 'var(--color-primary)'\n          },\n          showSymbol: false,\n          lineStyle: {\n            width: 2\n          },\n          animation: false,\n          markLine: {\n            silent: true,\n            // 不高亮辅助线\n            symbol: 'none',\n            animation: false,\n            data: [{\n              type: 'min',\n              yAxis: 3.9,\n              lineStyle: {\n                color: 'var(--color-error)',\n                width: 2,\n                type: 'solid'\n              },\n              label: {\n                color: 'var(--color-error)',\n                fontSize: 20,\n                distance: 14,\n                position: 'start'\n              }\n            }, {\n              type: 'max',\n              yAxis: 10,\n              lineStyle: {\n                color: 'var(--color-warning)',\n                width: 2,\n                type: 'solid'\n              },\n              label: {\n                color: 'var(--color-warning)',\n                fontSize: 20,\n                distance: 14,\n                position: 'start'\n              }\n            }]\n          }\n        }]\n      },\n      tableData: [{\n        time: '7:00',\n        event: '早饭',\n        info: '一个鸡蛋，一个红薯',\n        value: '最大波动幅度 5.0mmol/L'\n      }, {\n        time: '9:00',\n        event: '早饭',\n        info: '一个鸡蛋，一个红薯',\n        value: '最大波动幅度 5.0mmol/L'\n      }],\n      dayInfo: this.dataList\n    };\n  },\n  props: {\n    dataList: {\n      type: Object\n    }\n  },\n  components: {\n    TChart\n  },\n  computed: {\n    ...mapGetters(['unit'])\n  },\n  mounted() {\n    this.setCurrent();\n    this.handelOption();\n  },\n  methods: {\n    setCurrent() {\n      let row = this.tableData[1];\n      this.$refs.singleTable.setCurrentRow(row);\n    },\n    // 渲染数据\n    handelOption() {\n      let dayInfo = _.cloneDeep(this.dayInfo);\n      let unit = this.unit;\n      let fluctate = _.max(dayInfo.value) - _.min(dayInfo.value); //最大波动\n      let avg = _.mean(dayInfo.value); //平均值\n      let lowTir = null,\n        hightTir = null;\n      if (TIRUtils.getTIRResult(dayInfo.value)) {\n        lowTir = TIRUtils.getTIRResult(dayInfo.value).lowRate + TIRUtils.getTIRResult(dayInfo.value).veryLowRate;\n        hightTir = TIRUtils.getTIRResult(dayInfo.value).highRate + TIRUtils.getTIRResult(dayInfo.value).veryHighRate;\n      }\n      dayInfo.day = formatDate(this.dayInfo.day, 'mm月dd日');\n      dayInfo.fluctate = unit == 'mg/dL' ? fluctate : GlucoseUtils.mgdlToMmol(fluctate);\n      dayInfo.avg = unit == 'mg/dL' ? avg : GlucoseUtils.mgdlToMmol(avg);\n      dayInfo.lowTir = _.round(Number(lowTir) * 100, 1);\n      dayInfo.hightTir = _.round(Number(hightTir) * 100, 1);\n      console.log(dayInfo);\n    }\n  }\n};","map":{"version":3,"names":["TChart","formatDate","formatTime","mapGetters","TIRUtils","GlucoseUtils","data","eventChecked","initOptions","renderer","option","grid","left","right","top","bottom","xAxis","type","gridIndex","boundaryGap","axisTick","splitLine","show","lineStyle","color","interval","axisLine","width","axisLabel","formatter","value","index","fontSize","margin","yAxis","min","max","series","itemStyle","showSymbol","animation","markLine","silent","symbol","label","distance","position","tableData","time","event","info","dayInfo","dataList","props","Object","components","computed","mounted","setCurrent","handelOption","methods","row","$refs","singleTable","setCurrentRow","_","cloneDeep","unit","fluctate","avg","mean","lowTir","hightTir","getTIRResult","lowRate","veryLowRate","highRate","veryHighRate","day","mgdlToMmol","round","Number","console","log"],"sources":["src/views/report/components/dayAnalysis.vue"],"sourcesContent":["<template>\n    <div class='dayAnalysis' id='dayAnalysis' >\n        <div class='analysis-header' >\n            <div class='analysis-date' >{{dayInfo.day}}   {{dayInfo.week}}</div>\n            <div class='analysis-event' > <el-checkbox v-model=\"eventChecked\">事件记录</el-checkbox></div>\n        </div>\n        <div class='analysis-box' >\n            <div class='chart-box'>\n                <div class='analysis-info' >\n                    <div class='analysis-info-item' >\n                        <div class='analysis-info-label' >平均葡萄糖值</div>\n                        <div class='analysis-info-value' >{{dayInfo.avg}} {{unit=='mg/dL'?\"mg/dL\":\"mmol/L\"}} </div>\n                    </div>\n                    <div class='analysis-info-item' >\n                        <div class='analysis-info-label' >最大血糖波动</div>\n                        <div class='analysis-info-value' >{{dayInfo.fluctate}} {{unit=='mg/dL'?\"mg/dL\":\"mmol/L\"}}</div>\n                    </div>\n                    <div class='analysis-info-item' >\n                        <div class='analysis-info-label' >目标范围内占比</div>\n                        <div class='analysis-info-value' >{{dayInfo.tir}}%</div>\n                    </div>\n                    <div class='analysis-info-item' >\n                        <div class='analysis-info-label' >低于目标范围占比</div>\n                        <div class='analysis-info-value' >{{dayInfo.lowTir}}%</div>\n                    </div>\n                    <div class='analysis-info-item' >\n                        <div class='analysis-info-label' >高于目标范围占比</div>\n                        <div class='analysis-info-value' >{{dayInfo.hightTir}}%</div>\n                    </div>\n                </div>\n                <t-chart\n                        style=\"flex-grow:1;height:450px;\"\n                        :option=\"option\"\n                        :init-options=\"initOptions\"\n                        theme=\"tduck-echarts-theme\"\n                />\n            </div>\n            <div class='event-box' >\n                <el-table :data=\"tableData\" style=\"width: 100%;border:none;\"\n                header-row-class-name='table-header' highlight-current-row ref=\"singleTable\">\n                    <el-table-column  prop=\"time\"  label=\"时间\"></el-table-column>\n                    <el-table-column  prop=\"event\"  label=\"事件\"></el-table-column>\n                    <el-table-column  prop=\"info\"  label=\"记录详情\"></el-table-column>\n                    <el-table-column  prop=\"value\"  label=\"测量值\"></el-table-column>\n                </el-table>\n            </div>\n            <div class='event-type'>\n                <div class='event-type-item' >\n                    <img src=\"~@/assets/image/event-icon1.png\" alt=\"\" class='event-icon' >\n                    <p class='event-type-label' >饮食记录</p>\n                </div>\n                <div class='event-type-item' >\n                    <img src=\"~@/assets/image/event-icon2.png\" alt=\"\" class='event-icon' >\n                    <p class='event-type-label' >运动记录</p>\n                </div>\n                <div class='event-type-item' >\n                    <img src=\"~@/assets/image/event-icon3.png\" alt=\"\" class='event-icon' >\n                    <p class='event-type-label' >胰岛素记录</p>\n                </div>\n                <div class='event-type-item' >\n                    <img src=\"~@/assets/image/event-icon4.png\" alt=\"\" class='event-icon' >\n                    <p class='event-type-label' >用药记录</p>\n                </div>\n                <div class='event-type-item' >\n                    <img src=\"~@/assets/image/event-icon5.png\" alt=\"\" class='event-icon' >\n                    <p class='event-type-label' >睡眠记录</p>\n                </div>\n                <div class='event-type-item' >\n                    <img src=\"~@/assets/image/event-icon6.png\" alt=\"\" class='event-icon' >\n                    <p class='event-type-label' >指尖血记录</p>\n                </div>\n                <div class='event-type-item' >\n                    <img src=\"~@/assets/image/event-icon7.png\" alt=\"\" class='event-icon' >\n                    <p class='event-type-label' >其他事件</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport TChart from '@/views/components/TChart'\nimport {formatDate,formatTime} from '@/utils/formatTime'\nimport {mapGetters} from \"vuex\"\nimport { TIRUtils } from \"@/utils/algorithm/TIR\";\nimport { GlucoseUtils } from \"@/utils/algorithm/Glucose\";\nexport default {\n    data(){\n        return{\n            eventChecked:false, //事件记录开关\n            initOptions: {\n                renderer: 'svg'\n            },\n            option: {\n                grid:[\n                    {\n                        left:60,\n                        right:0,\n                        top:10,\n                        bottom:50\n                    }\n                ],\n                xAxis: [\n                    {\n                        type: 'category',\n                        gridIndex:0,\n                        boundaryGap:false,\n                        axisTick: false,\n                        splitLine:{\n                            show:false,\n                            lineStyle:{\n                                color:'var(--color-black-60)'\n                            },\n                            interval:59\n                        },\n                        axisLine: {\n                            show: true,\n                            lineStyle: {\n                                color: 'var(--color-black-60)',\n                                width:1,\n                            },\n                        },\n                        data:[],\n                        axisLabel: {\n                            formatter: function (value, index) {\n                                if (index  % 360 === 0) {\n                                    return value;\n                                }\n                            },\n                            interval:0,\n                            color: 'var(--color-black-60)',\n                            fontSize: 20, \n                            margin:14\n                        }\n                    }\n                ],\n                yAxis: [\n                    {\n                        type: 'value',\n                        gridIndex:0,\n                        min: 0,\n                        max: 15,\n                        splitLine:{\n                            lineStyle:{\n                                color:'var(--color-black-60)'\n                            }\n                        },\n                        axisLabel: {\n                            formatter: '{value}',\n                            color: 'var(--color-black-60)',\n                            fontSize: 20,\n                            margin:14\n                        }\n                    }\n                ],\n                series: [\n                    //中位线\n                    {\n                        type: 'line',\n                        data: [],\n                        itemStyle: {\n                        color:'var(--color-primary)',\n                        },\n                        showSymbol: false,\n                        lineStyle: {\n                        width: 2,\n                        },\n                        animation:false,\n                        markLine: {\n                        silent: true, // 不高亮辅助线\n                        symbol: 'none',\n                        animation:false,\n                        data: [\n                            {\n                            type: 'min',\n                            yAxis:3.9,\n                            lineStyle: {\n                                color: 'var(--color-error)',\n                                width: 2,\n                                type:'solid'\n                            },\n                            label: {\n                                color: 'var(--color-error)',\n                                fontSize: 20,\n                                distance: 14,\n                                position:'start'\n                            },\n                            },\n                            {\n                            type: 'max',\n                            yAxis:10,\n                            lineStyle: {\n                                color: 'var(--color-warning)',\n                                width: 2,\n                                type:'solid'\n                            },\n                            label: {\n                                color: 'var(--color-warning)',\n                                fontSize: 20,\n                                distance:14,\n                                position:'start'\n                            },\n                            },\n                        ],\n                        },\n                    }\n                ],\n\n                \n            },\n            tableData:[{\n                time:'7:00',\n                event:'早饭',\n                info:'一个鸡蛋，一个红薯',\n                value:'最大波动幅度 5.0mmol/L'\n            },{\n                time:'9:00',\n                event:'早饭',\n                info:'一个鸡蛋，一个红薯',\n                value:'最大波动幅度 5.0mmol/L'\n            }],\n            dayInfo:this.dataList\n        }\n    },\n    props:{\n        dataList:{\n            type:Object\n        }\n    },\n    components: {\n        TChart\n    },\n    computed:{\n         ...mapGetters([\n            'unit']),\n    },\n    mounted(){\n        this.setCurrent()\n        this.handelOption()\n    },\n    methods:{\n        setCurrent() {\n            let row = this.tableData[1]\n            this.$refs.singleTable.setCurrentRow(row);\n        },\n        // 渲染数据\n        handelOption(){\n            let dayInfo = _.cloneDeep(this.dayInfo) \n            let unit = this.unit\n            let fluctate = _.max(dayInfo.value) -  _.min(dayInfo.value) //最大波动\n            let avg = _.mean(dayInfo.value) //平均值\n            let lowTir = null,hightTir=null\n            if(TIRUtils.getTIRResult(dayInfo.value)){\n                lowTir = TIRUtils.getTIRResult(dayInfo.value).lowRate + TIRUtils.getTIRResult(dayInfo.value).veryLowRate\n                hightTir = TIRUtils.getTIRResult(dayInfo.value).highRate + TIRUtils.getTIRResult(dayInfo.value).veryHighRate\n            }\n            dayInfo.day = formatDate(this.dayInfo.day,'mm月dd日')\n            dayInfo.fluctate = unit=='mg/dL'?fluctate:GlucoseUtils.mgdlToMmol(fluctate);\n            dayInfo.avg = unit=='mg/dL'?avg:GlucoseUtils.mgdlToMmol(avg);\n            dayInfo.lowTir = _.round(Number(lowTir)*100, 1);\n            dayInfo.hightTir =  _.round(Number(hightTir)*100, 1);\n            console.log(dayInfo)\n        }\n    }\n}\n</script>\n<style scoped>\n.dayAnalysis{\n    padding:20px 0;\n    border-bottom:1px solid rgba(0,0,0,0.1);\n}\n.analysis-header{\n    display: flex;\n    align-items: center;\n    margin-bottom:20px;\n}\n.analysis-date{\n    width:180px;\n    font-size:var(--fontSize-max);\n    color: var(--color-black-100);\n}\n/* 图表血糖信息 */\n.chart-box{\n    display: flex;\n    height:450px;\n    margin-bottom:20px;\n}\n.analysis-info{\n    width:180px;\n    height:450px;\n    background: #f7f7f7;\n    box-sizing: border-box;\n    padding:10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n     font-size:var(--fontSize-max);\n    color: var(--color-black-100);\n}\n.event-type{\n    display: flex;\n    align-items: center;\n    margin-top:20px;\n}\n.event-type-item{\n    display: flex;\n    align-items: center;\n    margin-right:30px;\n}\n.event-icon{\n    width:30px;\n    height:30px;\n}\n.event-type-label{\n    font-size:var(--fontSize-big);\n    color: var(--color-black-60);\n    margin-left:6px;\n}\n</style>"],"mappings":"AAgFA,OAAAA,MAAA;AACA,SAAAC,UAAA,EAAAC,UAAA;AACA,SAAAC,UAAA;AACA,SAAAC,QAAA;AACA,SAAAC,YAAA;AACA;EACAC,KAAA;IACA;MACAC,YAAA;MAAA;MACAC,WAAA;QACAC,QAAA;MACA;MACAC,MAAA;QACAC,IAAA,GACA;UACAC,IAAA;UACAC,KAAA;UACAC,GAAA;UACAC,MAAA;QACA,EACA;QACAC,KAAA,GACA;UACAC,IAAA;UACAC,SAAA;UACAC,WAAA;UACAC,QAAA;UACAC,SAAA;YACAC,IAAA;YACAC,SAAA;cACAC,KAAA;YACA;YACAC,QAAA;UACA;UACAC,QAAA;YACAJ,IAAA;YACAC,SAAA;cACAC,KAAA;cACAG,KAAA;YACA;UACA;UACArB,IAAA;UACAsB,SAAA;YACAC,SAAA,WAAAA,CAAAC,KAAA,EAAAC,KAAA;cACA,IAAAA,KAAA;gBACA,OAAAD,KAAA;cACA;YACA;YACAL,QAAA;YACAD,KAAA;YACAQ,QAAA;YACAC,MAAA;UACA;QACA,EACA;QACAC,KAAA,GACA;UACAjB,IAAA;UACAC,SAAA;UACAiB,GAAA;UACAC,GAAA;UACAf,SAAA;YACAE,SAAA;cACAC,KAAA;YACA;UACA;UACAI,SAAA;YACAC,SAAA;YACAL,KAAA;YACAQ,QAAA;YACAC,MAAA;UACA;QACA,EACA;QACAI,MAAA;QACA;QACA;UACApB,IAAA;UACAX,IAAA;UACAgC,SAAA;YACAd,KAAA;UACA;UACAe,UAAA;UACAhB,SAAA;YACAI,KAAA;UACA;UACAa,SAAA;UACAC,QAAA;YACAC,MAAA;YAAA;YACAC,MAAA;YACAH,SAAA;YACAlC,IAAA,GACA;cACAW,IAAA;cACAiB,KAAA;cACAX,SAAA;gBACAC,KAAA;gBACAG,KAAA;gBACAV,IAAA;cACA;cACA2B,KAAA;gBACApB,KAAA;gBACAQ,QAAA;gBACAa,QAAA;gBACAC,QAAA;cACA;YACA,GACA;cACA7B,IAAA;cACAiB,KAAA;cACAX,SAAA;gBACAC,KAAA;gBACAG,KAAA;gBACAV,IAAA;cACA;cACA2B,KAAA;gBACApB,KAAA;gBACAQ,QAAA;gBACAa,QAAA;gBACAC,QAAA;cACA;YACA;UAEA;QACA;MAIA;MACAC,SAAA;QACAC,IAAA;QACAC,KAAA;QACAC,IAAA;QACApB,KAAA;MACA;QACAkB,IAAA;QACAC,KAAA;QACAC,IAAA;QACApB,KAAA;MACA;MACAqB,OAAA,OAAAC;IACA;EACA;EACAC,KAAA;IACAD,QAAA;MACAnC,IAAA,EAAAqC;IACA;EACA;EACAC,UAAA;IACAvD;EACA;EACAwD,QAAA;IACA,GAAArD,UAAA,EACA;EACA;EACAsD,QAAA;IACA,KAAAC,UAAA;IACA,KAAAC,YAAA;EACA;EACAC,OAAA;IACAF,WAAA;MACA,IAAAG,GAAA,QAAAd,SAAA;MACA,KAAAe,KAAA,CAAAC,WAAA,CAAAC,aAAA,CAAAH,GAAA;IACA;IACA;IACAF,aAAA;MACA,IAAAR,OAAA,GAAAc,CAAA,CAAAC,SAAA,MAAAf,OAAA;MACA,IAAAgB,IAAA,QAAAA,IAAA;MACA,IAAAC,QAAA,GAAAH,CAAA,CAAA7B,GAAA,CAAAe,OAAA,CAAArB,KAAA,IAAAmC,CAAA,CAAA9B,GAAA,CAAAgB,OAAA,CAAArB,KAAA;MACA,IAAAuC,GAAA,GAAAJ,CAAA,CAAAK,IAAA,CAAAnB,OAAA,CAAArB,KAAA;MACA,IAAAyC,MAAA;QAAAC,QAAA;MACA,IAAApE,QAAA,CAAAqE,YAAA,CAAAtB,OAAA,CAAArB,KAAA;QACAyC,MAAA,GAAAnE,QAAA,CAAAqE,YAAA,CAAAtB,OAAA,CAAArB,KAAA,EAAA4C,OAAA,GAAAtE,QAAA,CAAAqE,YAAA,CAAAtB,OAAA,CAAArB,KAAA,EAAA6C,WAAA;QACAH,QAAA,GAAApE,QAAA,CAAAqE,YAAA,CAAAtB,OAAA,CAAArB,KAAA,EAAA8C,QAAA,GAAAxE,QAAA,CAAAqE,YAAA,CAAAtB,OAAA,CAAArB,KAAA,EAAA+C,YAAA;MACA;MACA1B,OAAA,CAAA2B,GAAA,GAAA7E,UAAA,MAAAkD,OAAA,CAAA2B,GAAA;MACA3B,OAAA,CAAAiB,QAAA,GAAAD,IAAA,cAAAC,QAAA,GAAA/D,YAAA,CAAA0E,UAAA,CAAAX,QAAA;MACAjB,OAAA,CAAAkB,GAAA,GAAAF,IAAA,cAAAE,GAAA,GAAAhE,YAAA,CAAA0E,UAAA,CAAAV,GAAA;MACAlB,OAAA,CAAAoB,MAAA,GAAAN,CAAA,CAAAe,KAAA,CAAAC,MAAA,CAAAV,MAAA;MACApB,OAAA,CAAAqB,QAAA,GAAAP,CAAA,CAAAe,KAAA,CAAAC,MAAA,CAAAT,QAAA;MACAU,OAAA,CAAAC,GAAA,CAAAhC,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}