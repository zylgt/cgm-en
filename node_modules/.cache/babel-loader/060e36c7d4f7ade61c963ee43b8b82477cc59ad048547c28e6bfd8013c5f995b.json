{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nvar _classPrivateMethodInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateMethodInitSpec.js\").default;\nvar _classPrivateFieldInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _assertClassBrand = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/assertClassBrand.js\").default;\nvar _classPrivateFieldSet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldSet2.js\").default;\nvar _classPrivateFieldGet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldGet2.js\").default;\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PreloadScript = void 0;\nconst uuid_js_1 = require(\"../../../utils/uuid.js\");\nconst ChannelProxy_js_1 = require(\"./ChannelProxy.js\");\n/**\n * BiDi IDs are generated by the server and are unique within contexts.\n *\n * CDP preload script IDs are generated by the client and are unique\n * within sessions.\n *\n * The mapping between BiDi and CDP preload script IDs is 1:many.\n * BiDi IDs are needed by the mapper to keep track of potential multiple CDP IDs\n * in the client.\n */\nvar _id = /*#__PURE__*/new WeakMap();\nvar _cdpPreloadScripts = /*#__PURE__*/new WeakMap();\nvar _functionDeclaration = /*#__PURE__*/new WeakMap();\nvar _targetIds = /*#__PURE__*/new WeakMap();\nvar _channels = /*#__PURE__*/new WeakMap();\nvar _sandbox = /*#__PURE__*/new WeakMap();\nvar _contexts = /*#__PURE__*/new WeakMap();\nvar _PreloadScript_brand = /*#__PURE__*/new WeakSet();\nclass PreloadScript {\n  get id() {\n    return _classPrivateFieldGet(_id, this);\n  }\n  get targetIds() {\n    return _classPrivateFieldGet(_targetIds, this);\n  }\n  constructor(params, logger) {\n    /**\n     * String to be evaluated. Wraps user-provided function so that the following\n     * steps are run:\n     * 1. Create channels.\n     * 2. Store the created channels in window.\n     * 3. Call the user-provided function with channels as arguments.\n     */\n    _classPrivateMethodInitSpec(this, _PreloadScript_brand);\n    /** BiDi ID, an automatically generated UUID. */\n    _classPrivateFieldInitSpec(this, _id, (0, uuid_js_1.uuidv4)());\n    /** CDP preload scripts. */\n    _classPrivateFieldInitSpec(this, _cdpPreloadScripts, []);\n    /** The script itself, in a format expected by the spec i.e. a function. */\n    _classPrivateFieldInitSpec(this, _functionDeclaration, void 0);\n    /** Targets, in which the preload script is initialized. */\n    _classPrivateFieldInitSpec(this, _targetIds, new Set());\n    /** Channels to be added as arguments to functionDeclaration. */\n    _classPrivateFieldInitSpec(this, _channels, void 0);\n    /** The script sandbox / world name. */\n    _classPrivateFieldInitSpec(this, _sandbox, void 0);\n    /** The browsing contexts to execute the preload scripts in, if any. */\n    _classPrivateFieldInitSpec(this, _contexts, void 0);\n    _classPrivateFieldSet(_channels, this, params.arguments?.map(a => new ChannelProxy_js_1.ChannelProxy(a.value, logger)) ?? []);\n    _classPrivateFieldSet(_functionDeclaration, this, params.functionDeclaration);\n    _classPrivateFieldSet(_sandbox, this, params.sandbox);\n    _classPrivateFieldSet(_contexts, this, params.contexts);\n  }\n  /** Channels of the preload script. */\n  get channels() {\n    return _classPrivateFieldGet(_channels, this);\n  }\n  /** Contexts of the preload script, if any */\n  get contexts() {\n    return _classPrivateFieldGet(_contexts, this);\n  }\n  /**\n   * Adds the script to the given CDP targets by calling the\n   * `Page.addScriptToEvaluateOnNewDocument` command.\n   */\n  async initInTargets(cdpTargets, runImmediately) {\n    await Promise.all(Array.from(cdpTargets).map(cdpTarget => this.initInTarget(cdpTarget, runImmediately)));\n  }\n  /**\n   * Adds the script to the given CDP target by calling the\n   * `Page.addScriptToEvaluateOnNewDocument` command.\n   */\n  async initInTarget(cdpTarget, runImmediately) {\n    const addCdpPreloadScriptResult = await cdpTarget.cdpClient.sendCommand('Page.addScriptToEvaluateOnNewDocument', {\n      source: _assertClassBrand(_PreloadScript_brand, this, _getEvaluateString).call(this),\n      worldName: _classPrivateFieldGet(_sandbox, this),\n      runImmediately\n    });\n    _classPrivateFieldGet(_cdpPreloadScripts, this).push({\n      target: cdpTarget,\n      preloadScriptId: addCdpPreloadScriptResult.identifier\n    });\n    _classPrivateFieldGet(_targetIds, this).add(cdpTarget.id);\n  }\n  /**\n   * Removes this script from all CDP targets.\n   */\n  async remove() {\n    await Promise.all([_classPrivateFieldGet(_cdpPreloadScripts, this).map(async cdpPreloadScript => {\n      const cdpTarget = cdpPreloadScript.target;\n      const cdpPreloadScriptId = cdpPreloadScript.preloadScriptId;\n      return await cdpTarget.cdpClient.sendCommand('Page.removeScriptToEvaluateOnNewDocument', {\n        identifier: cdpPreloadScriptId\n      });\n    })]);\n  }\n  /** Removes the provided cdp target from the list of cdp preload scripts. */\n  dispose(cdpTargetId) {\n    _classPrivateFieldSet(_cdpPreloadScripts, this, _classPrivateFieldGet(_cdpPreloadScripts, this).filter(cdpPreloadScript => cdpPreloadScript.target?.id !== cdpTargetId));\n    _classPrivateFieldGet(_targetIds, this).delete(cdpTargetId);\n  }\n}\nfunction _getEvaluateString() {\n  const channelsArgStr = `[${this.channels.map(c => c.getEvalInWindowStr()).join(', ')}]`;\n  return `(()=>{(${_classPrivateFieldGet(_functionDeclaration, this)})(...${channelsArgStr})})()`;\n}\nexports.PreloadScript = PreloadScript;","map":{"version":3,"names":["_classPrivateMethodInitSpec","require","default","_classPrivateFieldInitSpec","_assertClassBrand","_classPrivateFieldSet","_classPrivateFieldGet","uuid_js_1","ChannelProxy_js_1","_id","WeakMap","_cdpPreloadScripts","_functionDeclaration","_targetIds","_channels","_sandbox","_contexts","_PreloadScript_brand","WeakSet","PreloadScript","id","targetIds","constructor","params","logger","uuidv4","Set","arguments","map","a","ChannelProxy","value","functionDeclaration","sandbox","contexts","channels","initInTargets","cdpTargets","runImmediately","Promise","all","Array","from","cdpTarget","initInTarget","addCdpPreloadScriptResult","cdpClient","sendCommand","source","_getEvaluateString","call","worldName","push","target","preloadScriptId","identifier","add","remove","cdpPreloadScript","cdpPreloadScriptId","dispose","cdpTargetId","filter","delete","channelsArgStr","c","getEvalInWindowStr","join","exports"],"sources":["../../../../../src/bidiMapper/modules/script/PreloadScript.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}