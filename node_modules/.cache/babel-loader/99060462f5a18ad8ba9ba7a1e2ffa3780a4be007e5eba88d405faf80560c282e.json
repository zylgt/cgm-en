{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultLoadersSync = exports.defaultLoaders = exports.globalConfigSearchPlacesSync = exports.globalConfigSearchPlaces = exports.getDefaultSearchPlacesSync = exports.getDefaultSearchPlaces = exports.cosmiconfigSync = exports.cosmiconfig = void 0;\nconst defaults_1 = require(\"./defaults\");\nObject.defineProperty(exports, \"defaultLoaders\", {\n  enumerable: true,\n  get: function () {\n    return defaults_1.defaultLoaders;\n  }\n});\nObject.defineProperty(exports, \"defaultLoadersSync\", {\n  enumerable: true,\n  get: function () {\n    return defaults_1.defaultLoadersSync;\n  }\n});\nObject.defineProperty(exports, \"getDefaultSearchPlaces\", {\n  enumerable: true,\n  get: function () {\n    return defaults_1.getDefaultSearchPlaces;\n  }\n});\nObject.defineProperty(exports, \"getDefaultSearchPlacesSync\", {\n  enumerable: true,\n  get: function () {\n    return defaults_1.getDefaultSearchPlacesSync;\n  }\n});\nObject.defineProperty(exports, \"globalConfigSearchPlaces\", {\n  enumerable: true,\n  get: function () {\n    return defaults_1.globalConfigSearchPlaces;\n  }\n});\nObject.defineProperty(exports, \"globalConfigSearchPlacesSync\", {\n  enumerable: true,\n  get: function () {\n    return defaults_1.globalConfigSearchPlacesSync;\n  }\n});\nconst Explorer_js_1 = require(\"./Explorer.js\");\nconst ExplorerSync_js_1 = require(\"./ExplorerSync.js\");\nconst util_1 = require(\"./util\");\nconst identity = function identity(x) {\n  return x;\n};\nfunction getUserDefinedOptionsFromMetaConfig() {\n  const metaExplorer = new ExplorerSync_js_1.ExplorerSync({\n    moduleName: 'cosmiconfig',\n    stopDir: process.cwd(),\n    searchPlaces: defaults_1.metaSearchPlaces,\n    ignoreEmptySearchPlaces: false,\n    applyPackagePropertyPathToConfiguration: true,\n    loaders: defaults_1.defaultLoaders,\n    transform: identity,\n    cache: true,\n    metaConfigFilePath: null,\n    mergeImportArrays: true,\n    mergeSearchPlaces: true,\n    searchStrategy: 'none'\n  });\n  const metaConfig = metaExplorer.search();\n  if (!metaConfig) {\n    return null;\n  }\n  if (metaConfig.config?.loaders) {\n    throw new Error('Can not specify loaders in meta config file');\n  }\n  if (metaConfig.config?.searchStrategy) {\n    throw new Error('Can not specify searchStrategy in meta config file');\n  }\n  const overrideOptions = {\n    mergeSearchPlaces: true,\n    ...(metaConfig.config ?? {})\n  };\n  return {\n    config: (0, util_1.removeUndefinedValuesFromObject)(overrideOptions),\n    filepath: metaConfig.filepath\n  };\n}\nfunction getResolvedSearchPlaces(moduleName, toolDefinedSearchPlaces, userConfiguredOptions) {\n  const userConfiguredSearchPlaces = userConfiguredOptions.searchPlaces?.map(path => path.replace('{name}', moduleName));\n  if (userConfiguredOptions.mergeSearchPlaces) {\n    return [...(userConfiguredSearchPlaces ?? []), ...toolDefinedSearchPlaces];\n  }\n  return userConfiguredSearchPlaces ?? /* istanbul ignore next */toolDefinedSearchPlaces;\n}\nfunction mergeOptionsBase(moduleName, defaults, options) {\n  const userDefinedConfig = getUserDefinedOptionsFromMetaConfig();\n  if (!userDefinedConfig) {\n    return {\n      ...defaults,\n      ...(0, util_1.removeUndefinedValuesFromObject)(options),\n      loaders: {\n        ...defaults.loaders,\n        ...options.loaders\n      }\n    };\n  }\n  const userConfiguredOptions = userDefinedConfig.config;\n  const toolDefinedSearchPlaces = options.searchPlaces ?? defaults.searchPlaces;\n  return {\n    ...defaults,\n    ...(0, util_1.removeUndefinedValuesFromObject)(options),\n    metaConfigFilePath: userDefinedConfig.filepath,\n    ...userConfiguredOptions,\n    searchPlaces: getResolvedSearchPlaces(moduleName, toolDefinedSearchPlaces, userConfiguredOptions),\n    loaders: {\n      ...defaults.loaders,\n      ...options.loaders\n    }\n  };\n}\nfunction validateOptions(options) {\n  if (options.searchStrategy != null && options.searchStrategy !== 'global' && options.stopDir) {\n    throw new Error('Can not supply `stopDir` option with `searchStrategy` other than \"global\"');\n  }\n}\nfunction mergeOptions(moduleName, options) {\n  validateOptions(options);\n  const defaults = {\n    moduleName,\n    searchPlaces: (0, defaults_1.getDefaultSearchPlaces)(moduleName),\n    ignoreEmptySearchPlaces: true,\n    cache: true,\n    transform: identity,\n    loaders: defaults_1.defaultLoaders,\n    metaConfigFilePath: null,\n    mergeImportArrays: true,\n    mergeSearchPlaces: true,\n    searchStrategy: options.stopDir ? 'global' : 'none'\n  };\n  return mergeOptionsBase(moduleName, defaults, options);\n}\nfunction mergeOptionsSync(moduleName, options) {\n  validateOptions(options);\n  const defaults = {\n    moduleName,\n    searchPlaces: (0, defaults_1.getDefaultSearchPlacesSync)(moduleName),\n    ignoreEmptySearchPlaces: true,\n    cache: true,\n    transform: identity,\n    loaders: defaults_1.defaultLoadersSync,\n    metaConfigFilePath: null,\n    mergeImportArrays: true,\n    mergeSearchPlaces: true,\n    searchStrategy: options.stopDir ? 'global' : 'none'\n  };\n  return mergeOptionsBase(moduleName, defaults, options);\n}\nfunction cosmiconfig(moduleName, options = {}) {\n  const normalizedOptions = mergeOptions(moduleName, options);\n  const explorer = new Explorer_js_1.Explorer(normalizedOptions);\n  return {\n    search: explorer.search.bind(explorer),\n    load: explorer.load.bind(explorer),\n    clearLoadCache: explorer.clearLoadCache.bind(explorer),\n    clearSearchCache: explorer.clearSearchCache.bind(explorer),\n    clearCaches: explorer.clearCaches.bind(explorer)\n  };\n}\nexports.cosmiconfig = cosmiconfig;\nfunction cosmiconfigSync(moduleName, options = {}) {\n  const normalizedOptions = mergeOptionsSync(moduleName, options);\n  const explorerSync = new ExplorerSync_js_1.ExplorerSync(normalizedOptions);\n  return {\n    search: explorerSync.search.bind(explorerSync),\n    load: explorerSync.load.bind(explorerSync),\n    clearLoadCache: explorerSync.clearLoadCache.bind(explorerSync),\n    clearSearchCache: explorerSync.clearSearchCache.bind(explorerSync),\n    clearCaches: explorerSync.clearCaches.bind(explorerSync)\n  };\n}\nexports.cosmiconfigSync = cosmiconfigSync;","map":{"version":3,"names":["defaults_1","require","Object","defineProperty","exports","enumerable","get","defaultLoaders","defaultLoadersSync","getDefaultSearchPlaces","getDefaultSearchPlacesSync","globalConfigSearchPlaces","globalConfigSearchPlacesSync","Explorer_js_1","ExplorerSync_js_1","util_1","identity","x","getUserDefinedOptionsFromMetaConfig","metaExplorer","ExplorerSync","moduleName","stopDir","process","cwd","searchPlaces","metaSearchPlaces","ignoreEmptySearchPlaces","applyPackagePropertyPathToConfiguration","loaders","transform","cache","metaConfigFilePath","mergeImportArrays","mergeSearchPlaces","searchStrategy","metaConfig","search","config","Error","overrideOptions","removeUndefinedValuesFromObject","filepath","getResolvedSearchPlaces","toolDefinedSearchPlaces","userConfiguredOptions","userConfiguredSearchPlaces","map","path","replace","mergeOptionsBase","defaults","options","userDefinedConfig","validateOptions","mergeOptions","mergeOptionsSync","cosmiconfig","normalizedOptions","explorer","Explorer","bind","load","clearLoadCache","clearSearchCache","clearCaches","cosmiconfigSync","explorerSync"],"sources":["../src/index.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}