{"ast":null,"code":"const socket = {\n  state: {\n    deviceList: [],\n    //设备列表\n    upProgess: 0,\n    //上传进度\n    upStep: 1,\n    //上传步骤 1启动驱动 2启动中 3连接设备 4同步数据\n    readerConnect: 0,\n    //reader连接状态 0初始状态 1连接中 2连接成功\n    cgmList: [],\n    //reader绑定的发射器列表\n    errorCode: 0 //0未发生错误 1驱动未安装 2驱动启动失败 3驱动有更新 5reader连接失败 6数据同步失败\n  },\n  mutations: {\n    SET_DEVICE_LIST: (state, deviceList) => {\n      state.deviceList = deviceList;\n    },\n    SET_UP_PROGESS: (state, upProgess) => {\n      state.upProgess = upProgess;\n    },\n    SET_UP_STEP: (state, upStep) => {\n      state.upStep = upStep;\n    },\n    SET_READER_CONNECT: (state, readerConnect) => {\n      console.log(readerConnect);\n      state.readerConnect = readerConnect;\n    },\n    SET_ERROR_CODE: (state, errorCode) => {\n      state.errorCode = errorCode;\n    },\n    SET_CGM_LIST: (state, cgmList) => {\n      state.cgmList = cgmList;\n    }\n  },\n  actions: {\n    setDeviceList({\n      commit\n    }, data) {\n      commit('SET_DEVICE_LIST', data);\n    },\n    setUpProgess({\n      commit\n    }, data) {\n      commit('SET_UP_PROGESS', data);\n    },\n    setUpStep({\n      commit\n    }, data) {\n      commit('SET_UP_STEP', data);\n    },\n    setReaderConnect({\n      commit\n    }, data) {\n      commit('SET_READER_CONNECT', data);\n    },\n    setErrorCode({\n      commit\n    }, data) {\n      commit('SET_ERROR_CODE', data);\n    },\n    setCgmList({\n      commit\n    }, data) {\n      commit('SET_CGM_LIST', data);\n    }\n  }\n};\nexport default socket;","map":{"version":3,"names":["socket","state","deviceList","upProgess","upStep","readerConnect","cgmList","errorCode","mutations","SET_DEVICE_LIST","SET_UP_PROGESS","SET_UP_STEP","SET_READER_CONNECT","console","log","SET_ERROR_CODE","SET_CGM_LIST","actions","setDeviceList","commit","data","setUpProgess","setUpStep","setReaderConnect","setErrorCode","setCgmList"],"sources":["/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/src/store/modules/socket.js"],"sourcesContent":["const socket = {\n    state:{\n        deviceList:[], //设备列表\n        upProgess:0 ,//上传进度\n        upStep:1 , //上传步骤 1启动驱动 2启动中 3连接设备 4同步数据\n        readerConnect:0, //reader连接状态 0初始状态 1连接中 2连接成功\n        cgmList:[], //reader绑定的发射器列表\n        errorCode:0, //0未发生错误 1驱动未安装 2驱动启动失败 3驱动有更新 5reader连接失败 6数据同步失败\n    },\n    mutations:{\n        SET_DEVICE_LIST:(state,deviceList) => {\n            state.deviceList = deviceList\n        },\n        SET_UP_PROGESS:(state,upProgess) => {\n            state.upProgess = upProgess\n        },\n        SET_UP_STEP:(state,upStep) => {\n            state.upStep = upStep\n        },\n        SET_READER_CONNECT:(state,readerConnect) => {\n            console.log(readerConnect)\n            state.readerConnect = readerConnect\n        },\n        SET_ERROR_CODE:(state,errorCode) => {\n            state.errorCode = errorCode\n        },\n        SET_CGM_LIST:(state,cgmList) => {\n            state.cgmList = cgmList\n        }\n    },\n    actions:{\n        setDeviceList({commit},data){\n            commit('SET_DEVICE_LIST',data)\n        },\n        setUpProgess({commit},data){\n            commit('SET_UP_PROGESS',data)\n        },\n        setUpStep({commit},data){\n            commit('SET_UP_STEP',data)\n        },\n        setReaderConnect({commit},data){\n            commit('SET_READER_CONNECT',data)\n        },\n        setErrorCode({commit},data){\n            commit('SET_ERROR_CODE',data)\n        },\n        setCgmList({commit},data){\n            commit('SET_CGM_LIST',data)\n        }\n    }\n}\n\nexport default socket"],"mappings":"AAAA,MAAMA,MAAM,GAAG;EACXC,KAAK,EAAC;IACFC,UAAU,EAAC,EAAE;IAAE;IACfC,SAAS,EAAC,CAAC;IAAE;IACbC,MAAM,EAAC,CAAC;IAAG;IACXC,aAAa,EAAC,CAAC;IAAE;IACjBC,OAAO,EAAC,EAAE;IAAE;IACZC,SAAS,EAAC,CAAC,CAAE;EACjB,CAAC;EACDC,SAAS,EAAC;IACNC,eAAe,EAACA,CAACR,KAAK,EAACC,UAAU,KAAK;MAClCD,KAAK,CAACC,UAAU,GAAGA,UAAU;IACjC,CAAC;IACDQ,cAAc,EAACA,CAACT,KAAK,EAACE,SAAS,KAAK;MAChCF,KAAK,CAACE,SAAS,GAAGA,SAAS;IAC/B,CAAC;IACDQ,WAAW,EAACA,CAACV,KAAK,EAACG,MAAM,KAAK;MAC1BH,KAAK,CAACG,MAAM,GAAGA,MAAM;IACzB,CAAC;IACDQ,kBAAkB,EAACA,CAACX,KAAK,EAACI,aAAa,KAAK;MACxCQ,OAAO,CAACC,GAAG,CAACT,aAAa,CAAC;MAC1BJ,KAAK,CAACI,aAAa,GAAGA,aAAa;IACvC,CAAC;IACDU,cAAc,EAACA,CAACd,KAAK,EAACM,SAAS,KAAK;MAChCN,KAAK,CAACM,SAAS,GAAGA,SAAS;IAC/B,CAAC;IACDS,YAAY,EAACA,CAACf,KAAK,EAACK,OAAO,KAAK;MAC5BL,KAAK,CAACK,OAAO,GAAGA,OAAO;IAC3B;EACJ,CAAC;EACDW,OAAO,EAAC;IACJC,aAAaA,CAAC;MAACC;IAAM,CAAC,EAACC,IAAI,EAAC;MACxBD,MAAM,CAAC,iBAAiB,EAACC,IAAI,CAAC;IAClC,CAAC;IACDC,YAAYA,CAAC;MAACF;IAAM,CAAC,EAACC,IAAI,EAAC;MACvBD,MAAM,CAAC,gBAAgB,EAACC,IAAI,CAAC;IACjC,CAAC;IACDE,SAASA,CAAC;MAACH;IAAM,CAAC,EAACC,IAAI,EAAC;MACpBD,MAAM,CAAC,aAAa,EAACC,IAAI,CAAC;IAC9B,CAAC;IACDG,gBAAgBA,CAAC;MAACJ;IAAM,CAAC,EAACC,IAAI,EAAC;MAC3BD,MAAM,CAAC,oBAAoB,EAACC,IAAI,CAAC;IACrC,CAAC;IACDI,YAAYA,CAAC;MAACL;IAAM,CAAC,EAACC,IAAI,EAAC;MACvBD,MAAM,CAAC,gBAAgB,EAACC,IAAI,CAAC;IACjC,CAAC;IACDK,UAAUA,CAAC;MAACN;IAAM,CAAC,EAACC,IAAI,EAAC;MACrBD,MAAM,CAAC,cAAc,EAACC,IAAI,CAAC;IAC/B;EACJ;AACJ,CAAC;AAED,eAAepB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}