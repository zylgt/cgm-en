{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { formatDate } from '@/utils/formatTime';\n// 监听主线程传来的消息\nself.addEventListener('message', e => {\n  console.log(e.data, '接收数据');\n  setTimeout(() => {\n    return postMessage('线程完成');\n  }, 1000);\n});\n// 处理数据\nfunction heavyCalculation(data) {\n  let array = data;\n  // 将数组分割为时刻数组\n  let momentMap = new Map();\n  array.forEach(item => {\n    item.moment = formatDate(item.DataTs * 1000, 'HH:MM');\n    momentMap.has(item.moment) ? momentMap.get(item.moment).push(item.Value) : momentMap.set(item.moment, [item.Value]);\n  });\n  // 计算出AGP数据并补全图谱数据\n  let agpMap = new Map();\n  let agp05 = new Array(24 * 60);\n  let agp25 = new Array(24 * 60);\n  let agp50 = new Array(24 * 60);\n  let agp75 = new Array(24 * 60);\n  let agp95 = new Array(24 * 60);\n  let xData = new Array(24 * 60);\n\n  // 分时段平均血糖\n  let x2Data = new Array(24);\n  let avgData = new Array(24);\n  let avgMoment = 0;\n  for (let i = 0; i < 24 * 60; i++) {\n    // 分钟换算为时刻\n    let h = Math.floor(i / 60) < 10 ? '0' + Math.floor(i / 60) : Math.floor(i / 60);\n    let m = i % 60 < 10 ? '0' + i % 60 : i % 60;\n    let moment = h + ':' + m;\n    if (momentMap.has(moment)) {\n      agp05[i] = AGPUtils.calculateYValue(momentMap.get(moment)) ? GlucoseUtils.mgdlToMmol(AGPUtils.calculateYValue(momentMap.get(moment)).p05) : AGPUtils.calculateYValue(momentMap.get(moment));\n      agp25[i] = AGPUtils.calculateYValue(momentMap.get(moment)) ? GlucoseUtils.mgdlToMmol(AGPUtils.calculateYValue(momentMap.get(moment)).p25) : AGPUtils.calculateYValue(momentMap.get(moment));\n      agp50[i] = AGPUtils.calculateYValue(momentMap.get(moment)) ? GlucoseUtils.mgdlToMmol(AGPUtils.calculateYValue(momentMap.get(moment)).p50) : AGPUtils.calculateYValue(momentMap.get(moment));\n      agp75[i] = AGPUtils.calculateYValue(momentMap.get(moment)) ? GlucoseUtils.mgdlToMmol(AGPUtils.calculateYValue(momentMap.get(moment)).p75) : AGPUtils.calculateYValue(momentMap.get(moment));\n      agp95[i] = AGPUtils.calculateYValue(momentMap.get(moment)) ? GlucoseUtils.mgdlToMmol(AGPUtils.calculateYValue(momentMap.get(moment)).p95) : AGPUtils.calculateYValue(momentMap.get(moment));\n    }\n    xData[i] = moment;\n    if (i % 60 == 0) {\n      avgMoment = i / 60;\n      x2Data[i / 60] = moment;\n      avgData[avgMoment] = momentMap.get(moment) ? momentMap.get(moment) : [];\n    } else {\n      momentMap.get(moment) ? avgData[avgMoment].push(...momentMap.get(moment)) : [];\n    }\n  }\n}","map":{"version":3,"names":["formatDate","self","addEventListener","e","console","log","data","setTimeout","postMessage","heavyCalculation","array","momentMap","Map","forEach","item","moment","DataTs","has","get","push","Value","set","agpMap","agp05","Array","agp25","agp50","agp75","agp95","xData","x2Data","avgData","avgMoment","i","h","Math","floor","m","AGPUtils","calculateYValue","GlucoseUtils","mgdlToMmol","p05","p25","p50","p75","p95"],"sources":["/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/src/workers/agp_worker.js"],"sourcesContent":["import {formatDate} from '@/utils/formatTime'\n// 监听主线程传来的消息\nself.addEventListener('message',(e)=>{\n    console.log(e.data,'接收数据')\n    setTimeout(() => {\n        return postMessage('线程完成')\n    }, 1000)\n})\n// 处理数据\nfunction heavyCalculation(data){\n    let array = data\n    // 将数组分割为时刻数组\n    let momentMap = new Map();\n    array.forEach(item=>{\n        item.moment = formatDate(item.DataTs*1000,'HH:MM')\n        momentMap.has(item.moment) ? momentMap.get(item.moment).push(item.Value) : momentMap.set(item.moment, [item.Value]);\n    })\n    // 计算出AGP数据并补全图谱数据\n    let agpMap = new Map();\n    let agp05 = new Array(24 * 60);\n    let agp25 = new Array(24 * 60);\n    let agp50 = new Array(24 * 60);\n    let agp75 = new Array(24 * 60);\n    let agp95 = new Array(24 * 60);\n    let xData = new Array(24 * 60);\n\n     // 分时段平均血糖\n     let x2Data = new Array(24);\n     let avgData = new Array(24);\n     let avgMoment = 0\n     for (let i = 0; i < 24 * 60; i++) {\n         // 分钟换算为时刻\n         let h =  Math.floor(i/60)<10 ? '0'+ Math.floor(i/60) : Math.floor(i/60) \n         let m =  i%60 < 10 ? '0' + i%60 : i%60\n         let moment = h+':'+m\n         if(momentMap.has(moment)){\n             agp05[i] = AGPUtils.calculateYValue(momentMap.get(moment))?GlucoseUtils.mgdlToMmol(AGPUtils.calculateYValue(momentMap.get(moment)).p05):AGPUtils.calculateYValue(momentMap.get(moment))\n             agp25[i] = AGPUtils.calculateYValue(momentMap.get(moment))?GlucoseUtils.mgdlToMmol(AGPUtils.calculateYValue(momentMap.get(moment)).p25):AGPUtils.calculateYValue(momentMap.get(moment))  \n             agp50[i] = AGPUtils.calculateYValue(momentMap.get(moment))?GlucoseUtils.mgdlToMmol(AGPUtils.calculateYValue(momentMap.get(moment)).p50):AGPUtils.calculateYValue(momentMap.get(moment))\n             agp75[i] = AGPUtils.calculateYValue(momentMap.get(moment))?GlucoseUtils.mgdlToMmol(AGPUtils.calculateYValue(momentMap.get(moment)).p75):AGPUtils.calculateYValue(momentMap.get(moment)) \n             agp95[i] = AGPUtils.calculateYValue(momentMap.get(moment))?GlucoseUtils.mgdlToMmol(AGPUtils.calculateYValue(momentMap.get(moment)).p95):AGPUtils.calculateYValue(momentMap.get(moment))\n         }\n         xData[i] = moment\n         if(i%60==0){\n             avgMoment = i/60\n             x2Data[i/60] = moment\n             avgData[avgMoment] = momentMap.get(moment)?momentMap.get(moment):[]\n         }else{\n            momentMap.get(moment)?avgData[avgMoment].push(...momentMap.get(moment)):[]\n         }\n         \n     }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}