{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2022 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar _classPrivateFieldInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _classPrivateFieldGet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldGet2.js\").default;\nvar _classPrivateFieldSet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldSet2.js\").default;\nlet _disposable_js_1$disp, _disposable_js_1$disp2;\nrequire(\"core-js/modules/es.array.push.js\");\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EventSubscription = exports.EventEmitter = void 0;\nconst mitt_js_1 = __importDefault(require(\"../../third_party/mitt/mitt.js\"));\nconst disposable_js_1 = require(\"../util/disposable.js\");\n/**\n * The EventEmitter class that many Puppeteer classes extend.\n *\n * @remarks\n *\n * This allows you to listen to events that Puppeteer classes fire and act\n * accordingly. Therefore you'll mostly use {@link EventEmitter.on | on} and\n * {@link EventEmitter.off | off} to bind\n * and unbind to event listeners.\n *\n * @public\n */\nvar _emitter = /*#__PURE__*/new WeakMap();\nvar _handlers = /*#__PURE__*/new WeakMap();\n_disposable_js_1$disp = disposable_js_1.disposeSymbol;\nclass EventEmitter {\n  /**\n   * If you pass an emitter, the returned emitter will wrap the passed emitter.\n   *\n   * @internal\n   */\n  constructor(emitter = (0, mitt_js_1.default)(new Map())) {\n    _classPrivateFieldInitSpec(this, _emitter, void 0);\n    _classPrivateFieldInitSpec(this, _handlers, new Map());\n    _classPrivateFieldSet(_emitter, this, emitter);\n  }\n  /**\n   * Bind an event listener to fire when an event occurs.\n   * @param type - the event type you'd like to listen to. Can be a string or symbol.\n   * @param handler - the function to be called when the event occurs.\n   * @returns `this` to enable you to chain method calls.\n   */\n  on(type, handler) {\n    const handlers = _classPrivateFieldGet(_handlers, this).get(type);\n    if (handlers === undefined) {\n      _classPrivateFieldGet(_handlers, this).set(type, [handler]);\n    } else {\n      handlers.push(handler);\n    }\n    _classPrivateFieldGet(_emitter, this).on(type, handler);\n    return this;\n  }\n  /**\n   * Remove an event listener from firing.\n   * @param type - the event type you'd like to stop listening to.\n   * @param handler - the function that should be removed.\n   * @returns `this` to enable you to chain method calls.\n   */\n  off(type, handler) {\n    const handlers = _classPrivateFieldGet(_handlers, this).get(type) ?? [];\n    if (handler === undefined) {\n      for (const handler of handlers) {\n        _classPrivateFieldGet(_emitter, this).off(type, handler);\n      }\n      _classPrivateFieldGet(_handlers, this).delete(type);\n      return this;\n    }\n    const index = handlers.lastIndexOf(handler);\n    if (index > -1) {\n      _classPrivateFieldGet(_emitter, this).off(type, ...handlers.splice(index, 1));\n    }\n    return this;\n  }\n  /**\n   * Emit an event and call any associated listeners.\n   *\n   * @param type - the event you'd like to emit\n   * @param eventData - any data you'd like to emit with the event\n   * @returns `true` if there are any listeners, `false` if there are not.\n   */\n  emit(type, event) {\n    _classPrivateFieldGet(_emitter, this).emit(type, event);\n    return this.listenerCount(type) > 0;\n  }\n  /**\n   * Like `on` but the listener will only be fired once and then it will be removed.\n   * @param type - the event you'd like to listen to\n   * @param handler - the handler function to run when the event occurs\n   * @returns `this` to enable you to chain method calls.\n   */\n  once(type, handler) {\n    const onceHandler = eventData => {\n      handler(eventData);\n      this.off(type, onceHandler);\n    };\n    return this.on(type, onceHandler);\n  }\n  /**\n   * Gets the number of listeners for a given event.\n   *\n   * @param type - the event to get the listener count for\n   * @returns the number of listeners bound to the given event\n   */\n  listenerCount(type) {\n    return _classPrivateFieldGet(_handlers, this).get(type)?.length || 0;\n  }\n  /**\n   * Removes all listeners. If given an event argument, it will remove only\n   * listeners for that event.\n   *\n   * @param type - the event to remove listeners for.\n   * @returns `this` to enable you to chain method calls.\n   */\n  removeAllListeners(type) {\n    if (type !== undefined) {\n      return this.off(type);\n    }\n    this[disposable_js_1.disposeSymbol]();\n    return this;\n  }\n  /**\n   * @internal\n   */\n  [_disposable_js_1$disp]() {\n    for (const [type, handlers] of _classPrivateFieldGet(_handlers, this)) {\n      for (const handler of handlers) {\n        _classPrivateFieldGet(_emitter, this).off(type, handler);\n      }\n    }\n    _classPrivateFieldGet(_handlers, this).clear();\n  }\n}\nexports.EventEmitter = EventEmitter;\n/**\n * @internal\n */\nvar _target = /*#__PURE__*/new WeakMap();\nvar _type = /*#__PURE__*/new WeakMap();\nvar _handler = /*#__PURE__*/new WeakMap();\n_disposable_js_1$disp2 = disposable_js_1.disposeSymbol;\nclass EventSubscription {\n  constructor(target, type, handler) {\n    _classPrivateFieldInitSpec(this, _target, void 0);\n    _classPrivateFieldInitSpec(this, _type, void 0);\n    _classPrivateFieldInitSpec(this, _handler, void 0);\n    _classPrivateFieldSet(_target, this, target);\n    _classPrivateFieldSet(_type, this, type);\n    _classPrivateFieldSet(_handler, this, handler);\n    _classPrivateFieldGet(_target, this).on(_classPrivateFieldGet(_type, this), _classPrivateFieldGet(_handler, this));\n  }\n  [_disposable_js_1$disp2]() {\n    _classPrivateFieldGet(_target, this).off(_classPrivateFieldGet(_type, this), _classPrivateFieldGet(_handler, this));\n  }\n}\nexports.EventSubscription = EventSubscription;","map":{"version":3,"names":["_classPrivateFieldInitSpec","require","default","_classPrivateFieldGet","_classPrivateFieldSet","_disposable_js_1$disp","_disposable_js_1$disp2","mitt_js_1","__importDefault","disposable_js_1","_emitter","WeakMap","_handlers","disposeSymbol","EventEmitter","constructor","emitter","Map","on","type","handler","handlers","get","undefined","set","push","off","delete","index","lastIndexOf","splice","emit","event","listenerCount","once","onceHandler","eventData","length","removeAllListeners","clear","exports","_target","_type","_handler","EventSubscription","target"],"sources":["../../../../src/common/EventEmitter.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}