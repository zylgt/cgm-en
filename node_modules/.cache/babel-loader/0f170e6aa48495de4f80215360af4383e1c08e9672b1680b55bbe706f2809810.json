{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { formatDate } from '@/utils/formatTime';\nimport TIP from '@/views/components/Chart/TIR';\nimport { getAgpData } from '@/api/api';\nimport { liveQuery } from \"dexie\";\nimport { useObservable } from \"@vueuse/rxjs\";\nexport default {\n  data() {\n    return {\n      agpDate: [],\n      list: [],\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近7天',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近14天',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 14);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近30天',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近90天',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      }\n    };\n  },\n  components: {\n    TIP\n  },\n  created() {\n    const end = new Date();\n    const start = new Date();\n    start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n    this.agpDate = [formatDate(start, \"YYYY-mm-dd\"), formatDate(end, \"YYYY-mm-dd\")];\n    this.getData();\n  },\n  methods: {\n    upload() {\n      this.$router.push('/upLoad');\n    },\n    // 查询数据\n    async getData() {\n      const _dbDataLength = await this.$db.myTable.count();\n      if (_dbDataLength == 0) {\n        this.getClodData();\n      } else {\n        this.getDbData();\n      }\n      let start_ts = new Date(this.agpDate[0]).getTime() / 1000;\n      let end_ts = new Date(this.agpDate[1]).getTime() / 1000;\n      let db_start = await this.$db.myTable.orderBy(\"DataTs\").first();\n      let db_end = await this.$db.myTable.orderBy(\"DataTs\").last();\n      let db_start_ts = db_start.DataTs;\n      let db_end_ts = db_end.DataTs;\n      let request_strat_ts = null;\n      let request_end_ts = null;\n      console.log('数据库时间戳', db_start_ts, db_end_ts);\n      console.log('数据时间戳', start_ts, end_ts);\n      if (start_ts < db_start_ts) {\n        //向前请求云数据\n        request_strat_ts = start_ts;\n        request_end_ts = db_start_ts;\n      }\n      if (db_end_ts < end_ts) {\n        //向后请求云数据\n        request_strat_ts = db_end_ts;\n        request_end_ts = end_ts;\n      }\n      if (db_end_ts >= end_ts && start_ts >= db_start_ts) {\n        //向数据库请求数据\n        request_strat_ts = start_ts;\n        request_end_ts = end_ts;\n      }\n    },\n    // 订阅数据库查询数据\n    async getDbData() {\n      let start_ts = new Date(this.agpDate[0]).getTime() / 1000;\n      let end_ts = new Date(this.agpDate[1]).getTime() / 1000;\n      let arrayData = useObservable(liveQuery(() => this.$db.myTable.where(\"DataTs\").between(start_ts, end_ts).toArray()));\n      console.log(arrayData);\n    },\n    // 从云拉取数据\n    getClodData() {\n      let start_ts = new Date(this.agpDate[0]).getTime() / 1000;\n      let end_ts = new Date(this.agpDate[1]).getTime() / 1000;\n      getAgpData({\n        start_ts: start_ts,\n        end_ts: end_ts\n      }).then(response => {\n        if (response.code == 1000) {\n          let arrayData = response.data;\n          this.$db.myTable.bulkAdd(arrayData);\n        } else {\n          this.$message({\n            type: 'error',\n            message: response.msg\n          });\n        }\n      }).catch(res => {\n        this.$message({\n          type: 'error',\n          message: res.message\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["formatDate","TIP","getAgpData","liveQuery","useObservable","data","agpDate","list","pickerOptions","shortcuts","text","onClick","picker","end","Date","start","setTime","getTime","$emit","components","created","getData","methods","upload","$router","push","_dbDataLength","$db","myTable","count","getClodData","getDbData","start_ts","end_ts","db_start","orderBy","first","db_end","last","db_start_ts","DataTs","db_end_ts","request_strat_ts","request_end_ts","console","log","arrayData","where","between","toArray","then","response","code","bulkAdd","$message","type","message","msg","catch","res"],"sources":["src/views/report/AGP.vue"],"sourcesContent":["<template>\n    <div class='agp' >\n        <!-- <div class='agp-cont agp-empty' >\n            <div class='agp-empty-tips' >暂无血糖数据，请点击上传数据进行数据同步</div>\n            <el-button type=\"primary\" @click=\"upload\" >\n                <img src=\"~@/assets/image/btn-upload.png\" alt=\"\" class='btn-upload' >\n                上传数据\n            </el-button>\n        </div> -->\n        <div class='agp-main' >\n            <div class='agp-top' >\n                <div class='agp-top-fl' >\n                    <div class='report-title'> {{$t('message.route.'+$route.meta.title)}}</div>\n                    <div class='report-agp-date' >\n                        <div class='agp-date' >{{agpDate[0]}} —— {{agpDate[1]}}</div>\n                        <img src=\"~@/assets/image/calendar.png\" alt=\"\" class='agp-icon' >\n                        <el-date-picker\n                            class='agp-picker'\n                            v-model=\"agpDate\"\n                            type=\"daterange\"\n                            align=\"right\"\n                            unlink-panels\n                            range-separator=\"至\"\n                            start-placeholder=\"开始日期\"\n                            end-placeholder=\"结束日期\"\n                            value-format=\"yyyy-MM-dd\"\n                            :picker-options=\"pickerOptions\">\n                        </el-date-picker>\n                    </div>\n                </div>\n                <div class='agp-fr' >\n                    <img src=\"~@/assets/image/down-icon.png\" alt=\"\" class='agp-icon' >\n                    <img src=\"~@/assets/image/share.png\" alt=\"\" class='agp-icon agp-fr-icon' >\n                    <el-button type=\"primary\" @click=\"upload\">\n                        <img src=\"~@/assets/image/btn-upload.png\" alt=\"\" class='btn-upload' >\n                        上传数据\n                    </el-button>\n                </div>\n            </div>\n            <div class='agp-cont' >\n                <el-row :gutter=\"20\">\n                    <el-col :span=\"12\">\n                        <div class='cgm-cont-title'>葡萄糖标准</div>\n                        <div class='bg-data-item' >\n                            <div class='bg-data-label' >日期：</div>\n                            <div class='bg-data-val' >2023-10-30</div>\n                        </div>\n                        <div class='bg-data-item' >\n                            <div class='bg-data-label' >CGM有效时间：</div>\n                            <div class='bg-data-val' >2023-10-30</div>\n                        </div>\n                        <div class='bg-data-item' >\n                            <div class='bg-data-label' >葡萄糖均值：</div>\n                            <div class='bg-data-val' >2023-10-30</div>\n                        </div>\n                        <div class='bg-data-item' >\n                            <div class='bg-data-label' >GMI：</div>\n                            <div class='bg-data-val' >2023-10-30</div>\n                        </div>\n                        <div class='bg-data-item' >\n                            <div class='bg-data-label' >变异系数：</div>\n                            <div class='bg-data-val' >2023-10-30</div>\n                        </div>\n                    </el-col>\n                    <el-col :span=\"12\">\n                        <div class='cgm-cont-title'>葡萄糖目标范围内时间TIR</div>\n                        <TIP/>\n                    </el-col>\n                </el-row>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport {formatDate} from '@/utils/formatTime'\nimport TIP from '@/views/components/Chart/TIR'\nimport {getAgpData} from '@/api/api'\nimport { liveQuery } from \"dexie\";\nimport { useObservable } from \"@vueuse/rxjs\";\nexport default {\n    data(){\n        return{\n            agpDate:[],\n            list:[],\n            pickerOptions: {\n                shortcuts: [{\n                    text: '最近7天',\n                    onClick(picker) {\n                    const end = new Date();\n                    const start = new Date();\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n                    picker.$emit('pick', [start, end]);\n                    }\n                },{\n                    text: '最近14天',\n                    onClick(picker) {\n                    const end = new Date();\n                    const start = new Date();\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 14);\n                    picker.$emit('pick', [start, end]);\n                    }\n                }, {\n                    text: '最近30天',\n                    onClick(picker) {\n                    const end = new Date();\n                    const start = new Date();\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n                    picker.$emit('pick', [start, end]);\n                    }\n                }, {\n                    text: '最近90天',\n                    onClick(picker) {\n                    const end = new Date();\n                    const start = new Date();\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n                    picker.$emit('pick', [start, end]);\n                    }\n                }]\n                },\n        }\n    },\n    components: {\n        TIP\n    },\n    created(){\n        const end = new Date();\n        const start = new Date();\n        start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n        this.agpDate = [formatDate(start,\"YYYY-mm-dd\"), formatDate(end,\"YYYY-mm-dd\")]    \n        this.getData()      \n\n\n    },\n    methods:{\n        upload(){\n            this.$router.push('/upLoad')\n        },\n        // 查询数据\n        async getData() {\n            const _dbDataLength =  await this.$db.myTable.count()\n            if(_dbDataLength==0){\n                this.getClodData()\n            }else{\n                this.getDbData()\n            }\n            \n\n            let start_ts = new Date(this.agpDate[0]).getTime()/1000\n            let end_ts = new Date(this.agpDate[1]).getTime()/1000\n\n            let db_start =  await this.$db.myTable.orderBy(\"DataTs\").first()\n            let db_end = await this.$db.myTable.orderBy(\"DataTs\").last()\n            \n            let db_start_ts =  db_start.DataTs\n            let db_end_ts = db_end.DataTs\n            \n            let request_strat_ts = null\n            let request_end_ts = null\n\n\n            console.log('数据库时间戳',db_start_ts,db_end_ts)\n            console.log('数据时间戳',start_ts,end_ts)\n            if(start_ts<db_start_ts){   //向前请求云数据\n                request_strat_ts = start_ts\n                request_end_ts = db_start_ts\n            }\n            if(db_end_ts<end_ts){   //向后请求云数据\n                request_strat_ts = db_end_ts\n                request_end_ts = end_ts\n            }\n            if(db_end_ts>=end_ts&&start_ts>=db_start_ts){  //向数据库请求数据\n                request_strat_ts = start_ts\n                request_end_ts = end_ts\n            }\n            \n        },\n        // 订阅数据库查询数据\n        async getDbData() {\n            let start_ts = new Date(this.agpDate[0]).getTime()/1000\n            let end_ts = new Date(this.agpDate[1]).getTime()/1000\n            let arrayData = useObservable(\n                liveQuery(() => this.$db.myTable.where(\"DataTs\").between(start_ts,end_ts).toArray())\n            )\n            console.log(arrayData)\n\n        },\n        // 从云拉取数据\n        getClodData(){\n            let start_ts = new Date(this.agpDate[0]).getTime()/1000\n            let end_ts = new Date(this.agpDate[1]).getTime()/1000\n            getAgpData({start_ts:start_ts,end_ts:end_ts}).then(response => {\n\t\t\t\t\t\t\tif(response.code == 1000){\n                                let arrayData = response.data\n                                this.$db.myTable.bulkAdd(arrayData)\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tthis.$message({\n                                    type: 'error',\n                                    message: response.msg\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n            }).catch((res) => {\n                    this.$message({\n                        type: 'error',\n                        message: res.message\n                    });\n            })\n        }\n    }\n}\n</script>\n<style scoped>\n    .agp{\n        width:100%;\n        height:100%;\n    }\n    .agp-cont{\n        background:#fff;\n        padding:20px;\n        border-radius:10px;\n        box-shadow: 0px 2px 20px 0px #0000000D;\n    }\n    .agp-empty{\n        padding:60px;\n    }\n    .agp-empty-tips{\n        margin-bottom:40px;\n        font-size:20px;\n        color:#666;\n        font-weight: 400;\n        text-align: center;\n    }\n    .btn-upload{\n        display: inline-block;\n        vertical-align: middle;\n        margin-right:4px;\n        width:20px;\n        height:20px;\n    }\n    .agp-top{\n        display: flex;\n        display: -webkit-flex;\n        display:-webkit-inline-flex;\n        align-items: center;\n        justify-content: space-between;\n        width:100%;\n        margin-bottom:20px;\n    }\n    .report-agp-date{\n        line-height: 40px;\n        position: relative;\n        width:400px;\n        cursor: pointer;\n    }\n    .agp-date{\n        font-size:16px;\n        color:#000;\n        display:inline-block;\n    }\n    .agp-icon{\n        width:24px;\n        height:24px;\n        display:inline-block;\n        vertical-align: sub;\n        margin-left:10px;\n    }\n    .agp-fr-icon{\n        margin:0 20px;\n    }\n    .agp-picker{\n        position: absolute;\n        left:0;\n        top:0;\n        opacity: 0;\n    }\n    /* title */\n    .cgm-cont-title{\n        width:100%;\n        height:40px;\n        line-height: 40px;\n        padding-left:14px;\n        font-size:18px;\n        color:#000;\n        font-weight: 440;\n        background: rgba(50, 186, 192, 0.1);\n        border-radius:4px;\n        margin-bottom:20px;\n    }\n    /* 标准 */\n    .bg-data-item{\n        display: flex;\n        align-items: center;\n        margin-bottom:14px;\n        padding-left:14px;\n    }\n    .bg-data-label{\n        font-size:16px;\n        color:#666;\n    }\n     .bg-data-val{\n        font-size:16px;\n        color:#000;\n    }\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}