{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar _classPrivateMethodInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateMethodInitSpec.js\").default;\nvar _classPrivateFieldInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _checkInRHS = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/checkInRHS.js\").default;\nvar _assertClassBrand = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/assertClassBrand.js\").default;\nvar _classPrivateFieldSet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldSet2.js\").default;\nvar _classPrivateGetter = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateGetter.js\").default;\nvar _classPrivateFieldGet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldGet2.js\").default;\nrequire(\"core-js/modules/es.array.push.js\");\nvar __runInitializers = this && this.__runInitializers || function (thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n    value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\nvar __esDecorate = this && this.__esDecorate || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) {\n    if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n    return f;\n  }\n  var kind = contextIn.kind,\n    key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _,\n    done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n    var context = {};\n    for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n    for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n    context.addInitializer = function (f) {\n      if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n      extraInitializers.push(accept(f || null));\n    };\n    var result = (0, decorators[i])(kind === \"accessor\" ? {\n      get: descriptor.get,\n      set: descriptor.set\n    } : descriptor[key], context);\n    if (kind === \"accessor\") {\n      if (result === void 0) continue;\n      if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n      if (_ = accept(result.get)) descriptor.get = _;\n      if (_ = accept(result.set)) descriptor.set = _;\n      if (_ = accept(result.init)) initializers.unshift(_);\n    } else if (_ = accept(result)) {\n      if (kind === \"field\") initializers.unshift(_);else descriptor[key] = _;\n    }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\nvar __setFunctionName = this && this.__setFunctionName || function (f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", {\n    configurable: true,\n    value: prefix ? \"\".concat(prefix, \" \", name) : name\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScreenRecorder = void 0;\nconst child_process_1 = require(\"child_process\");\nconst stream_1 = require(\"stream\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst rxjs_js_1 = require(\"../../third_party/rxjs/rxjs.js\");\nconst CDPSession_js_1 = require(\"../api/CDPSession.js\");\nconst util_js_1 = require(\"../common/util.js\");\nconst decorators_js_1 = require(\"../util/decorators.js\");\nconst disposable_js_1 = require(\"../util/disposable.js\");\nconst CRF_VALUE = 30;\nconst DEFAULT_FPS = 30;\nconst debugFfmpeg = (0, debug_1.default)('puppeteer:ffmpeg');\n/**\n * @public\n */\nlet ScreenRecorder = ((_ref, _ScreenRecorder, _page, _process, _controller, _lastFrame, _ScreenRecorder_brand) => {\n  let _classSuper = stream_1.PassThrough;\n  let _instanceExtraInitializers = [];\n  let _private_writeFrame_decorators;\n  let _private_writeFrame_descriptor;\n  let _stop_decorators;\n  return _page = /*#__PURE__*/new WeakMap(), _process = /*#__PURE__*/new WeakMap(), _controller = /*#__PURE__*/new WeakMap(), _lastFrame = /*#__PURE__*/new WeakMap(), _ScreenRecorder_brand = /*#__PURE__*/new WeakSet(), _ref = (_private_writeFrame_decorators = [(0, decorators_js_1.guarded)()], _stop_decorators = [(0, decorators_js_1.guarded)()], disposable_js_1.asyncDisposeSymbol), (_ScreenRecorder = class ScreenRecorder extends _classSuper {\n    /**\n     * @internal\n     */\n    constructor(page, width, height, {\n      speed,\n      scale,\n      crop,\n      format: _format,\n      path\n    } = {}) {\n      super({\n        allowHalfOpen: false\n      });\n      _classPrivateMethodInitSpec(this, _ScreenRecorder_brand);\n      _classPrivateFieldInitSpec(this, _page, (__runInitializers(this, _instanceExtraInitializers), void 0));\n      _classPrivateFieldInitSpec(this, _process, void 0);\n      _classPrivateFieldInitSpec(this, _controller, new AbortController());\n      _classPrivateFieldInitSpec(this, _lastFrame, void 0);\n      path ??= 'ffmpeg';\n      // Tests if `ffmpeg` exists.\n      const {\n        error\n      } = (0, child_process_1.spawnSync)(path);\n      if (error) {\n        throw error;\n      }\n      _classPrivateFieldSet(_process, this, (0, child_process_1.spawn)(path,\n      // See https://trac.ffmpeg.org/wiki/Encode/VP9 for more information on flags.\n      [['-loglevel', 'error'],\n      // Reduces general buffering.\n      ['-avioflags', 'direct'],\n      // Reduces initial buffering while analyzing input fps and other stats.\n      ['-fpsprobesize', '0', '-probesize', '32', '-analyzeduration', '0', '-fflags', 'nobuffer'],\n      // Forces input to be read from standard input, and forces png input\n      // image format.\n      ['-f', 'image2pipe', '-c:v', 'png', '-i', 'pipe:0'],\n      // Overwrite output and no audio.\n      ['-y', '-an'],\n      // This drastically reduces stalling when cpu is overbooked. By default\n      // VP9 tries to use all available threads?\n      ['-threads', '1'],\n      // Specifies the frame rate we are giving ffmpeg.\n      ['-framerate', `${DEFAULT_FPS}`], // Specifies the encoding and format we are using.\n      _assertClassBrand(_ScreenRecorder_brand, this, _getFormatArgs).call(this, _format ?? 'webm'),\n      // Disable bitrate.\n      ['-b:v', '0'],\n      // Filters to ensure the images are piped correctly.\n      ['-vf', `${speed ? `setpts=${1 / speed}*PTS,` : ''}crop='min(${width},iw):min(${height},ih):0:0',pad=${width}:${height}:0:0${crop ? `,crop=${crop.width}:${crop.height}:${crop.x}:${crop.y}` : ''}${scale ? `,scale=iw*${scale}:-1` : ''}`], 'pipe:1'].flat(), {\n        stdio: ['pipe', 'pipe', 'pipe']\n      }));\n      _classPrivateFieldGet(_process, this).stdout.pipe(this);\n      _classPrivateFieldGet(_process, this).stderr.on('data', data => {\n        debugFfmpeg(data.toString('utf8'));\n      });\n      _classPrivateFieldSet(_page, this, page);\n      const {\n        client\n      } = _classPrivateFieldGet(_page, this).mainFrame();\n      client.once(CDPSession_js_1.CDPSessionEvent.Disconnected, () => {\n        void this.stop().catch(util_js_1.debugError);\n      });\n      _classPrivateFieldSet(_lastFrame, this, (0, rxjs_js_1.lastValueFrom)((0, util_js_1.fromEmitterEvent)(client, 'Page.screencastFrame').pipe((0, rxjs_js_1.tap)(event => {\n        void client.send('Page.screencastFrameAck', {\n          sessionId: event.sessionId\n        });\n      }), (0, rxjs_js_1.filter)(event => {\n        return event.metadata.timestamp !== undefined;\n      }), (0, rxjs_js_1.map)(event => {\n        return {\n          buffer: Buffer.from(event.data, 'base64'),\n          timestamp: event.metadata.timestamp\n        };\n      }), (0, rxjs_js_1.bufferCount)(2, 1), (0, rxjs_js_1.concatMap)(([{\n        timestamp: previousTimestamp,\n        buffer\n      }, {\n        timestamp\n      }]) => {\n        return (0, rxjs_js_1.from)(Array(Math.round(DEFAULT_FPS * Math.max(timestamp - previousTimestamp, 0))).fill(buffer));\n      }), (0, rxjs_js_1.map)(buffer => {\n        void _classPrivateGetter(_ScreenRecorder_brand, this, _get_writeFrame).call(this, buffer);\n        return [buffer, performance.now()];\n      }), (0, rxjs_js_1.takeUntil)((0, rxjs_js_1.fromEvent)(_classPrivateFieldGet(_controller, this).signal, 'abort'))), {\n        defaultValue: [Buffer.from([]), performance.now()]\n      }));\n    }\n    /**\n     * Stops the recorder.\n     *\n     * @public\n     */\n    async stop() {\n      if (_classPrivateFieldGet(_controller, this).signal.aborted) {\n        return;\n      }\n      // Stopping the screencast will flush the frames.\n      await _classPrivateFieldGet(_page, this)._stopScreencast().catch(util_js_1.debugError);\n      _classPrivateFieldGet(_controller, this).abort();\n      // Repeat the last frame for the remaining frames.\n      const [buffer, timestamp] = await _classPrivateFieldGet(_lastFrame, this);\n      await Promise.all(Array(Math.max(1, Math.round(DEFAULT_FPS * (performance.now() - timestamp) / 1000))).fill(buffer).map(_classPrivateGetter(_ScreenRecorder_brand, this, _get_writeFrame).bind(this)));\n      // Close stdin to notify FFmpeg we are done.\n      _classPrivateFieldGet(_process, this).stdin.end();\n      await new Promise(resolve => {\n        _classPrivateFieldGet(_process, this).once('close', resolve);\n      });\n    }\n    /**\n     * @internal\n     */\n    async [_ref]() {\n      await this.stop();\n    }\n  }, (() => {\n    const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n    __esDecorate(_ScreenRecorder, _private_writeFrame_descriptor = {\n      value: __setFunctionName(async function (buffer) {\n        const error = await new Promise(resolve => {\n          _classPrivateFieldGet(_process, this).stdin.write(buffer, resolve);\n        });\n        if (error) {\n          console.log(`ffmpeg failed to write: ${error.message}.`);\n        }\n      }, \"#writeFrame\")\n    }, _private_writeFrame_decorators, {\n      kind: \"method\",\n      name: \"#writeFrame\",\n      static: false,\n      private: true,\n      access: {\n        has: obj => _ScreenRecorder_brand.has(_checkInRHS(obj)),\n        get: obj => _classPrivateGetter(_ScreenRecorder_brand, obj, _get_writeFrame)\n      },\n      metadata: _metadata\n    }, null, _instanceExtraInitializers);\n    __esDecorate(_ScreenRecorder, null, _stop_decorators, {\n      kind: \"method\",\n      name: \"stop\",\n      static: false,\n      private: false,\n      access: {\n        has: obj => \"stop\" in obj,\n        get: obj => obj.stop\n      },\n      metadata: _metadata\n    }, null, _instanceExtraInitializers);\n    if (_metadata) Object.defineProperty(_ScreenRecorder, Symbol.metadata, {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _metadata\n    });\n  })(), _ScreenRecorder);\n  function _getFormatArgs(format) {\n    switch (format) {\n      case 'webm':\n        return [\n        // Sets the codec to use.\n        ['-c:v', 'vp9'],\n        // Sets the format\n        ['-f', 'webm'],\n        // Sets the quality. Lower the better.\n        ['-crf', `${CRF_VALUE}`],\n        // Sets the quality and how efficient the compression will be.\n        ['-deadline', 'realtime', '-cpu-used', '8']].flat();\n      case 'gif':\n        return [\n        // Sets the frame rate and uses a custom palette generated from the\n        // input.\n        ['-vf', 'fps=5,split[s0][s1];[s0]palettegen=stats_mode=diff[p];[s1][p]paletteuse'],\n        // Sets the format\n        ['-f', 'gif']].flat();\n    }\n  }\n  function _get_writeFrame(_this) {\n    return _private_writeFrame_descriptor.value;\n  }\n})();\nexports.ScreenRecorder = ScreenRecorder;","map":{"version":3,"names":["_classPrivateMethodInitSpec","require","default","_classPrivateFieldInitSpec","_checkInRHS","_assertClassBrand","_classPrivateFieldSet","_classPrivateGetter","_classPrivateFieldGet","child_process_1","stream_1","debug_1","__importDefault","rxjs_js_1","CDPSession_js_1","util_js_1","decorators_js_1","disposable_js_1","CRF_VALUE","DEFAULT_FPS","debugFfmpeg","ScreenRecorder","_ref","_ScreenRecorder","_page","_process","_controller","_lastFrame","_ScreenRecorder_brand","PassThrough","_private_writeFrame_decorators","guarded","_stop_decorators","asyncDisposeSymbol","_classSuper","constructor","page","width","height","speed","scale","crop","format","path","allowHalfOpen","__runInitializers","_instanceExtraInitializers","AbortController","error","spawnSync","spawn","_getFormatArgs","call","x","y","flat","stdio","stdout","pipe","stderr","on","data","toString","client","mainFrame","once","CDPSessionEvent","Disconnected","stop","catch","debugError","lastValueFrom","fromEmitterEvent","tap","event","send","sessionId","filter","metadata","timestamp","undefined","map","buffer","Buffer","from","bufferCount","concatMap","previousTimestamp","Array","Math","round","max","fill","_get_writeFrame","performance","now","takeUntil","fromEvent","signal","defaultValue","aborted","_stopScreencast","abort","Promise","all","bind","stdin","end","resolve","__esDecorate","_private_writeFrame_descriptor","value","__setFunctionName","write","console","log","message","kind","name","static","private","access","has","obj","get","_metadata","_this","exports"],"sources":["../../../../src/node/ScreenRecorder.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}