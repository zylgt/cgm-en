{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Empty from '@/views/components/Empty/empty';\nimport WeekAnalysis from '@/views/report/components/weekAnalysis';\nimport { formatDate, formatTime } from '@/utils/formatTime';\nimport { getAgpData } from '@/api/dataApi';\nimport { TIRUtils } from \"@/utils/algorithm/TIR\";\nimport { GlucoseUtils } from \"@/utils/algorithm/Glucose\";\nimport mixin from \"./mixin\";\nexport default {\n  data() {\n    return {};\n  },\n  mixins: [mixin],\n  components: {\n    WeekAnalysis,\n    Empty\n  },\n  mounted() {},\n  methods: {\n    // 分割成7天血糖\n    handelTemplateDay(data) {\n      let datArray = _.reverse(_.cloneDeep(data));\n      console.log(datArray);\n      let splitNum = this.dayDate < 7 ? this.dayDate * 24 * 60 : 7 * 24 * 60;\n      let weekData = _.chunk(datArray, splitNum);\n      let max = _.maxBy(datArray, 'Value').Value > 400 ? 400 : _.maxBy(datArray, 'Value').Value;\n      let weekList = new Array();\n      function handelDay(n) {\n        return formatDate(n.DataTs * 1000, 'mm月dd日');\n      }\n      weekData.forEach(item => {\n        let value = _.map(item, 'Value');\n        let values = _.flatten(value);\n        let handelValue = _.compact(values);\n        let DataTs = _.map(item, handelDay);\n        weekList.push({\n          day: _.uniq(DataTs),\n          week: formatDate(item[0].DataTs * 1000, 'WW'),\n          value: _.chunk(value, 60 * 24),\n          max: max,\n          tir: TIRUtils.getTIRResult(handelValue) ? (Number(TIRUtils.getTIRResult(handelValue).normalRate) * 100).toFixed(1) : '',\n          info: GlucoseUtils.calculateMeanCvGmi(handelValue)\n        });\n      });\n      this.list = weekList;\n      console.log(weekList, this.list, this.empty);\n    },\n    // 合并7天血糖\n    addWeek(data) {\n      let list = _.reverse(_.clone(data));\n      let newList = _.chunk(list, 7);\n      let newArr = [];\n      function handelDay(n) {\n        return formatDate(n.day, 'mm月dd日');\n      }\n      newList.forEach(item => {\n        let value = _.map(item, 'value');\n        let values = _.flatten(value);\n        let handelValue = _.compact(values);\n        let max = _.max(handelValue) > 400 ? 400 : _.max(handelValue);\n        newArr.push({\n          day: _.map(item, handelDay),\n          value: value,\n          max: max,\n          tir: TIRUtils.getTIRResult(handelValue) ? (Number(TIRUtils.getTIRResult(handelValue).normalRate) * 100).toFixed(1) : '',\n          info: GlucoseUtils.calculateMeanCvGmi(handelValue)\n        });\n      });\n      console.log(newArr, 'newarr');\n      // this.list = newArr\n    }\n  }\n};","map":{"version":3,"names":["Empty","WeekAnalysis","formatDate","formatTime","getAgpData","TIRUtils","GlucoseUtils","mixin","data","mixins","components","mounted","methods","handelTemplateDay","datArray","_","reverse","cloneDeep","console","log","splitNum","dayDate","weekData","chunk","max","maxBy","Value","weekList","Array","handelDay","n","DataTs","forEach","item","value","map","values","flatten","handelValue","compact","push","day","uniq","week","tir","getTIRResult","Number","normalRate","toFixed","info","calculateMeanCvGmi","list","empty","addWeek","clone","newList","newArr"],"sources":["src/views/report/weekReport.vue"],"sourcesContent":["<template>\n    <div>\n         <div class='agp-top' >\n            <div class='agp-top-fl' >\n                <div class='report-title'> {{$t('message.route.'+$route.meta.title)}}</div>\n                \n            </div>\n            <div class='agp-fr' >\n                <img src=\"~@/assets/image/printer.png\" alt=\"\" class='agp-icon' @click='print' >\n                <img src=\"~@/assets/image/down-icon.png\" alt=\"\" class='agp-icon' @click='handleExport' >\n                <img src=\"~@/assets/image/share.png\" alt=\"\" class='agp-icon agp-fr-icon'>\n                <el-button type=\"primary\" @click=\"upload\">\n                    <img src=\"~@/assets/image/btn-upload.png\" alt=\"\" class='btn-upload' >\n                    上传数据\n                </el-button>\n            </div>\n        </div>\n        <div class='report-agp-date' >\n                <img src=\"~@/assets/image/date-calendar.png\" alt=\"\" class='agp-icon' >\n                <div class='agp-date' >{{agpDate[0]}} — {{agpDate[1]}}（{{dayDate}}天）</div>\n                    <img src=\"~@/assets/image/select-icon.png\" alt=\"\" class='select-icon' >\n                <el-date-picker\n                    class='agp-picker'\n                    v-model=\"agpDate\"\n                    type=\"daterange\"\n                    align=\"right\"\n                    unlink-panels\n                    range-separator=\"至\"\n                    start-placeholder=\"开始日期\"\n                    end-placeholder=\"结束日期\"\n                    value-format=\"yyyy-MM-dd\"\n                    format=\"yyyy-MM-dd\"\n                    @change=\"changeDate\"\n                    :picker-options=\"pickerOptions\">\n                </el-date-picker>\n        </div>\n        <!-- 图表 -->\n        <Empty v-show='empty' style='height:600px;' />\n        <div class='week-bg-main'  v-show=\"!empty\" v-for='(item,index) in list' :key='index'>\n            <div  class='week-bg-title' >\n                <div class='week-bg-date' >{{item.day[0]}} - {{item.day[item.day.length-1]}}</div>\n                 <img src=\"~@/assets/image/reason-icon.png\" alt=\"\" class='reason-icon'>\n            </div>\n            <Empty v-show='!item.max' />\n            <WeekAnalysis :dataList='item' v-show='item.max' />\n        </div>\n         <!-- 下载打印弹窗 -->\n        <el-dialog  :visible.sync=\"dialogVisible\"  :show-close=\"false\" :title='dialogType==\"print\"?\"打印报告\":\"下载报告\"'\n         width=\"1060\" >\n            <div class='slot-popover'  id='popover'>\n                <div class='slot-popover-cont slot-popover-conts'>\n                    <div class='report-agp-date report-agp-dates' >\n                            <img src=\"~@/assets/image/date-calendar.png\" alt=\"\" class='agp-icon' >\n                            <div class='agp-date' >{{agpDate[0]}} — {{agpDate[1]}}（4天）</div>\n                            <img src=\"~@/assets/image/select-icon.png\" alt=\"\" class='select-icon' >\n                            <el-date-picker\n                                class='agp-picker'\n                                v-model=\"agpDate\"\n                                type=\"daterange\"\n                                align=\"right\"\n                                unlink-panels\n                                range-separator=\"至\"\n                                start-placeholder=\"开始日期\"\n                                end-placeholder=\"结束日期\"\n                                value-format=\"yyyy-MM-dd\"\n                                format=\"yyyy-MM-dd\"\n                                @change=\"changeDate\"\n                                :picker-options=\"pickerOptions\">\n                            </el-date-picker>\n                    </div>\n                    <div class='popover-cont-label' >\n                        <div class='popover-cont-label-label' v-if='dialogType==\"print\"'>请选择您想要打印的报告内容：</div>\n                        <div class='popover-cont-label-label' v-else>请选择您想要下载的报告内容：</div>\n                        <el-checkbox :indeterminate=\"isIndeterminate\" v-model=\"checkAll\" @change=\"handleCheckAllChange\">全选</el-checkbox>\n                    </div>\n                    <el-checkbox-group v-model=\"checkedDowns\" @change=\"handleCheckedCitiesChange\">\n                        <el-checkbox v-for=\"item in downloadList\" :label=\"item\" :key=\"item\">{{item}}</el-checkbox>\n                    </el-checkbox-group>\n                </div>\n                <div class='slot-popover-btn'>\n                    <el-button type=\"primary\" v-if='dialogType==\"print\"'>打印报告</el-button>\n                    <el-button type=\"primary\" v-else>下载报告</el-button>\n                </div>\n            </div>\n            <img src=\"~@/assets/image/close-icon.png\" alt=\"\" class='dialog-close' @click='dialogVisible=false' >\n        </el-dialog>\n    </div>\n</template>\n<script>\nimport Empty from '@/views/components/Empty/empty'\nimport WeekAnalysis from '@/views/report/components/weekAnalysis'\nimport {formatDate,formatTime} from '@/utils/formatTime'\nimport {getAgpData} from '@/api/dataApi'\nimport { TIRUtils } from \"@/utils/algorithm/TIR\";\nimport { GlucoseUtils } from \"@/utils/algorithm/Glucose\";\nimport mixin from \"./mixin\"\nexport default {\n    data(){\n        return{\n        }\n    },\n    mixins: [mixin],\n    components: {\n        WeekAnalysis,Empty\n    },\n    mounted(){\n\n    },\n    methods:{\n        // 分割成7天血糖\n        handelTemplateDay(data){\n            let datArray = _.reverse(_.cloneDeep(data))\n            console.log(datArray)\n            let splitNum = this.dayDate<7?this.dayDate*24*60:7*24*60\n            let weekData =  _.chunk(datArray,splitNum) ;\n            let max = _.maxBy(datArray,'Value').Value>400?400:_.maxBy(datArray,'Value').Value\n            let weekList = new Array()\n            function handelDay(n){\n                return formatDate(n.DataTs*1000,'mm月dd日')\n            }\n            \n            weekData.forEach(item=>{\n                let value = _.map(item, 'Value');\n                let values = _.flatten(value)\n                let handelValue = _.compact(values)\n                let DataTs= _.map(item, handelDay);\n                weekList.push({\n                    day: _.uniq(DataTs),\n                    week: formatDate(item[0].DataTs*1000,'WW'),\n                    value: _.chunk(value,60*24),\n                    max:max,\n                    tir:TIRUtils.getTIRResult(handelValue)?(Number(TIRUtils.getTIRResult(handelValue).normalRate)*100).toFixed(1):'',\n                    info:GlucoseUtils.calculateMeanCvGmi(handelValue)\n                })\n            })\n            this.list  = weekList\n            console.log(weekList,this.list,this.empty)\n        },\n        // 合并7天血糖\n        addWeek(data){\n            let list = _.reverse(_.clone(data))\n            let newList = _.chunk(list,7)\n            let newArr = []\n            function handelDay(n){\n                return formatDate(n.day,'mm月dd日')\n            }\n            newList.forEach(item=>{\n                let value = _.map(item,'value')\n                let values = _.flatten(value)\n                let handelValue = _.compact(values)\n                let max = _.max(handelValue)>400?400:_.max(handelValue)\n                newArr.push({\n                    day:_.map(item,handelDay),\n                    value:value,\n                    max:max,\n                    tir:TIRUtils.getTIRResult(handelValue)?(Number(TIRUtils.getTIRResult(handelValue).normalRate)*100).toFixed(1):'',\n                    info:GlucoseUtils.calculateMeanCvGmi(handelValue)\n                })\n            })\n            console.log(newArr,'newarr')\n            // this.list = newArr\n        }\n    }\n}\n</script>\n<style scoped>\n.week-bg-main{\n    width:100%;\n    height:605px;\n    background:#fff;\n    margin-bottom:20px;\n    border-radius:10px;\n    padding:20px;\n    box-sizing: border-box;\n}\n.week-bg-title{\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom:20px;\n}\n.week-bg-date{\n    font-size:var(--fontSize-max);\n    color:var(--color-black-100);\n    font-weight: 700;\n}\n.reason-icon{\n    width:24px;\n    height:24px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}