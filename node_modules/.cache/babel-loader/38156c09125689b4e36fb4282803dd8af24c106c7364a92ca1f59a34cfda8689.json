{"ast":null,"code":"import _classPrivateMethodInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateMethodInitSpec.js\";\nimport _classPrivateFieldInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _defineProperty from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classPrivateFieldGet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\nimport _assertClassBrand from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/assertClassBrand.js\";\nimport _classPrivateFieldSet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\n/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Browser as BrowserBase } from '../api/Browser.js';\nimport { CDPSessionEvent } from '../api/CDPSession.js';\nimport { CdpBrowserContext } from './BrowserContext.js';\nimport { ChromeTargetManager } from './ChromeTargetManager.js';\nimport { FirefoxTargetManager } from './FirefoxTargetManager.js';\nimport { DevToolsTarget, InitializationStatus, OtherTarget, PageTarget, WorkerTarget } from './Target.js';\n/**\n * @internal\n */\nvar _defaultViewport = /*#__PURE__*/new WeakMap();\nvar _process = /*#__PURE__*/new WeakMap();\nvar _connection = /*#__PURE__*/new WeakMap();\nvar _closeCallback = /*#__PURE__*/new WeakMap();\nvar _targetFilterCallback = /*#__PURE__*/new WeakMap();\nvar _isPageTargetCallback = /*#__PURE__*/new WeakMap();\nvar _defaultContext = /*#__PURE__*/new WeakMap();\nvar _contexts = /*#__PURE__*/new WeakMap();\nvar _targetManager = /*#__PURE__*/new WeakMap();\nvar _emitDisconnected = /*#__PURE__*/new WeakMap();\nvar _CdpBrowser_brand = /*#__PURE__*/new WeakSet();\nvar _createTarget = /*#__PURE__*/new WeakMap();\nvar _onAttachedToTarget = /*#__PURE__*/new WeakMap();\nvar _onDetachedFromTarget = /*#__PURE__*/new WeakMap();\nvar _onTargetChanged = /*#__PURE__*/new WeakMap();\nvar _onTargetDiscovered = /*#__PURE__*/new WeakMap();\nexport class CdpBrowser extends BrowserBase {\n  static async _create(product, connection, contextIds, ignoreHTTPSErrors, defaultViewport, process, closeCallback, targetFilterCallback, isPageTargetCallback, waitForInitiallyDiscoveredTargets = true) {\n    const browser = new CdpBrowser(product, connection, contextIds, defaultViewport, process, closeCallback, targetFilterCallback, isPageTargetCallback, waitForInitiallyDiscoveredTargets);\n    if (ignoreHTTPSErrors) {\n      await connection.send('Security.setIgnoreCertificateErrors', {\n        ignore: true\n      });\n    }\n    await browser._attach();\n    return browser;\n  }\n  constructor(product, connection, contextIds, defaultViewport, process, closeCallback, targetFilterCallback, _isPageTargetCallback2, waitForInitiallyDiscoveredTargets = true) {\n    super();\n    _classPrivateMethodInitSpec(this, _CdpBrowser_brand);\n    _defineProperty(this, \"protocol\", 'cdp');\n    _classPrivateFieldInitSpec(this, _defaultViewport, void 0);\n    _classPrivateFieldInitSpec(this, _process, void 0);\n    _classPrivateFieldInitSpec(this, _connection, void 0);\n    _classPrivateFieldInitSpec(this, _closeCallback, void 0);\n    _classPrivateFieldInitSpec(this, _targetFilterCallback, void 0);\n    _classPrivateFieldInitSpec(this, _isPageTargetCallback, void 0);\n    _classPrivateFieldInitSpec(this, _defaultContext, void 0);\n    _classPrivateFieldInitSpec(this, _contexts, new Map());\n    _classPrivateFieldInitSpec(this, _targetManager, void 0);\n    _classPrivateFieldInitSpec(this, _emitDisconnected, () => {\n      this.emit(\"disconnected\" /* BrowserEvent.Disconnected */, undefined);\n    });\n    _classPrivateFieldInitSpec(this, _createTarget, (targetInfo, session) => {\n      const {\n        browserContextId\n      } = targetInfo;\n      const context = browserContextId && _classPrivateFieldGet(_contexts, this).has(browserContextId) ? _classPrivateFieldGet(_contexts, this).get(browserContextId) : _classPrivateFieldGet(_defaultContext, this);\n      if (!context) {\n        throw new Error('Missing browser context');\n      }\n      const createSession = isAutoAttachEmulated => {\n        return _classPrivateFieldGet(_connection, this)._createSession(targetInfo, isAutoAttachEmulated);\n      };\n      const otherTarget = new OtherTarget(targetInfo, session, context, _classPrivateFieldGet(_targetManager, this), createSession);\n      if (targetInfo.url?.startsWith('devtools://')) {\n        return new DevToolsTarget(targetInfo, session, context, _classPrivateFieldGet(_targetManager, this), createSession, _classPrivateFieldGet(_defaultViewport, this) ?? null);\n      }\n      if (_classPrivateFieldGet(_isPageTargetCallback, this).call(this, otherTarget)) {\n        return new PageTarget(targetInfo, session, context, _classPrivateFieldGet(_targetManager, this), createSession, _classPrivateFieldGet(_defaultViewport, this) ?? null);\n      }\n      if (targetInfo.type === 'service_worker' || targetInfo.type === 'shared_worker') {\n        return new WorkerTarget(targetInfo, session, context, _classPrivateFieldGet(_targetManager, this), createSession);\n      }\n      return otherTarget;\n    });\n    _classPrivateFieldInitSpec(this, _onAttachedToTarget, async target => {\n      if (target._isTargetExposed() && (await target._initializedDeferred.valueOrThrow()) === InitializationStatus.SUCCESS) {\n        this.emit(\"targetcreated\" /* BrowserEvent.TargetCreated */, target);\n        target.browserContext().emit(\"targetcreated\" /* BrowserContextEvent.TargetCreated */, target);\n      }\n    });\n    _classPrivateFieldInitSpec(this, _onDetachedFromTarget, async target => {\n      target._initializedDeferred.resolve(InitializationStatus.ABORTED);\n      target._isClosedDeferred.resolve();\n      if (target._isTargetExposed() && (await target._initializedDeferred.valueOrThrow()) === InitializationStatus.SUCCESS) {\n        this.emit(\"targetdestroyed\" /* BrowserEvent.TargetDestroyed */, target);\n        target.browserContext().emit(\"targetdestroyed\" /* BrowserContextEvent.TargetDestroyed */, target);\n      }\n    });\n    _classPrivateFieldInitSpec(this, _onTargetChanged, ({\n      target\n    }) => {\n      this.emit(\"targetchanged\" /* BrowserEvent.TargetChanged */, target);\n      target.browserContext().emit(\"targetchanged\" /* BrowserContextEvent.TargetChanged */, target);\n    });\n    _classPrivateFieldInitSpec(this, _onTargetDiscovered, targetInfo => {\n      this.emit(\"targetdiscovered\" /* BrowserEvent.TargetDiscovered */, targetInfo);\n    });\n    product = product || 'chrome';\n    _classPrivateFieldSet(_defaultViewport, this, defaultViewport);\n    _classPrivateFieldSet(_process, this, process);\n    _classPrivateFieldSet(_connection, this, connection);\n    _classPrivateFieldSet(_closeCallback, this, closeCallback || (() => {}));\n    _classPrivateFieldSet(_targetFilterCallback, this, targetFilterCallback || (() => {\n      return true;\n    }));\n    _assertClassBrand(_CdpBrowser_brand, this, _setIsPageTargetCallback).call(this, _isPageTargetCallback2);\n    if (product === 'firefox') {\n      _classPrivateFieldSet(_targetManager, this, new FirefoxTargetManager(connection, _classPrivateFieldGet(_createTarget, this), _classPrivateFieldGet(_targetFilterCallback, this)));\n    } else {\n      _classPrivateFieldSet(_targetManager, this, new ChromeTargetManager(connection, _classPrivateFieldGet(_createTarget, this), _classPrivateFieldGet(_targetFilterCallback, this), waitForInitiallyDiscoveredTargets));\n    }\n    _classPrivateFieldSet(_defaultContext, this, new CdpBrowserContext(_classPrivateFieldGet(_connection, this), this));\n    for (const contextId of contextIds) {\n      _classPrivateFieldGet(_contexts, this).set(contextId, new CdpBrowserContext(_classPrivateFieldGet(_connection, this), this, contextId));\n    }\n  }\n  async _attach() {\n    _classPrivateFieldGet(_connection, this).on(CDPSessionEvent.Disconnected, _classPrivateFieldGet(_emitDisconnected, this));\n    _classPrivateFieldGet(_targetManager, this).on(\"targetAvailable\" /* TargetManagerEvent.TargetAvailable */, _classPrivateFieldGet(_onAttachedToTarget, this));\n    _classPrivateFieldGet(_targetManager, this).on(\"targetGone\" /* TargetManagerEvent.TargetGone */, _classPrivateFieldGet(_onDetachedFromTarget, this));\n    _classPrivateFieldGet(_targetManager, this).on(\"targetChanged\" /* TargetManagerEvent.TargetChanged */, _classPrivateFieldGet(_onTargetChanged, this));\n    _classPrivateFieldGet(_targetManager, this).on(\"targetDiscovered\" /* TargetManagerEvent.TargetDiscovered */, _classPrivateFieldGet(_onTargetDiscovered, this));\n    await _classPrivateFieldGet(_targetManager, this).initialize();\n  }\n  _detach() {\n    _classPrivateFieldGet(_connection, this).off(CDPSessionEvent.Disconnected, _classPrivateFieldGet(_emitDisconnected, this));\n    _classPrivateFieldGet(_targetManager, this).off(\"targetAvailable\" /* TargetManagerEvent.TargetAvailable */, _classPrivateFieldGet(_onAttachedToTarget, this));\n    _classPrivateFieldGet(_targetManager, this).off(\"targetGone\" /* TargetManagerEvent.TargetGone */, _classPrivateFieldGet(_onDetachedFromTarget, this));\n    _classPrivateFieldGet(_targetManager, this).off(\"targetChanged\" /* TargetManagerEvent.TargetChanged */, _classPrivateFieldGet(_onTargetChanged, this));\n    _classPrivateFieldGet(_targetManager, this).off(\"targetDiscovered\" /* TargetManagerEvent.TargetDiscovered */, _classPrivateFieldGet(_onTargetDiscovered, this));\n  }\n  process() {\n    return _classPrivateFieldGet(_process, this) ?? null;\n  }\n  _targetManager() {\n    return _classPrivateFieldGet(_targetManager, this);\n  }\n  _getIsPageTargetCallback() {\n    return _classPrivateFieldGet(_isPageTargetCallback, this);\n  }\n  async createBrowserContext(options = {}) {\n    const {\n      proxyServer,\n      proxyBypassList\n    } = options;\n    const {\n      browserContextId\n    } = await _classPrivateFieldGet(_connection, this).send('Target.createBrowserContext', {\n      proxyServer,\n      proxyBypassList: proxyBypassList && proxyBypassList.join(',')\n    });\n    const context = new CdpBrowserContext(_classPrivateFieldGet(_connection, this), this, browserContextId);\n    _classPrivateFieldGet(_contexts, this).set(browserContextId, context);\n    return context;\n  }\n  browserContexts() {\n    return [_classPrivateFieldGet(_defaultContext, this), ...Array.from(_classPrivateFieldGet(_contexts, this).values())];\n  }\n  defaultBrowserContext() {\n    return _classPrivateFieldGet(_defaultContext, this);\n  }\n  async _disposeContext(contextId) {\n    if (!contextId) {\n      return;\n    }\n    await _classPrivateFieldGet(_connection, this).send('Target.disposeBrowserContext', {\n      browserContextId: contextId\n    });\n    _classPrivateFieldGet(_contexts, this).delete(contextId);\n  }\n  wsEndpoint() {\n    return _classPrivateFieldGet(_connection, this).url();\n  }\n  async newPage() {\n    return await _classPrivateFieldGet(_defaultContext, this).newPage();\n  }\n  async _createPageInContext(contextId) {\n    const {\n      targetId\n    } = await _classPrivateFieldGet(_connection, this).send('Target.createTarget', {\n      url: 'about:blank',\n      browserContextId: contextId || undefined\n    });\n    const target = await this.waitForTarget(t => {\n      return t._targetId === targetId;\n    });\n    if (!target) {\n      throw new Error(`Missing target for page (id = ${targetId})`);\n    }\n    const initialized = (await target._initializedDeferred.valueOrThrow()) === InitializationStatus.SUCCESS;\n    if (!initialized) {\n      throw new Error(`Failed to create target for page (id = ${targetId})`);\n    }\n    const page = await target.page();\n    if (!page) {\n      throw new Error(`Failed to create a page for context (id = ${contextId})`);\n    }\n    return page;\n  }\n  targets() {\n    return Array.from(_classPrivateFieldGet(_targetManager, this).getAvailableTargets().values()).filter(target => {\n      return target._isTargetExposed() && target._initializedDeferred.value() === InitializationStatus.SUCCESS;\n    });\n  }\n  target() {\n    const browserTarget = this.targets().find(target => {\n      return target.type() === 'browser';\n    });\n    if (!browserTarget) {\n      throw new Error('Browser target is not found');\n    }\n    return browserTarget;\n  }\n  async version() {\n    const version = await _assertClassBrand(_CdpBrowser_brand, this, _getVersion).call(this);\n    return version.product;\n  }\n  async userAgent() {\n    const version = await _assertClassBrand(_CdpBrowser_brand, this, _getVersion).call(this);\n    return version.userAgent;\n  }\n  async close() {\n    await _classPrivateFieldGet(_closeCallback, this).call(null);\n    await this.disconnect();\n  }\n  disconnect() {\n    _classPrivateFieldGet(_targetManager, this).dispose();\n    _classPrivateFieldGet(_connection, this).dispose();\n    this._detach();\n    return Promise.resolve();\n  }\n  get connected() {\n    return !_classPrivateFieldGet(_connection, this)._closed;\n  }\n  get debugInfo() {\n    return {\n      pendingProtocolErrors: _classPrivateFieldGet(_connection, this).getPendingProtocolErrors()\n    };\n  }\n}\nfunction _setIsPageTargetCallback(isPageTargetCallback) {\n  _classPrivateFieldSet(_isPageTargetCallback, this, isPageTargetCallback || (target => {\n    return target.type() === 'page' || target.type() === 'background_page' || target.type() === 'webview';\n  }));\n}\nfunction _getVersion() {\n  return _classPrivateFieldGet(_connection, this).send('Browser.getVersion');\n}","map":{"version":3,"names":["Browser","BrowserBase","CDPSessionEvent","CdpBrowserContext","ChromeTargetManager","FirefoxTargetManager","DevToolsTarget","InitializationStatus","OtherTarget","PageTarget","WorkerTarget","_defaultViewport","WeakMap","_process","_connection","_closeCallback","_targetFilterCallback","_isPageTargetCallback","_defaultContext","_contexts","_targetManager","_emitDisconnected","_CdpBrowser_brand","WeakSet","_createTarget","_onAttachedToTarget","_onDetachedFromTarget","_onTargetChanged","_onTargetDiscovered","CdpBrowser","_create","product","connection","contextIds","ignoreHTTPSErrors","defaultViewport","process","closeCallback","targetFilterCallback","isPageTargetCallback","waitForInitiallyDiscoveredTargets","browser","send","ignore","_attach","constructor","_classPrivateMethodInitSpec","_defineProperty","_classPrivateFieldInitSpec","Map","emit","undefined","targetInfo","session","browserContextId","context","_classPrivateFieldGet","has","get","Error","createSession","isAutoAttachEmulated","_createSession","otherTarget","url","startsWith","call","type","target","_isTargetExposed","_initializedDeferred","valueOrThrow","SUCCESS","browserContext","resolve","ABORTED","_isClosedDeferred","_classPrivateFieldSet","_assertClassBrand","_setIsPageTargetCallback","contextId","set","on","Disconnected","initialize","_detach","off","_getIsPageTargetCallback","createBrowserContext","options","proxyServer","proxyBypassList","join","browserContexts","Array","from","values","defaultBrowserContext","_disposeContext","delete","wsEndpoint","newPage","_createPageInContext","targetId","waitForTarget","t","_targetId","initialized","page","targets","getAvailableTargets","filter","value","browserTarget","find","version","_getVersion","userAgent","close","disconnect","dispose","Promise","connected","_closed","debugInfo","pendingProtocolErrors","getPendingProtocolErrors"],"sources":["../../../../src/cdp/Browser.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}