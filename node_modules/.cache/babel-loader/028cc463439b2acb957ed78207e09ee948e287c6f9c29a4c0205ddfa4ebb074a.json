{"ast":null,"code":"\"use strict\";\n\nvar _classPrivateMethodInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateMethodInitSpec.js\").default;\nvar _classPrivateFieldInitSpec = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _classPrivateFieldGet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldGet2.js\").default;\nvar _assertClassBrand = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/assertClassBrand.js\").default;\nvar _classPrivateFieldSet = require(\"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/classPrivateFieldSet2.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StorageProcessor = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst assert_js_1 = require(\"../../../utils/assert.js\");\nconst log_js_1 = require(\"../../../utils/log.js\");\nconst NetworkProcessor_js_1 = require(\"../network/NetworkProcessor.js\");\nconst NetworkUtils_js_1 = require(\"../network/NetworkUtils.js\");\n/**\n * Responsible for handling the `storage` domain.\n */\nvar _browserCdpClient = /*#__PURE__*/new WeakMap();\nvar _browsingContextStorage = /*#__PURE__*/new WeakMap();\nvar _logger = /*#__PURE__*/new WeakMap();\nvar _StorageProcessor_brand = /*#__PURE__*/new WeakSet();\nclass StorageProcessor {\n  constructor(browserCdpClient, browsingContextStorage, logger) {\n    _classPrivateMethodInitSpec(this, _StorageProcessor_brand);\n    _classPrivateFieldInitSpec(this, _browserCdpClient, void 0);\n    _classPrivateFieldInitSpec(this, _browsingContextStorage, void 0);\n    _classPrivateFieldInitSpec(this, _logger, void 0);\n    _classPrivateFieldSet(_browsingContextStorage, this, browsingContextStorage);\n    _classPrivateFieldSet(_browserCdpClient, this, browserCdpClient);\n    _classPrivateFieldSet(_logger, this, logger);\n  }\n  async deleteCookies(params) {\n    const partitionKey = _assertClassBrand(_StorageProcessor_brand, this, _expandStoragePartitionSpec).call(this, params.partition);\n    let cdpResponse;\n    try {\n      cdpResponse = await _classPrivateFieldGet(_browserCdpClient, this).sendCommand('Storage.getCookies', {\n        browserContextId: _assertClassBrand(_StorageProcessor_brand, this, _getCdpBrowserContextId).call(this, partitionKey)\n      });\n    } catch (err) {\n      if (_assertClassBrand(_StorageProcessor_brand, this, _isNoSuchUserContextError).call(this, err)) {\n        // If the user context is not found, special error is thrown.\n        throw new protocol_js_1.NoSuchUserContextException(err.message);\n      }\n      throw err;\n    }\n    const cdpCookiesToDelete = cdpResponse.cookies.filter(\n    // CDP's partition key is the source origin. If the request specifies the\n    // `sourceOrigin` partition key, only cookies with the requested source origin\n    // are returned.\n    c => partitionKey.sourceOrigin === undefined || c.partitionKey === partitionKey.sourceOrigin).filter(cdpCookie => {\n      const bidiCookie = (0, NetworkUtils_js_1.cdpToBiDiCookie)(cdpCookie);\n      return _assertClassBrand(_StorageProcessor_brand, this, _matchCookie).call(this, bidiCookie, params.filter);\n    }).map(cookie => ({\n      ...cookie,\n      // Set expiry to pass date to delete the cookie.\n      expires: 1\n    }));\n    await _classPrivateFieldGet(_browserCdpClient, this).sendCommand('Storage.setCookies', {\n      cookies: cdpCookiesToDelete,\n      browserContextId: _assertClassBrand(_StorageProcessor_brand, this, _getCdpBrowserContextId).call(this, partitionKey)\n    });\n    return {\n      partitionKey\n    };\n  }\n  async getCookies(params) {\n    const partitionKey = _assertClassBrand(_StorageProcessor_brand, this, _expandStoragePartitionSpec).call(this, params.partition);\n    let cdpResponse;\n    try {\n      cdpResponse = await _classPrivateFieldGet(_browserCdpClient, this).sendCommand('Storage.getCookies', {\n        browserContextId: _assertClassBrand(_StorageProcessor_brand, this, _getCdpBrowserContextId).call(this, partitionKey)\n      });\n    } catch (err) {\n      if (_assertClassBrand(_StorageProcessor_brand, this, _isNoSuchUserContextError).call(this, err)) {\n        // If the user context is not found, special error is thrown.\n        throw new protocol_js_1.NoSuchUserContextException(err.message);\n      }\n      throw err;\n    }\n    const filteredBiDiCookies = cdpResponse.cookies.filter(\n    // CDP's partition key is the source origin. If the request specifies the\n    // `sourceOrigin` partition key, only cookies with the requested source origin\n    // are returned.\n    c => partitionKey.sourceOrigin === undefined || c.partitionKey === partitionKey.sourceOrigin).map(c => (0, NetworkUtils_js_1.cdpToBiDiCookie)(c)).filter(c => _assertClassBrand(_StorageProcessor_brand, this, _matchCookie).call(this, c, params.filter));\n    return {\n      cookies: filteredBiDiCookies,\n      partitionKey\n    };\n  }\n  async setCookie(params) {\n    const partitionKey = _assertClassBrand(_StorageProcessor_brand, this, _expandStoragePartitionSpec).call(this, params.partition);\n    const cdpCookie = (0, NetworkUtils_js_1.bidiToCdpCookie)(params, partitionKey);\n    try {\n      await _classPrivateFieldGet(_browserCdpClient, this).sendCommand('Storage.setCookies', {\n        cookies: [cdpCookie],\n        browserContextId: _assertClassBrand(_StorageProcessor_brand, this, _getCdpBrowserContextId).call(this, partitionKey)\n      });\n    } catch (err) {\n      if (_assertClassBrand(_StorageProcessor_brand, this, _isNoSuchUserContextError).call(this, err)) {\n        // If the user context is not found, special error is thrown.\n        throw new protocol_js_1.NoSuchUserContextException(err.message);\n      }\n      _classPrivateFieldGet(_logger, this)?.call(this, log_js_1.LogType.debugError, err);\n      throw new protocol_js_1.UnableToSetCookieException(err.toString());\n    }\n    return {\n      partitionKey\n    };\n  }\n}\nfunction _isNoSuchUserContextError(err) {\n  // Heuristic to detect if the user context is not found.\n  // See https://source.chromium.org/chromium/chromium/src/+/main:content/browser/devtools/protocol/browser_handler.cc;drc=a56154dd81e4679712422ac6eed2c9581cb51ab0;l=314\n  return err.message?.startsWith('Failed to find browser context for id');\n}\nfunction _getCdpBrowserContextId(partitionKey) {\n  return partitionKey.userContext === 'default' ? undefined : partitionKey.userContext;\n}\nfunction _expandStoragePartitionSpecByBrowsingContext(descriptor) {\n  const browsingContextId = descriptor.context;\n  const browsingContext = _classPrivateFieldGet(_browsingContextStorage, this).getContext(browsingContextId);\n  // https://w3c.github.io/webdriver-bidi/#associated-storage-partition.\n  // Each browsing context also has an associated storage partition, which is the\n  // storage partition it uses to persist data. In Chromium it's a `BrowserContext`\n  // which maps to BiDi `UserContext`.\n  return {\n    userContext: browsingContext.userContext\n  };\n}\nfunction _expandStoragePartitionSpecByStorageKey(descriptor) {\n  const unsupportedPartitionKeys = new Map();\n  let sourceOrigin = descriptor.sourceOrigin;\n  if (sourceOrigin !== undefined) {\n    const url = NetworkProcessor_js_1.NetworkProcessor.parseUrlString(sourceOrigin);\n    if (url.origin === 'null') {\n      // Origin `null` is a special case for local pages.\n      sourceOrigin = url.origin;\n    } else {\n      // Port is not supported in CDP Cookie's `partitionKey`, so it should be stripped\n      // from the requested source origin.\n      sourceOrigin = `${url.protocol}//${url.hostname}`;\n    }\n  }\n  for (const [key, value] of Object.entries(descriptor)) {\n    if (key !== undefined && value !== undefined && !['type', 'sourceOrigin', 'userContext'].includes(key)) {\n      unsupportedPartitionKeys.set(key, value);\n    }\n  }\n  if (unsupportedPartitionKeys.size > 0) {\n    _classPrivateFieldGet(_logger, this)?.call(this, log_js_1.LogType.debugInfo, `Unsupported partition keys: ${JSON.stringify(Object.fromEntries(unsupportedPartitionKeys))}`);\n  }\n  // Set `userContext` to `default` if not provided, as it's required in Chromium.\n  const userContext = descriptor.userContext ?? 'default';\n  return {\n    userContext,\n    ...(sourceOrigin === undefined ? {} : {\n      sourceOrigin\n    })\n  };\n}\nfunction _expandStoragePartitionSpec(partitionSpec) {\n  if (partitionSpec === undefined) {\n    // `userContext` is required in Chromium.\n    return {\n      userContext: 'default'\n    };\n  }\n  if (partitionSpec.type === 'context') {\n    return _assertClassBrand(_StorageProcessor_brand, this, _expandStoragePartitionSpecByBrowsingContext).call(this, partitionSpec);\n  }\n  (0, assert_js_1.assert)(partitionSpec.type === 'storageKey', 'Unknown partition type');\n  // Partition spec is a storage partition.\n  // Let partition key be partition spec.\n  return _assertClassBrand(_StorageProcessor_brand, this, _expandStoragePartitionSpecByStorageKey).call(this, partitionSpec);\n}\nfunction _matchCookie(cookie, filter) {\n  if (filter === undefined) {\n    return true;\n  }\n  return (filter.domain === undefined || filter.domain === cookie.domain) && (filter.name === undefined || filter.name === cookie.name) && (\n  // `value` contains fields `type` and `value`.\n  filter.value === undefined || (0, NetworkUtils_js_1.deserializeByteValue)(filter.value) === (0, NetworkUtils_js_1.deserializeByteValue)(cookie.value)) && (filter.path === undefined || filter.path === cookie.path) && (filter.size === undefined || filter.size === cookie.size) && (filter.httpOnly === undefined || filter.httpOnly === cookie.httpOnly) && (filter.secure === undefined || filter.secure === cookie.secure) && (filter.sameSite === undefined || filter.sameSite === cookie.sameSite) && (filter.expiry === undefined || filter.expiry === cookie.expiry);\n}\nexports.StorageProcessor = StorageProcessor;","map":{"version":3,"names":["protocol_js_1","require","assert_js_1","log_js_1","NetworkProcessor_js_1","NetworkUtils_js_1","_browserCdpClient","WeakMap","_browsingContextStorage","_logger","_StorageProcessor_brand","WeakSet","StorageProcessor","constructor","browserCdpClient","browsingContextStorage","logger","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_classPrivateFieldSet","deleteCookies","params","partitionKey","_assertClassBrand","_expandStoragePartitionSpec","call","partition","cdpResponse","_classPrivateFieldGet","sendCommand","browserContextId","_getCdpBrowserContextId","err","_isNoSuchUserContextError","NoSuchUserContextException","message","cdpCookiesToDelete","cookies","filter","c","sourceOrigin","undefined","cdpCookie","bidiCookie","cdpToBiDiCookie","_matchCookie","map","cookie","expires","getCookies","filteredBiDiCookies","setCookie","bidiToCdpCookie","LogType","debugError","UnableToSetCookieException","toString","startsWith","userContext","_expandStoragePartitionSpecByBrowsingContext","descriptor","browsingContextId","context","browsingContext","getContext","_expandStoragePartitionSpecByStorageKey","unsupportedPartitionKeys","Map","url","NetworkProcessor","parseUrlString","origin","protocol","hostname","key","value","Object","entries","includes","set","size","debugInfo","JSON","stringify","fromEntries","partitionSpec","type","assert","domain","name","deserializeByteValue","path","httpOnly","secure","sameSite","expiry","exports"],"sources":["../../../../../src/bidiMapper/modules/storage/StorageProcessor.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}