{"ast":null,"code":"export default {\n  data() {\n    return {\n      loginForm: {\n        name: '',\n        password: '',\n        rememberMe: false\n      },\n      loading: false,\n      loginRules: {\n        username: [{\n          required: true,\n          trigger: \"blur\",\n          message: \" \"\n        }],\n        password: [{\n          required: true,\n          trigger: \"blur\",\n          message: \" \"\n        }]\n      }\n    };\n  },\n  methods: {\n    handleLogin() {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          if (this.loginForm.rememberMe) {\n            Cookies.set(\"name\", this.loginForm.name, {\n              expires: 30\n            });\n            Cookies.set(\"password\", encrypt(this.loginForm.password), {\n              expires: 30\n            });\n            Cookies.set(\"rememberMe\", this.loginForm.rememberMe, {\n              expires: 30\n            });\n          } else {\n            Cookies.remove(\"username\");\n            Cookies.remove(\"password\");\n            Cookies.remove(\"rememberMe\");\n          }\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","loginForm","name","password","rememberMe","loading","loginRules","username","required","trigger","message","methods","handleLogin","$refs","validate","valid","Cookies","set","expires","encrypt","remove"],"sources":["src/views/login/login.vue"],"sourcesContent":["<template>\n        <div class=\"login\">\n            <div class='login-box' >\n                <div  class='title' >{{ $t(\"message.themeTitle\") }}</div>\n                <div  class='login-form'>\n                    <el-form ref=\"form\" :model=\"loginForm\"  :rules=\"loginRules\">\n                        <el-form-item  prop='name'>\n                            <el-input v-model=\"loginForm.name\"\n                                prefix-icon=\"el-icon-user\"\n                                :placeholder=\"$t('message.login.placeholderName')\"></el-input>\n                        </el-form-item>\n                        <el-form-item  prop='password'>\n                            <el-input v-model=\"loginForm.password\"\n                                :placeholder=\"$t('message.login.placeholderPwd')\"\n                                prefix-icon=\"el-icon-lock\"></el-input>\n                        </el-form-item>\n                        <el-form-item >\n                            <el-checkbox v-model=\"loginForm.rememberMe\">\n                                {{ $t(\"message.login.rememberPwdText\") }}\n                            </el-checkbox>\n                        </el-form-item>\n                        <el-form-item >\n                            <el-button :loading=\"loading\" class=\"login-submit\" style=\"width: 100%\" type=\"primary\" @click.native.prevent=\"handleLogin\">\n                                <span v-if=\"!loading\">{{ $t(\"message.login.loginBtnText\") }}</span>\n                                <span v-else>{{ $t(\"message.login.loginInBtnText\") }}</span>\n                            </el-button>\n                        </el-form-item>\n                    </el-form>\n                </div>\n            </div>\n        </div>\n</template>\n\n<script>\nexport default {\n    data(){\n        return {\n            loginForm:{\n                name:'',\n                password:'',\n                rememberMe:false\n            },\n            loading:false,\n            loginRules: {\n                username: [{ required: true, trigger: \"blur\", message: \" \" }],\n                password: [{ required: true, trigger: \"blur\", message: \" \" }]\n            },\n        }\n    },\n    methods:{\n        handleLogin(){\n             this.$refs.loginForm.validate((valid) => {\n                if(valid){\n                    this.loading = true\n                    if (this.loginForm.rememberMe) {\n                        Cookies.set(\"name\", this.loginForm.name, { expires: 30 })\n                        Cookies.set(\"password\", encrypt(this.loginForm.password), { expires: 30 })\n                        Cookies.set(\"rememberMe\", this.loginForm.rememberMe, { expires: 30 })\n                    } else {\n                        Cookies.remove(\"username\")\n                        Cookies.remove(\"password\")\n                        Cookies.remove(\"rememberMe\")\n                    }\n                }\n             })\n        }\n    }\n}\n</script>\n\n<style >\n    .login{\n        height: 100%;\n        width:100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background: url(\"/src/assets/image/bottomRighht.png\") no-repeat;\n        background-size: cover;\n    }\n    .login-box{\n        padding:80px;\n        background:rgba(255,255,255,0.9);\n        border-radius:14px;\n        width:480px;\n        box-sizing: border-box;\n    }\n    .title{\n        text-align: center;\n        margin-bottom:50px;\n        font-size:28px;\n        font-weight: bold;\n        color:#333;\n    }\n    .el-input__inner{\n        background: none;\n    }\n</style>"],"mappings":"AAkCA;EACAA,KAAA;IACA;MACAC,SAAA;QACAC,IAAA;QACAC,QAAA;QACAC,UAAA;MACA;MACAC,OAAA;MACAC,UAAA;QACAC,QAAA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAP,QAAA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,YAAA;MACA,KAAAC,KAAA,CAAAZ,SAAA,CAAAa,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAV,OAAA;UACA,SAAAJ,SAAA,CAAAG,UAAA;YACAY,OAAA,CAAAC,GAAA,cAAAhB,SAAA,CAAAC,IAAA;cAAAgB,OAAA;YAAA;YACAF,OAAA,CAAAC,GAAA,aAAAE,OAAA,MAAAlB,SAAA,CAAAE,QAAA;cAAAe,OAAA;YAAA;YACAF,OAAA,CAAAC,GAAA,oBAAAhB,SAAA,CAAAG,UAAA;cAAAc,OAAA;YAAA;UACA;YACAF,OAAA,CAAAI,MAAA;YACAJ,OAAA,CAAAI,MAAA;YACAJ,OAAA,CAAAI,MAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}