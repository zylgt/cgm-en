{"ast":null,"code":"import _classPrivateFieldInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _defineProperty from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classPrivateFieldGet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\nimport _classPrivateFieldSet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\n/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport fs from 'fs';\nimport os from 'os';\nimport path from 'path';\nimport debug from 'debug';\nimport { Browser, executablePathByBrowser, getVersionComparator } from './browser-data/browser-data.js';\nimport { detectBrowserPlatform } from './detectPlatform.js';\nconst debugCache = debug('puppeteer:browsers:cache');\n/**\n * @public\n */\nvar _cache = /*#__PURE__*/new WeakMap();\nexport class InstalledBrowser {\n  /**\n   * @internal\n   */\n  constructor(cache, browser, buildId, platform) {\n    _defineProperty(this, \"browser\", void 0);\n    _defineProperty(this, \"buildId\", void 0);\n    _defineProperty(this, \"platform\", void 0);\n    _defineProperty(this, \"executablePath\", void 0);\n    _classPrivateFieldInitSpec(this, _cache, void 0);\n    _classPrivateFieldSet(_cache, this, cache);\n    this.browser = browser;\n    this.buildId = buildId;\n    this.platform = platform;\n    this.executablePath = cache.computeExecutablePath({\n      browser,\n      buildId,\n      platform\n    });\n  }\n  /**\n   * Path to the root of the installation folder. Use\n   * {@link computeExecutablePath} to get the path to the executable binary.\n   */\n  get path() {\n    return _classPrivateFieldGet(_cache, this).installationDir(this.browser, this.platform, this.buildId);\n  }\n  readMetadata() {\n    return _classPrivateFieldGet(_cache, this).readMetadata(this.browser);\n  }\n  writeMetadata(metadata) {\n    _classPrivateFieldGet(_cache, this).writeMetadata(this.browser, metadata);\n  }\n}\n/**\n * The cache used by Puppeteer relies on the following structure:\n *\n * - rootDir\n *   -- <browser1> | browserRoot(browser1)\n *   ---- <platform>-<buildId> | installationDir()\n *   ------ the browser-platform-buildId\n *   ------ specific structure.\n *   -- <browser2> | browserRoot(browser2)\n *   ---- <platform>-<buildId> | installationDir()\n *   ------ the browser-platform-buildId\n *   ------ specific structure.\n *   @internal\n */\nvar _rootDir = /*#__PURE__*/new WeakMap();\nexport class Cache {\n  constructor(rootDir) {\n    _classPrivateFieldInitSpec(this, _rootDir, void 0);\n    _classPrivateFieldSet(_rootDir, this, rootDir);\n  }\n  /**\n   * @internal\n   */\n  get rootDir() {\n    return _classPrivateFieldGet(_rootDir, this);\n  }\n  browserRoot(browser) {\n    return path.join(_classPrivateFieldGet(_rootDir, this), browser);\n  }\n  metadataFile(browser) {\n    return path.join(this.browserRoot(browser), '.metadata');\n  }\n  readMetadata(browser) {\n    const metatadaPath = this.metadataFile(browser);\n    if (!fs.existsSync(metatadaPath)) {\n      return {\n        aliases: {}\n      };\n    }\n    // TODO: add type-safe parsing.\n    const data = JSON.parse(fs.readFileSync(metatadaPath, 'utf8'));\n    if (typeof data !== 'object') {\n      throw new Error('.metadata is not an object');\n    }\n    return data;\n  }\n  writeMetadata(browser, metadata) {\n    const metatadaPath = this.metadataFile(browser);\n    fs.mkdirSync(path.dirname(metatadaPath), {\n      recursive: true\n    });\n    fs.writeFileSync(metatadaPath, JSON.stringify(metadata, null, 2));\n  }\n  resolveAlias(browser, alias) {\n    const metadata = this.readMetadata(browser);\n    if (alias === 'latest') {\n      return Object.values(metadata.aliases || {}).sort(getVersionComparator(browser)).at(-1);\n    }\n    return metadata.aliases[alias];\n  }\n  installationDir(browser, platform, buildId) {\n    return path.join(this.browserRoot(browser), `${platform}-${buildId}`);\n  }\n  clear() {\n    fs.rmSync(_classPrivateFieldGet(_rootDir, this), {\n      force: true,\n      recursive: true,\n      maxRetries: 10,\n      retryDelay: 500\n    });\n  }\n  uninstall(browser, platform, buildId) {\n    const metadata = this.readMetadata(browser);\n    for (const alias of Object.keys(metadata.aliases)) {\n      if (metadata.aliases[alias] === buildId) {\n        delete metadata.aliases[alias];\n      }\n    }\n    fs.rmSync(this.installationDir(browser, platform, buildId), {\n      force: true,\n      recursive: true,\n      maxRetries: 10,\n      retryDelay: 500\n    });\n  }\n  getInstalledBrowsers() {\n    if (!fs.existsSync(_classPrivateFieldGet(_rootDir, this))) {\n      return [];\n    }\n    const types = fs.readdirSync(_classPrivateFieldGet(_rootDir, this));\n    const browsers = types.filter(t => {\n      return Object.values(Browser).includes(t);\n    });\n    return browsers.flatMap(browser => {\n      const files = fs.readdirSync(this.browserRoot(browser));\n      return files.map(file => {\n        const result = parseFolderPath(path.join(this.browserRoot(browser), file));\n        if (!result) {\n          return null;\n        }\n        return new InstalledBrowser(this, browser, result.buildId, result.platform);\n      }).filter(item => {\n        return item !== null;\n      });\n    });\n  }\n  computeExecutablePath(options) {\n    options.platform ??= detectBrowserPlatform();\n    if (!options.platform) {\n      throw new Error(`Cannot download a binary for the provided platform: ${os.platform()} (${os.arch()})`);\n    }\n    try {\n      options.buildId = this.resolveAlias(options.browser, options.buildId) ?? options.buildId;\n    } catch {\n      debugCache('could not read .metadata file for the browser');\n    }\n    const installationDir = this.installationDir(options.browser, options.platform, options.buildId);\n    return path.join(installationDir, executablePathByBrowser[options.browser](options.platform, options.buildId));\n  }\n}\nfunction parseFolderPath(folderPath) {\n  const name = path.basename(folderPath);\n  const splits = name.split('-');\n  if (splits.length !== 2) {\n    return;\n  }\n  const [platform, buildId] = splits;\n  if (!buildId || !platform) {\n    return;\n  }\n  return {\n    platform,\n    buildId\n  };\n}","map":{"version":3,"names":["fs","os","path","debug","Browser","executablePathByBrowser","getVersionComparator","detectBrowserPlatform","debugCache","_cache","WeakMap","InstalledBrowser","constructor","cache","browser","buildId","platform","_defineProperty","_classPrivateFieldInitSpec","_classPrivateFieldSet","executablePath","computeExecutablePath","_classPrivateFieldGet","installationDir","readMetadata","writeMetadata","metadata","_rootDir","Cache","rootDir","browserRoot","join","metadataFile","metatadaPath","existsSync","aliases","data","JSON","parse","readFileSync","Error","mkdirSync","dirname","recursive","writeFileSync","stringify","resolveAlias","alias","Object","values","sort","at","clear","rmSync","force","maxRetries","retryDelay","uninstall","keys","getInstalledBrowsers","types","readdirSync","browsers","filter","t","includes","flatMap","files","map","file","result","parseFolderPath","item","options","arch","folderPath","name","basename","splits","split","length"],"sources":["../../src/Cache.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}