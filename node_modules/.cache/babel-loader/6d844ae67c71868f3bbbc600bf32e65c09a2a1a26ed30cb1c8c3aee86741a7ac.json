{"ast":null,"code":"class devicePixelRatio {\n  /* 获取系统类型 */\n  getSystem() {\n    const agent = navigator.userAgent.toLowerCase();\n    const isMac = /macintosh|mac os x/i.test(navigator.userAgent);\n    if (isMac) return false;\n    // 目前只针对 win 处理，其它系统暂无该情况，需要则继续在此添加即可\n    if (agent.indexOf(\"windows\") >= 0) return true;\n  }\n  /* 监听方法兼容写法 */\n  addHandler(element, type, handler) {\n    if (element.addEventListener) {\n      element.addEventListener(type, handler, false);\n    } else if (element.attachEvent) {\n      element.attachEvent(\"on\" + type, handler);\n    } else {\n      element[\"on\" + type] = handler;\n    }\n  }\n  /* 校正浏览器缩放比例 */\n  correct() {\n    // 页面devicePixelRatio（设备像素比例）变化后，计算页面body标签zoom修改其大小，来抵消devicePixelRatio带来的变化\n    document.getElementsByTagName(\"body\")[0].style.zoom = 1 / window.devicePixelRatio;\n  }\n  /* 监听页面缩放 */\n  watch() {\n    const that = this;\n    // 注意: 这个方法是解决全局有两个window.resize\n    that.addHandler(window, \"resize\", function () {\n      that.correct(); // 重新校正浏览器缩放比例\n    });\n  }\n  /* 初始化页面比例 */\n  init() {\n    const that = this;\n    // 判断设备，只在 win 系统下校正浏览器缩放比例\n    if (that.getSystem()) {\n      that.correct(); // 校正浏览器缩放比例\n      that.watch(); // 监听页面缩放\n    }\n  }\n}\nexport default devicePixelRatio;","map":{"version":3,"names":["devicePixelRatio","getSystem","agent","navigator","userAgent","toLowerCase","isMac","test","indexOf","addHandler","element","type","handler","addEventListener","attachEvent","correct","document","getElementsByTagName","style","zoom","window","watch","that","init"],"sources":["/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/src/utils/devicePixelRatio.js"],"sourcesContent":["class devicePixelRatio {\n    /* 获取系统类型 */\n    getSystem() {\n      const agent = navigator.userAgent.toLowerCase();\n      const isMac = /macintosh|mac os x/i.test(navigator.userAgent);\n      if (isMac) return false;\n      // 目前只针对 win 处理，其它系统暂无该情况，需要则继续在此添加即可\n      if (agent.indexOf(\"windows\") >= 0) return true;\n    }\n    /* 监听方法兼容写法 */\n    addHandler(element, type, handler) {\n      if (element.addEventListener) {\n        element.addEventListener(type, handler, false);\n      } else if (element.attachEvent) {\n        element.attachEvent(\"on\" + type, handler);\n      } else {\n        element[\"on\" + type] = handler;\n      }\n    }\n    /* 校正浏览器缩放比例 */\n    correct() {\n      // 页面devicePixelRatio（设备像素比例）变化后，计算页面body标签zoom修改其大小，来抵消devicePixelRatio带来的变化\n      document.getElementsByTagName(\"body\")[0].style.zoom =\n        1 / window.devicePixelRatio;\n    }\n    /* 监听页面缩放 */\n    watch() {\n      const that = this;\n      // 注意: 这个方法是解决全局有两个window.resize\n      that.addHandler(window, \"resize\", function () {\n        that.correct(); // 重新校正浏览器缩放比例\n      });\n    }\n    /* 初始化页面比例 */\n    init() {\n      const that = this;\n      // 判断设备，只在 win 系统下校正浏览器缩放比例\n      if (that.getSystem()) {\n        that.correct(); // 校正浏览器缩放比例\n        that.watch(); // 监听页面缩放\n      }\n    }\n  }\n  export default devicePixelRatio;"],"mappings":"AAAA,MAAMA,gBAAgB,CAAC;EACnB;EACAC,SAASA,CAAA,EAAG;IACV,MAAMC,KAAK,GAAGC,SAAS,CAACC,SAAS,CAACC,WAAW,CAAC,CAAC;IAC/C,MAAMC,KAAK,GAAG,qBAAqB,CAACC,IAAI,CAACJ,SAAS,CAACC,SAAS,CAAC;IAC7D,IAAIE,KAAK,EAAE,OAAO,KAAK;IACvB;IACA,IAAIJ,KAAK,CAACM,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,OAAO,IAAI;EAChD;EACA;EACAC,UAAUA,CAACC,OAAO,EAAEC,IAAI,EAAEC,OAAO,EAAE;IACjC,IAAIF,OAAO,CAACG,gBAAgB,EAAE;MAC5BH,OAAO,CAACG,gBAAgB,CAACF,IAAI,EAAEC,OAAO,EAAE,KAAK,CAAC;IAChD,CAAC,MAAM,IAAIF,OAAO,CAACI,WAAW,EAAE;MAC9BJ,OAAO,CAACI,WAAW,CAAC,IAAI,GAAGH,IAAI,EAAEC,OAAO,CAAC;IAC3C,CAAC,MAAM;MACLF,OAAO,CAAC,IAAI,GAAGC,IAAI,CAAC,GAAGC,OAAO;IAChC;EACF;EACA;EACAG,OAAOA,CAAA,EAAG;IACR;IACAC,QAAQ,CAACC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAACC,KAAK,CAACC,IAAI,GACjD,CAAC,GAAGC,MAAM,CAACpB,gBAAgB;EAC/B;EACA;EACAqB,KAAKA,CAAA,EAAG;IACN,MAAMC,IAAI,GAAG,IAAI;IACjB;IACAA,IAAI,CAACb,UAAU,CAACW,MAAM,EAAE,QAAQ,EAAE,YAAY;MAC5CE,IAAI,CAACP,OAAO,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC;EACJ;EACA;EACAQ,IAAIA,CAAA,EAAG;IACL,MAAMD,IAAI,GAAG,IAAI;IACjB;IACA,IAAIA,IAAI,CAACrB,SAAS,CAAC,CAAC,EAAE;MACpBqB,IAAI,CAACP,OAAO,CAAC,CAAC,CAAC,CAAC;MAChBO,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC;IAChB;EACF;AACF;AACA,eAAerB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}