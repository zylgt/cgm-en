{"ast":null,"code":"import _classPrivateFieldInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldSet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\nimport _classPrivateFieldGet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\n/**\n * @license\n * Copyright 2022 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Deferred } from '../util/Deferred.js';\n/**\n * Keeps track of the page frame tree and it's is managed by\n * {@link FrameManager}. FrameTree uses frame IDs to reference frame and it\n * means that referenced frames might not be in the tree anymore. Thus, the tree\n * structure is eventually consistent.\n * @internal\n */\nvar _frames = /*#__PURE__*/new WeakMap();\nvar _parentIds = /*#__PURE__*/new WeakMap();\nvar _childIds = /*#__PURE__*/new WeakMap();\nvar _mainFrame = /*#__PURE__*/new WeakMap();\nvar _isMainFrameStale = /*#__PURE__*/new WeakMap();\nvar _waitRequests = /*#__PURE__*/new WeakMap();\nexport class FrameTree {\n  constructor() {\n    _classPrivateFieldInitSpec(this, _frames, new Map());\n    // frameID -> parentFrameID\n    _classPrivateFieldInitSpec(this, _parentIds, new Map());\n    // frameID -> childFrameIDs\n    _classPrivateFieldInitSpec(this, _childIds, new Map());\n    _classPrivateFieldInitSpec(this, _mainFrame, void 0);\n    _classPrivateFieldInitSpec(this, _isMainFrameStale, false);\n    _classPrivateFieldInitSpec(this, _waitRequests, new Map());\n  }\n  getMainFrame() {\n    return _classPrivateFieldGet(_mainFrame, this);\n  }\n  getById(frameId) {\n    return _classPrivateFieldGet(_frames, this).get(frameId);\n  }\n  /**\n   * Returns a promise that is resolved once the frame with\n   * the given ID is added to the tree.\n   */\n  waitForFrame(frameId) {\n    const frame = this.getById(frameId);\n    if (frame) {\n      return Promise.resolve(frame);\n    }\n    const deferred = Deferred.create();\n    const callbacks = _classPrivateFieldGet(_waitRequests, this).get(frameId) || new Set();\n    callbacks.add(deferred);\n    return deferred.valueOrThrow();\n  }\n  frames() {\n    return Array.from(_classPrivateFieldGet(_frames, this).values());\n  }\n  addFrame(frame) {\n    _classPrivateFieldGet(_frames, this).set(frame._id, frame);\n    if (frame._parentId) {\n      _classPrivateFieldGet(_parentIds, this).set(frame._id, frame._parentId);\n      if (!_classPrivateFieldGet(_childIds, this).has(frame._parentId)) {\n        _classPrivateFieldGet(_childIds, this).set(frame._parentId, new Set());\n      }\n      _classPrivateFieldGet(_childIds, this).get(frame._parentId).add(frame._id);\n    } else if (!_classPrivateFieldGet(_mainFrame, this) || _classPrivateFieldGet(_isMainFrameStale, this)) {\n      _classPrivateFieldSet(_mainFrame, this, frame);\n      _classPrivateFieldSet(_isMainFrameStale, this, false);\n    }\n    _classPrivateFieldGet(_waitRequests, this).get(frame._id)?.forEach(request => {\n      return request.resolve(frame);\n    });\n  }\n  removeFrame(frame) {\n    _classPrivateFieldGet(_frames, this).delete(frame._id);\n    _classPrivateFieldGet(_parentIds, this).delete(frame._id);\n    if (frame._parentId) {\n      _classPrivateFieldGet(_childIds, this).get(frame._parentId)?.delete(frame._id);\n    } else {\n      _classPrivateFieldSet(_isMainFrameStale, this, true);\n    }\n  }\n  childFrames(frameId) {\n    const childIds = _classPrivateFieldGet(_childIds, this).get(frameId);\n    if (!childIds) {\n      return [];\n    }\n    return Array.from(childIds).map(id => {\n      return this.getById(id);\n    }).filter(frame => {\n      return frame !== undefined;\n    });\n  }\n  parentFrame(frameId) {\n    const parentId = _classPrivateFieldGet(_parentIds, this).get(frameId);\n    return parentId ? this.getById(parentId) : undefined;\n  }\n}","map":{"version":3,"names":["Deferred","_frames","WeakMap","_parentIds","_childIds","_mainFrame","_isMainFrameStale","_waitRequests","FrameTree","constructor","_classPrivateFieldInitSpec","Map","getMainFrame","_classPrivateFieldGet","getById","frameId","get","waitForFrame","frame","Promise","resolve","deferred","create","callbacks","Set","add","valueOrThrow","frames","Array","from","values","addFrame","set","_id","_parentId","has","_classPrivateFieldSet","forEach","request","removeFrame","delete","childFrames","childIds","map","id","filter","undefined","parentFrame","parentId"],"sources":["../../../../src/cdp/FrameTree.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}