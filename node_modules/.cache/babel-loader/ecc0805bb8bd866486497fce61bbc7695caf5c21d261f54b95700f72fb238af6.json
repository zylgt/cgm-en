{"ast":null,"code":"import CryptoJS from 'crypto-js';\nfunction getRandomString(length) {\n  let result = '';\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\nfunction validateSignature(data, ts, random, key) {\n  const md5s = CryptoJS.MD5(data).toString(CryptoJS.enc.Hex);\n  const array = [md5s, ts, random];\n  array.sort();\n  const context = array.join('');\n  const hmac = CryptoJS.HmacSHA256(context, key);\n  return hmac.toString(CryptoJS.enc.Hex);\n}\nconst signature = data => {\n  const datastr = data ? JSON.stringify(data) : '';\n  const timestamp = Math.floor(new Date().getTime() / 1000).toString();\n  const randomString = getRandomString(10);\n  const key = 'rwpJhJPmpwGDRBpXdS8y';\n  const signatureString = validateSignature(datastr, timestamp, randomString, key);\n  return {\n    'Content-Type': 'application/json',\n    ts: timestamp,\n    signature: signatureString,\n    random: randomString\n  };\n};\nexport default signature;","map":{"version":3,"names":["CryptoJS","getRandomString","length","result","characters","charactersLength","i","charAt","Math","floor","random","validateSignature","data","ts","key","md5s","MD5","toString","enc","Hex","array","sort","context","join","hmac","HmacSHA256","signature","datastr","JSON","stringify","timestamp","Date","getTime","randomString","signatureString"],"sources":["/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/src/utils/signature.js"],"sourcesContent":["import CryptoJS from 'crypto-js';\n\nfunction getRandomString(length) {\n  let result = '';\n  const characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nfunction validateSignature(data, ts, random, key) {\n  const md5s = CryptoJS.MD5(data).toString(CryptoJS.enc.Hex);\n  const array = [md5s, ts, random];\n  array.sort();\n  const context = array.join('');\n  const hmac = CryptoJS.HmacSHA256(context, key);\n  return hmac.toString(CryptoJS.enc.Hex);\n}\n\nconst signature = data => {\n  const datastr = data ? JSON.stringify(data) : '';\n  const timestamp = Math.floor(new Date().getTime() / 1000).toString();\n  const randomString = getRandomString(10);\n  const key = 'rwpJhJPmpwGDRBpXdS8y';\n\n  const signatureString = validateSignature(\n    datastr,\n    timestamp,\n    randomString,\n    key,\n  );\n  return {\n    'Content-Type': 'application/json',\n    ts: timestamp,\n    signature: signatureString,\n    random: randomString,\n  };\n};\n\nexport default signature;\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,WAAW;AAEhC,SAASC,eAAeA,CAACC,MAAM,EAAE;EAC/B,IAAIC,MAAM,GAAG,EAAE;EACf,MAAMC,UAAU,GACd,gEAAgE;EAClE,MAAMC,gBAAgB,GAAGD,UAAU,CAACF,MAAM;EAC1C,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,EAAEI,CAAC,EAAE,EAAE;IAC/BH,MAAM,IAAIC,UAAU,CAACG,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,gBAAgB,CAAC,CAAC;EAC3E;EACA,OAAOF,MAAM;AACf;AAEA,SAASQ,iBAAiBA,CAACC,IAAI,EAAEC,EAAE,EAAEH,MAAM,EAAEI,GAAG,EAAE;EAChD,MAAMC,IAAI,GAAGf,QAAQ,CAACgB,GAAG,CAACJ,IAAI,CAAC,CAACK,QAAQ,CAACjB,QAAQ,CAACkB,GAAG,CAACC,GAAG,CAAC;EAC1D,MAAMC,KAAK,GAAG,CAACL,IAAI,EAAEF,EAAE,EAAEH,MAAM,CAAC;EAChCU,KAAK,CAACC,IAAI,CAAC,CAAC;EACZ,MAAMC,OAAO,GAAGF,KAAK,CAACG,IAAI,CAAC,EAAE,CAAC;EAC9B,MAAMC,IAAI,GAAGxB,QAAQ,CAACyB,UAAU,CAACH,OAAO,EAAER,GAAG,CAAC;EAC9C,OAAOU,IAAI,CAACP,QAAQ,CAACjB,QAAQ,CAACkB,GAAG,CAACC,GAAG,CAAC;AACxC;AAEA,MAAMO,SAAS,GAAGd,IAAI,IAAI;EACxB,MAAMe,OAAO,GAAGf,IAAI,GAAGgB,IAAI,CAACC,SAAS,CAACjB,IAAI,CAAC,GAAG,EAAE;EAChD,MAAMkB,SAAS,GAAGtB,IAAI,CAACC,KAAK,CAAC,IAAIsB,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,CAACf,QAAQ,CAAC,CAAC;EACpE,MAAMgB,YAAY,GAAGhC,eAAe,CAAC,EAAE,CAAC;EACxC,MAAMa,GAAG,GAAG,sBAAsB;EAElC,MAAMoB,eAAe,GAAGvB,iBAAiB,CACvCgB,OAAO,EACPG,SAAS,EACTG,YAAY,EACZnB,GACF,CAAC;EACD,OAAO;IACL,cAAc,EAAE,kBAAkB;IAClCD,EAAE,EAAEiB,SAAS;IACbJ,SAAS,EAAEQ,eAAe;IAC1BxB,MAAM,EAAEuB;EACV,CAAC;AACH,CAAC;AAED,eAAeP,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}