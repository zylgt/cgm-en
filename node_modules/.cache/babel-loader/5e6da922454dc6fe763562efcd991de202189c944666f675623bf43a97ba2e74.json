{"ast":null,"code":"import _classPrivateFieldInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldGet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\nimport _classPrivateFieldSet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\nimport \"core-js/modules/es.array.push.js\";\n/**\n * @license\n * Copyright 2022 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Deferred } from '../util/Deferred.js';\nimport { isErrorLike } from '../util/ErrorLike.js';\nimport { stringifyFunction } from '../util/Function.js';\nimport { TimeoutError } from './Errors.js';\nimport { LazyArg } from './LazyArg.js';\n/**\n * @internal\n */\nvar _world = /*#__PURE__*/new WeakMap();\nvar _polling = /*#__PURE__*/new WeakMap();\nvar _root = /*#__PURE__*/new WeakMap();\nvar _fn = /*#__PURE__*/new WeakMap();\nvar _args = /*#__PURE__*/new WeakMap();\nvar _timeout = /*#__PURE__*/new WeakMap();\nvar _timeoutError = /*#__PURE__*/new WeakMap();\nvar _result = /*#__PURE__*/new WeakMap();\nvar _poller = /*#__PURE__*/new WeakMap();\nvar _signal = /*#__PURE__*/new WeakMap();\nvar _reruns = /*#__PURE__*/new WeakMap();\nexport class WaitTask {\n  constructor(world, options, fn, ...args) {\n    _classPrivateFieldInitSpec(this, _world, void 0);\n    _classPrivateFieldInitSpec(this, _polling, void 0);\n    _classPrivateFieldInitSpec(this, _root, void 0);\n    _classPrivateFieldInitSpec(this, _fn, void 0);\n    _classPrivateFieldInitSpec(this, _args, void 0);\n    _classPrivateFieldInitSpec(this, _timeout, void 0);\n    _classPrivateFieldInitSpec(this, _timeoutError, void 0);\n    _classPrivateFieldInitSpec(this, _result, Deferred.create());\n    _classPrivateFieldInitSpec(this, _poller, void 0);\n    _classPrivateFieldInitSpec(this, _signal, void 0);\n    _classPrivateFieldInitSpec(this, _reruns, []);\n    _classPrivateFieldSet(_world, this, world);\n    _classPrivateFieldSet(_polling, this, options.polling);\n    _classPrivateFieldSet(_root, this, options.root);\n    _classPrivateFieldSet(_signal, this, options.signal);\n    _classPrivateFieldGet(_signal, this)?.addEventListener('abort', () => {\n      void this.terminate(_classPrivateFieldGet(_signal, this)?.reason);\n    }, {\n      once: true\n    });\n    switch (typeof fn) {\n      case 'string':\n        _classPrivateFieldSet(_fn, this, `() => {return (${fn});}`);\n        break;\n      default:\n        _classPrivateFieldSet(_fn, this, stringifyFunction(fn));\n        break;\n    }\n    _classPrivateFieldSet(_args, this, args);\n    _classPrivateFieldGet(_world, this).taskManager.add(this);\n    if (options.timeout) {\n      _classPrivateFieldSet(_timeoutError, this, new TimeoutError(`Waiting failed: ${options.timeout}ms exceeded`));\n      _classPrivateFieldSet(_timeout, this, setTimeout(() => {\n        void this.terminate(_classPrivateFieldGet(_timeoutError, this));\n      }, options.timeout));\n    }\n    void this.rerun();\n  }\n  get result() {\n    return _classPrivateFieldGet(_result, this).valueOrThrow();\n  }\n  async rerun() {\n    for (const prev of _classPrivateFieldGet(_reruns, this)) {\n      prev.abort();\n    }\n    _classPrivateFieldGet(_reruns, this).length = 0;\n    const controller = new AbortController();\n    _classPrivateFieldGet(_reruns, this).push(controller);\n    try {\n      switch (_classPrivateFieldGet(_polling, this)) {\n        case 'raf':\n          _classPrivateFieldSet(_poller, this, await _classPrivateFieldGet(_world, this).evaluateHandle(({\n            RAFPoller,\n            createFunction\n          }, fn, ...args) => {\n            const fun = createFunction(fn);\n            return new RAFPoller(() => {\n              return fun(...args);\n            });\n          }, LazyArg.create(context => {\n            return context.puppeteerUtil;\n          }), _classPrivateFieldGet(_fn, this), ..._classPrivateFieldGet(_args, this)));\n          break;\n        case 'mutation':\n          _classPrivateFieldSet(_poller, this, await _classPrivateFieldGet(_world, this).evaluateHandle(({\n            MutationPoller,\n            createFunction\n          }, root, fn, ...args) => {\n            const fun = createFunction(fn);\n            return new MutationPoller(() => {\n              return fun(...args);\n            }, root || document);\n          }, LazyArg.create(context => {\n            return context.puppeteerUtil;\n          }), _classPrivateFieldGet(_root, this), _classPrivateFieldGet(_fn, this), ..._classPrivateFieldGet(_args, this)));\n          break;\n        default:\n          _classPrivateFieldSet(_poller, this, await _classPrivateFieldGet(_world, this).evaluateHandle(({\n            IntervalPoller,\n            createFunction\n          }, ms, fn, ...args) => {\n            const fun = createFunction(fn);\n            return new IntervalPoller(() => {\n              return fun(...args);\n            }, ms);\n          }, LazyArg.create(context => {\n            return context.puppeteerUtil;\n          }), _classPrivateFieldGet(_polling, this), _classPrivateFieldGet(_fn, this), ..._classPrivateFieldGet(_args, this)));\n          break;\n      }\n      await _classPrivateFieldGet(_poller, this).evaluate(poller => {\n        void poller.start();\n      });\n      const result = await _classPrivateFieldGet(_poller, this).evaluateHandle(poller => {\n        return poller.result();\n      });\n      _classPrivateFieldGet(_result, this).resolve(result);\n      await this.terminate();\n    } catch (error) {\n      if (controller.signal.aborted) {\n        return;\n      }\n      const badError = this.getBadError(error);\n      if (badError) {\n        await this.terminate(badError);\n      }\n    }\n  }\n  async terminate(error) {\n    _classPrivateFieldGet(_world, this).taskManager.delete(this);\n    clearTimeout(_classPrivateFieldGet(_timeout, this));\n    if (error && !_classPrivateFieldGet(_result, this).finished()) {\n      _classPrivateFieldGet(_result, this).reject(error);\n    }\n    if (_classPrivateFieldGet(_poller, this)) {\n      try {\n        await _classPrivateFieldGet(_poller, this).evaluateHandle(async poller => {\n          await poller.stop();\n        });\n        if (_classPrivateFieldGet(_poller, this)) {\n          await _classPrivateFieldGet(_poller, this).dispose();\n          _classPrivateFieldSet(_poller, this, undefined);\n        }\n      } catch {\n        // Ignore errors since they most likely come from low-level cleanup.\n      }\n    }\n  }\n  /**\n   * Not all errors lead to termination. They usually imply we need to rerun the task.\n   */\n  getBadError(error) {\n    if (isErrorLike(error)) {\n      // When frame is detached the task should have been terminated by the IsolatedWorld.\n      // This can fail if we were adding this task while the frame was detached,\n      // so we terminate here instead.\n      if (error.message.includes('Execution context is not available in detached frame')) {\n        return new Error('Waiting failed: Frame detached');\n      }\n      // When the page is navigated, the promise is rejected.\n      // We will try again in the new execution context.\n      if (error.message.includes('Execution context was destroyed')) {\n        return;\n      }\n      // We could have tried to evaluate in a context which was already\n      // destroyed.\n      if (error.message.includes('Cannot find context with specified id')) {\n        return;\n      }\n      // Errors coming from WebDriver BiDi. TODO: Adjust messages after\n      // https://github.com/w3c/webdriver-bidi/issues/540 is resolved.\n      if (error.message.includes(\"AbortError: Actor 'MessageHandlerFrame' destroyed\")) {\n        return;\n      }\n      return error;\n    }\n    return new Error('WaitTask failed with an error', {\n      cause: error\n    });\n  }\n}\n/**\n * @internal\n */\nvar _tasks = /*#__PURE__*/new WeakMap();\nexport class TaskManager {\n  constructor() {\n    _classPrivateFieldInitSpec(this, _tasks, new Set());\n  }\n  add(task) {\n    _classPrivateFieldGet(_tasks, this).add(task);\n  }\n  delete(task) {\n    _classPrivateFieldGet(_tasks, this).delete(task);\n  }\n  terminateAll(error) {\n    for (const task of _classPrivateFieldGet(_tasks, this)) {\n      void task.terminate(error);\n    }\n    _classPrivateFieldGet(_tasks, this).clear();\n  }\n  async rerunAll() {\n    await Promise.all([..._classPrivateFieldGet(_tasks, this)].map(task => {\n      return task.rerun();\n    }));\n  }\n}","map":{"version":3,"names":["Deferred","isErrorLike","stringifyFunction","TimeoutError","LazyArg","_world","WeakMap","_polling","_root","_fn","_args","_timeout","_timeoutError","_result","_poller","_signal","_reruns","WaitTask","constructor","world","options","fn","args","_classPrivateFieldInitSpec","create","_classPrivateFieldSet","polling","root","signal","_classPrivateFieldGet","addEventListener","terminate","reason","once","taskManager","add","timeout","setTimeout","rerun","result","valueOrThrow","prev","abort","length","controller","AbortController","push","evaluateHandle","RAFPoller","createFunction","fun","context","puppeteerUtil","MutationPoller","document","IntervalPoller","ms","evaluate","poller","start","resolve","error","aborted","badError","getBadError","delete","clearTimeout","finished","reject","stop","dispose","undefined","message","includes","Error","cause","_tasks","TaskManager","Set","task","terminateAll","clear","rerunAll","Promise","all","map"],"sources":["../../../../src/common/WaitTask.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}