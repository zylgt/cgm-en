{"ast":null,"code":"import _classPrivateMethodInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateMethodInitSpec.js\";\nimport _assertClassBrand from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/assertClassBrand.js\";\nimport _classPrivateFieldInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldGet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\nimport _classPrivateFieldSet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\nimport \"core-js/modules/es.array.push.js\";\n/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { EventEmitter } from '../common/EventEmitter.js';\nimport { debugError, PuppeteerURL } from '../common/util.js';\nimport { assert } from '../util/assert.js';\nimport { DisposableStack } from '../util/disposable.js';\n/**\n * The Coverage class provides methods to gather information about parts of\n * JavaScript and CSS that were used by the page.\n *\n * @remarks\n * To output coverage in a form consumable by {@link https://github.com/istanbuljs | Istanbul},\n * see {@link https://github.com/istanbuljs/puppeteer-to-istanbul | puppeteer-to-istanbul}.\n *\n * @example\n * An example of using JavaScript and CSS coverage to get percentage of initially\n * executed code:\n *\n * ```ts\n * // Enable both JavaScript and CSS coverage\n * await Promise.all([\n *   page.coverage.startJSCoverage(),\n *   page.coverage.startCSSCoverage(),\n * ]);\n * // Navigate to page\n * await page.goto('https://example.com');\n * // Disable both JavaScript and CSS coverage\n * const [jsCoverage, cssCoverage] = await Promise.all([\n *   page.coverage.stopJSCoverage(),\n *   page.coverage.stopCSSCoverage(),\n * ]);\n * let totalBytes = 0;\n * let usedBytes = 0;\n * const coverage = [...jsCoverage, ...cssCoverage];\n * for (const entry of coverage) {\n *   totalBytes += entry.text.length;\n *   for (const range of entry.ranges) usedBytes += range.end - range.start - 1;\n * }\n * console.log(`Bytes used: ${(usedBytes / totalBytes) * 100}%`);\n * ```\n *\n * @public\n */\nvar _jsCoverage = /*#__PURE__*/new WeakMap();\nvar _cssCoverage = /*#__PURE__*/new WeakMap();\nexport class Coverage {\n  constructor(client) {\n    _classPrivateFieldInitSpec(this, _jsCoverage, void 0);\n    _classPrivateFieldInitSpec(this, _cssCoverage, void 0);\n    _classPrivateFieldSet(_jsCoverage, this, new JSCoverage(client));\n    _classPrivateFieldSet(_cssCoverage, this, new CSSCoverage(client));\n  }\n  /**\n   * @internal\n   */\n  updateClient(client) {\n    _classPrivateFieldGet(_jsCoverage, this).updateClient(client);\n    _classPrivateFieldGet(_cssCoverage, this).updateClient(client);\n  }\n  /**\n   * @param options - Set of configurable options for coverage defaults to\n   * `resetOnNavigation : true, reportAnonymousScripts : false,`\n   * `includeRawScriptCoverage : false, useBlockCoverage : true`\n   * @returns Promise that resolves when coverage is started.\n   *\n   * @remarks\n   * Anonymous scripts are ones that don't have an associated url. These are\n   * scripts that are dynamically created on the page using `eval` or\n   * `new Function`. If `reportAnonymousScripts` is set to `true`, anonymous\n   * scripts URL will start with `debugger://VM` (unless a magic //# sourceURL\n   * comment is present, in which case that will the be URL).\n   */\n  async startJSCoverage(options = {}) {\n    return await _classPrivateFieldGet(_jsCoverage, this).start(options);\n  }\n  /**\n   * Promise that resolves to the array of coverage reports for\n   * all scripts.\n   *\n   * @remarks\n   * JavaScript Coverage doesn't include anonymous scripts by default.\n   * However, scripts with sourceURLs are reported.\n   */\n  async stopJSCoverage() {\n    return await _classPrivateFieldGet(_jsCoverage, this).stop();\n  }\n  /**\n   * @param options - Set of configurable options for coverage, defaults to\n   * `resetOnNavigation : true`\n   * @returns Promise that resolves when coverage is started.\n   */\n  async startCSSCoverage(options = {}) {\n    return await _classPrivateFieldGet(_cssCoverage, this).start(options);\n  }\n  /**\n   * Promise that resolves to the array of coverage reports\n   * for all stylesheets.\n   *\n   * @remarks\n   * CSS Coverage doesn't include dynamically injected style tags\n   * without sourceURLs.\n   */\n  async stopCSSCoverage() {\n    return await _classPrivateFieldGet(_cssCoverage, this).stop();\n  }\n}\n/**\n * @public\n */\nvar _client = /*#__PURE__*/new WeakMap();\nvar _enabled = /*#__PURE__*/new WeakMap();\nvar _scriptURLs = /*#__PURE__*/new WeakMap();\nvar _scriptSources = /*#__PURE__*/new WeakMap();\nvar _subscriptions = /*#__PURE__*/new WeakMap();\nvar _resetOnNavigation = /*#__PURE__*/new WeakMap();\nvar _reportAnonymousScripts = /*#__PURE__*/new WeakMap();\nvar _includeRawScriptCoverage = /*#__PURE__*/new WeakMap();\nvar _JSCoverage_brand = /*#__PURE__*/new WeakSet();\nexport class JSCoverage {\n  constructor(client) {\n    _classPrivateMethodInitSpec(this, _JSCoverage_brand);\n    _classPrivateFieldInitSpec(this, _client, void 0);\n    _classPrivateFieldInitSpec(this, _enabled, false);\n    _classPrivateFieldInitSpec(this, _scriptURLs, new Map());\n    _classPrivateFieldInitSpec(this, _scriptSources, new Map());\n    _classPrivateFieldInitSpec(this, _subscriptions, void 0);\n    _classPrivateFieldInitSpec(this, _resetOnNavigation, false);\n    _classPrivateFieldInitSpec(this, _reportAnonymousScripts, false);\n    _classPrivateFieldInitSpec(this, _includeRawScriptCoverage, false);\n    _classPrivateFieldSet(_client, this, client);\n  }\n  /**\n   * @internal\n   */\n  updateClient(client) {\n    _classPrivateFieldSet(_client, this, client);\n  }\n  async start(options = {}) {\n    assert(!_classPrivateFieldGet(_enabled, this), 'JSCoverage is already enabled');\n    const {\n      resetOnNavigation = true,\n      reportAnonymousScripts = false,\n      includeRawScriptCoverage = false,\n      useBlockCoverage = true\n    } = options;\n    _classPrivateFieldSet(_resetOnNavigation, this, resetOnNavigation);\n    _classPrivateFieldSet(_reportAnonymousScripts, this, reportAnonymousScripts);\n    _classPrivateFieldSet(_includeRawScriptCoverage, this, includeRawScriptCoverage);\n    _classPrivateFieldSet(_enabled, this, true);\n    _classPrivateFieldGet(_scriptURLs, this).clear();\n    _classPrivateFieldGet(_scriptSources, this).clear();\n    _classPrivateFieldSet(_subscriptions, this, new DisposableStack());\n    const clientEmitter = _classPrivateFieldGet(_subscriptions, this).use(new EventEmitter(_classPrivateFieldGet(_client, this)));\n    clientEmitter.on('Debugger.scriptParsed', _assertClassBrand(_JSCoverage_brand, this, _onScriptParsed).bind(this));\n    clientEmitter.on('Runtime.executionContextsCleared', _assertClassBrand(_JSCoverage_brand, this, _onExecutionContextsCleared).bind(this));\n    await Promise.all([_classPrivateFieldGet(_client, this).send('Profiler.enable'), _classPrivateFieldGet(_client, this).send('Profiler.startPreciseCoverage', {\n      callCount: _classPrivateFieldGet(_includeRawScriptCoverage, this),\n      detailed: useBlockCoverage\n    }), _classPrivateFieldGet(_client, this).send('Debugger.enable'), _classPrivateFieldGet(_client, this).send('Debugger.setSkipAllPauses', {\n      skip: true\n    })]);\n  }\n  async stop() {\n    assert(_classPrivateFieldGet(_enabled, this), 'JSCoverage is not enabled');\n    _classPrivateFieldSet(_enabled, this, false);\n    const result = await Promise.all([_classPrivateFieldGet(_client, this).send('Profiler.takePreciseCoverage'), _classPrivateFieldGet(_client, this).send('Profiler.stopPreciseCoverage'), _classPrivateFieldGet(_client, this).send('Profiler.disable'), _classPrivateFieldGet(_client, this).send('Debugger.disable')]);\n    _classPrivateFieldGet(_subscriptions, this)?.dispose();\n    const coverage = [];\n    const profileResponse = result[0];\n    for (const entry of profileResponse.result) {\n      let url = _classPrivateFieldGet(_scriptURLs, this).get(entry.scriptId);\n      if (!url && _classPrivateFieldGet(_reportAnonymousScripts, this)) {\n        url = 'debugger://VM' + entry.scriptId;\n      }\n      const text = _classPrivateFieldGet(_scriptSources, this).get(entry.scriptId);\n      if (text === undefined || url === undefined) {\n        continue;\n      }\n      const flattenRanges = [];\n      for (const func of entry.functions) {\n        flattenRanges.push(...func.ranges);\n      }\n      const ranges = convertToDisjointRanges(flattenRanges);\n      if (!_classPrivateFieldGet(_includeRawScriptCoverage, this)) {\n        coverage.push({\n          url,\n          ranges,\n          text\n        });\n      } else {\n        coverage.push({\n          url,\n          ranges,\n          text,\n          rawScriptCoverage: entry\n        });\n      }\n    }\n    return coverage;\n  }\n}\n/**\n * @public\n */\nfunction _onExecutionContextsCleared() {\n  if (!_classPrivateFieldGet(_resetOnNavigation, this)) {\n    return;\n  }\n  _classPrivateFieldGet(_scriptURLs, this).clear();\n  _classPrivateFieldGet(_scriptSources, this).clear();\n}\nasync function _onScriptParsed(event) {\n  // Ignore puppeteer-injected scripts\n  if (PuppeteerURL.isPuppeteerURL(event.url)) {\n    return;\n  }\n  // Ignore other anonymous scripts unless the reportAnonymousScripts option is true.\n  if (!event.url && !_classPrivateFieldGet(_reportAnonymousScripts, this)) {\n    return;\n  }\n  try {\n    const response = await _classPrivateFieldGet(_client, this).send('Debugger.getScriptSource', {\n      scriptId: event.scriptId\n    });\n    _classPrivateFieldGet(_scriptURLs, this).set(event.scriptId, event.url);\n    _classPrivateFieldGet(_scriptSources, this).set(event.scriptId, response.scriptSource);\n  } catch (error) {\n    // This might happen if the page has already navigated away.\n    debugError(error);\n  }\n}\nvar _client2 = /*#__PURE__*/new WeakMap();\nvar _enabled2 = /*#__PURE__*/new WeakMap();\nvar _stylesheetURLs = /*#__PURE__*/new WeakMap();\nvar _stylesheetSources = /*#__PURE__*/new WeakMap();\nvar _eventListeners = /*#__PURE__*/new WeakMap();\nvar _resetOnNavigation2 = /*#__PURE__*/new WeakMap();\nvar _CSSCoverage_brand = /*#__PURE__*/new WeakSet();\nexport class CSSCoverage {\n  constructor(client) {\n    _classPrivateMethodInitSpec(this, _CSSCoverage_brand);\n    _classPrivateFieldInitSpec(this, _client2, void 0);\n    _classPrivateFieldInitSpec(this, _enabled2, false);\n    _classPrivateFieldInitSpec(this, _stylesheetURLs, new Map());\n    _classPrivateFieldInitSpec(this, _stylesheetSources, new Map());\n    _classPrivateFieldInitSpec(this, _eventListeners, void 0);\n    _classPrivateFieldInitSpec(this, _resetOnNavigation2, false);\n    _classPrivateFieldSet(_client2, this, client);\n  }\n  /**\n   * @internal\n   */\n  updateClient(client) {\n    _classPrivateFieldSet(_client2, this, client);\n  }\n  async start(options = {}) {\n    assert(!_classPrivateFieldGet(_enabled2, this), 'CSSCoverage is already enabled');\n    const {\n      resetOnNavigation = true\n    } = options;\n    _classPrivateFieldSet(_resetOnNavigation2, this, resetOnNavigation);\n    _classPrivateFieldSet(_enabled2, this, true);\n    _classPrivateFieldGet(_stylesheetURLs, this).clear();\n    _classPrivateFieldGet(_stylesheetSources, this).clear();\n    _classPrivateFieldSet(_eventListeners, this, new DisposableStack());\n    const clientEmitter = _classPrivateFieldGet(_eventListeners, this).use(new EventEmitter(_classPrivateFieldGet(_client2, this)));\n    clientEmitter.on('CSS.styleSheetAdded', _assertClassBrand(_CSSCoverage_brand, this, _onStyleSheet).bind(this));\n    clientEmitter.on('Runtime.executionContextsCleared', _assertClassBrand(_CSSCoverage_brand, this, _onExecutionContextsCleared2).bind(this));\n    await Promise.all([_classPrivateFieldGet(_client2, this).send('DOM.enable'), _classPrivateFieldGet(_client2, this).send('CSS.enable'), _classPrivateFieldGet(_client2, this).send('CSS.startRuleUsageTracking')]);\n  }\n  async stop() {\n    assert(_classPrivateFieldGet(_enabled2, this), 'CSSCoverage is not enabled');\n    _classPrivateFieldSet(_enabled2, this, false);\n    const ruleTrackingResponse = await _classPrivateFieldGet(_client2, this).send('CSS.stopRuleUsageTracking');\n    await Promise.all([_classPrivateFieldGet(_client2, this).send('CSS.disable'), _classPrivateFieldGet(_client2, this).send('DOM.disable')]);\n    _classPrivateFieldGet(_eventListeners, this)?.dispose();\n    // aggregate by styleSheetId\n    const styleSheetIdToCoverage = new Map();\n    for (const entry of ruleTrackingResponse.ruleUsage) {\n      let ranges = styleSheetIdToCoverage.get(entry.styleSheetId);\n      if (!ranges) {\n        ranges = [];\n        styleSheetIdToCoverage.set(entry.styleSheetId, ranges);\n      }\n      ranges.push({\n        startOffset: entry.startOffset,\n        endOffset: entry.endOffset,\n        count: entry.used ? 1 : 0\n      });\n    }\n    const coverage = [];\n    for (const styleSheetId of _classPrivateFieldGet(_stylesheetURLs, this).keys()) {\n      const url = _classPrivateFieldGet(_stylesheetURLs, this).get(styleSheetId);\n      assert(typeof url !== 'undefined', `Stylesheet URL is undefined (styleSheetId=${styleSheetId})`);\n      const text = _classPrivateFieldGet(_stylesheetSources, this).get(styleSheetId);\n      assert(typeof text !== 'undefined', `Stylesheet text is undefined (styleSheetId=${styleSheetId})`);\n      const ranges = convertToDisjointRanges(styleSheetIdToCoverage.get(styleSheetId) || []);\n      coverage.push({\n        url,\n        ranges,\n        text\n      });\n    }\n    return coverage;\n  }\n}\nfunction _onExecutionContextsCleared2() {\n  if (!_classPrivateFieldGet(_resetOnNavigation2, this)) {\n    return;\n  }\n  _classPrivateFieldGet(_stylesheetURLs, this).clear();\n  _classPrivateFieldGet(_stylesheetSources, this).clear();\n}\nasync function _onStyleSheet(event) {\n  const header = event.header;\n  // Ignore anonymous scripts\n  if (!header.sourceURL) {\n    return;\n  }\n  try {\n    const response = await _classPrivateFieldGet(_client2, this).send('CSS.getStyleSheetText', {\n      styleSheetId: header.styleSheetId\n    });\n    _classPrivateFieldGet(_stylesheetURLs, this).set(header.styleSheetId, header.sourceURL);\n    _classPrivateFieldGet(_stylesheetSources, this).set(header.styleSheetId, response.text);\n  } catch (error) {\n    // This might happen if the page has already navigated away.\n    debugError(error);\n  }\n}\nfunction convertToDisjointRanges(nestedRanges) {\n  const points = [];\n  for (const range of nestedRanges) {\n    points.push({\n      offset: range.startOffset,\n      type: 0,\n      range\n    });\n    points.push({\n      offset: range.endOffset,\n      type: 1,\n      range\n    });\n  }\n  // Sort points to form a valid parenthesis sequence.\n  points.sort((a, b) => {\n    // Sort with increasing offsets.\n    if (a.offset !== b.offset) {\n      return a.offset - b.offset;\n    }\n    // All \"end\" points should go before \"start\" points.\n    if (a.type !== b.type) {\n      return b.type - a.type;\n    }\n    const aLength = a.range.endOffset - a.range.startOffset;\n    const bLength = b.range.endOffset - b.range.startOffset;\n    // For two \"start\" points, the one with longer range goes first.\n    if (a.type === 0) {\n      return bLength - aLength;\n    }\n    // For two \"end\" points, the one with shorter range goes first.\n    return aLength - bLength;\n  });\n  const hitCountStack = [];\n  const results = [];\n  let lastOffset = 0;\n  // Run scanning line to intersect all ranges.\n  for (const point of points) {\n    if (hitCountStack.length && lastOffset < point.offset && hitCountStack[hitCountStack.length - 1] > 0) {\n      const lastResult = results[results.length - 1];\n      if (lastResult && lastResult.end === lastOffset) {\n        lastResult.end = point.offset;\n      } else {\n        results.push({\n          start: lastOffset,\n          end: point.offset\n        });\n      }\n    }\n    lastOffset = point.offset;\n    if (point.type === 0) {\n      hitCountStack.push(point.range.count);\n    } else {\n      hitCountStack.pop();\n    }\n  }\n  // Filter out empty ranges.\n  return results.filter(range => {\n    return range.end - range.start > 0;\n  });\n}","map":{"version":3,"names":["EventEmitter","debugError","PuppeteerURL","assert","DisposableStack","_jsCoverage","WeakMap","_cssCoverage","Coverage","constructor","client","_classPrivateFieldInitSpec","_classPrivateFieldSet","JSCoverage","CSSCoverage","updateClient","_classPrivateFieldGet","startJSCoverage","options","start","stopJSCoverage","stop","startCSSCoverage","stopCSSCoverage","_client","_enabled","_scriptURLs","_scriptSources","_subscriptions","_resetOnNavigation","_reportAnonymousScripts","_includeRawScriptCoverage","_JSCoverage_brand","WeakSet","_classPrivateMethodInitSpec","Map","resetOnNavigation","reportAnonymousScripts","includeRawScriptCoverage","useBlockCoverage","clear","clientEmitter","use","on","_assertClassBrand","_onScriptParsed","bind","_onExecutionContextsCleared","Promise","all","send","callCount","detailed","skip","result","dispose","coverage","profileResponse","entry","url","get","scriptId","text","undefined","flattenRanges","func","functions","push","ranges","convertToDisjointRanges","rawScriptCoverage","event","isPuppeteerURL","response","set","scriptSource","error","_client2","_enabled2","_stylesheetURLs","_stylesheetSources","_eventListeners","_resetOnNavigation2","_CSSCoverage_brand","_onStyleSheet","_onExecutionContextsCleared2","ruleTrackingResponse","styleSheetIdToCoverage","ruleUsage","styleSheetId","startOffset","endOffset","count","used","keys","header","sourceURL","nestedRanges","points","range","offset","type","sort","a","b","aLength","bLength","hitCountStack","results","lastOffset","point","length","lastResult","end","pop","filter"],"sources":["../../../../src/cdp/Coverage.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}