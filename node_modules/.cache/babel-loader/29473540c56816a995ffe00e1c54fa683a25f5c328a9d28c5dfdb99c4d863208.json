{"ast":null,"code":"import _classPrivateMethodInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateMethodInitSpec.js\";\nimport _classPrivateFieldInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _assertClassBrand from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/assertClassBrand.js\";\nimport _classPrivateFieldGet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\nimport _classPrivateFieldSet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\nimport \"core-js/modules/es.array.push.js\";\n/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { CDPSessionEvent } from '../api/CDPSession.js';\nimport { CallbackRegistry } from '../common/CallbackRegistry.js';\nimport { debug } from '../common/Debug.js';\nimport { TargetCloseError } from '../common/Errors.js';\nimport { EventEmitter } from '../common/EventEmitter.js';\nimport { assert } from '../util/assert.js';\nimport { createProtocolErrorMessage } from '../util/ErrorLike.js';\nimport { CdpCDPSession } from './CDPSession.js';\nconst debugProtocolSend = debug('puppeteer:protocol:SEND ►');\nconst debugProtocolReceive = debug('puppeteer:protocol:RECV ◀');\n/**\n * @public\n */\nvar _url = /*#__PURE__*/new WeakMap();\nvar _transport = /*#__PURE__*/new WeakMap();\nvar _delay = /*#__PURE__*/new WeakMap();\nvar _timeout = /*#__PURE__*/new WeakMap();\nvar _sessions = /*#__PURE__*/new WeakMap();\nvar _closed = /*#__PURE__*/new WeakMap();\nvar _manuallyAttached = /*#__PURE__*/new WeakMap();\nvar _callbacks = /*#__PURE__*/new WeakMap();\nvar _Connection_brand = /*#__PURE__*/new WeakSet();\nexport class Connection extends EventEmitter {\n  constructor(url, transport, delay = 0, timeout) {\n    super();\n    _classPrivateMethodInitSpec(this, _Connection_brand);\n    _classPrivateFieldInitSpec(this, _url, void 0);\n    _classPrivateFieldInitSpec(this, _transport, void 0);\n    _classPrivateFieldInitSpec(this, _delay, void 0);\n    _classPrivateFieldInitSpec(this, _timeout, void 0);\n    _classPrivateFieldInitSpec(this, _sessions, new Map());\n    _classPrivateFieldInitSpec(this, _closed, false);\n    _classPrivateFieldInitSpec(this, _manuallyAttached, new Set());\n    _classPrivateFieldInitSpec(this, _callbacks, new CallbackRegistry());\n    _classPrivateFieldSet(_url, this, url);\n    _classPrivateFieldSet(_delay, this, delay);\n    _classPrivateFieldSet(_timeout, this, timeout ?? 180000);\n    _classPrivateFieldSet(_transport, this, transport);\n    _classPrivateFieldGet(_transport, this).onmessage = this.onMessage.bind(this);\n    _classPrivateFieldGet(_transport, this).onclose = _assertClassBrand(_Connection_brand, this, _onClose).bind(this);\n  }\n  static fromSession(session) {\n    return session.connection();\n  }\n  /**\n   * @internal\n   */\n  get delay() {\n    return _classPrivateFieldGet(_delay, this);\n  }\n  get timeout() {\n    return _classPrivateFieldGet(_timeout, this);\n  }\n  /**\n   * @internal\n   */\n  get _closed() {\n    return _classPrivateFieldGet(_closed, this);\n  }\n  /**\n   * @internal\n   */\n  get _sessions() {\n    return _classPrivateFieldGet(_sessions, this);\n  }\n  /**\n   * @param sessionId - The session id\n   * @returns The current CDP session if it exists\n   */\n  session(sessionId) {\n    return _classPrivateFieldGet(_sessions, this).get(sessionId) || null;\n  }\n  url() {\n    return _classPrivateFieldGet(_url, this);\n  }\n  send(method, params, options) {\n    // There is only ever 1 param arg passed, but the Protocol defines it as an\n    // array of 0 or 1 items See this comment:\n    // https://github.com/ChromeDevTools/devtools-protocol/pull/113#issuecomment-412603285\n    // which explains why the protocol defines the params this way for better\n    // type-inference.\n    // So now we check if there are any params or not and deal with them accordingly.\n    return this._rawSend(_classPrivateFieldGet(_callbacks, this), method, params, undefined, options);\n  }\n  /**\n   * @internal\n   */\n  _rawSend(callbacks, method, params, sessionId, options) {\n    assert(!_classPrivateFieldGet(_closed, this), 'Protocol error: Connection closed.');\n    return callbacks.create(method, options?.timeout ?? _classPrivateFieldGet(_timeout, this), id => {\n      const stringifiedMessage = JSON.stringify({\n        method,\n        params,\n        id,\n        sessionId\n      });\n      debugProtocolSend(stringifiedMessage);\n      _classPrivateFieldGet(_transport, this).send(stringifiedMessage);\n    });\n  }\n  /**\n   * @internal\n   */\n  async closeBrowser() {\n    await this.send('Browser.close');\n  }\n  /**\n   * @internal\n   */\n  async onMessage(message) {\n    if (_classPrivateFieldGet(_delay, this)) {\n      await new Promise(r => {\n        return setTimeout(r, _classPrivateFieldGet(_delay, this));\n      });\n    }\n    debugProtocolReceive(message);\n    const object = JSON.parse(message);\n    if (object.method === 'Target.attachedToTarget') {\n      const sessionId = object.params.sessionId;\n      const session = new CdpCDPSession(this, object.params.targetInfo.type, sessionId, object.sessionId);\n      _classPrivateFieldGet(_sessions, this).set(sessionId, session);\n      this.emit(CDPSessionEvent.SessionAttached, session);\n      const parentSession = _classPrivateFieldGet(_sessions, this).get(object.sessionId);\n      if (parentSession) {\n        parentSession.emit(CDPSessionEvent.SessionAttached, session);\n      }\n    } else if (object.method === 'Target.detachedFromTarget') {\n      const session = _classPrivateFieldGet(_sessions, this).get(object.params.sessionId);\n      if (session) {\n        session._onClosed();\n        _classPrivateFieldGet(_sessions, this).delete(object.params.sessionId);\n        this.emit(CDPSessionEvent.SessionDetached, session);\n        const parentSession = _classPrivateFieldGet(_sessions, this).get(object.sessionId);\n        if (parentSession) {\n          parentSession.emit(CDPSessionEvent.SessionDetached, session);\n        }\n      }\n    }\n    if (object.sessionId) {\n      const session = _classPrivateFieldGet(_sessions, this).get(object.sessionId);\n      if (session) {\n        session._onMessage(object);\n      }\n    } else if (object.id) {\n      if (object.error) {\n        _classPrivateFieldGet(_callbacks, this).reject(object.id, createProtocolErrorMessage(object), object.error.message);\n      } else {\n        _classPrivateFieldGet(_callbacks, this).resolve(object.id, object.result);\n      }\n    } else {\n      this.emit(object.method, object.params);\n    }\n  }\n  dispose() {\n    _assertClassBrand(_Connection_brand, this, _onClose).call(this);\n    _classPrivateFieldGet(_transport, this).close();\n  }\n  /**\n   * @internal\n   */\n  isAutoAttached(targetId) {\n    return !_classPrivateFieldGet(_manuallyAttached, this).has(targetId);\n  }\n  /**\n   * @internal\n   */\n  async _createSession(targetInfo, isAutoAttachEmulated = true) {\n    if (!isAutoAttachEmulated) {\n      _classPrivateFieldGet(_manuallyAttached, this).add(targetInfo.targetId);\n    }\n    const {\n      sessionId\n    } = await this.send('Target.attachToTarget', {\n      targetId: targetInfo.targetId,\n      flatten: true\n    });\n    _classPrivateFieldGet(_manuallyAttached, this).delete(targetInfo.targetId);\n    const session = _classPrivateFieldGet(_sessions, this).get(sessionId);\n    if (!session) {\n      throw new Error('CDPSession creation failed.');\n    }\n    return session;\n  }\n  /**\n   * @param targetInfo - The target info\n   * @returns The CDP session that is created\n   */\n  async createSession(targetInfo) {\n    return await this._createSession(targetInfo, false);\n  }\n  /**\n   * @internal\n   */\n  getPendingProtocolErrors() {\n    const result = [];\n    result.push(..._classPrivateFieldGet(_callbacks, this).getPendingProtocolErrors());\n    for (const session of _classPrivateFieldGet(_sessions, this).values()) {\n      result.push(...session.getPendingProtocolErrors());\n    }\n    return result;\n  }\n}\n/**\n * @internal\n */\nfunction _onClose() {\n  if (_classPrivateFieldGet(_closed, this)) {\n    return;\n  }\n  _classPrivateFieldSet(_closed, this, true);\n  _classPrivateFieldGet(_transport, this).onmessage = undefined;\n  _classPrivateFieldGet(_transport, this).onclose = undefined;\n  _classPrivateFieldGet(_callbacks, this).clear();\n  for (const session of _classPrivateFieldGet(_sessions, this).values()) {\n    session._onClosed();\n  }\n  _classPrivateFieldGet(_sessions, this).clear();\n  this.emit(CDPSessionEvent.Disconnected, undefined);\n}\nexport function isTargetClosedError(error) {\n  return error instanceof TargetCloseError;\n}","map":{"version":3,"names":["CDPSessionEvent","CallbackRegistry","debug","TargetCloseError","EventEmitter","assert","createProtocolErrorMessage","CdpCDPSession","debugProtocolSend","debugProtocolReceive","_url","WeakMap","_transport","_delay","_timeout","_sessions","_closed","_manuallyAttached","_callbacks","_Connection_brand","WeakSet","Connection","constructor","url","transport","delay","timeout","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","Map","Set","_classPrivateFieldSet","_classPrivateFieldGet","onmessage","onMessage","bind","onclose","_assertClassBrand","_onClose","fromSession","session","connection","sessionId","get","send","method","params","options","_rawSend","undefined","callbacks","create","id","stringifiedMessage","JSON","stringify","closeBrowser","message","Promise","r","setTimeout","object","parse","targetInfo","type","set","emit","SessionAttached","parentSession","_onClosed","delete","SessionDetached","_onMessage","error","reject","resolve","result","dispose","call","close","isAutoAttached","targetId","has","_createSession","isAutoAttachEmulated","add","flatten","Error","createSession","getPendingProtocolErrors","push","values","clear","Disconnected","isTargetClosedError"],"sources":["../../../../src/cdp/Connection.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}