{"ast":null,"code":"import _defineProperty from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _ARIAQueryHandler;\n/**\n * @license\n * Copyright 2020 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { QueryHandler } from '../common/QueryHandler.js';\nimport { assert } from '../util/assert.js';\nimport { AsyncIterableUtil } from '../util/AsyncIterableUtil.js';\nconst isKnownAttribute = attribute => {\n  return ['name', 'role'].includes(attribute);\n};\nconst normalizeValue = value => {\n  return value.replace(/ +/g, ' ').trim();\n};\n/**\n * The selectors consist of an accessible name to query for and optionally\n * further aria attributes on the form `[<attribute>=<value>]`.\n * Currently, we only support the `name` and `role` attribute.\n * The following examples showcase how the syntax works wrt. querying:\n *\n * - 'title[role=\"heading\"]' queries for elements with name 'title' and role 'heading'.\n * - '[role=\"image\"]' queries for elements with role 'image' and any name.\n * - 'label' queries for elements with name 'label' and any role.\n * - '[name=\"\"][role=\"button\"]' queries for elements with no name and role 'button'.\n */\nconst ATTRIBUTE_REGEXP = /\\[\\s*(?<attribute>\\w+)\\s*=\\s*(?<quote>\"|')(?<value>\\\\.|.*?(?=\\k<quote>))\\k<quote>\\s*\\]/g;\nconst parseARIASelector = selector => {\n  const queryOptions = {};\n  const defaultName = selector.replace(ATTRIBUTE_REGEXP, (_, attribute, __, value) => {\n    attribute = attribute.trim();\n    assert(isKnownAttribute(attribute), `Unknown aria attribute \"${attribute}\" in selector`);\n    queryOptions[attribute] = normalizeValue(value);\n    return '';\n  });\n  if (defaultName && !queryOptions.name) {\n    queryOptions.name = normalizeValue(defaultName);\n  }\n  return queryOptions;\n};\n/**\n * @internal\n */\nexport class ARIAQueryHandler extends QueryHandler {\n  static async *queryAll(element, selector) {\n    const {\n      name,\n      role\n    } = parseARIASelector(selector);\n    yield* element.queryAXTree(name, role);\n  }\n}\n_ARIAQueryHandler = ARIAQueryHandler;\n_defineProperty(ARIAQueryHandler, \"querySelector\", async (node, selector, {\n  ariaQuerySelector\n}) => {\n  return await ariaQuerySelector(node, selector);\n});\n_defineProperty(ARIAQueryHandler, \"queryOne\", async (element, selector) => {\n  return (await AsyncIterableUtil.first(_ARIAQueryHandler.queryAll(element, selector))) ?? null;\n});","map":{"version":3,"names":["QueryHandler","assert","AsyncIterableUtil","isKnownAttribute","attribute","includes","normalizeValue","value","replace","trim","ATTRIBUTE_REGEXP","parseARIASelector","selector","queryOptions","defaultName","_","__","name","ARIAQueryHandler","queryAll","element","role","queryAXTree","_defineProperty","node","ariaQuerySelector","first","_ARIAQueryHandler"],"sources":["../../../../src/cdp/AriaQueryHandler.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;AAOA,SAAQA,YAAY,QAA2B,2BAA2B;AAE1E,SAAQC,MAAM,QAAO,mBAAmB;AACxC,SAAQC,iBAAiB,QAAO,8BAA8B;AAO9D,MAAMC,gBAAgB,GACpBC,SAAiB,IACkB;EACnC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAACC,QAAQ,CAACD,SAAS,CAAC;AAC7C,CAAC;AAED,MAAME,cAAc,GAAIC,KAAa,IAAY;EAC/C,OAAOA,KAAK,CAACC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAACC,IAAI,EAAE;AACzC,CAAC;AAED;;;;;;;;;;;AAWA,MAAMC,gBAAgB,GACpB,yFAAyF;AAC3F,MAAMC,iBAAiB,GAAIC,QAAgB,IAAkB;EAC3D,MAAMC,YAAY,GAAiB,EAAE;EACrC,MAAMC,WAAW,GAAGF,QAAQ,CAACJ,OAAO,CAClCE,gBAAgB,EAChB,CAACK,CAAC,EAAEX,SAAS,EAAEY,EAAE,EAAET,KAAK,KAAI;IAC1BH,SAAS,GAAGA,SAAS,CAACK,IAAI,EAAE;IAC5BR,MAAM,CACJE,gBAAgB,CAACC,SAAS,CAAC,EAC3B,2BAA2BA,SAAS,eAAe,CACpD;IACDS,YAAY,CAACT,SAAS,CAAC,GAAGE,cAAc,CAACC,KAAK,CAAC;IAC/C,OAAO,EAAE;EACX,CAAC,CACF;EACD,IAAIO,WAAW,IAAI,CAACD,YAAY,CAACI,IAAI,EAAE;IACrCJ,YAAY,CAACI,IAAI,GAAGX,cAAc,CAACQ,WAAW,CAAC;EACjD;EACA,OAAOD,YAAY;AACrB,CAAC;AAED;;;AAGA,OAAM,MAAOK,gBAAiB,SAAQlB,YAAY;EAShD,cAAuBmB,QAAQA,CAC7BC,OAA4B,EAC5BR,QAAgB;IAEhB,MAAM;MAACK,IAAI;MAAEI;IAAI,CAAC,GAAGV,iBAAiB,CAACC,QAAQ,CAAC;IAChD,OAAOQ,OAAO,CAACE,WAAW,CAACL,IAAI,EAAEI,IAAI,CAAC;EACxC;;oBAfWH,gBAAiB;AAAAK,eAAA,CAAjBL,gBAAiB,mBACmB,OAC7CM,IAAI,EACJZ,QAAQ,EACR;EAACa;AAAiB,CAAC,KACjB;EACF,OAAO,MAAMA,iBAAiB,CAACD,IAAI,EAAEZ,QAAQ,CAAC;AAChD,CAAC;AAAAW,eAAA,CAPUL,gBAAiB,cAiBD,OACzBE,OAA4B,EAC5BR,QAAgB,KACuB;EACvC,OACE,CAAC,MAAMV,iBAAiB,CAACwB,KAAK,CAACC,iBAAA,CAAKR,QAAQ,CAACC,OAAO,EAAER,QAAQ,CAAC,CAAC,KAAK,IAAI;AAE7E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}