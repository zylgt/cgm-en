{"ast":null,"code":"import _classPrivateMethodInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateMethodInitSpec.js\";\nimport _classPrivateFieldInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldGet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\nimport _assertClassBrand from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/assertClassBrand.js\";\nimport _classPrivateFieldSet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\nimport { HTTPResponse } from '../api/HTTPResponse.js';\nimport { ProtocolError } from '../common/Errors.js';\nimport { SecurityDetails } from '../common/SecurityDetails.js';\nimport { Deferred } from '../util/Deferred.js';\n/**\n * @internal\n */\nvar _client = /*#__PURE__*/new WeakMap();\nvar _request = /*#__PURE__*/new WeakMap();\nvar _contentPromise = /*#__PURE__*/new WeakMap();\nvar _bodyLoadedDeferred = /*#__PURE__*/new WeakMap();\nvar _remoteAddress = /*#__PURE__*/new WeakMap();\nvar _status = /*#__PURE__*/new WeakMap();\nvar _statusText = /*#__PURE__*/new WeakMap();\nvar _url = /*#__PURE__*/new WeakMap();\nvar _fromDiskCache = /*#__PURE__*/new WeakMap();\nvar _fromServiceWorker = /*#__PURE__*/new WeakMap();\nvar _headers = /*#__PURE__*/new WeakMap();\nvar _securityDetails = /*#__PURE__*/new WeakMap();\nvar _timing = /*#__PURE__*/new WeakMap();\nvar _CdpHTTPResponse_brand = /*#__PURE__*/new WeakSet();\nexport class CdpHTTPResponse extends HTTPResponse {\n  constructor(client, request, responsePayload, _extraInfo) {\n    super();\n    _classPrivateMethodInitSpec(this, _CdpHTTPResponse_brand);\n    _classPrivateFieldInitSpec(this, _client, void 0);\n    _classPrivateFieldInitSpec(this, _request, void 0);\n    _classPrivateFieldInitSpec(this, _contentPromise, null);\n    _classPrivateFieldInitSpec(this, _bodyLoadedDeferred, Deferred.create());\n    _classPrivateFieldInitSpec(this, _remoteAddress, void 0);\n    _classPrivateFieldInitSpec(this, _status, void 0);\n    _classPrivateFieldInitSpec(this, _statusText, void 0);\n    _classPrivateFieldInitSpec(this, _url, void 0);\n    _classPrivateFieldInitSpec(this, _fromDiskCache, void 0);\n    _classPrivateFieldInitSpec(this, _fromServiceWorker, void 0);\n    _classPrivateFieldInitSpec(this, _headers, {});\n    _classPrivateFieldInitSpec(this, _securityDetails, void 0);\n    _classPrivateFieldInitSpec(this, _timing, void 0);\n    _classPrivateFieldSet(_client, this, client);\n    _classPrivateFieldSet(_request, this, request);\n    _classPrivateFieldSet(_remoteAddress, this, {\n      ip: responsePayload.remoteIPAddress,\n      port: responsePayload.remotePort\n    });\n    _classPrivateFieldSet(_statusText, this, _assertClassBrand(_CdpHTTPResponse_brand, this, _parseStatusTextFromExtraInfo).call(this, _extraInfo) || responsePayload.statusText);\n    _classPrivateFieldSet(_url, this, request.url());\n    _classPrivateFieldSet(_fromDiskCache, this, !!responsePayload.fromDiskCache);\n    _classPrivateFieldSet(_fromServiceWorker, this, !!responsePayload.fromServiceWorker);\n    _classPrivateFieldSet(_status, this, _extraInfo ? _extraInfo.statusCode : responsePayload.status);\n    const headers = _extraInfo ? _extraInfo.headers : responsePayload.headers;\n    for (const [key, value] of Object.entries(headers)) {\n      _classPrivateFieldGet(_headers, this)[key.toLowerCase()] = value;\n    }\n    _classPrivateFieldSet(_securityDetails, this, responsePayload.securityDetails ? new SecurityDetails(responsePayload.securityDetails) : null);\n    _classPrivateFieldSet(_timing, this, responsePayload.timing || null);\n  }\n  _resolveBody(err) {\n    if (err) {\n      return _classPrivateFieldGet(_bodyLoadedDeferred, this).reject(err);\n    }\n    return _classPrivateFieldGet(_bodyLoadedDeferred, this).resolve();\n  }\n  remoteAddress() {\n    return _classPrivateFieldGet(_remoteAddress, this);\n  }\n  url() {\n    return _classPrivateFieldGet(_url, this);\n  }\n  status() {\n    return _classPrivateFieldGet(_status, this);\n  }\n  statusText() {\n    return _classPrivateFieldGet(_statusText, this);\n  }\n  headers() {\n    return _classPrivateFieldGet(_headers, this);\n  }\n  securityDetails() {\n    return _classPrivateFieldGet(_securityDetails, this);\n  }\n  timing() {\n    return _classPrivateFieldGet(_timing, this);\n  }\n  buffer() {\n    if (!_classPrivateFieldGet(_contentPromise, this)) {\n      _classPrivateFieldSet(_contentPromise, this, _classPrivateFieldGet(_bodyLoadedDeferred, this).valueOrThrow().then(async () => {\n        try {\n          const response = await _classPrivateFieldGet(_client, this).send('Network.getResponseBody', {\n            requestId: _classPrivateFieldGet(_request, this).id\n          });\n          return Buffer.from(response.body, response.base64Encoded ? 'base64' : 'utf8');\n        } catch (error) {\n          if (error instanceof ProtocolError && error.originalMessage === 'No resource with given identifier found') {\n            throw new ProtocolError('Could not load body for this request. This might happen if the request is a preflight request.');\n          }\n          throw error;\n        }\n      }));\n    }\n    return _classPrivateFieldGet(_contentPromise, this);\n  }\n  request() {\n    return _classPrivateFieldGet(_request, this);\n  }\n  fromCache() {\n    return _classPrivateFieldGet(_fromDiskCache, this) || _classPrivateFieldGet(_request, this)._fromMemoryCache;\n  }\n  fromServiceWorker() {\n    return _classPrivateFieldGet(_fromServiceWorker, this);\n  }\n  frame() {\n    return _classPrivateFieldGet(_request, this).frame();\n  }\n}\nfunction _parseStatusTextFromExtraInfo(extraInfo) {\n  if (!extraInfo || !extraInfo.headersText) {\n    return;\n  }\n  const firstLine = extraInfo.headersText.split('\\r', 1)[0];\n  if (!firstLine) {\n    return;\n  }\n  const match = firstLine.match(/[^ ]* [^ ]* (.*)/);\n  if (!match) {\n    return;\n  }\n  const statusText = match[1];\n  if (!statusText) {\n    return;\n  }\n  return statusText;\n}","map":{"version":3,"names":["HTTPResponse","ProtocolError","SecurityDetails","Deferred","_client","WeakMap","_request","_contentPromise","_bodyLoadedDeferred","_remoteAddress","_status","_statusText","_url","_fromDiskCache","_fromServiceWorker","_headers","_securityDetails","_timing","_CdpHTTPResponse_brand","WeakSet","CdpHTTPResponse","constructor","client","request","responsePayload","extraInfo","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","create","_classPrivateFieldSet","ip","remoteIPAddress","port","remotePort","_assertClassBrand","_parseStatusTextFromExtraInfo","call","statusText","url","fromDiskCache","fromServiceWorker","statusCode","status","headers","key","value","Object","entries","_classPrivateFieldGet","toLowerCase","securityDetails","timing","_resolveBody","err","reject","resolve","remoteAddress","buffer","valueOrThrow","then","response","send","requestId","id","Buffer","from","body","base64Encoded","error","originalMessage","fromCache","_fromMemoryCache","frame","headersText","firstLine","split","match"],"sources":["../../../../src/cdp/HTTPResponse.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}