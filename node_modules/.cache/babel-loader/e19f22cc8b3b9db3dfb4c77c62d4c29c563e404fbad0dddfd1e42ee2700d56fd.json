{"ast":null,"code":"import _classPrivateMethodInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateMethodInitSpec.js\";\nimport _defineProperty from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classPrivateFieldInitSpec from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldGet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\nimport _classPrivateGetter from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateGetter.js\";\nimport _classPrivateFieldSet from \"/Users/hexuemin/Desktop/jiuan/CGM/CGMWeb/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\n/**\n * @license\n * Copyright 2020 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Browser as SupportedBrowser, resolveBuildId, detectBrowserPlatform, getInstalledBrowsers, uninstall } from '@puppeteer/browsers';\nimport { Puppeteer } from '../common/Puppeteer.js';\nimport { PUPPETEER_REVISIONS } from '../revisions.js';\nimport { ChromeLauncher } from './ChromeLauncher.js';\nimport { FirefoxLauncher } from './FirefoxLauncher.js';\n/**\n * Extends the main {@link Puppeteer} class with Node specific behaviour for\n * fetching and downloading browsers.\n *\n * If you're using Puppeteer in a Node environment, this is the class you'll get\n * when you run `require('puppeteer')` (or the equivalent ES `import`).\n *\n * @remarks\n * The most common method to use is {@link PuppeteerNode.launch | launch}, which\n * is used to launch and connect to a new browser instance.\n *\n * See {@link Puppeteer | the main Puppeteer class} for methods common to all\n * environments, such as {@link Puppeteer.connect}.\n *\n * @example\n * The following is a typical example of using Puppeteer to drive automation:\n *\n * ```ts\n * import puppeteer from 'puppeteer';\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://www.google.com');\n *   // other actions...\n *   await browser.close();\n * })();\n * ```\n *\n * Once you have created a `page` you have access to a large API to interact\n * with the page, navigate, or find certain elements in that page.\n * The {@link Page | `page` documentation} lists all the available methods.\n *\n * @public\n */\nvar _launcher = /*#__PURE__*/new WeakMap();\nvar _lastLaunchedProduct = /*#__PURE__*/new WeakMap();\nvar _PuppeteerNode_brand = /*#__PURE__*/new WeakSet();\nexport class PuppeteerNode extends Puppeteer {\n  /**\n   * @internal\n   */\n  constructor(settings) {\n    const {\n      configuration,\n      ...commonSettings\n    } = settings;\n    super(commonSettings);\n    /**\n     * @internal\n     */\n    _classPrivateMethodInitSpec(this, _PuppeteerNode_brand);\n    _classPrivateFieldInitSpec(this, _launcher, void 0);\n    _classPrivateFieldInitSpec(this, _lastLaunchedProduct, void 0);\n    /**\n     * @internal\n     */\n    _defineProperty(this, \"defaultBrowserRevision\", void 0);\n    /**\n     * @internal\n     */\n    _defineProperty(this, \"configuration\", {});\n    if (configuration) {\n      this.configuration = configuration;\n    }\n    switch (this.configuration.defaultProduct) {\n      case 'firefox':\n        this.defaultBrowserRevision = PUPPETEER_REVISIONS.firefox;\n        break;\n      default:\n        this.configuration.defaultProduct = 'chrome';\n        this.defaultBrowserRevision = PUPPETEER_REVISIONS.chrome;\n        break;\n    }\n    this.connect = this.connect.bind(this);\n    this.launch = this.launch.bind(this);\n    this.executablePath = this.executablePath.bind(this);\n    this.defaultArgs = this.defaultArgs.bind(this);\n    this.trimCache = this.trimCache.bind(this);\n  }\n  /**\n   * This method attaches Puppeteer to an existing browser instance.\n   *\n   * @param options - Set of configurable options to set on the browser.\n   * @returns Promise which resolves to browser instance.\n   */\n  connect(options) {\n    return super.connect(options);\n  }\n  /**\n   * Launches a browser instance with given arguments and options when\n   * specified.\n   *\n   * When using with `puppeteer-core`,\n   * {@link LaunchOptions.executablePath | options.executablePath} or\n   * {@link LaunchOptions.channel | options.channel} must be provided.\n   *\n   * @example\n   * You can use {@link LaunchOptions.ignoreDefaultArgs | options.ignoreDefaultArgs}\n   * to filter out `--mute-audio` from default arguments:\n   *\n   * ```ts\n   * const browser = await puppeteer.launch({\n   *   ignoreDefaultArgs: ['--mute-audio'],\n   * });\n   * ```\n   *\n   * @remarks\n   * Puppeteer can also be used to control the Chrome browser, but it works best\n   * with the version of Chrome for Testing downloaded by default.\n   * There is no guarantee it will work with any other version. If Google Chrome\n   * (rather than Chrome for Testing) is preferred, a\n   * {@link https://www.google.com/chrome/browser/canary.html | Chrome Canary}\n   * or\n   * {@link https://www.chromium.org/getting-involved/dev-channel | Dev Channel}\n   * build is suggested. See\n   * {@link https://www.howtogeek.com/202825/what%E2%80%99s-the-difference-between-chromium-and-chrome/ | this article}\n   * for a description of the differences between Chromium and Chrome.\n   * {@link https://chromium.googlesource.com/chromium/src/+/lkgr/docs/chromium_browser_vs_google_chrome.md | This article}\n   * describes some differences for Linux users. See\n   * {@link https://developer.chrome.com/blog/chrome-for-testing/ | this doc} for the description\n   * of Chrome for Testing.\n   *\n   * @param options - Options to configure launching behavior.\n   */\n  launch(options = {}) {\n    const {\n      product = this.defaultProduct\n    } = options;\n    _classPrivateFieldSet(_lastLaunchedProduct, this, product);\n    return _classPrivateGetter(_PuppeteerNode_brand, this, _get_launcher).launch(options);\n  }\n  /**\n   * The default executable path.\n   */\n  executablePath(channel) {\n    return _classPrivateGetter(_PuppeteerNode_brand, this, _get_launcher).executablePath(channel);\n  }\n  /**\n   * @internal\n   */\n  get browserRevision() {\n    return _classPrivateFieldGet(_launcher, this)?.getActualBrowserRevision() ?? this.configuration.browserRevision ?? this.defaultBrowserRevision;\n  }\n  /**\n   * The default download path for puppeteer. For puppeteer-core, this\n   * code should never be called as it is never defined.\n   *\n   * @internal\n   */\n  get defaultDownloadPath() {\n    return this.configuration.cacheDirectory;\n  }\n  /**\n   * The name of the browser that was last launched.\n   */\n  get lastLaunchedProduct() {\n    return _classPrivateFieldGet(_lastLaunchedProduct, this) ?? this.defaultProduct;\n  }\n  /**\n   * The name of the browser that will be launched by default. For\n   * `puppeteer`, this is influenced by your configuration. Otherwise, it's\n   * `chrome`.\n   */\n  get defaultProduct() {\n    return this.configuration.defaultProduct ?? 'chrome';\n  }\n  /**\n   * @deprecated Do not use as this field as it does not take into account\n   * multiple browsers of different types. Use\n   * {@link PuppeteerNode.defaultProduct | defaultProduct} or\n   * {@link PuppeteerNode.lastLaunchedProduct | lastLaunchedProduct}.\n   *\n   * @returns The name of the browser that is under automation.\n   */\n  get product() {\n    return _classPrivateGetter(_PuppeteerNode_brand, this, _get_launcher).product;\n  }\n  /**\n   * @param options - Set of configurable options to set on the browser.\n   *\n   * @returns The default flags that Chromium will be launched with.\n   */\n  defaultArgs(options = {}) {\n    return _classPrivateGetter(_PuppeteerNode_brand, this, _get_launcher).defaultArgs(options);\n  }\n  /**\n   * Removes all non-current Firefox and Chrome binaries in the cache directory\n   * identified by the provided Puppeteer configuration. The current browser\n   * version is determined by resolving PUPPETEER_REVISIONS from Puppeteer\n   * unless `configuration.browserRevision` is provided.\n   *\n   * @remarks\n   *\n   * Note that the method does not check if any other Puppeteer versions\n   * installed on the host that use the same cache directory require the\n   * non-current binaries.\n   *\n   * @public\n   */\n  async trimCache() {\n    const platform = detectBrowserPlatform();\n    if (!platform) {\n      throw new Error('The current platform is not supported.');\n    }\n    const cacheDir = this.configuration.cacheDirectory;\n    const installedBrowsers = await getInstalledBrowsers({\n      cacheDir\n    });\n    const product = this.configuration.defaultProduct;\n    const puppeteerBrowsers = [{\n      product: 'chrome',\n      browser: SupportedBrowser.CHROME,\n      currentBuildId: ''\n    }, {\n      product: 'firefox',\n      browser: SupportedBrowser.FIREFOX,\n      currentBuildId: ''\n    }];\n    // Resolve current buildIds.\n    for (const item of puppeteerBrowsers) {\n      item.currentBuildId = await resolveBuildId(item.browser, platform, (product === item.product ? this.configuration.browserRevision : null) || PUPPETEER_REVISIONS[item.product]);\n    }\n    const currentBrowserBuilds = new Set(puppeteerBrowsers.map(browser => {\n      return `${browser.browser}_${browser.currentBuildId}`;\n    }));\n    const currentBrowsers = new Set(puppeteerBrowsers.map(browser => {\n      return browser.browser;\n    }));\n    for (const installedBrowser of installedBrowsers) {\n      // Don't uninstall browsers that are not managed by Puppeteer yet.\n      if (!currentBrowsers.has(installedBrowser.browser)) {\n        continue;\n      }\n      // Keep the browser build used by the current Puppeteer installation.\n      if (currentBrowserBuilds.has(`${installedBrowser.browser}_${installedBrowser.buildId}`)) {\n        continue;\n      }\n      await uninstall({\n        browser: installedBrowser.browser,\n        platform,\n        cacheDir,\n        buildId: installedBrowser.buildId\n      });\n    }\n  }\n}\nfunction _get_launcher(_this) {\n  if (_classPrivateFieldGet(_launcher, _this) && _classPrivateFieldGet(_launcher, _this).product === _this.lastLaunchedProduct) {\n    return _classPrivateFieldGet(_launcher, _this);\n  }\n  switch (_this.lastLaunchedProduct) {\n    case 'chrome':\n      _this.defaultBrowserRevision = PUPPETEER_REVISIONS.chrome;\n      _classPrivateFieldSet(_launcher, _this, new ChromeLauncher(_this));\n      break;\n    case 'firefox':\n      _this.defaultBrowserRevision = PUPPETEER_REVISIONS.firefox;\n      _classPrivateFieldSet(_launcher, _this, new FirefoxLauncher(_this));\n      break;\n    default:\n      throw new Error(`Unknown product: ${_classPrivateFieldGet(_lastLaunchedProduct, _this)}`);\n  }\n  return _classPrivateFieldGet(_launcher, _this);\n}","map":{"version":3,"names":["Browser","SupportedBrowser","resolveBuildId","detectBrowserPlatform","getInstalledBrowsers","uninstall","Puppeteer","PUPPETEER_REVISIONS","ChromeLauncher","FirefoxLauncher","_launcher","WeakMap","_lastLaunchedProduct","_PuppeteerNode_brand","WeakSet","PuppeteerNode","constructor","settings","configuration","commonSettings","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_defineProperty","defaultProduct","defaultBrowserRevision","firefox","chrome","connect","bind","launch","executablePath","defaultArgs","trimCache","options","product","_classPrivateFieldSet","_classPrivateGetter","_get_launcher","channel","browserRevision","_classPrivateFieldGet","getActualBrowserRevision","defaultDownloadPath","cacheDirectory","lastLaunchedProduct","platform","Error","cacheDir","installedBrowsers","puppeteerBrowsers","browser","CHROME","currentBuildId","FIREFOX","item","currentBrowserBuilds","Set","map","currentBrowsers","installedBrowser","has","buildId","_this"],"sources":["../../../../src/node/PuppeteerNode.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}