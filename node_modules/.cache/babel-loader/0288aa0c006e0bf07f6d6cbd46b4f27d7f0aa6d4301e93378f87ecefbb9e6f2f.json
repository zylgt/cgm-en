{"ast":null,"code":"import TChart from '@/views/components/TChart';\nimport { hasEventListener } from \"@/utils/utils\";\nimport { formatDate } from '@/utils/formatTime';\nimport { GlucoseUtils } from \"@/utils/algorithm/Glucose\";\nimport { TIRUtils } from \"@/utils/algorithm/TIR\";\nexport default {\n  data() {\n    return {\n      initOptions: {\n        renderer: 'svg'\n      },\n      option: {\n        grid: [{\n          left: 0,\n          right: 0,\n          top: 0,\n          bottom: 0,\n          height: 120\n        }],\n        xAxis: [{\n          type: 'category',\n          show: true,\n          splitLine: {\n            show: true,\n            lineStyle: {\n              type: 'dashed',\n              color: 'var(--color-black-10)'\n            },\n            interval: 4\n          }\n        }],\n        yAxis: {\n          type: 'value',\n          show: false,\n          min: 0,\n          max: 16\n        },\n        series: [{\n          type: 'line',\n          data: [1, 5, 3, 4, 7, 2, 7, 1, 9, 0],\n          itemStyle: {\n            color: 'var(--color-primary)'\n          },\n          showSymbol: false,\n          lineStyle: {\n            width: 2\n          },\n          markArea: {\n            data: [[{\n              yAxis: 3.9\n            }, {\n              yAxis: 10\n            }]],\n            label: {\n              show: true,\n              color: 'var(--color-black-60)',\n              fontSize: 16,\n              distance: 10,\n              position: 'left'\n            },\n            itemStyle: {\n              color: 'rgba(50, 186, 192, 0.08)'\n            }\n          }\n        }]\n      },\n      dayList: ''\n    };\n  },\n  components: {\n    TChart\n  },\n  mounted() {\n    if (!hasEventListener(this.$bus, 'getData')) {\n      this.$bus.$on('getData', data => {\n        this.manageData(data);\n      });\n    }\n    // this.manageData()\n  },\n  methods: {\n    // 管理数据\n    manageData(data) {\n      let array = data;\n      // let array = [{DataTs:1715129400,Value:171},\n      // {DataTs:1715043000,Value:239},\n      // {DataTs:1714956600,Value:164},\n      // {DataTs:1714956660,Value:388},\n      // {DataTs:1715043060,Value:218},\n      // {DataTs:1715129460,Value:230},\n      // {DataTs:1715129520,Value:158},\n      // {DataTs:1715043120,Value:267},\n      // {DataTs:1714956720,Value:180},\n      // {DataTs:1714870320,Value:192},\n      // {DataTs:1714783920,Value:255},\n      // {DataTs:1714697520,Value:236},\n      // {DataTs:1714697460,Value:360},\n      // {DataTs:1714783860,Value:397},\n      // {DataTs:1714870260,Value:356},\n      // {DataTs:1714870200,Value:230},\n      // {DataTs:1714783800,Value:387},\n      // {DataTs:1714697400,Value:199},\n      // {DataTs:1714969171,Value:169},\n      // {DataTs:1714882771,Value:159},\n      // ]\n      // 将数组按天分割\n      let dayMap = new Map();\n      array.forEach(item => {\n        item.day = formatDate(item.DataTs * 1000, 'mm.dd');\n        item.week = formatDate(item.DataTs * 1000, 'WW');\n        item.moment = Number(formatDate(item.DataTs * 1000, 'HH')) * 60 + Number(formatDate(item.DataTs * 1000, 'MM'));\n        item.dayArray = new Array(24 * 60);\n        item.dayArray[item.moment] = item.Value;\n        dayMap.has(item.day) ? dayMap.get(item.day).value[item.moment] = item.Value : dayMap.set(item.day, {\n          value: item.dayArray,\n          week: item.week,\n          tir: TIRUtils.getTIRResult(item.dayArray).normalRate\n        });\n      });\n      // x轴数据\n      console.log(dayMap);\n      this.dayList = dayMap;\n    },\n    getOptions(data) {\n      const config = {\n        grid: [{\n          left: 0,\n          right: 0,\n          top: 0,\n          bottom: 0,\n          height: 120\n        }],\n        xAxis: [{\n          type: 'category',\n          show: false\n        }],\n        yAxis: {\n          type: 'value',\n          show: false,\n          min: 0,\n          max: 16\n        },\n        series: [{\n          type: 'line',\n          data: data,\n          itemStyle: {\n            color: 'var(--color-primary)'\n          },\n          showSymbol: false,\n          lineStyle: {\n            width: 2\n          },\n          markLine: {\n            symbol: 'none',\n            animation: false,\n            data: [{\n              xAxis: 720,\n              lineStyle: {\n                color: 'var(--color-black-10)',\n                width: 1,\n                type: 'dashed'\n              },\n              label: {\n                show: false\n              }\n            }]\n          },\n          markArea: {\n            data: [[{\n              yAxis: 3.9\n            }, {\n              yAxis: 10\n            }]],\n            label: {\n              show: true,\n              color: 'var(--color-black-60)',\n              fontSize: 16,\n              distance: 10,\n              position: 'left'\n            },\n            itemStyle: {\n              color: 'rgba(50, 186, 192, 0.08)'\n            }\n          }\n        }]\n      };\n      return config;\n    }\n  },\n  beforeDestroy() {\n    this.$bus.$off('getData');\n  }\n};","map":{"version":3,"names":["TChart","hasEventListener","formatDate","GlucoseUtils","TIRUtils","data","initOptions","renderer","option","grid","left","right","top","bottom","height","xAxis","type","show","splitLine","lineStyle","color","interval","yAxis","min","max","series","itemStyle","showSymbol","width","markArea","label","fontSize","distance","position","dayList","components","mounted","$bus","$on","manageData","methods","array","dayMap","Map","forEach","item","day","DataTs","week","moment","Number","dayArray","Array","Value","has","get","value","set","tir","getTIRResult","normalRate","console","log","getOptions","config","markLine","symbol","animation","beforeDestroy","$off"],"sources":["src/views/components/Chart/DayChart.vue"],"sourcesContent":["<template>\n    <div>\n        <div class='day-box' >\n            <div class='day-item' v-for='(item,index) in dayList' :key='index'>\n                <div class='day-week' >{{item[1].week}}</div>\n                <div class='day-main' >\n                    <div class='day-target' v-if='index==0' >\n                        <div class='day-target-max' >10</div>\n                        <div class='day-target-min' >3.9</div>\n                    </div>\n                    <div class='day-date-tir' >\n                        <div class='day-date' >{{item[0]}}</div>\n                        <div class='day-tir' >TIR:{{item[1].tir}}%</div>\n                    </div>\n                    <div class='chart-box' >\n                        <t-chart\n                            style=\"width: 100%;height:120px;\"\n                            :option=\"getOptions(item[1].value)\"\n                            :init-options=\"initOptions\"\n                            theme=\"tduck-echarts-theme\"\n                        />\n                    </div>\n                </div>\n                <div class='chart-x-end' v-if='index==dayList.size-1'>\n                    <div>00:00</div>\n                    <div>12:00</div>\n                    <div>00:00</div>\n                </div>\n                <div class='chart-x' v-else>\n                    <div>00:00</div>\n                    <div>12:00</div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport TChart from '@/views/components/TChart'\nimport { hasEventListener } from \"@/utils/utils\";\nimport {formatDate} from '@/utils/formatTime'\nimport { GlucoseUtils } from \"@/utils/algorithm/Glucose\";\nimport { TIRUtils } from \"@/utils/algorithm/TIR\";\nexport default {\n    data(){\n        return{\n            initOptions: {\n                renderer: 'svg'\n            },\n            option: {\n                grid:[\n                    {   \n                        left:0,\n                        right:0,\n                        top:0,\n                        bottom:0,\n                        height:120,\n                    }\n                ],\n                xAxis: [\n                    {\n                        type: 'category',\n                        show:true,\n                        splitLine:{\n                            show:true,\n                            lineStyle:{\n                                type:'dashed',\n                                color:'var(--color-black-10)'\n                            },\n                            interval:4\n                        }\n                    }\n                ],\n                yAxis: {\n                        type: 'value',\n                        show:false,\n                        min:0,\n                        max:16\n                    },\n                series: [\n                    {\n                        type: 'line',\n                        data: [1,5,3,4,7,2,7,1,9,0],\n                        itemStyle: {\n                        color:'var(--color-primary)',\n                        },\n                        showSymbol: false,\n                        lineStyle: {\n                        width: 2,\n                        },\n                        markArea:{\n                            data:[\n                                [{\n                                    yAxis: 3.9\n                                },\n                                {\n                                    yAxis: 10\n                                }]\n                            ],\n                            label: {\n                                show:true,\n                                color: 'var(--color-black-60)',\n                                fontSize: 16,\n                                distance: 10,\n                                position:'left'\n                            },\n                            itemStyle:{\n                                color:'rgba(50, 186, 192, 0.08)'\n                            }\n                        }\n                    },\n                ],\n              \n            },\n            dayList:''\n        }\n    },\n    components: {\n        TChart\n    },\n    mounted(){\n        if(!hasEventListener(this.$bus,'getData')){\n            this.$bus.$on('getData',(data)=>{\n              this.manageData(data)  \n            })\n        }\n        // this.manageData()\n    },\n    methods:{\n        // 管理数据\n        manageData(data){\n            let array = data\n            // let array = [{DataTs:1715129400,Value:171},\n            // {DataTs:1715043000,Value:239},\n            // {DataTs:1714956600,Value:164},\n            // {DataTs:1714956660,Value:388},\n            // {DataTs:1715043060,Value:218},\n            // {DataTs:1715129460,Value:230},\n            // {DataTs:1715129520,Value:158},\n            // {DataTs:1715043120,Value:267},\n            // {DataTs:1714956720,Value:180},\n            // {DataTs:1714870320,Value:192},\n            // {DataTs:1714783920,Value:255},\n            // {DataTs:1714697520,Value:236},\n            // {DataTs:1714697460,Value:360},\n            // {DataTs:1714783860,Value:397},\n            // {DataTs:1714870260,Value:356},\n            // {DataTs:1714870200,Value:230},\n            // {DataTs:1714783800,Value:387},\n            // {DataTs:1714697400,Value:199},\n            // {DataTs:1714969171,Value:169},\n            // {DataTs:1714882771,Value:159},\n            // ]\n            // 将数组按天分割\n            let dayMap = new Map()\n             array.forEach(item=>{\n                item.day = formatDate(item.DataTs*1000,'mm.dd')\n                item.week = formatDate(item.DataTs*1000,'WW')\n                item.moment = Number(formatDate(item.DataTs*1000,'HH'))*60+Number(formatDate(item.DataTs*1000,'MM'))\n                item.dayArray = new Array(24*60)\n                item.dayArray[item.moment] = item.Value\n                dayMap.has(item.day) ? dayMap.get(item.day).value[item.moment]=item.Value: dayMap.set(item.day, {value:item.dayArray,week:item.week,tir:TIRUtils.getTIRResult(item.dayArray).normalRate});\n            })\n            // x轴数据\n            console.log(dayMap)\n            this.dayList = dayMap\n        },\n        getOptions(data){\n            const config = {\n                grid:[\n                        {   \n                            left:0,\n                            right:0,\n                            top:0,\n                            bottom:0,\n                            height:120,\n                        }\n                ],\n                xAxis: [\n                    {\n                        type: 'category',\n                        show:false,\n                    }\n                ],\n                yAxis: {\n                        type: 'value',\n                        show:false,\n                        min:0,\n                        max:16\n                },\n                series: [\n                        {\n                            type: 'line',\n                            data:data,\n                            itemStyle: {\n                            color:'var(--color-primary)',\n                            },\n                            showSymbol: false,\n                            lineStyle: {\n                            width: 2,\n                            },\n                            markLine:{\n                                symbol: 'none',\n                                animation:false,\n                                data:[\n                                    {\n                                        xAxis:720,\n                                        lineStyle: {\n                                            color: 'var(--color-black-10)',\n                                            width: 1,\n                                            type:'dashed'\n                                        },\n                                        label:{\n                                            show:false\n                                        }\n                                    }\n                                ]\n                            },\n                            markArea:{\n                                data:[\n                                    [{\n                                        yAxis: 3.9\n                                    },\n                                    {\n                                        yAxis: 10\n                                    }]\n                                ],\n                                label: {\n                                    show:true,\n                                    color: 'var(--color-black-60)',\n                                    fontSize: 16,\n                                    distance: 10,\n                                    position:'left'\n                                },\n                                itemStyle:{\n                                    color:'rgba(50, 186, 192, 0.08)'\n                                }\n                            }\n                        },\n                ],\n            }\n            return config\n        },\n    },\n    \n    beforeDestroy(){\n        this.$bus.$off('getData')\n    }\n}\n</script>\n<style scoped>\n    .day-box{\n        display: flex;\n        align-items: center;\n        flex-wrap: wrap;\n        padding:0 50px;\n    }\n    .day-item{\n        width:180px;\n        height:180px;\n        position: relative;\n        margin:0 5px;\n        margin-bottom:20px;\n    }\n    .day-week{\n        width:100%;\n        text-align: center;\n        font-size:var(--fontSize-big);\n        color:var(--color-black-60);\n        margin-bottom:10px;\n    }\n    .day-main{\n        width:180px;\n        height:120px;\n        position: relative;\n    }\n    .day-date-tir{\n        width:100%;\n        padding:2px 6px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        position: absolute;\n        left:0;\n        top:0;\n        color:var(--color-black-60);\n        font-size: var(--fontSize-big);\n    }\n    .day-target{\n        height: 66px;\n        display: flex;\n        flex-direction: column;\n        align-items:center ;\n        justify-content: space-between;\n        position: absolute;\n        top:35px;\n        left:-30px;\n        font-size:var(--fontSize-big);\n        color:var(--color-black-60);\n    }\n    .chart-box{\n        width:180px;\n        height:120px;\n        border:1px solid var(--color-black-10);\n        border-radius:10px;\n    }\n    .chart-x{\n        width:130px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        position: absolute;\n        bottom:0;\n        left:-20px;\n        font-size:var(--fontSize-big);\n        color:var(--color-black-40);\n    }\n    .chart-x-end{\n        width:220px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        position: absolute;\n        bottom:0;\n        left:-20px;\n        font-size:var(--fontSize-big);\n        color:var(--color-black-40);\n    }\n</style>"],"mappings":"AAqCA,OAAAA,MAAA;AACA,SAAAC,gBAAA;AACA,SAAAC,UAAA;AACA,SAAAC,YAAA;AACA,SAAAC,QAAA;AACA;EACAC,KAAA;IACA;MACAC,WAAA;QACAC,QAAA;MACA;MACAC,MAAA;QACAC,IAAA,GACA;UACAC,IAAA;UACAC,KAAA;UACAC,GAAA;UACAC,MAAA;UACAC,MAAA;QACA,EACA;QACAC,KAAA,GACA;UACAC,IAAA;UACAC,IAAA;UACAC,SAAA;YACAD,IAAA;YACAE,SAAA;cACAH,IAAA;cACAI,KAAA;YACA;YACAC,QAAA;UACA;QACA,EACA;QACAC,KAAA;UACAN,IAAA;UACAC,IAAA;UACAM,GAAA;UACAC,GAAA;QACA;QACAC,MAAA,GACA;UACAT,IAAA;UACAX,IAAA;UACAqB,SAAA;YACAN,KAAA;UACA;UACAO,UAAA;UACAR,SAAA;YACAS,KAAA;UACA;UACAC,QAAA;YACAxB,IAAA,GACA;cACAiB,KAAA;YACA,GACA;cACAA,KAAA;YACA,GACA;YACAQ,KAAA;cACAb,IAAA;cACAG,KAAA;cACAW,QAAA;cACAC,QAAA;cACAC,QAAA;YACA;YACAP,SAAA;cACAN,KAAA;YACA;UACA;QACA;MAGA;MACAc,OAAA;IACA;EACA;EACAC,UAAA;IACAnC;EACA;EACAoC,QAAA;IACA,KAAAnC,gBAAA,MAAAoC,IAAA;MACA,KAAAA,IAAA,CAAAC,GAAA,YAAAjC,IAAA;QACA,KAAAkC,UAAA,CAAAlC,IAAA;MACA;IACA;IACA;EACA;EACAmC,OAAA;IACA;IACAD,WAAAlC,IAAA;MACA,IAAAoC,KAAA,GAAApC,IAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,IAAAqC,MAAA,OAAAC,GAAA;MACAF,KAAA,CAAAG,OAAA,CAAAC,IAAA;QACAA,IAAA,CAAAC,GAAA,GAAA5C,UAAA,CAAA2C,IAAA,CAAAE,MAAA;QACAF,IAAA,CAAAG,IAAA,GAAA9C,UAAA,CAAA2C,IAAA,CAAAE,MAAA;QACAF,IAAA,CAAAI,MAAA,GAAAC,MAAA,CAAAhD,UAAA,CAAA2C,IAAA,CAAAE,MAAA,uBAAAG,MAAA,CAAAhD,UAAA,CAAA2C,IAAA,CAAAE,MAAA;QACAF,IAAA,CAAAM,QAAA,OAAAC,KAAA;QACAP,IAAA,CAAAM,QAAA,CAAAN,IAAA,CAAAI,MAAA,IAAAJ,IAAA,CAAAQ,KAAA;QACAX,MAAA,CAAAY,GAAA,CAAAT,IAAA,CAAAC,GAAA,IAAAJ,MAAA,CAAAa,GAAA,CAAAV,IAAA,CAAAC,GAAA,EAAAU,KAAA,CAAAX,IAAA,CAAAI,MAAA,IAAAJ,IAAA,CAAAQ,KAAA,GAAAX,MAAA,CAAAe,GAAA,CAAAZ,IAAA,CAAAC,GAAA;UAAAU,KAAA,EAAAX,IAAA,CAAAM,QAAA;UAAAH,IAAA,EAAAH,IAAA,CAAAG,IAAA;UAAAU,GAAA,EAAAtD,QAAA,CAAAuD,YAAA,CAAAd,IAAA,CAAAM,QAAA,EAAAS;QAAA;MACA;MACA;MACAC,OAAA,CAAAC,GAAA,CAAApB,MAAA;MACA,KAAAR,OAAA,GAAAQ,MAAA;IACA;IACAqB,WAAA1D,IAAA;MACA,MAAA2D,MAAA;QACAvD,IAAA,GACA;UACAC,IAAA;UACAC,KAAA;UACAC,GAAA;UACAC,MAAA;UACAC,MAAA;QACA,EACA;QACAC,KAAA,GACA;UACAC,IAAA;UACAC,IAAA;QACA,EACA;QACAK,KAAA;UACAN,IAAA;UACAC,IAAA;UACAM,GAAA;UACAC,GAAA;QACA;QACAC,MAAA,GACA;UACAT,IAAA;UACAX,IAAA,EAAAA,IAAA;UACAqB,SAAA;YACAN,KAAA;UACA;UACAO,UAAA;UACAR,SAAA;YACAS,KAAA;UACA;UACAqC,QAAA;YACAC,MAAA;YACAC,SAAA;YACA9D,IAAA,GACA;cACAU,KAAA;cACAI,SAAA;gBACAC,KAAA;gBACAQ,KAAA;gBACAZ,IAAA;cACA;cACAc,KAAA;gBACAb,IAAA;cACA;YACA;UAEA;UACAY,QAAA;YACAxB,IAAA,GACA;cACAiB,KAAA;YACA,GACA;cACAA,KAAA;YACA,GACA;YACAQ,KAAA;cACAb,IAAA;cACAG,KAAA;cACAW,QAAA;cACAC,QAAA;cACAC,QAAA;YACA;YACAP,SAAA;cACAN,KAAA;YACA;UACA;QACA;MAEA;MACA,OAAA4C,MAAA;IACA;EACA;EAEAI,cAAA;IACA,KAAA/B,IAAA,CAAAgC,IAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}