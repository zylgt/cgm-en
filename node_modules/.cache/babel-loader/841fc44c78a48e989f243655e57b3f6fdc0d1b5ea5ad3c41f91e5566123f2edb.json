{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport TChart from '@/views/components/TChart';\nimport { formatDate, formatTime } from '@/utils/formatTime';\nimport { mapGetters } from \"vuex\";\nimport { TIRUtils } from \"@/utils/algorithm/TIR\";\nimport { GlucoseUtils } from \"@/utils/algorithm/Glucose\";\nimport img0 from '@/assets/image/event-icon0.png';\nimport img1 from '@/assets/image/event-icon1.png';\nimport img2 from '@/assets/image/event-icon2.png';\nimport img3 from '@/assets/image/event-icon3.png';\nimport img4 from '@/assets/image/event-icon4.png';\nimport img5 from '@/assets/image/event-icon5.png';\nimport img6 from '@/assets/image/event-icon6.png';\nexport default {\n  data() {\n    return {\n      eventChecked: false,\n      //事件记录开关\n      initOptions: {\n        renderer: 'svg'\n      },\n      option: {\n        grid: [{\n          left: 60,\n          right: 30,\n          top: 10,\n          bottom: 50\n        }],\n        xAxis: [{\n          type: 'category',\n          gridIndex: 0,\n          boundaryGap: false,\n          axisTick: false,\n          splitLine: {\n            show: false,\n            lineStyle: {\n              color: 'var(--color-black-60)'\n            },\n            interval: 59\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: 'var(--color-black-60)',\n              width: 1\n            }\n          },\n          data: [],\n          axisLabel: {\n            formatter: function (value, index) {\n              if (index % 360 === 0) {\n                let h = Math.floor(value / 60) < 10 ? '0' + Math.floor(value / 60) : Math.floor(value / 60);\n                let m = value % 60 < 10 ? '0' + value % 60 : value % 60;\n                let moment = h + ':' + m;\n                return moment;\n              }\n              if (index + 1 === 24 * 60) {\n                return '00:00';\n              }\n            },\n            interval: 0,\n            color: 'var(--color-black-60)',\n            fontSize: 20,\n            margin: 20\n          }\n        }],\n        yAxis: [{\n          type: 'value',\n          gridIndex: 0,\n          min: 0,\n          max: 15,\n          splitLine: {\n            lineStyle: {\n              color: 'var(--color-black-60)'\n            }\n          },\n          axisLabel: {\n            formatter: '{value}',\n            color: 'var(--color-black-60)',\n            fontSize: 20,\n            margin: 14\n          }\n        }],\n        series: [\n        //中位线\n        {\n          type: 'line',\n          data: [],\n          z: 9,\n          itemStyle: {\n            color: 'var(--color-primary)'\n          },\n          showSymbol: _.compact(this.dataList.value).length > 1 ? false : true,\n          symbolSize: 1,\n          symbol: 'circle',\n          emphasis: {\n            disabled: true\n          },\n          lineStyle: {\n            width: 2\n          },\n          animation: false,\n          markLine: {\n            silent: true,\n            // 不高亮辅助线\n            symbol: 'none',\n            animation: false,\n            data: [{\n              type: 'min',\n              yAxis: 3.9,\n              lineStyle: {\n                color: 'var(--color-error)',\n                width: 2,\n                type: 'solid'\n              },\n              label: {\n                color: 'var(--color-error)',\n                fontSize: 20,\n                distance: 14,\n                position: 'start'\n              }\n            }, {\n              type: 'max',\n              yAxis: 10,\n              lineStyle: {\n                color: 'var(--color-warning)',\n                width: 2,\n                type: 'solid'\n              },\n              label: {\n                color: 'var(--color-warning)',\n                fontSize: 20,\n                distance: 14,\n                position: 'start'\n              }\n            }]\n          },\n          markArea: {\n            data: [[{\n              yAxis: 3.9\n            }, {\n              yAxis: 10\n            }]],\n            itemStyle: {\n              color: 'rgba(72, 160, 220, 0.05)'\n            }\n          },\n          markPoint: {\n            data: []\n          }\n        }]\n      },\n      tableData: [{\n        time: '7:00',\n        event: '早饭',\n        info: '一个鸡蛋，一个红薯',\n        value: '最大波动幅度 5.0mmol/L'\n      }, {\n        time: '9:00',\n        event: '早饭',\n        info: '一个鸡蛋，一个红薯',\n        value: '最大波动幅度 5.0mmol/L'\n      }],\n      dayInfo: ''\n    };\n  },\n  props: {\n    dataList: {\n      type: Object\n    },\n    eventList: {\n      type: Array\n    }\n  },\n  components: {\n    TChart\n  },\n  computed: {\n    ...mapGetters(['unit'])\n  },\n  mounted() {\n    this.setCurrent();\n    this.handelOption(this.dataList);\n    this.markEvent(this.eventList);\n  },\n  methods: {\n    setCurrent() {\n      let row = this.tableData[1];\n      this.$refs.singleTable.setCurrentRow(row);\n    },\n    // 处理数据\n    handelOption(data) {\n      console.log(data, 'data');\n      let dayInfo = _.cloneDeep(data);\n      let unit = this.unit;\n      let fluctate = _.max(dayInfo.value) - _.min(dayInfo.value); //最大波动\n      let avg = GlucoseUtils.calculateMeanCvGmi(dayInfo.value).mean; //平均值\n      let lowTir = null,\n        hightTir = null;\n      if (TIRUtils.getTIRResult(dayInfo.value)) {\n        lowTir = TIRUtils.getTIRResult(dayInfo.value).lowRate + TIRUtils.getTIRResult(dayInfo.value).veryLowRate;\n        hightTir = TIRUtils.getTIRResult(dayInfo.value).highRate + TIRUtils.getTIRResult(dayInfo.value).veryHighRate;\n      }\n      dayInfo.day = formatDate(dayInfo.day, 'mm月dd日');\n      dayInfo.fluctate = unit == 'mg/dL' ? fluctate : GlucoseUtils.mgdlToMmol(fluctate);\n      dayInfo.avg = unit == 'mg/dL' ? Math.round(avg) : GlucoseUtils.mgdlToMmol(avg);\n      dayInfo.lowTir = _.round(Number(lowTir) * 100, 1);\n      dayInfo.hightTir = _.round(Number(hightTir) * 100, 1);\n      this.dayInfo = dayInfo;\n\n      // 图表数据\n      let xData = Array.from({\n        length: 60 * 24\n      }, (item, index) => index);\n      let max = GlucoseUtils.mgdlToMmol(dayInfo.max) < 13.9 ? 13.9 : GlucoseUtils.mgdlToMmol(dayInfo.max);\n      if (unit != 'mg/dL') {\n        dayInfo.value = dayInfo.value.map(val => GlucoseUtils.mgdlToMmol(val));\n      }\n      this.option.tooltip = {\n        show: true,\n        trigger: 'axis',\n        confine: true,\n        axisPointer: {\n          type: 'none',\n          axis: 'x'\n        },\n        formatter(params) {\n          let h = Math.floor(Number(params[0].axisValue) / 60) < 10 ? '0' + Math.floor(Number(params[0].axisValue) / 60) : Math.floor(Number(params[0].axisValue) / 60);\n          let m = Number(params[0].axisValue) % 60 < 10 ? '0' + Number(params[0].axisValue) % 60 : Number(params[0].axisValue) % 60;\n          let moment = h + ':' + m;\n          let html = \"<div class='tooltip-box' >\" + \" <div class='tooltips-val'>\" + \" <span class='tooltips-val-num'>\" + params[0].value + \"</span>\" + unit + \"</div>\" + \" <div class='tooltips-date'>\" + dayInfo.day + ' ' + moment + \" </div>\" + \" </div>\";\n          return html;\n        },\n        extraCssText: 'box-shadow: 0 2px 10px rgba(195,245,247,1);'\n      };\n      this.option.xAxis[0].data = xData;\n      this.option.yAxis[0].max = unit == 'mg/dL' ? GlucoseUtils.mmolToMgdl(Math.ceil(max / 3) * 3) : Math.ceil(max / 3) * 3;\n      this.option.series[0].data = dayInfo.value;\n      this.option.series[0].markLine.data[0].yAxis = unit == 'mg/dL' ? 70 : 3.9;\n      this.option.series[0].markLine.data[1].yAxis = unit == 'mg/dL' ? 180 : 10;\n      this.option.series[0].markArea.data[0][0].yAxis = unit == 'mg/dL' ? 70 : 3.9;\n      this.option.series[0].markArea.data[0][1].yAxis = unit == 'mg/dL' ? 180 : 10;\n    },\n    // 标记事件\n    markEvent(data) {\n      let eventData = _.cloneDeep(data);\n      if (eventData) {\n        eventData.forEach(item => {\n          let img = [img0, img1, img2, img3, img4, img5, img6];\n          this.option.series[0].markPoint.data.push({\n            coord: [item.xIndex, item.yPosition],\n            symbol: 'image://' + img[item.event_type],\n            symbolSize: 30\n          });\n        });\n      }\n    }\n  },\n  watch: {\n    dataList(n, o) {\n      this.handelOption(n);\n    },\n    eventList(n, o) {\n      this.markEvent(n);\n    }\n  }\n};","map":{"version":3,"names":["TChart","formatDate","formatTime","mapGetters","TIRUtils","GlucoseUtils","img0","img1","img2","img3","img4","img5","img6","data","eventChecked","initOptions","renderer","option","grid","left","right","top","bottom","xAxis","type","gridIndex","boundaryGap","axisTick","splitLine","show","lineStyle","color","interval","axisLine","width","axisLabel","formatter","value","index","h","Math","floor","m","moment","fontSize","margin","yAxis","min","max","series","z","itemStyle","showSymbol","_","compact","dataList","length","symbolSize","symbol","emphasis","disabled","animation","markLine","silent","label","distance","position","markArea","markPoint","tableData","time","event","info","dayInfo","props","Object","eventList","Array","components","computed","mounted","setCurrent","handelOption","markEvent","methods","row","$refs","singleTable","setCurrentRow","console","log","cloneDeep","unit","fluctate","avg","calculateMeanCvGmi","mean","lowTir","hightTir","getTIRResult","lowRate","veryLowRate","highRate","veryHighRate","day","mgdlToMmol","round","Number","xData","from","item","map","val","tooltip","trigger","confine","axisPointer","axis","params","axisValue","html","extraCssText","mmolToMgdl","ceil","eventData","forEach","img","push","coord","xIndex","yPosition","event_type","watch","n","o"],"sources":["src/views/report/components/dayAnalysis.vue"],"sourcesContent":["<template>\n    <div class='dayAnalysis' id='dayAnalysis' >\n        <div class='analysis-header' >\n            <div class='analysis-date' >{{dayInfo.day}}   {{dayInfo.week}}</div>\n            <div class='analysis-event' > <el-checkbox v-model=\"eventChecked\">事件记录</el-checkbox></div>\n        </div>\n        <div class='analysis-box' >\n            <div class='chart-box'>\n                <div class='analysis-info' >\n                    <div class='analysis-info-item' >\n                        <div class='analysis-info-label' >平均葡萄糖值</div>\n                        <div  :class='[dayInfo.avg>118.8?\"active\":\"\",\"analysis-info-value\"]' v-if='unit==\"mg/dL\"'>{{dayInfo.avg}} mg/dL </div>\n                        <div  :class='[dayInfo.avg>6.6?\"active\":\"\",\"analysis-info-value\"]' v-else>{{dayInfo.avg}} mmol/L </div>\n                    </div>\n                    <div class='analysis-info-item' >\n                        <div class='analysis-info-label' >最大血糖波动</div>\n                        <div  :class='[dayInfo.fluctate>79.2?\"active\":\"\",\"analysis-info-value\"]'  v-if='unit==\"mg/dL\"'>{{dayInfo.fluctate}} mg/dL</div>\n                        <div  :class='[dayInfo.fluctate>4.4?\"active\":\"\",\"analysis-info-value\"]'  v-else>{{dayInfo.fluctate}} mmol/L</div>\n                    </div>\n                    <div class='analysis-info-item' >\n                        <div class='analysis-info-label' >目标范围内占比</div>\n                        <div :class='[dayInfo.tir<70?\"active\":\"\",\"analysis-info-value\"]' >{{dayInfo.tir}}%</div>\n                    </div>\n                    <div class='analysis-info-item' >\n                        <div class='analysis-info-label' >低于目标范围占比</div>\n                        <div :class='[dayInfo.lowTir>5?\"active\":\"\",\"analysis-info-value\"]' >{{dayInfo.lowTir}}%</div>\n                    </div>\n                    <div class='analysis-info-item' >\n                        <div class='analysis-info-label' >高于目标范围占比</div>\n                        <div :class='[dayInfo.hightTir>25?\"active\":\"\",\"analysis-info-value\"]' >{{dayInfo.hightTir}}%</div>\n                    </div>\n                </div>\n                <t-chart\n                        style=\"flex-grow:1;height:450px;\"\n                        :option=\"option\"\n                        :init-options=\"initOptions\"\n                        theme=\"tduck-echarts-theme\"\n                />\n            </div>\n            <div class='event-box' v-show=\"eventChecked\" >\n                <el-table :data=\"tableData\" style=\"width: 100%;border:none;\"\n                header-row-class-name='table-header' highlight-current-row ref=\"singleTable\">\n                    <el-table-column  prop=\"time\"  label=\"时间\"></el-table-column>\n                    <el-table-column  prop=\"event\"  label=\"事件\"></el-table-column>\n                    <el-table-column  prop=\"info\"  label=\"记录详情\"></el-table-column>\n                    <el-table-column  prop=\"value\"  label=\"测量值\"></el-table-column>\n                </el-table>\n            </div>\n            <div class='event-type'>\n                <div class='event-type-item' >\n                    <img src=\"~@/assets/image/event-icon0.png\" alt=\"\" class='event-icon' >\n                    <p class='event-type-label' >饮食记录</p>\n                </div>\n                <div class='event-type-item' >\n                    <img src=\"~@/assets/image/event-icon1.png\" alt=\"\" class='event-icon' >\n                    <p class='event-type-label' >运动记录</p>\n                </div>\n                <div class='event-type-item' >\n                    <img src=\"~@/assets/image/event-icon2.png\" alt=\"\" class='event-icon' >\n                    <p class='event-type-label' >胰岛素记录</p>\n                </div>\n                <div class='event-type-item' >\n                    <img src=\"~@/assets/image/event-icon3.png\" alt=\"\" class='event-icon' >\n                    <p class='event-type-label' >用药记录</p>\n                </div>\n                <div class='event-type-item' >\n                    <img src=\"~@/assets/image/event-icon4.png\" alt=\"\" class='event-icon' >\n                    <p class='event-type-label' >睡眠记录</p>\n                </div>\n                <div class='event-type-item' >\n                    <img src=\"~@/assets/image/event-icon5.png\" alt=\"\" class='event-icon' >\n                    <p class='event-type-label' >指尖血记录</p>\n                </div>\n                <div class='event-type-item' >\n                    <img src=\"~@/assets/image/event-icon6.png\" alt=\"\" class='event-icon' >\n                    <p class='event-type-label' >其他事件</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport TChart from '@/views/components/TChart'\nimport {formatDate,formatTime} from '@/utils/formatTime'\nimport {mapGetters} from \"vuex\"\nimport { TIRUtils } from \"@/utils/algorithm/TIR\";\nimport { GlucoseUtils } from \"@/utils/algorithm/Glucose\";\nimport img0 from '@/assets/image/event-icon0.png'\nimport img1 from '@/assets/image/event-icon1.png'\nimport img2 from '@/assets/image/event-icon2.png'\nimport img3 from '@/assets/image/event-icon3.png'\nimport img4 from '@/assets/image/event-icon4.png'\nimport img5 from '@/assets/image/event-icon5.png'\nimport img6 from '@/assets/image/event-icon6.png'\n\nexport default {\n    data(){\n        return{\n            eventChecked:false, //事件记录开关\n            initOptions: {\n                renderer: 'svg'\n            },\n            option: {\n                grid:[\n                    {\n                        left:60,\n                        right:30,\n                        top:10,\n                        bottom:50\n                    }\n                ],\n                xAxis: [\n                    {\n                        type: 'category',\n                        gridIndex:0,\n                        boundaryGap:false,\n                        axisTick: false,\n                        splitLine:{\n                            show:false,\n                            lineStyle:{\n                                color:'var(--color-black-60)'\n                            },\n                            interval:59\n                        },\n                        axisLine: {\n                            show: true,\n                            lineStyle: {\n                                color: 'var(--color-black-60)',\n                                width:1,\n                            },\n                        },\n                        data:[],\n                        axisLabel: {\n                            formatter: function (value, index) {\n                                if (index  % 360 === 0) {\n                                    let h =  Math.floor(value/60)<10 ? '0'+ Math.floor(value/60) : Math.floor(value/60) \n                                    let m =  value%60 < 10 ? '0' + value%60 : value%60\n                                    let moment = h+':'+m\n                                    return moment;\n                                }\n                                if(index+1===24*60){\n                                    return '00:00'\n                                }\n                            },\n                            interval:0,\n                            color: 'var(--color-black-60)',\n                            fontSize: 20, \n                            margin:20\n                        }\n                    }\n                ],\n                yAxis: [\n                    {\n                        type: 'value',\n                        gridIndex:0,\n                        min: 0,\n                        max: 15,\n                        splitLine:{\n                            lineStyle:{\n                                color:'var(--color-black-60)'\n                            }\n                        },\n                        axisLabel: {\n                            formatter: '{value}',\n                            color: 'var(--color-black-60)',\n                            fontSize: 20,\n                            margin:14\n                        }\n                    }\n                ],\n                series: [\n                    //中位线\n                    {\n                        type: 'line',\n                        data: [],\n                        z:9,\n                        itemStyle: {\n                        color:'var(--color-primary)',\n                        },\n                        showSymbol:_.compact(this.dataList.value).length>1?false:true,\n                        symbolSize:1,\n                        symbol:'circle',\n                        emphasis:{\n                            disabled:true\n                        },\n                        lineStyle: {\n                        width: 2,\n                        },\n                        animation:false,\n                        markLine: {\n                            silent: true, // 不高亮辅助线\n                            symbol: 'none',\n                            animation:false,\n                            data: [\n                                {\n                                type: 'min',\n                                yAxis:3.9,\n                                lineStyle: {\n                                    color: 'var(--color-error)',\n                                    width: 2,\n                                    type:'solid'\n                                },\n                                label: {\n                                    color: 'var(--color-error)',\n                                    fontSize: 20,\n                                    distance: 14,\n                                    position:'start'\n                                },\n                                },\n                                {\n                                type: 'max',\n                                yAxis:10,\n                                lineStyle: {\n                                    color: 'var(--color-warning)',\n                                    width: 2,\n                                    type:'solid'\n                                },\n                                label: {\n                                    color: 'var(--color-warning)',\n                                    fontSize: 20,\n                                    distance:14,\n                                    position:'start'\n                                },\n                                },\n                            ],\n                        },\n                        markArea:{\n                            data:[\n                                [{\n                                    yAxis: 3.9\n                                },\n                                {   \n                                    yAxis: 10\n                                }]\n                            ],\n                            itemStyle:{\n                                color:'rgba(72, 160, 220, 0.05)'\n                            }\n                        },\n                        markPoint:{\n                            data:[\n                                \n                            ]\n                        }\n                    }\n                ],\n\n                \n            },\n            tableData:[{\n                time:'7:00',\n                event:'早饭',\n                info:'一个鸡蛋，一个红薯',\n                value:'最大波动幅度 5.0mmol/L'\n            },{\n                time:'9:00',\n                event:'早饭',\n                info:'一个鸡蛋，一个红薯',\n                value:'最大波动幅度 5.0mmol/L'\n            }],\n            dayInfo:'',\n        }\n    },\n    props:{\n        dataList:{\n            type:Object\n        },\n        eventList:{\n            type:Array\n        }\n    },\n    components: {\n        TChart\n    },\n    computed:{\n         ...mapGetters([\n            'unit']),\n    },\n    mounted(){\n        this.setCurrent()\n        this.handelOption(this.dataList)\n        this.markEvent(this.eventList)\n    },\n    methods:{\n        setCurrent() {\n            let row = this.tableData[1]\n            this.$refs.singleTable.setCurrentRow(row);\n        },\n        // 处理数据\n        handelOption(data){\n             console.log(data,'data')\n            let dayInfo = _.cloneDeep(data)\n            let unit = this.unit\n            let fluctate = _.max(dayInfo.value) -  _.min(dayInfo.value) //最大波动\n            let avg = GlucoseUtils.calculateMeanCvGmi(dayInfo.value).mean //平均值\n            let lowTir = null,hightTir=null\n            if(TIRUtils.getTIRResult(dayInfo.value)){\n                lowTir = TIRUtils.getTIRResult(dayInfo.value).lowRate + TIRUtils.getTIRResult(dayInfo.value).veryLowRate\n                hightTir = TIRUtils.getTIRResult(dayInfo.value).highRate + TIRUtils.getTIRResult(dayInfo.value).veryHighRate\n            }\n            dayInfo.day = formatDate(dayInfo.day,'mm月dd日')\n            dayInfo.fluctate = unit=='mg/dL'?fluctate:GlucoseUtils.mgdlToMmol(fluctate);\n            dayInfo.avg = unit=='mg/dL'? Math.round(avg):GlucoseUtils.mgdlToMmol(avg);\n            dayInfo.lowTir = _.round(Number(lowTir)*100, 1);\n            dayInfo.hightTir =  _.round(Number(hightTir)*100, 1);\n            this.dayInfo = dayInfo\n            \n            // 图表数据\n            let xData = Array.from({length:60*24},(item, index) => index)\n            let max = GlucoseUtils.mgdlToMmol(dayInfo.max)<13.9?13.9: GlucoseUtils.mgdlToMmol(dayInfo.max)\n            if(unit != 'mg/dL'){\n                dayInfo.value = dayInfo.value.map(val => GlucoseUtils.mgdlToMmol(val));\n            }\n            this.option.tooltip = {\n                    show:true,\n                    trigger:'axis',\n                    confine:true,\n                    axisPointer:{\n                        type:'none',\n                        axis:'x'\n                    },\n                    formatter(params){\n                        let h =  Math.floor(Number(params[0].axisValue)/60)<10 ? '0'+ Math.floor(Number(params[0].axisValue)/60) : Math.floor(Number(params[0].axisValue)/60) \n                        let m =  Number(params[0].axisValue)%60 < 10 ? '0' + Number(params[0].axisValue)%60 : Number(params[0].axisValue)%60\n                        let moment = h+':'+m\n                        let html =  \"<div class='tooltip-box' >\"+\n                           \" <div class='tooltips-val'>\"+\n                               \" <span class='tooltips-val-num'>\"+params[0].value+\"</span>\"+unit+\n                            \"</div>\"+\n                           \" <div class='tooltips-date'>\"+\n                               dayInfo.day +' '+ moment+\n                           \" </div>\"+\n                       \" </div>\"\n                       \n                        return html\n                    },\n                    extraCssText: 'box-shadow: 0 2px 10px rgba(195,245,247,1);'\n            }\n            this.option.xAxis[0].data = xData\n            this.option.yAxis[0].max = unit == 'mg/dL'?GlucoseUtils.mmolToMgdl(Math.ceil(max / 3) * 3):Math.ceil(max / 3) * 3\n            this.option.series[0].data = dayInfo.value\n            this.option.series[0].markLine.data[0].yAxis = unit == 'mg/dL'?70:3.9\n            this.option.series[0].markLine.data[1].yAxis = unit == 'mg/dL'?180:10\n            this.option.series[0].markArea.data[0][0].yAxis = unit == 'mg/dL'?70:3.9\n            this.option.series[0].markArea.data[0][1].yAxis = unit == 'mg/dL'?180:10\n        },\n        // 标记事件\n        markEvent(data){\n            let eventData = _.cloneDeep(data)\n            if(eventData){\n                eventData.forEach(item=>{\n                    let img =[img0,img1,img2,img3,img4,img5,img6]\n                    this.option.series[0].markPoint.data.push({\n                        coord:[item.xIndex,item.yPosition],\n                        symbol:'image://'+img[item.event_type],\n                        symbolSize:30\n                    })\n                })\n            }\n        }\n    },\n    watch:{\n        dataList(n,o){\n            this.handelOption(n)\n        },\n        eventList(n,o){\n            this.markEvent(n)\n        },\n    }\n}\n</script>\n<style >\n.dayAnalysis{\n    padding:20px 0;\n    border-bottom:1px solid rgba(0,0,0,0.1);\n}\n.analysis-header{\n    display: flex;\n    align-items: center;\n    margin-bottom:20px;\n}\n.analysis-date{\n    width:180px;\n    font-size:var(--fontSize-max);\n    color: var(--color-black-100);\n}\n/* 图表血糖信息 */\n.chart-box{\n    display: flex;\n    height:450px;\n    margin-bottom:20px;\n}\n.analysis-info{\n    width:180px;\n    height:450px;\n    background: #f7f7f7;\n    box-sizing: border-box;\n    padding:10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n     font-size:var(--fontSize-max);\n    color: var(--color-black-100);\n}\n.analysis-info-value.active{\n    color:var(--color-error);\n}\n.event-type{\n    display: flex;\n    align-items: center;\n    margin-top:20px;\n}\n.event-type-item{\n    display: flex;\n    align-items: center;\n    margin-right:30px;\n}\n.event-icon{\n    width:30px;\n    height:30px;\n}\n.event-type-label{\n    font-size:var(--fontSize-big);\n    color: var(--color-black-60);\n    margin-left:6px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}